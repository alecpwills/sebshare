{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/13",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/10/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": true,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "subset": true,
    "chkptmax": 999999999
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{' 10C': [10, 9], ' 12Li': [12, 11]}
MOLECULES TO TRAIN ON
{'  0HH': [0, 6, 6], '  1NN': [1, 8, 8], '  2LiF': [2, 7, 5], '  3CNH': [3, 4, 8, 6], 'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8], ' 10C': [10, 9], ' 12Li': [12, 11]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 2, 5: 2, 6: 3, 7: 2, 8: 3, 9: 1, 10: 1, 11: 1, 12: 1}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3095, -0.4564, -0.4745, -0.4831, -0.4885, -0.4920, -0.4944, -0.4961,
        -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2332e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9438e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 6 	 H 	 H 	 5.970034235338679e-10

PASSTHROUGH -- H DONE.
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6763, -99.6994, -99.7107, -99.7174, -99.7221, -99.7255, -99.7280,
        -99.7298, -99.7311, -99.7320, -99.7326, -99.7331, -99.7334, -99.7336,
        -99.7338, -99.7339, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3051e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3051e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7339, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 F 	 F 	 1.6502109516506007e-08

PASSTHROUGH -- F DONE.
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4638, -7.4712, -7.4741, -7.4757, -7.4766, -7.4775, -7.4784, -7.4789,
        -7.4789, -7.4786, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0710e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3448e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1419e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 Li 	 Li 	 5.480754161452808e-08

PASSTHROUGH -- Li DONE.
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7402, -37.7787, -37.7977, -37.8090, -37.8167, -37.8222, -37.8262,
        -37.8290, -37.8310, -37.8325, -37.8335, -37.8342, -37.8347, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4946e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4946e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 4 	 C 	 C 	 5.022784525326897e-06

PASSTHROUGH -- C DONE.
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9058, -109.6058, -109.6071, -109.5771, -109.5546, -109.5389,
        -109.5281, -109.5207, -109.5157, -109.5122, -109.5099, -109.5082,
        -109.5071, -109.5064, -109.5058, -109.5055, -109.5052, -109.5050,
        -109.5049, -109.5048, -109.5047, -109.5047, -109.5047, -109.5046,
        -109.5046], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4380, -54.5092, -54.5357, -54.5506, -54.5606, -54.5676, -54.5725,
        -54.5760, -54.5785, -54.5802, -54.5815, -54.5823, -54.5829, -54.5834,
        -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8771e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4314, -54.5039, -54.5319, -54.5479, -54.5586, -54.5662, -54.5715,
        -54.5753, -54.5780, -54.5799, -54.5812, -54.5821, -54.5828, -54.5833,
        -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8997e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5055, -109.5052, -109.5050, -109.5049, -109.5048, -109.5047,
        -109.5047, -109.5047, -109.5046, -109.5046], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 1 	 N2 	 N2 	 0.00018340842272534258

PASSTHROUGH -- N2 DONE.
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4693, -7.4728, -7.4747, -7.4760, -7.4769, -7.4777, -7.4786,
        -7.4790, -7.4788, -7.4786, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4357, -7.3514, -7.3241, -7.3097, -7.3004, -7.2942, -7.2900, -7.2870,
        -7.2850, -7.2836, -7.2827, -7.2820, -7.2816, -7.2813, -7.2811, -7.2809,
        -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2806, -7.2806,
        -7.2806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2809, -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2806,
        -7.2806, -7.2806], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 Li 	 Li 	 1.4083025733836347e-08

PASSTHROUGH -- Li DONE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4514, -54.5189, -54.5424, -54.5554, -54.5640, -54.5700, -54.5743,
        -54.5773, -54.5794, -54.5808, -54.5819, -54.5826, -54.5831, -54.5835,
        -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8394e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8394e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 8 	 N 	 N 	 5.570057280639054e-06

PASSTHROUGH -- N DONE.
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0648, -1.1289, -1.1454, -1.1539, -1.1592, -1.1628, -1.1653, -1.1671,
        -1.1683, -1.1691, -1.1697, -1.1701, -1.1704, -1.1706, -1.1708, -1.1709,
        -1.1710, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9059e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3448, -0.4657, -0.4797, -0.4866, -0.4908, -0.4936, -0.4955, -0.4969,
        -0.4978, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997, -0.4998,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9720e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9909e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8498e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2114, -0.4269, -0.4581, -0.4726, -0.4814, -0.4872, -0.4911, -0.4938,
        -0.4956, -0.4969, -0.4979, -0.4985, -0.4989, -0.4992, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9718e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1247e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1709, -1.1710, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711, -1.1711], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 2.2717238335730366e-06

PASSTHROUGH -- H2 DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3045, -107.2967, -107.2605, -107.2484, -107.2406, -107.2361,
        -107.2340, -107.2328, -107.2323, -107.2319, -107.2318, -107.2317,
        -107.2317, -107.2318, -107.2320, -107.2322, -107.2323, -107.2325,
        -107.2326, -107.2327, -107.2328, -107.2329, -107.2330, -107.2331,
        -107.2331], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3967e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4629, -7.4700, -7.4733, -7.4751, -7.4762, -7.4771, -7.4780, -7.4787,
        -7.4790, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0725e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3275e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6750, -99.6951, -99.7075, -99.7150, -99.7203, -99.7241, -99.7270,
        -99.7291, -99.7305, -99.7316, -99.7324, -99.7329, -99.7333, -99.7335,
        -99.7337, -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341,
        -99.7341, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9484e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2322, -107.2323, -107.2325, -107.2326, -107.2327, -107.2328,
        -107.2329, -107.2330, -107.2331, -107.2331], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 2 	 FLi 	 LiF 	 0.009544251763634649

PASSTHROUGH -- FLi DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7520, -37.7931, -37.8081, -37.8166, -37.8223, -37.8262, -37.8291,
        -37.8311, -37.8325, -37.8335, -37.8342, -37.8347, -37.8351, -37.8353,
        -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6324, -37.5060, -37.4678, -37.4477, -37.4349, -37.4261, -37.4200,
        -37.4158, -37.4128, -37.4107, -37.4093, -37.4083, -37.4076, -37.4071,
        -37.4067, -37.4065, -37.4063, -37.4062, -37.4061, -37.4061, -37.4060,
        -37.4060, -37.4060, -37.4060, -37.4059], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4063, -37.4062, -37.4061, -37.4061, -37.4060, -37.4060,
        -37.4060, -37.4060, -37.4059], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 C 	 C 	 6.0270986106749334e-05

PASSTHROUGH -- C DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8771, -93.4781, -93.3783, -93.3303, -93.2978, -93.2757, -93.2598,
        -93.2484, -93.2401, -93.2339, -93.2294, -93.2261, -93.2236, -93.2217,
        -93.2203, -93.2192, -93.2184, -93.2178, -93.2174, -93.2170, -93.2167,
        -93.2165, -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6274e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7390, -37.7753, -37.7951, -37.8070, -37.8152, -37.8212, -37.8254,
        -37.8285, -37.8306, -37.8322, -37.8333, -37.8341, -37.8346, -37.8350,
        -37.8353, -37.8354, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5184e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4497, -54.5177, -54.5416, -54.5548, -54.5636, -54.5697, -54.5741,
        -54.5771, -54.5793, -54.5808, -54.5818, -54.5826, -54.5831, -54.5835,
        -54.5837, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8437e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2186, -0.4296, -0.4595, -0.4735, -0.4820, -0.4876, -0.4914, -0.4940,
        -0.4958, -0.4970, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9718e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9266e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2192, -93.2184, -93.2178, -93.2174, -93.2170, -93.2167, -93.2165,
        -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8354, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 3 	 CHN 	 CNH 	 0.009647003230848133

PASSTHROUGH -- CHN DONE.
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e00/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 3.287184', ' ae : 59.464099', ' E : 1.072505'] ,|| total loss 44.543378 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8381, -109.7914, -109.7006, -109.6384, -109.5972, -109.5690,
        -109.5494, -109.5358, -109.5263, -109.5198, -109.5152, -109.5120,
        -109.5098, -109.5082, -109.5071, -109.5064, -109.5058, -109.5055,
        -109.5052, -109.5050, -109.5049, -109.5048, -109.5047, -109.5047,
        -109.5047], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4244, -54.4974, -54.5273, -54.5445, -54.5562, -54.5644, -54.5703,
        -54.5744, -54.5774, -54.5794, -54.5809, -54.5819, -54.5827, -54.5832,
        -54.5835, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9291e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4425, -54.5126, -54.5380, -54.5523, -54.5618, -54.5684, -54.5731,
        -54.5765, -54.5788, -54.5805, -54.5816, -54.5824, -54.5830, -54.5834,
        -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8634e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5064, -109.5058, -109.5055, -109.5052, -109.5050, -109.5049,
        -109.5048, -109.5047, -109.5047, -109.5047], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 1 	 N2 	 N2 	 0.00018271346656445483

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9944, -1.1011, -1.1285, -1.1425, -1.1513, -1.1573, -1.1614, -1.1643,
        -1.1663, -1.1677, -1.1687, -1.1694, -1.1699, -1.1702, -1.1705, -1.1706,
        -1.1708, -1.1708, -1.1709, -1.1709, -1.1710, -1.1710, -1.1710, -1.1710,
        -1.1710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9360e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8719e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2218, -0.4306, -0.4601, -0.4739, -0.4822, -0.4877, -0.4915, -0.4940,
        -0.4958, -0.4971, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9687e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8786e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8093e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2373, -0.4355, -0.4628, -0.4756, -0.4834, -0.4885, -0.4920, -0.4944,
        -0.4961, -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9687e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5277e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1706, -1.1708, -1.1708, -1.1709, -1.1709, -1.1710, -1.1710, -1.1710,
        -1.1710, -1.1710], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 2.4095586172193005e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4640, -7.4714, -7.4741, -7.4755, -7.4765, -7.4773, -7.4782, -7.4786,
        -7.4785, -7.4782, -7.4781, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781,
        -7.4781, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0204e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1657e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0408e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782, -7.4782,
        -7.4782, -7.4782], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 Li 	 Li 	 2.7367287015528892e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2322, -0.4339, -0.4619, -0.4750, -0.4830, -0.4882, -0.4918, -0.4943,
        -0.4960, -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9546e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7504e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9092e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 6 	 H 	 H 	 2.5653748315512974e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4055, -54.4695, -54.5057, -54.5278, -54.5432, -54.5543, -54.5623,
        -54.5680, -54.5721, -54.5750, -54.5770, -54.5784, -54.5794, -54.5801,
        -54.5806, -54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4077e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4077e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 8 	 N 	 N 	 1.296269190166686e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3195, -107.2972, -107.2616, -107.2479, -107.2396, -107.2347,
        -107.2320, -107.2305, -107.2296, -107.2290, -107.2286, -107.2284,
        -107.2284, -107.2284, -107.2285, -107.2286, -107.2288, -107.2289,
        -107.2290, -107.2291, -107.2292, -107.2293, -107.2294, -107.2294,
        -107.2295], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3670e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4630, -7.4705, -7.4733, -7.4749, -7.4759, -7.4767, -7.4776, -7.4782,
        -7.4782, -7.4779, -7.4778, -7.4777, -7.4777, -7.4777, -7.4777, -7.4778,
        -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778,
        -7.4778], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9643e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9654e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6731, -99.6956, -99.7071, -99.7140, -99.7188, -99.7222, -99.7248,
        -99.7266, -99.7279, -99.7289, -99.7295, -99.7300, -99.7303, -99.7306,
        -99.7307, -99.7309, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1479e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2286, -107.2288, -107.2289, -107.2290, -107.2291, -107.2292,
        -107.2293, -107.2294, -107.2294, -107.2295], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778,
        -7.4778, -7.4778], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7309, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 2 	 FLi 	 LiF 	 0.00953202198413956

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6759, -99.7002, -99.7107, -99.7168, -99.7211, -99.7242, -99.7264,
        -99.7280, -99.7291, -99.7299, -99.7305, -99.7309, -99.7312, -99.7314,
        -99.7316, -99.7317, -99.7317, -99.7318, -99.7318, -99.7318, -99.7319,
        -99.7319, -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8648e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8648e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7317, -99.7317, -99.7318, -99.7318, -99.7318, -99.7319, -99.7319,
        -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 F 	 F 	 9.46236645710555e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7821, -37.7999, -37.8103, -37.8174, -37.8225, -37.8261,
        -37.8287, -37.8305, -37.8318, -37.8327, -37.8334, -37.8338, -37.8341,
        -37.8344, -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6295, -37.5041, -37.4662, -37.4463, -37.4336, -37.4249, -37.4189,
        -37.4147, -37.4118, -37.4097, -37.4083, -37.4073, -37.4066, -37.4061,
        -37.4057, -37.4055, -37.4053, -37.4052, -37.4051, -37.4051, -37.4050,
        -37.4050, -37.4050, -37.4050, -37.4050], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4055, -37.4053, -37.4052, -37.4051, -37.4051, -37.4050, -37.4050,
        -37.4050, -37.4050, -37.4050], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 C 	 C 	 6.0135110455580926e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0144, -93.5353, -93.4096, -93.3533, -93.3133, -93.2865, -93.2673,
        -93.2535, -93.2435, -93.2361, -93.2307, -93.2268, -93.2238, -93.2216,
        -93.2200, -93.2188, -93.2179, -93.2172, -93.2166, -93.2162, -93.2159,
        -93.2157, -93.2155, -93.2154, -93.2153], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5880e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7498, -37.7909, -37.8064, -37.8151, -37.8210, -37.8251, -37.8280,
        -37.8301, -37.8316, -37.8327, -37.8334, -37.8339, -37.8343, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2410e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4273, -54.5000, -54.5289, -54.5455, -54.5567, -54.5645, -54.5701,
        -54.5741, -54.5769, -54.5789, -54.5803, -54.5813, -54.5820, -54.5824,
        -54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834, -54.5835,
        -54.5835, -54.5835, -54.5835, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5112e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3288, -0.4615, -0.4773, -0.4850, -0.4897, -0.4928, -0.4950, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9561e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0732e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2188, -93.2179, -93.2172, -93.2166, -93.2162, -93.2159, -93.2157,
        -93.2155, -93.2154, -93.2153], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5832, -54.5833, -54.5834, -54.5834, -54.5835, -54.5835,
        -54.5835, -54.5835, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 3 	 CHN 	 CNH 	 0.00958094162075417

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4636, -7.4711, -7.4739, -7.4753, -7.4763, -7.4771, -7.4780, -7.4785,
        -7.4783, -7.4781, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4780,
        -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780,
        -7.4780], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4259, -7.3453, -7.3199, -7.3067, -7.2982, -7.2925, -7.2886, -7.2859,
        -7.2841, -7.2828, -7.2819, -7.2813, -7.2809, -7.2807, -7.2805, -7.2803,
        -7.2802, -7.2802, -7.2801, -7.2801, -7.2801, -7.2801, -7.2801, -7.2801,
        -7.2801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780,
        -7.4780, -7.4780], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2803, -7.2802, -7.2802, -7.2801, -7.2801, -7.2801, -7.2801, -7.2801,
        -7.2801, -7.2801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 Li 	 Li 	 8.826205589229417e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7397, -37.7780, -37.7970, -37.8082, -37.8159, -37.8214, -37.8254,
        -37.8282, -37.8302, -37.8317, -37.8327, -37.8334, -37.8339, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3832e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3832e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 4 	 C 	 C 	 6.9170323606197356e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e01)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e01/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e01/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 3.274641', ' ae : 59.358789', ' E : 1.308614'] ,|| total loss 44.454646 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4697, -7.4729, -7.4747, -7.4759, -7.4767, -7.4776, -7.4783,
        -7.4785, -7.4783, -7.4780, -7.4779, -7.4779, -7.4779, -7.4780, -7.4780,
        -7.4780, -7.4780, -7.4780, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781,
        -7.4781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4551, -7.3641, -7.3324, -7.3151, -7.3041, -7.2966, -7.2914, -7.2879,
        -7.2854, -7.2838, -7.2826, -7.2818, -7.2813, -7.2809, -7.2807, -7.2805,
        -7.2804, -7.2803, -7.2802, -7.2802, -7.2802, -7.2802, -7.2801, -7.2801,
        -7.2801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4780, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781, -7.4781, -7.4781,
        -7.4781, -7.4781], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2805, -7.2804, -7.2803, -7.2802, -7.2802, -7.2802, -7.2802, -7.2801,
        -7.2801, -7.2801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 Li 	 Li 	 1.1144445660486302e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1497, -93.5907, -93.4395, -93.3759, -93.3289, -93.2980, -93.2757,
        -93.2597, -93.2481, -93.2397, -93.2335, -93.2290, -93.2256, -93.2231,
        -93.2213, -93.2199, -93.2189, -93.2181, -93.2175, -93.2171, -93.2168,
        -93.2165, -93.2163, -93.2162, -93.2160], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5728e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7443, -37.7852, -37.8022, -37.8121, -37.8188, -37.8235, -37.8269,
        -37.8293, -37.8311, -37.8323, -37.8331, -37.8337, -37.8342, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2498e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4196, -54.4921, -54.5232, -54.5413, -54.5536, -54.5623, -54.5685,
        -54.5730, -54.5761, -54.5783, -54.5799, -54.5809, -54.5817, -54.5823,
        -54.5826, -54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5974e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2634, -0.4433, -0.4671, -0.4784, -0.4852, -0.4898, -0.4929, -0.4950,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9509e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1339e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2199, -93.2189, -93.2181, -93.2175, -93.2171, -93.2168, -93.2165,
        -93.2163, -93.2162, -93.2160], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834, -54.5835,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 3 	 CHN 	 CNH 	 0.009500022577414498

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7387, -37.7751, -37.7947, -37.8065, -37.8146, -37.8205, -37.8247,
        -37.8277, -37.8299, -37.8314, -37.8325, -37.8333, -37.8338, -37.8342,
        -37.8345, -37.8346, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4094e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4094e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8346, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 4 	 C 	 C 	 6.929275738577983e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4643, -7.4717, -7.4743, -7.4757, -7.4766, -7.4774, -7.4783, -7.4786,
        -7.4784, -7.4782, -7.4780, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781,
        -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782,
        -7.4782], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9869e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0238e-10, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9738e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4782,
        -7.4782, -7.4782], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 Li 	 Li 	 2.077112592228469e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7428, -37.7832, -37.8008, -37.8110, -37.8180, -37.8229, -37.8264,
        -37.8290, -37.8307, -37.8320, -37.8329, -37.8335, -37.8340, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6158, -37.4976, -37.4622, -37.4437, -37.4318, -37.4238, -37.4182,
        -37.4143, -37.4115, -37.4096, -37.4083, -37.4073, -37.4067, -37.4062,
        -37.4059, -37.4057, -37.4055, -37.4054, -37.4053, -37.4053, -37.4052,
        -37.4052, -37.4052, -37.4052, -37.4052], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4057, -37.4055, -37.4054, -37.4053, -37.4053, -37.4052, -37.4052,
        -37.4052, -37.4052, -37.4052], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 C 	 C 	 5.9510064057066845e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4227, -54.4954, -54.5255, -54.5429, -54.5547, -54.5630, -54.5689,
        -54.5731, -54.5761, -54.5782, -54.5797, -54.5807, -54.5814, -54.5819,
        -54.5823, -54.5826, -54.5827, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9111e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9111e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5826, -54.5827, -54.5829, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 8 	 N 	 N 	 8.693028237478734e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2882, -107.2917, -107.2556, -107.2448, -107.2377, -107.2337,
        -107.2318, -107.2310, -107.2306, -107.2305, -107.2304, -107.2305,
        -107.2306, -107.2307, -107.2309, -107.2311, -107.2313, -107.2315,
        -107.2317, -107.2318, -107.2319, -107.2320, -107.2321, -107.2322,
        -107.2322], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3778e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4633, -7.4706, -7.4736, -7.4753, -7.4763, -7.4771, -7.4780, -7.4786,
        -7.4786, -7.4784, -7.4782, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781,
        -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9883e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8233e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6770, -99.7011, -99.7116, -99.7177, -99.7219, -99.7249, -99.7271,
        -99.7287, -99.7299, -99.7307, -99.7312, -99.7316, -99.7319, -99.7321,
        -99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2421e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2311, -107.2313, -107.2315, -107.2317, -107.2318, -107.2319,
        -107.2320, -107.2321, -107.2322, -107.2322], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4781, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782, -7.4782], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7324, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 2 	 FLi 	 LiF 	 0.0094495803767479

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0495, -1.1229, -1.1418, -1.1515, -1.1576, -1.1617, -1.1646, -1.1666,
        -1.1680, -1.1690, -1.1696, -1.1701, -1.1705, -1.1707, -1.1709, -1.1710,
        -1.1710, -1.1711, -1.1711, -1.1712, -1.1712, -1.1712, -1.1712, -1.1712,
        -1.1712], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8937e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7875e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3390, -0.4641, -0.4788, -0.4859, -0.4903, -0.4933, -0.4953, -0.4967,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9421e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0471e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6716e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3006, -0.4539, -0.4730, -0.4822, -0.4878, -0.4915, -0.4941, -0.4958,
        -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9420e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5696e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1710, -1.1710, -1.1711, -1.1711, -1.1712, -1.1712, -1.1712, -1.1712,
        -1.1712, -1.1712], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 1.9179044546848775e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6243, -109.9164, -109.7619, -109.6788, -109.6254, -109.5888,
        -109.5634, -109.5456, -109.5331, -109.5244, -109.5183, -109.5140,
        -109.5111, -109.5090, -109.5075, -109.5065, -109.5057, -109.5052,
        -109.5049, -109.5046, -109.5045, -109.5043, -109.5043, -109.5042,
        -109.5042], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4389e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4883, -54.5203, -54.5391, -54.5520, -54.5611, -54.5676,
        -54.5722, -54.5755, -54.5778, -54.5794, -54.5806, -54.5814, -54.5820,
        -54.5824, -54.5827, -54.5828, -54.5830, -54.5831, -54.5831, -54.5832,
        -54.5832, -54.5832, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8087e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4379, -54.5087, -54.5350, -54.5498, -54.5597, -54.5666, -54.5716,
        -54.5750, -54.5775, -54.5792, -54.5804, -54.5813, -54.5819, -54.5823,
        -54.5826, -54.5828, -54.5830, -54.5831, -54.5831, -54.5832, -54.5832,
        -54.5832, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7025e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5065, -109.5057, -109.5052, -109.5049, -109.5046, -109.5045,
        -109.5043, -109.5043, -109.5042, -109.5042], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5828, -54.5830, -54.5831, -54.5831, -54.5832, -54.5832, -54.5832,
        -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 1 	 N2 	 N2 	 0.00016248842015562456

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6743, -99.6944, -99.7065, -99.7140, -99.7192, -99.7230, -99.7259,
        -99.7279, -99.7294, -99.7304, -99.7312, -99.7317, -99.7321, -99.7323,
        -99.7325, -99.7327, -99.7328, -99.7328, -99.7329, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4775e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4775e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7327, -99.7328, -99.7328, -99.7329, -99.7329, -99.7329, -99.7329,
        -99.7329, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 F 	 F 	 2.0981404926064056e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2748, -0.4466, -0.4689, -0.4795, -0.4860, -0.4903, -0.4932, -0.4952,
        -0.4966, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9399e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0195e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8799e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 6 	 H 	 H 	 4.558055460430151e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e02)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e02/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e02/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 3.268851', ' ae : 59.067556', ' E : 1.283542'] ,|| total loss 44.251693 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9660, -1.0901, -1.1219, -1.1382, -1.1485, -1.1554, -1.1602, -1.1636,
        -1.1659, -1.1675, -1.1687, -1.1695, -1.1700, -1.1704, -1.1707, -1.1709,
        -1.1710, -1.1711, -1.1712, -1.1712, -1.1713, -1.1713, -1.1713, -1.1713,
        -1.1713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8987e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7975e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3180, -0.4586, -0.4757, -0.4839, -0.4890, -0.4923, -0.4946, -0.4962,
        -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9394e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3379e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6763e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2583, -0.4418, -0.4662, -0.4778, -0.4848, -0.4895, -0.4927, -0.4948,
        -0.4964, -0.4974, -0.4982, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9394e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3383e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1709, -1.1710, -1.1711, -1.1712, -1.1712, -1.1713, -1.1713, -1.1713,
        -1.1713, -1.1713], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 1.7630385099823947e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4694, -7.4728, -7.4747, -7.4760, -7.4768, -7.4777, -7.4785,
        -7.4788, -7.4786, -7.4784, -7.4782, -7.4782, -7.4782, -7.4782, -7.4783,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784, -7.4784,
        -7.4784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4117, -7.3375, -7.3152, -7.3036, -7.2962, -7.2913, -7.2878, -7.2855,
        -7.2840, -7.2828, -7.2821, -7.2816, -7.2812, -7.2810, -7.2808, -7.2807,
        -7.2807, -7.2806, -7.2806, -7.2806, -7.2805, -7.2805, -7.2805, -7.2805,
        -7.2805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2807, -7.2807, -7.2806, -7.2806, -7.2806, -7.2805, -7.2805, -7.2805,
        -7.2805, -7.2805], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 Li 	 Li 	 2.0794635809704197e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7553, -37.7954, -37.8096, -37.8175, -37.8227, -37.8264, -37.8290,
        -37.8309, -37.8322, -37.8331, -37.8338, -37.8342, -37.8346, -37.8348,
        -37.8349, -37.8351, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0032e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0032e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 4 	 C 	 C 	 6.30569088338398e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4626, -7.4696, -7.4729, -7.4749, -7.4760, -7.4769, -7.4778, -7.4786,
        -7.4789, -7.4786, -7.4784, -7.4783, -7.4782, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9995e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1573e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9991e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4783, -7.4783, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4784, -7.4784], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 Li 	 Li 	 2.7481753466890465e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5616, -109.9093, -109.7567, -109.6756, -109.6235, -109.5878,
        -109.5630, -109.5457, -109.5335, -109.5250, -109.5190, -109.5149,
        -109.5119, -109.5099, -109.5085, -109.5075, -109.5068, -109.5063,
        -109.5059, -109.5057, -109.5055, -109.5054, -109.5053, -109.5052,
        -109.5052], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4348e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4405, -54.5107, -54.5365, -54.5510, -54.5607, -54.5674, -54.5722,
        -54.5756, -54.5780, -54.5797, -54.5809, -54.5817, -54.5823, -54.5827,
        -54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5837], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3859e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4880, -54.5201, -54.5391, -54.5520, -54.5612, -54.5678,
        -54.5725, -54.5758, -54.5781, -54.5798, -54.5809, -54.5818, -54.5823,
        -54.5827, -54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4995e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5075, -109.5068, -109.5063, -109.5059, -109.5057, -109.5055,
        -109.5054, -109.5053, -109.5052, -109.5052], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 1 	 N2 	 N2 	 0.00015834529282822022

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2112, -107.2687, -107.2355, -107.2324, -107.2293, -107.2275,
        -107.2271, -107.2278, -107.2287, -107.2296, -107.2303, -107.2309,
        -107.2314, -107.2318, -107.2322, -107.2325, -107.2328, -107.2331,
        -107.2333, -107.2335, -107.2337, -107.2338, -107.2339, -107.2340,
        -107.2341], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3873e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4703, -7.4735, -7.4752, -7.4763, -7.4771, -7.4780, -7.4788,
        -7.4789, -7.4786, -7.4784, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9993e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3602e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6752, -99.6959, -99.7078, -99.7151, -99.7202, -99.7240, -99.7267,
        -99.7287, -99.7302, -99.7312, -99.7319, -99.7324, -99.7328, -99.7330,
        -99.7332, -99.7334, -99.7334, -99.7335, -99.7335, -99.7336, -99.7336,
        -99.7336, -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1030e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2325, -107.2328, -107.2331, -107.2333, -107.2335, -107.2337,
        -107.2338, -107.2339, -107.2340, -107.2341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4783, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4784, -7.4784], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7334, -99.7334, -99.7335, -99.7335, -99.7336, -99.7336, -99.7336,
        -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 2 	 FLi 	 LiF 	 0.00939423705801447

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2375, -0.4355, -0.4627, -0.4756, -0.4833, -0.4885, -0.4919, -0.4943,
        -0.4960, -0.4972, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4996,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9367e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8037e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8735e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 6 	 H 	 H 	 5.384541686377461e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7650, -37.8021, -37.8142, -37.8209, -37.8252, -37.8283, -37.8305,
        -37.8320, -37.8331, -37.8338, -37.8343, -37.8347, -37.8350, -37.8352,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6654, -37.5224, -37.4779, -37.4545, -37.4395, -37.4293, -37.4222,
        -37.4172, -37.4137, -37.4113, -37.4096, -37.4085, -37.4076, -37.4071,
        -37.4067, -37.4064, -37.4062, -37.4060, -37.4059, -37.4059, -37.4058,
        -37.4058, -37.4058, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8354, -37.8355, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4062, -37.4060, -37.4059, -37.4059, -37.4058, -37.4058,
        -37.4058, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 C 	 C 	 5.965869626906231e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6860, -99.7101, -99.7184, -99.7232, -99.7264, -99.7287, -99.7303,
        -99.7315, -99.7323, -99.7329, -99.7333, -99.7336, -99.7338, -99.7339,
        -99.7340, -99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7342,
        -99.7342, -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7225e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7225e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7342, -99.7342,
        -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 F 	 F 	 2.9422915102494667e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1730, -93.6016, -93.4461, -93.3817, -93.3337, -93.3023, -93.2796,
        -93.2634, -93.2517, -93.2432, -93.2370, -93.2324, -93.2291, -93.2266,
        -93.2248, -93.2234, -93.2224, -93.2216, -93.2210, -93.2206, -93.2203,
        -93.2200, -93.2198, -93.2197, -93.2196], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4933e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7533, -37.7939, -37.8086, -37.8169, -37.8224, -37.8263, -37.8290,
        -37.8310, -37.8324, -37.8334, -37.8340, -37.8345, -37.8349, -37.8351,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6231e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4200, -54.4922, -54.5234, -54.5416, -54.5540, -54.5627, -54.5690,
        -54.5734, -54.5766, -54.5788, -54.5804, -54.5815, -54.5823, -54.5828,
        -54.5832, -54.5834, -54.5836, -54.5838, -54.5839, -54.5839, -54.5840,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1568e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2459, -0.4380, -0.4641, -0.4765, -0.4839, -0.4889, -0.4922, -0.4945,
        -0.4961, -0.4973, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9360e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6297e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2234, -93.2224, -93.2216, -93.2210, -93.2206, -93.2203, -93.2200,
        -93.2198, -93.2197, -93.2196], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5834, -54.5836, -54.5838, -54.5839, -54.5839, -54.5840, -54.5840,
        -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 3 	 CHN 	 CNH 	 0.009265927596199978

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4460, -54.5148, -54.5394, -54.5532, -54.5623, -54.5687, -54.5732,
        -54.5764, -54.5786, -54.5802, -54.5813, -54.5821, -54.5827, -54.5831,
        -54.5833, -54.5835, -54.5837, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5839, -54.5839, -54.5839, -54.5839], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1405e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1405e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5835, -54.5837, -54.5837, -54.5838, -54.5839, -54.5839, -54.5839,
        -54.5839, -54.5839, -54.5839], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 8 	 N 	 N 	 6.489516237760896e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e03)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e03/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e03/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 3.258590', ' ae : 58.609354', ' E : 1.167109'] ,|| total loss 43.930740 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0666, -1.1298, -1.1462, -1.1545, -1.1598, -1.1633, -1.1658, -1.1675,
        -1.1687, -1.1696, -1.1702, -1.1706, -1.1709, -1.1711, -1.1712, -1.1713,
        -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9018e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8037e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3083, -0.4560, -0.4742, -0.4829, -0.4883, -0.4919, -0.4943, -0.4960,
        -0.4971, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9328e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5359e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6692e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2164, -0.4288, -0.4590, -0.4732, -0.4817, -0.4874, -0.4912, -0.4938,
        -0.4956, -0.4969, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9327e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3530e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1713, -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715, -1.1715], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 1.4533211467388632e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4643, -7.4718, -7.4745, -7.4759, -7.4769, -7.4777, -7.4786, -7.4790,
        -7.4788, -7.4785, -7.4784, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.3940, -7.3285, -7.3096, -7.2998, -7.2937, -7.2896, -7.2867, -7.2848,
        -7.2835, -7.2826, -7.2820, -7.2816, -7.2813, -7.2811, -7.2809, -7.2809,
        -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2807, -7.2807,
        -7.2807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4784, -7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2809, -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2807,
        -7.2807, -7.2807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 Li 	 Li 	 2.7243033492180526e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2999, -107.2964, -107.2602, -107.2488, -107.2415, -107.2373,
        -107.2353, -107.2343, -107.2338, -107.2335, -107.2334, -107.2334,
        -107.2335, -107.2337, -107.2339, -107.2341, -107.2343, -107.2344,
        -107.2346, -107.2347, -107.2349, -107.2350, -107.2350, -107.2351,
        -107.2352], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3890e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4702, -7.4735, -7.4752, -7.4763, -7.4772, -7.4781, -7.4788,
        -7.4789, -7.4787, -7.4784, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9987e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7820e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6857, -99.7098, -99.7182, -99.7229, -99.7261, -99.7284, -99.7300,
        -99.7312, -99.7320, -99.7326, -99.7330, -99.7333, -99.7335, -99.7337,
        -99.7338, -99.7338, -99.7339, -99.7339, -99.7340, -99.7340, -99.7340,
        -99.7340, -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4799e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2341, -107.2343, -107.2344, -107.2346, -107.2347, -107.2349,
        -107.2350, -107.2350, -107.2351, -107.2352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7338, -99.7339, -99.7339, -99.7340, -99.7340, -99.7340, -99.7340,
        -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 2 	 FLi 	 LiF 	 0.009330943413377554

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7651, -37.8021, -37.8142, -37.8209, -37.8252, -37.8283, -37.8304,
        -37.8320, -37.8330, -37.8338, -37.8343, -37.8347, -37.8350, -37.8351,
        -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6934e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6934e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8354, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 4 	 C 	 C 	 5.697063809019981e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4101, -54.4766, -54.5116, -54.5328, -54.5475, -54.5580, -54.5656,
        -54.5710, -54.5748, -54.5775, -54.5794, -54.5808, -54.5817, -54.5824,
        -54.5829, -54.5832, -54.5834, -54.5836, -54.5837, -54.5838, -54.5838,
        -54.5839, -54.5839, -54.5839, -54.5839], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3261e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3261e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5832, -54.5834, -54.5836, -54.5837, -54.5838, -54.5838, -54.5839,
        -54.5839, -54.5839, -54.5839], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 8 	 N 	 N 	 6.516373254956345e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4633, -7.4704, -7.4736, -7.4754, -7.4765, -7.4773, -7.4782, -7.4789,
        -7.4790, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0049e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4652e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0098e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786,
        -7.4786, -7.4786], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 Li 	 Li 	 5.7925176805644423e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6767, -99.6978, -99.7095, -99.7167, -99.7217, -99.7254, -99.7280,
        -99.7300, -99.7314, -99.7324, -99.7331, -99.7336, -99.7339, -99.7342,
        -99.7344, -99.7345, -99.7346, -99.7346, -99.7347, -99.7347, -99.7347,
        -99.7347, -99.7347, -99.7348, -99.7348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2084e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2084e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7345, -99.7346, -99.7346, -99.7347, -99.7347, -99.7347, -99.7347,
        -99.7347, -99.7348, -99.7348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 F 	 F 	 1.698194182473636e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8382, -93.4626, -93.3707, -93.3258, -93.2958, -93.2754, -93.2608,
        -93.2503, -93.2427, -93.2372, -93.2331, -93.2301, -93.2278, -93.2261,
        -93.2249, -93.2239, -93.2232, -93.2227, -93.2223, -93.2219, -93.2217,
        -93.2215, -93.2214, -93.2213, -93.2212], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4370e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7404, -37.7776, -37.7968, -37.8083, -37.8162, -37.8218, -37.8259,
        -37.8288, -37.8309, -37.8324, -37.8334, -37.8342, -37.8347, -37.8350,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4913e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4311, -54.5031, -54.5313, -54.5475, -54.5583, -54.5659, -54.5714,
        -54.5752, -54.5779, -54.5798, -54.5812, -54.5821, -54.5828, -54.5832,
        -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9100e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3357, -0.4632, -0.4783, -0.4856, -0.4901, -0.4931, -0.4951, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9283e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2044e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2239, -93.2232, -93.2227, -93.2223, -93.2219, -93.2217, -93.2215,
        -93.2214, -93.2213, -93.2212], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 3 	 CHN 	 CNH 	 0.00916438115939834

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2919, -0.4515, -0.4716, -0.4813, -0.4872, -0.4911, -0.4937, -0.4956,
        -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9264e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8571e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8529e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 6 	 H 	 H 	 7.154565870124503e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5701, -109.9126, -109.7595, -109.6781, -109.6258, -109.5900,
        -109.5651, -109.5477, -109.5354, -109.5269, -109.5209, -109.5167,
        -109.5138, -109.5117, -109.5103, -109.5093, -109.5086, -109.5081,
        -109.5077, -109.5075, -109.5073, -109.5072, -109.5071, -109.5071,
        -109.5070], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4221e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4425, -54.5122, -54.5377, -54.5520, -54.5616, -54.5682, -54.5729,
        -54.5763, -54.5786, -54.5803, -54.5814, -54.5823, -54.5828, -54.5832,
        -54.5835, -54.5837, -54.5839, -54.5839, -54.5840, -54.5841, -54.5841,
        -54.5841, -54.5841, -54.5842, -54.5842], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9879e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4098, -54.4753, -54.5107, -54.5322, -54.5471, -54.5578, -54.5654,
        -54.5709, -54.5748, -54.5776, -54.5796, -54.5809, -54.5819, -54.5826,
        -54.5831, -54.5834, -54.5836, -54.5838, -54.5839, -54.5840, -54.5840,
        -54.5841, -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1768e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5093, -109.5086, -109.5081, -109.5077, -109.5075, -109.5073,
        -109.5072, -109.5071, -109.5071, -109.5070], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5834, -54.5836, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841,
        -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 1 	 N2 	 N2 	 0.00014848956382159875

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7577, -37.7972, -37.8109, -37.8186, -37.8237, -37.8272, -37.8297,
        -37.8315, -37.8328, -37.8337, -37.8343, -37.8347, -37.8350, -37.8353,
        -37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6161, -37.4981, -37.4628, -37.4443, -37.4325, -37.4245, -37.4189,
        -37.4150, -37.4123, -37.4104, -37.4090, -37.4081, -37.4074, -37.4070,
        -37.4067, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061, -37.4060,
        -37.4060, -37.4060, -37.4060, -37.4059], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4063, -37.4062, -37.4061, -37.4061, -37.4060, -37.4060,
        -37.4060, -37.4060, -37.4059], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 C 	 C 	 5.931986884815769e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e04)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e04/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e04/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 3.248876', ' ae : 58.336115', ' E : 1.119990'] ,|| total loss 43.734056 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4232, -54.4955, -54.5258, -54.5433, -54.5552, -54.5636, -54.5696,
        -54.5738, -54.5768, -54.5790, -54.5805, -54.5815, -54.5823, -54.5828,
        -54.5831, -54.5834, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5839, -54.5839, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2008e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2008e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5834, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839, -54.5839,
        -54.5839, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 8 	 N 	 N 	 6.4300451432517376e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2338, -107.2767, -107.2425, -107.2376, -107.2335, -107.2312,
        -107.2304, -107.2308, -107.2315, -107.2322, -107.2328, -107.2333,
        -107.2337, -107.2340, -107.2344, -107.2347, -107.2350, -107.2353,
        -107.2355, -107.2357, -107.2359, -107.2360, -107.2362, -107.2363,
        -107.2363], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3899e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4629, -7.4695, -7.4730, -7.4750, -7.4762, -7.4771, -7.4780, -7.4788,
        -7.4791, -7.4789, -7.4786, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0058e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4488e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6873, -99.7110, -99.7191, -99.7237, -99.7268, -99.7290, -99.7305,
        -99.7316, -99.7324, -99.7330, -99.7334, -99.7337, -99.7339, -99.7340,
        -99.7341, -99.7342, -99.7342, -99.7343, -99.7343, -99.7343, -99.7343,
        -99.7343, -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1657e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2347, -107.2350, -107.2353, -107.2355, -107.2357, -107.2359,
        -107.2360, -107.2362, -107.2363, -107.2363], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7342, -99.7342, -99.7343, -99.7343, -99.7343, -99.7343, -99.7343,
        -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 2 	 FLi 	 LiF 	 0.009271084821385334

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4652, -7.4725, -7.4751, -7.4764, -7.4773, -7.4781, -7.4789, -7.4792,
        -7.4789, -7.4786, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0050e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7332e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0101e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 Li 	 Li 	 8.657382502585993e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7429, -37.7826, -37.8005, -37.8110, -37.8181, -37.8232, -37.8269,
        -37.8295, -37.8313, -37.8326, -37.8336, -37.8342, -37.8347, -37.8350,
        -37.8352, -37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5881e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5881e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 4 	 C 	 C 	 5.268396828112392e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8568, -93.4709, -93.3756, -93.3296, -93.2986, -93.2777, -93.2627,
        -93.2519, -93.2441, -93.2384, -93.2343, -93.2312, -93.2289, -93.2272,
        -93.2259, -93.2250, -93.2243, -93.2237, -93.2233, -93.2230, -93.2227,
        -93.2226, -93.2224, -93.2223, -93.2222], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3971e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7534, -37.7939, -37.8087, -37.8170, -37.8225, -37.8264, -37.8292,
        -37.8311, -37.8325, -37.8335, -37.8342, -37.8347, -37.8350, -37.8353,
        -37.8354, -37.8356, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4622e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4379, -54.5087, -54.5352, -54.5502, -54.5603, -54.5673, -54.5723,
        -54.5758, -54.5783, -54.5800, -54.5813, -54.5821, -54.5827, -54.5832,
        -54.5835, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841,
        -54.5841, -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0142e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2383, -0.4357, -0.4628, -0.4756, -0.4833, -0.4884, -0.4919, -0.4943,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9185e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0032e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2250, -93.2243, -93.2237, -93.2233, -93.2230, -93.2227, -93.2226,
        -93.2224, -93.2223, -93.2222], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8356, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841, -54.5841,
        -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 3 	 CHN 	 CNH 	 0.009044213471557686

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2449, -0.4377, -0.4639, -0.4763, -0.4838, -0.4888, -0.4921, -0.4945,
        -0.4961, -0.4972, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9166e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8796e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8332e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 6 	 H 	 H 	 1.0015284486624485e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6763, -99.6960, -99.7081, -99.7154, -99.7207, -99.7245, -99.7273,
        -99.7294, -99.7308, -99.7319, -99.7326, -99.7332, -99.7335, -99.7338,
        -99.7340, -99.7341, -99.7342, -99.7343, -99.7343, -99.7344, -99.7344,
        -99.7344, -99.7344, -99.7344, -99.7344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3395e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3395e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7341, -99.7342, -99.7343, -99.7343, -99.7344, -99.7344, -99.7344,
        -99.7344, -99.7344, -99.7344], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 F 	 F 	 6.227482112312859e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9755, -1.0942, -1.1246, -1.1402, -1.1501, -1.1567, -1.1613, -1.1645,
        -1.1668, -1.1684, -1.1695, -1.1702, -1.1708, -1.1711, -1.1714, -1.1716,
        -1.1717, -1.1718, -1.1719, -1.1719, -1.1719, -1.1720, -1.1720, -1.1720,
        -1.1720], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9146e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8291e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2183, -0.4293, -0.4593, -0.4733, -0.4818, -0.4874, -0.4912, -0.4938,
        -0.4956, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9130e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5626e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6553e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3290, -0.4615, -0.4773, -0.4849, -0.4896, -0.4927, -0.4949, -0.4964,
        -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9132e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4488e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1716, -1.1717, -1.1718, -1.1719, -1.1719, -1.1719, -1.1720, -1.1720,
        -1.1720, -1.1720], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 8.802313022661946e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5980, -109.9167, -109.7625, -109.6801, -109.6271, -109.5909,
        -109.5657, -109.5480, -109.5357, -109.5270, -109.5210, -109.5167,
        -109.5137, -109.5117, -109.5102, -109.5092, -109.5085, -109.5080,
        -109.5076, -109.5074, -109.5072, -109.5071, -109.5070, -109.5069,
        -109.5069], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4137e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4227, -54.4949, -54.5252, -54.5429, -54.5548, -54.5633, -54.5693,
        -54.5736, -54.5766, -54.5788, -54.5803, -54.5813, -54.5821, -54.5826,
        -54.5830, -54.5832, -54.5834, -54.5835, -54.5836, -54.5837, -54.5837,
        -54.5838, -54.5838, -54.5838, -54.5838], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3393e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4223, -54.4945, -54.5249, -54.5427, -54.5547, -54.5632, -54.5692,
        -54.5735, -54.5766, -54.5787, -54.5803, -54.5813, -54.5821, -54.5826,
        -54.5830, -54.5832, -54.5834, -54.5835, -54.5836, -54.5837, -54.5837,
        -54.5838, -54.5838, -54.5838, -54.5838], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3414e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5092, -109.5085, -109.5080, -109.5076, -109.5074, -109.5072,
        -109.5071, -109.5070, -109.5069, -109.5069], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5832, -54.5834, -54.5835, -54.5836, -54.5837, -54.5837, -54.5838,
        -54.5838, -54.5838, -54.5838], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 1 	 N2 	 N2 	 0.0001419471620684486

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4632, -7.4701, -7.4735, -7.4754, -7.4765, -7.4773, -7.4782, -7.4790,
        -7.4792, -7.4789, -7.4787, -7.4786, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4045, -7.3340, -7.3131, -7.3024, -7.2955, -7.2910, -7.2878, -7.2857,
        -7.2842, -7.2832, -7.2825, -7.2821, -7.2817, -7.2815, -7.2814, -7.2813,
        -7.2812, -7.2811, -7.2811, -7.2811, -7.2811, -7.2811, -7.2811, -7.2811,
        -7.2810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2813, -7.2812, -7.2811, -7.2811, -7.2811, -7.2811, -7.2811, -7.2811,
        -7.2811, -7.2810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 Li 	 Li 	 5.4550861139418925e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7628, -37.8006, -37.8132, -37.8201, -37.8247, -37.8279, -37.8301,
        -37.8317, -37.8328, -37.8336, -37.8342, -37.8346, -37.8349, -37.8351,
        -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6582, -37.5187, -37.4757, -37.4530, -37.4385, -37.4286, -37.4217,
        -37.4169, -37.4136, -37.4113, -37.4096, -37.4085, -37.4077, -37.4071,
        -37.4067, -37.4065, -37.4063, -37.4061, -37.4060, -37.4060, -37.4059,
        -37.4059, -37.4059, -37.4059, -37.4058], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4063, -37.4061, -37.4060, -37.4060, -37.4059, -37.4059,
        -37.4059, -37.4059, -37.4058], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 C 	 C 	 5.828650109617944e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e05/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 3.241679', ' ae : 58.041246', ' E : 1.135855'] ,|| total loss 43.526723 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4645, -7.4719, -7.4747, -7.4762, -7.4771, -7.4779, -7.4788, -7.4792,
        -7.4790, -7.4787, -7.4786, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9977e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2121e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9954e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 Li 	 Li 	 9.766960258640386e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2260, -0.4318, -0.4606, -0.4742, -0.4824, -0.4878, -0.4914, -0.4940,
        -0.4957, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9050e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4838e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8101e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 6 	 H 	 H 	 1.3592018912006927e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4638, -7.4710, -7.4741, -7.4758, -7.4768, -7.4776, -7.4785, -7.4791,
        -7.4791, -7.4788, -7.4786, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4409, -7.3546, -7.3264, -7.3113, -7.3017, -7.2952, -7.2908, -7.2877,
        -7.2856, -7.2841, -7.2831, -7.2825, -7.2820, -7.2817, -7.2815, -7.2813,
        -7.2812, -7.2812, -7.2811, -7.2811, -7.2811, -7.2811, -7.2810, -7.2810,
        -7.2810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2813, -7.2812, -7.2812, -7.2811, -7.2811, -7.2811, -7.2811, -7.2810,
        -7.2810, -7.2810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 Li 	 Li 	 6.103158137763741e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4313, -54.5029, -54.5309, -54.5468, -54.5575, -54.5651, -54.5704,
        -54.5742, -54.5769, -54.5788, -54.5801, -54.5810, -54.5817, -54.5821,
        -54.5825, -54.5827, -54.5829, -54.5830, -54.5830, -54.5831, -54.5831,
        -54.5832, -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7990e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7990e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5827, -54.5829, -54.5830, -54.5830, -54.5831, -54.5831, -54.5832,
        -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 8 	 N 	 N 	 8.446190619714942e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6754, -99.6961, -99.7078, -99.7150, -99.7200, -99.7237, -99.7264,
        -99.7284, -99.7298, -99.7308, -99.7315, -99.7320, -99.7323, -99.7326,
        -99.7328, -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0143e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0143e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7331,
        -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 F 	 F 	 1.274047688621638e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7401, -37.7769, -37.7961, -37.8076, -37.8155, -37.8212, -37.8253,
        -37.8282, -37.8303, -37.8317, -37.8328, -37.8335, -37.8340, -37.8344,
        -37.8347, -37.8348, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1763e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1763e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 4 	 C 	 C 	 6.454640238580899e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7940, -109.8539, -109.7331, -109.6605, -109.6131, -109.5806,
        -109.5581, -109.5424, -109.5315, -109.5239, -109.5185, -109.5148,
        -109.5122, -109.5104, -109.5091, -109.5082, -109.5076, -109.5072,
        -109.5069, -109.5067, -109.5065, -109.5064, -109.5063, -109.5063,
        -109.5062], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4082e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4265, -54.4986, -54.5278, -54.5446, -54.5560, -54.5640, -54.5696,
        -54.5737, -54.5765, -54.5785, -54.5800, -54.5810, -54.5817, -54.5822,
        -54.5825, -54.5827, -54.5829, -54.5830, -54.5831, -54.5832, -54.5832,
        -54.5832, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7450e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4174, -54.4887, -54.5205, -54.5393, -54.5521, -54.5612, -54.5676,
        -54.5723, -54.5755, -54.5778, -54.5795, -54.5806, -54.5814, -54.5820,
        -54.5824, -54.5827, -54.5829, -54.5830, -54.5831, -54.5832, -54.5832,
        -54.5832, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7998e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5082, -109.5076, -109.5072, -109.5069, -109.5067, -109.5065,
        -109.5064, -109.5063, -109.5063, -109.5062], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5827, -54.5829, -54.5830, -54.5831, -54.5832, -54.5832, -54.5832,
        -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 1 	 N2 	 N2 	 0.00013790626327210304

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0011, -1.1043, -1.1309, -1.1445, -1.1530, -1.1588, -1.1629, -1.1657,
        -1.1676, -1.1690, -1.1699, -1.1706, -1.1711, -1.1714, -1.1716, -1.1718,
        -1.1719, -1.1720, -1.1720, -1.1721, -1.1721, -1.1721, -1.1721, -1.1721,
        -1.1722], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9107e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8214e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3156, -0.4579, -0.4752, -0.4836, -0.4887, -0.4921, -0.4944, -0.4960,
        -0.4972, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9010e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7876e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6234e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2617, -0.4427, -0.4667, -0.4781, -0.4850, -0.4896, -0.4927, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9009e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7373e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1718, -1.1719, -1.1720, -1.1720, -1.1721, -1.1721, -1.1721, -1.1721,
        -1.1721, -1.1722], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 6.747826834433347e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0361, -93.5469, -93.4174, -93.3608, -93.3201, -93.2932, -93.2739,
        -93.2601, -93.2502, -93.2430, -93.2377, -93.2338, -93.2310, -93.2289,
        -93.2274, -93.2262, -93.2254, -93.2247, -93.2242, -93.2239, -93.2236,
        -93.2234, -93.2232, -93.2231, -93.2230], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3462e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7412, -37.7795, -37.7981, -37.8091, -37.8167, -37.8220, -37.8259,
        -37.8287, -37.8307, -37.8321, -37.8331, -37.8337, -37.8342, -37.8346,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0113e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4095, -54.4742, -54.5096, -54.5312, -54.5461, -54.5569, -54.5646,
        -54.5701, -54.5740, -54.5768, -54.5788, -54.5801, -54.5811, -54.5818,
        -54.5823, -54.5826, -54.5828, -54.5830, -54.5831, -54.5832, -54.5833,
        -54.5833, -54.5833, -54.5833, -54.5834], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8248e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2194, -0.4297, -0.4595, -0.4734, -0.4819, -0.4874, -0.4912, -0.4938,
        -0.4956, -0.4969, -0.4977, -0.4983, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9005e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7190e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2262, -93.2254, -93.2247, -93.2242, -93.2239, -93.2236, -93.2234,
        -93.2232, -93.2231, -93.2230], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5828, -54.5830, -54.5831, -54.5832, -54.5833, -54.5833,
        -54.5833, -54.5833, -54.5834], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 3 	 CHN 	 CNH 	 0.008854933586135792

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2107, -107.2694, -107.2360, -107.2332, -107.2303, -107.2289,
        -107.2286, -107.2293, -107.2304, -107.2313, -107.2320, -107.2327,
        -107.2332, -107.2336, -107.2341, -107.2344, -107.2348, -107.2351,
        -107.2353, -107.2356, -107.2357, -107.2359, -107.2360, -107.2361,
        -107.2362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3726e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4724, -7.4750, -7.4764, -7.4773, -7.4781, -7.4790, -7.4793,
        -7.4790, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9917e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8299e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6824, -99.7067, -99.7157, -99.7209, -99.7244, -99.7270, -99.7288,
        -99.7301, -99.7310, -99.7316, -99.7321, -99.7324, -99.7327, -99.7328,
        -99.7329, -99.7330, -99.7331, -99.7331, -99.7331, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5171e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2344, -107.2348, -107.2351, -107.2353, -107.2356, -107.2357,
        -107.2359, -107.2360, -107.2361, -107.2362], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7330, -99.7331, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 2 	 FLi 	 LiF 	 0.009187235653192304

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7504, -37.7911, -37.8065, -37.8152, -37.8211, -37.8252, -37.8282,
        -37.8303, -37.8317, -37.8328, -37.8335, -37.8341, -37.8344, -37.8347,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6434, -37.5112, -37.4709, -37.4498, -37.4362, -37.4270, -37.4206,
        -37.4161, -37.4130, -37.4108, -37.4092, -37.4082, -37.4074, -37.4069,
        -37.4065, -37.4063, -37.4061, -37.4060, -37.4059, -37.4058, -37.4058,
        -37.4058, -37.4057, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4063, -37.4061, -37.4060, -37.4059, -37.4058, -37.4058, -37.4058,
        -37.4057, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 C 	 C 	 5.744943263224246e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e06)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e06/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e06/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 3.230236', ' ae : 57.609027', ' E : 1.269951'] ,|| total loss 43.221576 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7556, -37.7954, -37.8095, -37.8174, -37.8227, -37.8263, -37.8290,
        -37.8308, -37.8321, -37.8330, -37.8337, -37.8342, -37.8345, -37.8347,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0968e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0968e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 4 	 C 	 C 	 6.5078833123579405e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2419, -0.4367, -0.4634, -0.4759, -0.4835, -0.4886, -0.4920, -0.4943,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8942e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2711e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7885e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 6 	 H 	 H 	 1.708562569371982e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2306, -107.2757, -107.2412, -107.2366, -107.2327, -107.2307,
        -107.2300, -107.2304, -107.2312, -107.2319, -107.2325, -107.2330,
        -107.2335, -107.2339, -107.2343, -107.2346, -107.2350, -107.2353,
        -107.2355, -107.2357, -107.2359, -107.2360, -107.2362, -107.2363,
        -107.2363], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3693e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4635, -7.4705, -7.4738, -7.4756, -7.4767, -7.4775, -7.4784, -7.4792,
        -7.4793, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9932e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1388e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6758, -99.6974, -99.7088, -99.7157, -99.7205, -99.7240, -99.7266,
        -99.7284, -99.7298, -99.7307, -99.7314, -99.7319, -99.7322, -99.7325,
        -99.7326, -99.7327, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2989e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2346, -107.2350, -107.2353, -107.2355, -107.2357, -107.2359,
        -107.2360, -107.2362, -107.2363, -107.2363], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7327, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 2 	 FLi 	 LiF 	 0.009158605163129208

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4639, -7.4711, -7.4742, -7.4759, -7.4769, -7.4777, -7.4786, -7.4792,
        -7.4792, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9941e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3307e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9883e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 Li 	 Li 	 1.2333819325135218e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6935, -109.9137, -109.7632, -109.6806, -109.6273, -109.5908,
        -109.5654, -109.5477, -109.5353, -109.5266, -109.5206, -109.5163,
        -109.5133, -109.5113, -109.5098, -109.5088, -109.5081, -109.5076,
        -109.5072, -109.5070, -109.5068, -109.5067, -109.5066, -109.5065,
        -109.5065], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4014e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4145, -54.4845, -54.5174, -54.5369, -54.5503, -54.5599, -54.5667,
        -54.5715, -54.5750, -54.5774, -54.5791, -54.5804, -54.5812, -54.5818,
        -54.5822, -54.5825, -54.5827, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9147e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4194, -54.4909, -54.5222, -54.5405, -54.5529, -54.5617, -54.5680,
        -54.5725, -54.5757, -54.5779, -54.5795, -54.5806, -54.5814, -54.5819,
        -54.5823, -54.5826, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8761e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5088, -109.5081, -109.5076, -109.5072, -109.5070, -109.5068,
        -109.5067, -109.5066, -109.5065, -109.5065], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831, -54.5831,
        -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 1 	 N2 	 N2 	 0.00013258780712079696

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9648, -1.0901, -1.1223, -1.1388, -1.1492, -1.1562, -1.1611, -1.1645,
        -1.1668, -1.1685, -1.1697, -1.1705, -1.1710, -1.1714, -1.1717, -1.1719,
        -1.1720, -1.1721, -1.1722, -1.1722, -1.1723, -1.1723, -1.1723, -1.1723,
        -1.1723], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9113e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8226e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3412, -0.4646, -0.4790, -0.4860, -0.4903, -0.4932, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8909e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5711e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6044e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2660, -0.4440, -0.4674, -0.4785, -0.4853, -0.4897, -0.4928, -0.4949,
        -0.4964, -0.4974, -0.4981, -0.4986, -0.4989, -0.4992, -0.4993, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8908e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8047e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1719, -1.1720, -1.1721, -1.1722, -1.1722, -1.1723, -1.1723, -1.1723,
        -1.1723, -1.1723], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 4.988784325591725e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4637, -7.4708, -7.4740, -7.4757, -7.4768, -7.4776, -7.4785, -7.4792,
        -7.4792, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4040, -7.3338, -7.3131, -7.3023, -7.2956, -7.2910, -7.2879, -7.2858,
        -7.2843, -7.2833, -7.2827, -7.2822, -7.2819, -7.2817, -7.2815, -7.2814,
        -7.2813, -7.2813, -7.2813, -7.2812, -7.2812, -7.2812, -7.2812, -7.2812,
        -7.2812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2814, -7.2813, -7.2813, -7.2813, -7.2812, -7.2812, -7.2812, -7.2812,
        -7.2812, -7.2812], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 Li 	 Li 	 7.893995381788578e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8499, -93.4681, -93.3742, -93.3288, -93.2984, -93.2778, -93.2632,
        -93.2527, -93.2451, -93.2396, -93.2355, -93.2325, -93.2303, -93.2287,
        -93.2275, -93.2266, -93.2259, -93.2254, -93.2250, -93.2247, -93.2245,
        -93.2243, -93.2242, -93.2241, -93.2240], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2926e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7617, -37.7998, -37.8125, -37.8196, -37.8242, -37.8275, -37.8298,
        -37.8314, -37.8326, -37.8334, -37.8339, -37.8343, -37.8346, -37.8348,
        -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8352,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0208e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4398, -54.5098, -54.5357, -54.5503, -54.5600, -54.5669, -54.5717,
        -54.5751, -54.5775, -54.5792, -54.5804, -54.5813, -54.5818, -54.5823,
        -54.5825, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831, -54.5831,
        -54.5832, -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7625e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2813, -0.4484, -0.4699, -0.4801, -0.4863, -0.4905, -0.4933, -0.4952,
        -0.4966, -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8890e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5359e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2266, -93.2259, -93.2254, -93.2250, -93.2247, -93.2245, -93.2243,
        -93.2242, -93.2241, -93.2240], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5828, -54.5829, -54.5830, -54.5831, -54.5831, -54.5831, -54.5832,
        -54.5832, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 3 	 CHN 	 CNH 	 0.008742135811290505

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4217, -54.4935, -54.5240, -54.5418, -54.5538, -54.5624, -54.5684,
        -54.5727, -54.5758, -54.5780, -54.5795, -54.5805, -54.5813, -54.5818,
        -54.5822, -54.5825, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9924e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9924e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5825, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 8 	 N 	 N 	 8.919464610641786e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7409, -37.7788, -37.7975, -37.8086, -37.8162, -37.8217, -37.8256,
        -37.8284, -37.8303, -37.8318, -37.8328, -37.8335, -37.8340, -37.8343,
        -37.8346, -37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6756, -37.5276, -37.4811, -37.4566, -37.4409, -37.4302, -37.4228,
        -37.4176, -37.4140, -37.4115, -37.4097, -37.4085, -37.4076, -37.4070,
        -37.4066, -37.4063, -37.4061, -37.4059, -37.4058, -37.4058, -37.4057,
        -37.4057, -37.4057, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4063, -37.4061, -37.4059, -37.4058, -37.4058, -37.4057, -37.4057,
        -37.4057, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 C 	 C 	 5.693796634086847e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6754, -99.6958, -99.7075, -99.7147, -99.7197, -99.7234, -99.7261,
        -99.7281, -99.7295, -99.7305, -99.7312, -99.7317, -99.7320, -99.7323,
        -99.7325, -99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328,
        -99.7329, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6368e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6368e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 F 	 F 	 2.486076134118421e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e07)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e07/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e07/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 3.220625', ' ae : 57.377000', ' E : 1.284998'] ,|| total loss 43.052586 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2678, -107.2866, -107.2512, -107.2432, -107.2376, -107.2345,
        -107.2332, -107.2330, -107.2332, -107.2335, -107.2338, -107.2341,
        -107.2344, -107.2347, -107.2351, -107.2354, -107.2356, -107.2359,
        -107.2361, -107.2363, -107.2365, -107.2366, -107.2367, -107.2368,
        -107.2369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3661e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4632, -7.4696, -7.4732, -7.4752, -7.4764, -7.4773, -7.4781, -7.4790,
        -7.4793, -7.4790, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9875e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0716e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6850, -99.7087, -99.7171, -99.7218, -99.7250, -99.7272, -99.7289,
        -99.7300, -99.7308, -99.7314, -99.7318, -99.7321, -99.7323, -99.7325,
        -99.7326, -99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5241e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2354, -107.2356, -107.2359, -107.2361, -107.2363, -107.2365,
        -107.2366, -107.2367, -107.2368, -107.2369], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 2 	 FLi 	 LiF 	 0.009089080007238909

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9853, -1.0982, -1.1273, -1.1422, -1.1516, -1.1579, -1.1623, -1.1654,
        -1.1675, -1.1690, -1.1701, -1.1708, -1.1713, -1.1717, -1.1719, -1.1721,
        -1.1722, -1.1723, -1.1724, -1.1724, -1.1724, -1.1724, -1.1725, -1.1725,
        -1.1725], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9078e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8157e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3437, -0.4652, -0.4794, -0.4862, -0.4905, -0.4933, -0.4953, -0.4966,
        -0.4975, -0.4982, -0.4986, -0.4990, -0.4992, -0.4993, -0.4995, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8810e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6843e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5777e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2145, -0.4280, -0.4585, -0.4728, -0.4814, -0.4871, -0.4910, -0.4936,
        -0.4955, -0.4967, -0.4976, -0.4983, -0.4987, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8809e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1872e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1721, -1.1722, -1.1723, -1.1724, -1.1724, -1.1724, -1.1724, -1.1725,
        -1.1725, -1.1725], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 3.6786968129725105e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7659, -37.8024, -37.8142, -37.8207, -37.8250, -37.8280, -37.8301,
        -37.8315, -37.8326, -37.8333, -37.8339, -37.8342, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7389, -37.5627, -37.5027, -37.4712, -37.4509, -37.4371, -37.4276,
        -37.4209, -37.4163, -37.4130, -37.4108, -37.4092, -37.4081, -37.4074,
        -37.4068, -37.4064, -37.4062, -37.4060, -37.4059, -37.4058, -37.4057,
        -37.4057, -37.4056, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8349, -37.8350, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4062, -37.4060, -37.4059, -37.4058, -37.4057, -37.4057,
        -37.4056, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 C 	 C 	 5.670469228756071e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6758, -99.6972, -99.7086, -99.7155, -99.7204, -99.7239, -99.7265,
        -99.7283, -99.7297, -99.7306, -99.7313, -99.7318, -99.7321, -99.7323,
        -99.7325, -99.7326, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329,
        -99.7329, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5418e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.5418e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7326, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 F 	 F 	 2.3705174955346982e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4675, -7.4742, -7.4762, -7.4772, -7.4781, -7.4789, -7.4793, -7.4791,
        -7.4788, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9884e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3762e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9768e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 Li 	 Li 	 1.2354401779771664e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4340, -54.5050, -54.5322, -54.5477, -54.5581, -54.5654, -54.5705,
        -54.5742, -54.5768, -54.5786, -54.5799, -54.5808, -54.5814, -54.5818,
        -54.5821, -54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5828, -54.5828, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1021e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1021e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5828,
        -54.5828, -54.5828, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 8 	 N 	 N 	 9.44782915989148e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4648, -7.4722, -7.4750, -7.4764, -7.4773, -7.4781, -7.4790, -7.4793,
        -7.4791, -7.4788, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4219, -7.3434, -7.3192, -7.3065, -7.2984, -7.2931, -7.2893, -7.2868,
        -7.2851, -7.2839, -7.2831, -7.2825, -7.2821, -7.2819, -7.2817, -7.2816,
        -7.2815, -7.2814, -7.2814, -7.2814, -7.2813, -7.2813, -7.2813, -7.2813,
        -7.2813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2816, -7.2815, -7.2814, -7.2814, -7.2814, -7.2813, -7.2813, -7.2813,
        -7.2813, -7.2813], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 Li 	 Li 	 1.0168203853715731e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1673, -93.6006, -93.4461, -93.3827, -93.3354, -93.3047, -93.2826,
        -93.2668, -93.2555, -93.2474, -93.2414, -93.2371, -93.2339, -93.2316,
        -93.2299, -93.2286, -93.2277, -93.2270, -93.2265, -93.2261, -93.2258,
        -93.2256, -93.2254, -93.2253, -93.2252], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2561e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7417, -37.7802, -37.7985, -37.8093, -37.8168, -37.8221, -37.8259,
        -37.8286, -37.8305, -37.8319, -37.8329, -37.8335, -37.8340, -37.8344,
        -37.8346, -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2893e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4504, -54.5173, -54.5409, -54.5539, -54.5626, -54.5686, -54.5729,
        -54.5759, -54.5780, -54.5795, -54.5806, -54.5813, -54.5818, -54.5822,
        -54.5824, -54.5826, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9094e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3038, -0.4546, -0.4734, -0.4823, -0.4878, -0.4915, -0.4940, -0.4957,
        -0.4969, -0.4978, -0.4983, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8762e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3468e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2286, -93.2277, -93.2270, -93.2265, -93.2261, -93.2258, -93.2256,
        -93.2254, -93.2253, -93.2252], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 3 	 CHN 	 CNH 	 0.008598686389147178

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7443, -37.7844, -37.8016, -37.8116, -37.8184, -37.8232, -37.8267,
        -37.8291, -37.8309, -37.8321, -37.8330, -37.8336, -37.8341, -37.8344,
        -37.8346, -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3299e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3299e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 4 	 C 	 C 	 6.884486057963467e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7009, -109.9120, -109.7625, -109.6802, -109.6270, -109.5907,
        -109.5654, -109.5477, -109.5354, -109.5267, -109.5207, -109.5164,
        -109.5135, -109.5114, -109.5100, -109.5089, -109.5082, -109.5077,
        -109.5074, -109.5071, -109.5070, -109.5069, -109.5068, -109.5067,
        -109.5067], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3876e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4376, -54.5079, -54.5343, -54.5492, -54.5591, -54.5661, -54.5711,
        -54.5746, -54.5770, -54.5788, -54.5800, -54.5809, -54.5815, -54.5819,
        -54.5822, -54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5828, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0786e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4284, -54.5000, -54.5287, -54.5452, -54.5562, -54.5640, -54.5696,
        -54.5735, -54.5763, -54.5782, -54.5796, -54.5806, -54.5813, -54.5818,
        -54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5828, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1185e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5089, -109.5082, -109.5077, -109.5074, -109.5071, -109.5070,
        -109.5069, -109.5068, -109.5067, -109.5067], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5828,
        -54.5828, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 1 	 N2 	 N2 	 0.00012378558501465074

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2416, -0.4366, -0.4633, -0.4758, -0.4834, -0.4885, -0.4919, -0.4943,
        -0.4959, -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8716e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6736e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7432e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 6 	 H 	 H 	 2.641918803691904e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e08/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 3.212073', ' ae : 57.025426', ' E : 1.326576'] ,|| total loss 42.805553 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1502, -93.5938, -93.4425, -93.3801, -93.3336, -93.3035, -93.2818,
        -93.2664, -93.2553, -93.2473, -93.2414, -93.2372, -93.2341, -93.2318,
        -93.2301, -93.2289, -93.2280, -93.2273, -93.2268, -93.2264, -93.2261,
        -93.2259, -93.2257, -93.2256, -93.2255], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2364e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7511, -37.7916, -37.8068, -37.8154, -37.8211, -37.8252, -37.8281,
        -37.8301, -37.8316, -37.8326, -37.8333, -37.8338, -37.8342, -37.8345,
        -37.8346, -37.8348, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3441e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4338, -54.5047, -54.5320, -54.5475, -54.5579, -54.5652, -54.5704,
        -54.5741, -54.5766, -54.5785, -54.5798, -54.5807, -54.5813, -54.5817,
        -54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1820e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2236, -0.4309, -0.4601, -0.4738, -0.4821, -0.4876, -0.4913, -0.4938,
        -0.4956, -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8703e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1487e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2289, -93.2280, -93.2273, -93.2268, -93.2264, -93.2261, -93.2259,
        -93.2257, -93.2256, -93.2255], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 3 	 CHN 	 CNH 	 0.008536036492871421

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4743, -7.4763, -7.4773, -7.4782, -7.4791, -7.4794, -7.4792,
        -7.4789, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4473, -7.3589, -7.3293, -7.3134, -7.3033, -7.2964, -7.2917, -7.2884,
        -7.2862, -7.2847, -7.2837, -7.2830, -7.2825, -7.2821, -7.2819, -7.2817,
        -7.2816, -7.2816, -7.2815, -7.2815, -7.2815, -7.2814, -7.2814, -7.2814,
        -7.2814], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2817, -7.2816, -7.2816, -7.2815, -7.2815, -7.2815, -7.2814, -7.2814,
        -7.2814, -7.2814], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 Li 	 Li 	 1.1646643769080545e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2179, -107.2720, -107.2378, -107.2345, -107.2314, -107.2299,
        -107.2296, -107.2302, -107.2312, -107.2321, -107.2328, -107.2334,
        -107.2339, -107.2344, -107.2349, -107.2353, -107.2356, -107.2359,
        -107.2362, -107.2364, -107.2366, -107.2368, -107.2369, -107.2370,
        -107.2371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3574e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4639, -7.4710, -7.4742, -7.4759, -7.4770, -7.4778, -7.4787, -7.4793,
        -7.4793, -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9862e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5872e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6748, -99.6950, -99.7067, -99.7139, -99.7189, -99.7226, -99.7253,
        -99.7273, -99.7287, -99.7297, -99.7304, -99.7309, -99.7313, -99.7316,
        -99.7317, -99.7319, -99.7319, -99.7320, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0096e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2353, -107.2356, -107.2359, -107.2362, -107.2364, -107.2366,
        -107.2368, -107.2369, -107.2370, -107.2371], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7319, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 2 	 FLi 	 LiF 	 0.009015835225049276

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6815, -99.7055, -99.7145, -99.7197, -99.7232, -99.7258, -99.7276,
        -99.7289, -99.7298, -99.7304, -99.7309, -99.7312, -99.7315, -99.7316,
        -99.7317, -99.7318, -99.7319, -99.7319, -99.7319, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3069e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3069e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7318, -99.7319, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 F 	 F 	 8.574702749912869e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5702, -109.9112, -109.7583, -109.6769, -109.6245, -109.5888,
        -109.5638, -109.5464, -109.5342, -109.5257, -109.5197, -109.5155,
        -109.5125, -109.5105, -109.5091, -109.5080, -109.5073, -109.5068,
        -109.5065, -109.5063, -109.5061, -109.5060, -109.5059, -109.5058,
        -109.5058], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3821e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4189, -54.4901, -54.5213, -54.5396, -54.5520, -54.5608, -54.5671,
        -54.5716, -54.5747, -54.5770, -54.5785, -54.5796, -54.5804, -54.5810,
        -54.5814, -54.5816, -54.5818, -54.5819, -54.5820, -54.5821, -54.5821,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7910e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4085, -54.4706, -54.5065, -54.5285, -54.5439, -54.5549, -54.5628,
        -54.5685, -54.5726, -54.5754, -54.5775, -54.5789, -54.5799, -54.5806,
        -54.5811, -54.5814, -54.5817, -54.5819, -54.5820, -54.5821, -54.5821,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9289e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5080, -109.5073, -109.5068, -109.5065, -109.5063, -109.5061,
        -109.5060, -109.5059, -109.5058, -109.5058], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5817, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 1 	 N2 	 N2 	 0.00011935096651506288

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7474, -37.7880, -37.8041, -37.8133, -37.8196, -37.8239, -37.8271,
        -37.8293, -37.8309, -37.8320, -37.8328, -37.8334, -37.8338, -37.8340,
        -37.8342, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8131e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8131e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 4 	 C 	 C 	 7.973194347027012e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7661, -37.8023, -37.8140, -37.8205, -37.8247, -37.8276, -37.8297,
        -37.8312, -37.8322, -37.8330, -37.8335, -37.8338, -37.8341, -37.8343,
        -37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6707, -37.5249, -37.4794, -37.4554, -37.4400, -37.4295, -37.4222,
        -37.4172, -37.4136, -37.4111, -37.4094, -37.4082, -37.4074, -37.4068,
        -37.4064, -37.4061, -37.4059, -37.4057, -37.4056, -37.4056, -37.4055,
        -37.4055, -37.4054, -37.4054, -37.4054], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8345, -37.8346, -37.8346, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4061, -37.4059, -37.4057, -37.4056, -37.4056, -37.4055, -37.4055,
        -37.4054, -37.4054, -37.4054], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 C 	 C 	 5.5347435168481176e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3441, -0.4652, -0.4794, -0.4862, -0.4904, -0.4933, -0.4952, -0.4965,
        -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8580e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0724e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7159e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 6 	 H 	 H 	 3.1730958003364304e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9779, -1.0956, -1.1258, -1.1413, -1.1511, -1.1578, -1.1623, -1.1655,
        -1.1678, -1.1693, -1.1704, -1.1712, -1.1717, -1.1721, -1.1723, -1.1725,
        -1.1726, -1.1727, -1.1728, -1.1728, -1.1729, -1.1729, -1.1729, -1.1729,
        -1.1729], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9168e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8337e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2855, -0.4495, -0.4704, -0.4804, -0.4865, -0.4906, -0.4933, -0.4952,
        -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8569e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0359e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5474e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3000, -0.4536, -0.4727, -0.4819, -0.4875, -0.4913, -0.4938, -0.4956,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8569e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7712e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1725, -1.1726, -1.1727, -1.1728, -1.1728, -1.1729, -1.1729, -1.1729,
        -1.1729, -1.1729], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 1.0544684015922608e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4234, -54.4950, -54.5248, -54.5421, -54.5538, -54.5621, -54.5680,
        -54.5721, -54.5751, -54.5772, -54.5787, -54.5797, -54.5804, -54.5809,
        -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8829e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8829e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 8 	 N 	 N 	 1.1795278141663887e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4656, -7.4729, -7.4755, -7.4768, -7.4777, -7.4785, -7.4793, -7.4795,
        -7.4792, -7.4789, -7.4788, -7.4787, -7.4788, -7.4788, -7.4788, -7.4789,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9910e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0584e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9821e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 Li 	 Li 	 1.847452507280555e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e09/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 3.206457', ' ae : 56.805305', ' E : 1.447267'] ,|| total loss 42.650551 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7404, -37.7773, -37.7962, -37.8075, -37.8153, -37.8209, -37.8249,
        -37.8278, -37.8298, -37.8313, -37.8323, -37.8330, -37.8336, -37.8339,
        -37.8342, -37.8343, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6380, -37.5084, -37.4691, -37.4484, -37.4352, -37.4262, -37.4200,
        -37.4156, -37.4126, -37.4104, -37.4090, -37.4079, -37.4072, -37.4067,
        -37.4063, -37.4061, -37.4059, -37.4058, -37.4057, -37.4056, -37.4056,
        -37.4056, -37.4055, -37.4055, -37.4055], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8343, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4061, -37.4059, -37.4058, -37.4057, -37.4056, -37.4056, -37.4056,
        -37.4055, -37.4055, -37.4055], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 C 	 C 	 5.5083808994327767e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8387, -93.4636, -93.3721, -93.3278, -93.2982, -93.2782, -93.2640,
        -93.2539, -93.2466, -93.2413, -93.2374, -93.2346, -93.2325, -93.2309,
        -93.2298, -93.2289, -93.2283, -93.2278, -93.2275, -93.2272, -93.2270,
        -93.2268, -93.2267, -93.2266, -93.2265], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1689e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7572, -37.7964, -37.8100, -37.8176, -37.8227, -37.8262, -37.8287,
        -37.8305, -37.8318, -37.8327, -37.8333, -37.8337, -37.8341, -37.8343,
        -37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8347,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6353e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4087, -54.4705, -54.5064, -54.5284, -54.5438, -54.5549, -54.5628,
        -54.5685, -54.5726, -54.5754, -54.5775, -54.5789, -54.5799, -54.5806,
        -54.5811, -54.5814, -54.5817, -54.5819, -54.5820, -54.5821, -54.5821,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9196e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3064, -0.4553, -0.4737, -0.4825, -0.4880, -0.4915, -0.4940, -0.4957,
        -0.4969, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8543e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7120e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2289, -93.2283, -93.2278, -93.2275, -93.2272, -93.2270, -93.2268,
        -93.2267, -93.2266, -93.2265], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5817, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 3 	 CHN 	 CNH 	 0.008371548245841718

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9940, -1.1019, -1.1298, -1.1440, -1.1530, -1.1591, -1.1633, -1.1663,
        -1.1683, -1.1697, -1.1707, -1.1714, -1.1719, -1.1723, -1.1725, -1.1727,
        -1.1728, -1.1729, -1.1729, -1.1730, -1.1730, -1.1730, -1.1730, -1.1730,
        -1.1731], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9219e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8438e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3101, -0.4563, -0.4743, -0.4829, -0.4882, -0.4917, -0.4941, -0.4958,
        -0.4969, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8521e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6929e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5480e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3440, -0.4652, -0.4793, -0.4862, -0.4904, -0.4932, -0.4952, -0.4965,
        -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8522e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1838e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1727, -1.1728, -1.1729, -1.1729, -1.1730, -1.1730, -1.1730, -1.1730,
        -1.1730, -1.1731], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 6.48769154209674e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4731, -7.4757, -7.4769, -7.4778, -7.4786, -7.4794, -7.4795,
        -7.4792, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789,
        -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9890e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6430e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9782e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 Li 	 Li 	 1.9777217345341943e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6761, -99.6990, -99.7095, -99.7158, -99.7201, -99.7233, -99.7255,
        -99.7272, -99.7284, -99.7292, -99.7298, -99.7302, -99.7305, -99.7307,
        -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7312,
        -99.7312, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.5489e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.5489e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 F 	 F 	 1.7210383672531397e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4649, -7.4723, -7.4751, -7.4766, -7.4775, -7.4783, -7.4792, -7.4796,
        -7.4793, -7.4790, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789,
        -7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4568, -7.3656, -7.3338, -7.3166, -7.3055, -7.2980, -7.2929, -7.2893,
        -7.2869, -7.2852, -7.2841, -7.2833, -7.2828, -7.2824, -7.2822, -7.2820,
        -7.2819, -7.2818, -7.2817, -7.2817, -7.2817, -7.2817, -7.2816, -7.2816,
        -7.2816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4789, -7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2820, -7.2819, -7.2818, -7.2817, -7.2817, -7.2817, -7.2817, -7.2816,
        -7.2816, -7.2816], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 Li 	 Li 	 1.5570071352726768e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4526, -54.5183, -54.5411, -54.5537, -54.5620, -54.5678, -54.5719,
        -54.5748, -54.5768, -54.5783, -54.5793, -54.5800, -54.5805, -54.5808,
        -54.5811, -54.5812, -54.5814, -54.5814, -54.5815, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2899e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2899e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5812, -54.5814, -54.5814, -54.5815, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 8 	 N 	 N 	 1.3474116700718543e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7652, -37.8016, -37.8135, -37.8200, -37.8243, -37.8273, -37.8294,
        -37.8309, -37.8319, -37.8327, -37.8332, -37.8336, -37.8338, -37.8340,
        -37.8342, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0299e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0299e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 4 	 C 	 C 	 8.597015583160178e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2915, -107.2963, -107.2589, -107.2483, -107.2415, -107.2377,
        -107.2357, -107.2350, -107.2347, -107.2346, -107.2346, -107.2347,
        -107.2350, -107.2352, -107.2355, -107.2358, -107.2361, -107.2363,
        -107.2365, -107.2367, -107.2369, -107.2370, -107.2371, -107.2372,
        -107.2373], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3427e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4638, -7.4702, -7.4737, -7.4757, -7.4769, -7.4777, -7.4786, -7.4794,
        -7.4796, -7.4793, -7.4790, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9900e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0078e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6741, -99.6940, -99.7057, -99.7128, -99.7179, -99.7216, -99.7243,
        -99.7263, -99.7277, -99.7287, -99.7294, -99.7299, -99.7303, -99.7305,
        -99.7307, -99.7309, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0946e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2358, -107.2361, -107.2363, -107.2365, -107.2367, -107.2369,
        -107.2370, -107.2371, -107.2372, -107.2373], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7309, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 2 	 FLi 	 LiF 	 0.008925597216683876

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7875, -109.8560, -109.7338, -109.6608, -109.6132, -109.5806,
        -109.5580, -109.5422, -109.5312, -109.5236, -109.5182, -109.5145,
        -109.5119, -109.5100, -109.5088, -109.5079, -109.5072, -109.5068,
        -109.5065, -109.5063, -109.5061, -109.5060, -109.5059, -109.5059,
        -109.5059], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3732e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4158, -54.4858, -54.5180, -54.5370, -54.5501, -54.5593, -54.5659,
        -54.5706, -54.5740, -54.5763, -54.5780, -54.5792, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1582e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4106, -54.4768, -54.5112, -54.5320, -54.5463, -54.5566, -54.5640,
        -54.5692, -54.5730, -54.5756, -54.5775, -54.5788, -54.5798, -54.5804,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2227e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5079, -109.5072, -109.5068, -109.5065, -109.5063, -109.5061,
        -109.5060, -109.5059, -109.5059, -109.5059], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5814, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 1 	 N2 	 N2 	 0.00011197956526732685

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3012, -0.4538, -0.4729, -0.4820, -0.4876, -0.4913, -0.4938, -0.4956,
        -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8444e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0129e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6888e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 6 	 H 	 H 	 3.994269140454586e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e10/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 3.193062', ' ae : 56.389005', ' E : 1.546644'] ,|| total loss 42.353237 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9466, -93.5106, -93.3983, -93.3475, -93.3120, -93.2884, -93.2716,
        -93.2596, -93.2510, -93.2448, -93.2402, -93.2369, -93.2345, -93.2327,
        -93.2314, -93.2305, -93.2297, -93.2292, -93.2288, -93.2285, -93.2283,
        -93.2281, -93.2280, -93.2279, -93.2278], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1363e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7448, -37.7847, -37.8017, -37.8116, -37.8183, -37.8231, -37.8265,
        -37.8289, -37.8307, -37.8319, -37.8328, -37.8334, -37.8338, -37.8341,
        -37.8343, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6712e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4371, -54.5071, -54.5335, -54.5484, -54.5584, -54.5654, -54.5703,
        -54.5738, -54.5763, -54.5780, -54.5793, -54.5801, -54.5807, -54.5812,
        -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8022e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2912, -0.4511, -0.4713, -0.4810, -0.4869, -0.4908, -0.4935, -0.4953,
        -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8442e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1992e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2305, -93.2297, -93.2292, -93.2288, -93.2285, -93.2283, -93.2281,
        -93.2280, -93.2279, -93.2278], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821, -54.5821,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 3 	 CHN 	 CNH 	 0.008252535909144192

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7803, -37.7985, -37.8092, -37.8166, -37.8218, -37.8256,
        -37.8283, -37.8302, -37.8315, -37.8325, -37.8332, -37.8336, -37.8340,
        -37.8342, -37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7132, -37.5479, -37.4938, -37.4652, -37.4468, -37.4343, -37.4256,
        -37.4196, -37.4154, -37.4124, -37.4104, -37.4090, -37.4079, -37.4072,
        -37.4068, -37.4064, -37.4062, -37.4060, -37.4059, -37.4058, -37.4058,
        -37.4057, -37.4057, -37.4057, -37.4056], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4062, -37.4060, -37.4059, -37.4058, -37.4058, -37.4057,
        -37.4057, -37.4057, -37.4056], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 C 	 C 	 5.4117772263506985e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6750, -99.6961, -99.7074, -99.7143, -99.7191, -99.7226, -99.7251,
        -99.7270, -99.7283, -99.7293, -99.7299, -99.7304, -99.7307, -99.7310,
        -99.7312, -99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7657e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7657e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 F 	 F 	 1.318576613221574e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8890, -109.6451, -109.6268, -109.5902, -109.5640, -109.5459,
        -109.5335, -109.5250, -109.5191, -109.5151, -109.5123, -109.5104,
        -109.5091, -109.5082, -109.5076, -109.5071, -109.5068, -109.5066,
        -109.5064, -109.5063, -109.5063, -109.5062, -109.5062, -109.5062,
        -109.5061], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3699e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4108, -54.4769, -54.5113, -54.5320, -54.5464, -54.5567, -54.5640,
        -54.5693, -54.5730, -54.5757, -54.5775, -54.5789, -54.5798, -54.5804,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1883e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4087, -54.4698, -54.5058, -54.5279, -54.5433, -54.5544, -54.5624,
        -54.5681, -54.5722, -54.5751, -54.5771, -54.5786, -54.5796, -54.5803,
        -54.5808, -54.5811, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2435e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5071, -109.5068, -109.5066, -109.5064, -109.5063, -109.5063,
        -109.5062, -109.5062, -109.5062, -109.5061], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5811, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 1 	 N2 	 N2 	 0.00010995166733090637

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2991, -0.4533, -0.4725, -0.4818, -0.4874, -0.4912, -0.4937, -0.4955,
        -0.4967, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8383e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1863e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6767e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 6 	 H 	 H 	 4.3694793286598004e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4089, -54.4707, -54.5065, -54.5284, -54.5437, -54.5547, -54.5626,
        -54.5682, -54.5722, -54.5751, -54.5771, -54.5785, -54.5795, -54.5802,
        -54.5807, -54.5811, -54.5813, -54.5815, -54.5816, -54.5817, -54.5817,
        -54.5818, -54.5818, -54.5818, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3205e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3205e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5811, -54.5813, -54.5815, -54.5816, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 8 	 N 	 N 	 1.2703608962209425e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4642, -7.4709, -7.4742, -7.4761, -7.4773, -7.4780, -7.4789, -7.4797,
        -7.4798, -7.4794, -7.4792, -7.4790, -7.4790, -7.4791, -7.4791, -7.4791,
        -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0059e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4184e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0119e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4791, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792, -7.4792], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 Li 	 Li 	 3.2354466464024703e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4665, -7.4737, -7.4762, -7.4774, -7.4782, -7.4791, -7.4798, -7.4798,
        -7.4794, -7.4792, -7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792,
        -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4482, -7.3596, -7.3299, -7.3140, -7.3039, -7.2970, -7.2923, -7.2890,
        -7.2868, -7.2853, -7.2842, -7.2835, -7.2830, -7.2827, -7.2825, -7.2823,
        -7.2822, -7.2821, -7.2821, -7.2820, -7.2820, -7.2820, -7.2820, -7.2820,
        -7.2820], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2823, -7.2822, -7.2821, -7.2821, -7.2820, -7.2820, -7.2820, -7.2820,
        -7.2820, -7.2820], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 Li 	 Li 	 1.781873081970133e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3227, -107.3052, -107.2680, -107.2550, -107.2470, -107.2423,
        -107.2398, -107.2383, -107.2375, -107.2370, -107.2367, -107.2367,
        -107.2368, -107.2370, -107.2372, -107.2374, -107.2376, -107.2379,
        -107.2380, -107.2382, -107.2384, -107.2385, -107.2386, -107.2386,
        -107.2387], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3472e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4641, -7.4704, -7.4739, -7.4759, -7.4771, -7.4780, -7.4788, -7.4796,
        -7.4799, -7.4795, -7.4792, -7.4791, -7.4791, -7.4791, -7.4791, -7.4792,
        -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0084e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5313e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6869, -99.7096, -99.7173, -99.7217, -99.7246, -99.7266, -99.7281,
        -99.7291, -99.7299, -99.7304, -99.7308, -99.7310, -99.7312, -99.7313,
        -99.7314, -99.7315, -99.7315, -99.7316, -99.7316, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8109e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2374, -107.2376, -107.2379, -107.2380, -107.2382, -107.2384,
        -107.2385, -107.2386, -107.2386, -107.2387], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7315, -99.7315, -99.7316, -99.7316, -99.7316, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 2 	 FLi 	 LiF 	 0.008861429968485341

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0252, -1.1145, -1.1377, -1.1495, -1.1569, -1.1620, -1.1655, -1.1679,
        -1.1696, -1.1708, -1.1716, -1.1722, -1.1726, -1.1729, -1.1731, -1.1733,
        -1.1734, -1.1734, -1.1735, -1.1735, -1.1735, -1.1735, -1.1736, -1.1736,
        -1.1736], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9488e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8977e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2835, -0.4489, -0.4701, -0.4802, -0.4863, -0.4904, -0.4932, -0.4951,
        -0.4965, -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8356e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5499e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5690e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2936, -0.4517, -0.4717, -0.4812, -0.4870, -0.4909, -0.4935, -0.4954,
        -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8357e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3550e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1733, -1.1734, -1.1734, -1.1735, -1.1735, -1.1735, -1.1735, -1.1736,
        -1.1736, -1.1736], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 2.371667191267555e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7562, -37.7956, -37.8096, -37.8173, -37.8225, -37.8261, -37.8287,
        -37.8305, -37.8318, -37.8327, -37.8334, -37.8338, -37.8342, -37.8344,
        -37.8345, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4804e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4804e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 4 	 C 	 C 	 7.340371814841607e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e11/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 3.188777', ' ae : 56.084264', ' E : 1.519319'] ,|| total loss 42.143936 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0563, -1.1269, -1.1452, -1.1546, -1.1605, -1.1645, -1.1672, -1.1691,
        -1.1705, -1.1714, -1.1721, -1.1726, -1.1729, -1.1731, -1.1733, -1.1734,
        -1.1734, -1.1735, -1.1735, -1.1736, -1.1736, -1.1736, -1.1736, -1.1736,
        -1.1736], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9510e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9021e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2322, -0.4335, -0.4615, -0.4747, -0.4826, -0.4879, -0.4915, -0.4939,
        -0.4956, -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8350e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.7335e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5721e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2889, -0.4504, -0.4709, -0.4807, -0.4867, -0.4907, -0.4934, -0.4953,
        -0.4966, -0.4975, -0.4981, -0.4985, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8350e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4605e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1734, -1.1734, -1.1735, -1.1735, -1.1736, -1.1736, -1.1736, -1.1736,
        -1.1736, -1.1736], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 5.5924629194818935e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4673, -7.4743, -7.4766, -7.4777, -7.4784, -7.4794, -7.4799, -7.4798,
        -7.4794, -7.4792, -7.4791, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0150e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7260e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0301e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 Li 	 Li 	 3.902321370999593e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2405, -107.2811, -107.2453, -107.2402, -107.2362, -107.2341,
        -107.2335, -107.2337, -107.2343, -107.2350, -107.2356, -107.2361,
        -107.2366, -107.2371, -107.2375, -107.2379, -107.2383, -107.2386,
        -107.2389, -107.2391, -107.2393, -107.2395, -107.2396, -107.2397,
        -107.2398], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3581e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4642, -7.4705, -7.4740, -7.4760, -7.4772, -7.4780, -7.4789, -7.4797,
        -7.4799, -7.4796, -7.4793, -7.4792, -7.4791, -7.4792, -7.4792, -7.4792,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0157e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7158e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6756, -99.6955, -99.7071, -99.7142, -99.7193, -99.7229, -99.7256,
        -99.7276, -99.7290, -99.7300, -99.7307, -99.7312, -99.7316, -99.7318,
        -99.7320, -99.7321, -99.7322, -99.7323, -99.7323, -99.7323, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0652e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2379, -107.2383, -107.2386, -107.2389, -107.2391, -107.2393,
        -107.2395, -107.2396, -107.2397, -107.2398], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7321, -99.7322, -99.7323, -99.7323, -99.7323, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 2 	 FLi 	 LiF 	 0.008836882301548226

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4645, -7.4713, -7.4746, -7.4764, -7.4775, -7.4783, -7.4791, -7.4799,
        -7.4799, -7.4795, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4291, -7.3478, -7.3222, -7.3089, -7.3003, -7.2946, -7.2906, -7.2879,
        -7.2861, -7.2848, -7.2840, -7.2834, -7.2830, -7.2827, -7.2825, -7.2824,
        -7.2823, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2824, -7.2823, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821, -7.2821], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 Li 	 Li 	 1.8778569318245435e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5557, -109.9102, -109.7583, -109.6776, -109.6257, -109.5902,
        -109.5655, -109.5483, -109.5362, -109.5277, -109.5218, -109.5176,
        -109.5147, -109.5127, -109.5112, -109.5102, -109.5095, -109.5090,
        -109.5087, -109.5085, -109.5083, -109.5082, -109.5081, -109.5080,
        -109.5080], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3635e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4470, -54.5147, -54.5389, -54.5524, -54.5614, -54.5676, -54.5720,
        -54.5752, -54.5774, -54.5789, -54.5800, -54.5808, -54.5813, -54.5817,
        -54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5825, -54.5825,
        -54.5826, -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3141e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4518, -54.5180, -54.5412, -54.5540, -54.5625, -54.5685, -54.5726,
        -54.5756, -54.5777, -54.5791, -54.5802, -54.5809, -54.5814, -54.5818,
        -54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5825, -54.5825,
        -54.5826, -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2989e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5102, -109.5095, -109.5090, -109.5087, -109.5085, -109.5083,
        -109.5082, -109.5081, -109.5080, -109.5080], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5822, -54.5823, -54.5824, -54.5825, -54.5825, -54.5825, -54.5826,
        -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 1 	 N2 	 N2 	 0.00010453906587610502

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7565, -37.7959, -37.8098, -37.8176, -37.8228, -37.8264, -37.8290,
        -37.8308, -37.8321, -37.8330, -37.8337, -37.8341, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6826, -37.5314, -37.4837, -37.4585, -37.4423, -37.4313, -37.4237,
        -37.4184, -37.4147, -37.4121, -37.4102, -37.4090, -37.4081, -37.4075,
        -37.4070, -37.4067, -37.4065, -37.4064, -37.4063, -37.4062, -37.4061,
        -37.4061, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4067, -37.4065, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 C 	 C 	 5.4373731422543615e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6797, -99.7030, -99.7130, -99.7188, -99.7229, -99.7258, -99.7278,
        -99.7294, -99.7304, -99.7312, -99.7317, -99.7321, -99.7324, -99.7326,
        -99.7327, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1441e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1441e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 F 	 F 	 1.8304507359580685e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4170, -54.4867, -54.5189, -54.5379, -54.5509, -54.5601, -54.5667,
        -54.5715, -54.5748, -54.5772, -54.5788, -54.5800, -54.5808, -54.5814,
        -54.5818, -54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3294e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3294e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 8 	 N 	 N 	 9.875073899420338e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3331, -0.4623, -0.4777, -0.4851, -0.4897, -0.4927, -0.4948, -0.4962,
        -0.4972, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8328e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7588e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6657e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 6 	 H 	 H 	 4.678770795234976e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7427, -37.7808, -37.7990, -37.8098, -37.8172, -37.8224, -37.8262,
        -37.8289, -37.8308, -37.8322, -37.8331, -37.8338, -37.8343, -37.8346,
        -37.8349, -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9932e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9932e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 4 	 C 	 C 	 6.112831321451364e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1785, -93.6074, -93.4510, -93.3878, -93.3402, -93.3096, -93.2876,
        -93.2721, -93.2609, -93.2529, -93.2470, -93.2428, -93.2398, -93.2375,
        -93.2359, -93.2347, -93.2338, -93.2331, -93.2326, -93.2322, -93.2320,
        -93.2318, -93.2316, -93.2315, -93.2314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0814e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7474, -37.7876, -37.8040, -37.8135, -37.8199, -37.8244, -37.8277,
        -37.8300, -37.8316, -37.8328, -37.8336, -37.8342, -37.8346, -37.8349,
        -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8162e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4376, -54.5076, -54.5341, -54.5492, -54.5592, -54.5662, -54.5712,
        -54.5748, -54.5773, -54.5790, -54.5803, -54.5811, -54.5817, -54.5822,
        -54.5825, -54.5827, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5831, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8125e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2785, -0.4474, -0.4693, -0.4796, -0.4860, -0.4902, -0.4930, -0.4950,
        -0.4964, -0.4973, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8336e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7026e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2347, -93.2338, -93.2331, -93.2326, -93.2322, -93.2320, -93.2318,
        -93.2316, -93.2315, -93.2314], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5827, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831, -54.5831,
        -54.5831, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 3 	 CHN 	 CNH 	 0.008083708001121707

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e12/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 3.181595', ' ae : 55.753197', ' E : 1.330615'] ,|| total loss 41.912744 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4646, -7.4715, -7.4747, -7.4765, -7.4776, -7.4784, -7.4793, -7.4800,
        -7.4799, -7.4796, -7.4793, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793,
        -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0265e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9472e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0531e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 Li 	 Li 	 4.4259435285104725e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4655, -7.4727, -7.4756, -7.4771, -7.4780, -7.4788, -7.4797, -7.4801,
        -7.4798, -7.4794, -7.4793, -7.4792, -7.4792, -7.4793, -7.4793, -7.4794,
        -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4087, -7.3366, -7.3152, -7.3041, -7.2971, -7.2924, -7.2891, -7.2870,
        -7.2855, -7.2844, -7.2837, -7.2832, -7.2829, -7.2827, -7.2825, -7.2824,
        -7.2824, -7.2823, -7.2823, -7.2823, -7.2822, -7.2822, -7.2822, -7.2822,
        -7.2822], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2824, -7.2824, -7.2823, -7.2823, -7.2823, -7.2822, -7.2822, -7.2822,
        -7.2822, -7.2822], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 Li 	 Li 	 1.9673847428189238e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7773, -109.8735, -109.7445, -109.6690, -109.6200, -109.5864,
        -109.5631, -109.5468, -109.5355, -109.5276, -109.5220, -109.5182,
        -109.5155, -109.5136, -109.5123, -109.5114, -109.5107, -109.5103,
        -109.5099, -109.5097, -109.5096, -109.5095, -109.5094, -109.5093,
        -109.5093], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3589e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4182, -54.4881, -54.5200, -54.5388, -54.5517, -54.5608, -54.5673,
        -54.5720, -54.5752, -54.5776, -54.5792, -54.5804, -54.5812, -54.5818,
        -54.5822, -54.5824, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0029e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4176, -54.4873, -54.5194, -54.5384, -54.5514, -54.5606, -54.5671,
        -54.5718, -54.5752, -54.5775, -54.5792, -54.5803, -54.5812, -54.5817,
        -54.5821, -54.5824, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0077e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5114, -109.5107, -109.5103, -109.5099, -109.5097, -109.5096,
        -109.5095, -109.5094, -109.5093, -109.5093], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5824, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5830, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 1 	 N2 	 N2 	 0.0001010299184198581

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3234, -0.4598, -0.4762, -0.4841, -0.4890, -0.4922, -0.4945, -0.4960,
        -0.4971, -0.4978, -0.4983, -0.4987, -0.4990, -0.4991, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8291e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0006e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6581e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 6 	 H 	 H 	 4.953746639232266e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7500, -37.7903, -37.8059, -37.8149, -37.8209, -37.8251, -37.8281,
        -37.8303, -37.8318, -37.8329, -37.8336, -37.8342, -37.8345, -37.8348,
        -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9145e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9145e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 4 	 C 	 C 	 6.057258509382203e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1831, -93.6093, -93.4520, -93.3886, -93.3408, -93.3102, -93.2881,
        -93.2725, -93.2613, -93.2533, -93.2474, -93.2432, -93.2402, -93.2379,
        -93.2363, -93.2351, -93.2342, -93.2335, -93.2330, -93.2327, -93.2324,
        -93.2322, -93.2321, -93.2319, -93.2319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0615e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7413, -37.7769, -37.7961, -37.8076, -37.8155, -37.8212, -37.8253,
        -37.8283, -37.8304, -37.8319, -37.8329, -37.8337, -37.8342, -37.8346,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9823e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4165, -54.4857, -54.5182, -54.5374, -54.5506, -54.5600, -54.5667,
        -54.5715, -54.5749, -54.5773, -54.5790, -54.5802, -54.5810, -54.5816,
        -54.5820, -54.5823, -54.5825, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0998e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2215, -0.4301, -0.4596, -0.4734, -0.4818, -0.4873, -0.4911, -0.4936,
        -0.4954, -0.4967, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8273e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2294e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2351, -93.2342, -93.2335, -93.2330, -93.2327, -93.2324, -93.2322,
        -93.2321, -93.2319, -93.2319], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5825, -54.5827, -54.5828, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 3 	 CHN 	 CNH 	 0.008018815057979517

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4153, -54.4838, -54.5167, -54.5363, -54.5498, -54.5594, -54.5662,
        -54.5711, -54.5746, -54.5770, -54.5788, -54.5800, -54.5808, -54.5814,
        -54.5819, -54.5821, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2581e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2581e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 8 	 N 	 N 	 9.594456630855916e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0074, -1.1077, -1.1336, -1.1469, -1.1553, -1.1610, -1.1649, -1.1676,
        -1.1695, -1.1709, -1.1718, -1.1725, -1.1729, -1.1732, -1.1735, -1.1736,
        -1.1737, -1.1738, -1.1739, -1.1739, -1.1739, -1.1739, -1.1739, -1.1740,
        -1.1740], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9625e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9250e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2328, -0.4337, -0.4616, -0.4747, -0.4826, -0.4879, -0.4914, -0.4939,
        -0.4956, -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8238e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0233e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5726e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2170, -0.4286, -0.4588, -0.4729, -0.4815, -0.4871, -0.4909, -0.4935,
        -0.4953, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8238e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.4529e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1736, -1.1737, -1.1738, -1.1739, -1.1739, -1.1739, -1.1739, -1.1739,
        -1.1740, -1.1740], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 8.077313362491453e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3184, -107.3066, -107.2690, -107.2567, -107.2490, -107.2445,
        -107.2421, -107.2408, -107.2401, -107.2397, -107.2395, -107.2395,
        -107.2397, -107.2399, -107.2402, -107.2405, -107.2407, -107.2410,
        -107.2412, -107.2413, -107.2415, -107.2416, -107.2417, -107.2418,
        -107.2419], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3682e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4721, -7.4752, -7.4769, -7.4779, -7.4786, -7.4795, -7.4801,
        -7.4800, -7.4796, -7.4794, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0183e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1645e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6765, -99.6955, -99.7072, -99.7145, -99.7196, -99.7234, -99.7262,
        -99.7282, -99.7296, -99.7307, -99.7314, -99.7319, -99.7323, -99.7326,
        -99.7327, -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0573e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2405, -107.2407, -107.2410, -107.2412, -107.2413, -107.2415,
        -107.2416, -107.2417, -107.2418, -107.2419], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 2 	 FLi 	 LiF 	 0.008732854237940752

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7411, -37.7765, -37.7957, -37.8073, -37.8153, -37.8210, -37.8251,
        -37.8281, -37.8302, -37.8317, -37.8328, -37.8335, -37.8341, -37.8344,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6457, -37.5126, -37.4719, -37.4506, -37.4369, -37.4276, -37.4212,
        -37.4167, -37.4135, -37.4113, -37.4098, -37.4087, -37.4080, -37.4074,
        -37.4071, -37.4068, -37.4066, -37.4065, -37.4064, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4068, -37.4066, -37.4065, -37.4064, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 C 	 C 	 5.3817362858440164e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6820, -99.7055, -99.7148, -99.7202, -99.7239, -99.7266, -99.7285,
        -99.7298, -99.7308, -99.7315, -99.7320, -99.7323, -99.7326, -99.7327,
        -99.7329, -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9001e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9001e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 F 	 F 	 1.409539055378539e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e13/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 3.179445', ' ae : 55.470023', ' E : 1.316274'] ,|| total loss 41.721175 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4142, -54.4819, -54.5152, -54.5352, -54.5489, -54.5587, -54.5657,
        -54.5707, -54.5742, -54.5767, -54.5785, -54.5797, -54.5806, -54.5812,
        -54.5817, -54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5826,
        -54.5826, -54.5826, -54.5826, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4228e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4228e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826,
        -54.5826, -54.5826, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 8 	 N 	 N 	 1.008125649180786e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9257, -93.5035, -93.3959, -93.3468, -93.3127, -93.2902, -93.2741,
        -93.2626, -93.2544, -93.2485, -93.2442, -93.2411, -93.2388, -93.2372,
        -93.2359, -93.2350, -93.2344, -93.2339, -93.2335, -93.2332, -93.2330,
        -93.2328, -93.2327, -93.2326, -93.2326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0234e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7541, -37.7939, -37.8085, -37.8167, -37.8222, -37.8260, -37.8287,
        -37.8307, -37.8321, -37.8330, -37.8337, -37.8342, -37.8346, -37.8348,
        -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9668e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4336, -54.5041, -54.5315, -54.5472, -54.5576, -54.5650, -54.5702,
        -54.5739, -54.5766, -54.5784, -54.5797, -54.5806, -54.5813, -54.5817,
        -54.5820, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2049e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3218, -0.4593, -0.4760, -0.4840, -0.4889, -0.4921, -0.4944, -0.4959,
        -0.4970, -0.4978, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8186e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2908e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2350, -93.2344, -93.2339, -93.2335, -93.2332, -93.2330, -93.2328,
        -93.2327, -93.2326, -93.2326], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5827, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 3 	 CHN 	 CNH 	 0.007933784158062692

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2701, -0.4450, -0.4679, -0.4787, -0.4853, -0.4897, -0.4927, -0.4948,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8167e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3247e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6334e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 6 	 H 	 H 	 5.951798487193462e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2720, -107.2927, -107.2555, -107.2477, -107.2422, -107.2392,
        -107.2378, -107.2375, -107.2377, -107.2380, -107.2383, -107.2387,
        -107.2391, -107.2395, -107.2399, -107.2403, -107.2407, -107.2410,
        -107.2413, -107.2415, -107.2417, -107.2418, -107.2420, -107.2421,
        -107.2422], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3676e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4648, -7.4714, -7.4748, -7.4766, -7.4777, -7.4785, -7.4794, -7.4801,
        -7.4802, -7.4798, -7.4795, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795,
        -7.4795, -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0205e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4541e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.6984, -99.7095, -99.7162, -99.7209, -99.7243, -99.7268,
        -99.7286, -99.7299, -99.7308, -99.7314, -99.7319, -99.7322, -99.7325,
        -99.7326, -99.7327, -99.7328, -99.7329, -99.7329, -99.7329, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3153e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2403, -107.2407, -107.2410, -107.2413, -107.2415, -107.2417,
        -107.2418, -107.2420, -107.2421, -107.2422], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4795, -7.4795, -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7327, -99.7328, -99.7329, -99.7329, -99.7329, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 2 	 FLi 	 LiF 	 0.008703175723025479

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9516, -109.3523, -109.4842, -109.4991, -109.5017, -109.5028,
        -109.5037, -109.5047, -109.5056, -109.5063, -109.5069, -109.5074,
        -109.5078, -109.5081, -109.5083, -109.5084, -109.5085, -109.5086,
        -109.5087, -109.5087, -109.5088, -109.5088, -109.5088, -109.5088,
        -109.5088], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3504e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4534, -54.5190, -54.5418, -54.5545, -54.5628, -54.5687, -54.5728,
        -54.5757, -54.5777, -54.5792, -54.5802, -54.5809, -54.5814, -54.5818,
        -54.5820, -54.5822, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3194e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4185, -54.4884, -54.5200, -54.5387, -54.5515, -54.5605, -54.5670,
        -54.5716, -54.5748, -54.5771, -54.5787, -54.5799, -54.5807, -54.5813,
        -54.5816, -54.5819, -54.5821, -54.5823, -54.5824, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5825, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4819e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5084, -109.5085, -109.5086, -109.5087, -109.5087, -109.5088,
        -109.5088, -109.5088, -109.5088, -109.5088], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5819, -54.5821, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 1 	 N2 	 N2 	 9.653316681151681e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4677, -7.4747, -7.4770, -7.4780, -7.4788, -7.4797, -7.4802, -7.4801,
        -7.4797, -7.4795, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795,
        -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4178, -7.3415, -7.3184, -7.3064, -7.2987, -7.2936, -7.2901, -7.2877,
        -7.2860, -7.2849, -7.2841, -7.2836, -7.2832, -7.2830, -7.2828, -7.2827,
        -7.2826, -7.2826, -7.2826, -7.2825, -7.2825, -7.2825, -7.2825, -7.2825,
        -7.2825], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2827, -7.2826, -7.2826, -7.2826, -7.2825, -7.2825, -7.2825, -7.2825,
        -7.2825, -7.2825], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 Li 	 Li 	 2.436594004144623e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7413, -37.7767, -37.7958, -37.8074, -37.8153, -37.8210, -37.8251,
        -37.8280, -37.8301, -37.8316, -37.8327, -37.8334, -37.8340, -37.8343,
        -37.8346, -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7059, -37.5441, -37.4916, -37.4639, -37.4461, -37.4340, -37.4256,
        -37.4198, -37.4157, -37.4128, -37.4108, -37.4094, -37.4085, -37.4078,
        -37.4073, -37.4070, -37.4067, -37.4066, -37.4065, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4070, -37.4067, -37.4066, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 9 	 C 	 C 	 5.30537636577344e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6812, -99.7046, -99.7141, -99.7196, -99.7234, -99.7261, -99.7280,
        -99.7294, -99.7304, -99.7311, -99.7316, -99.7320, -99.7322, -99.7324,
        -99.7325, -99.7326, -99.7327, -99.7327, -99.7327, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6076e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6076e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7326, -99.7327, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 5 	 F 	 F 	 2.8425799836928135e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4651, -7.4720, -7.4752, -7.4769, -7.4779, -7.4787, -7.4796, -7.4802,
        -7.4801, -7.4797, -7.4795, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795,
        -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0153e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4951e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0308e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4795, -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 7 	 Li 	 Li 	 5.651066203215656e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7424, -37.7798, -37.7982, -37.8091, -37.8166, -37.8219, -37.8257,
        -37.8285, -37.8304, -37.8318, -37.8328, -37.8335, -37.8340, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3472e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3472e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 4 	 C 	 C 	 6.858948182161759e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0138, -1.1104, -1.1355, -1.1483, -1.1564, -1.1618, -1.1656, -1.1683,
        -1.1701, -1.1714, -1.1723, -1.1729, -1.1734, -1.1737, -1.1739, -1.1741,
        -1.1742, -1.1742, -1.1743, -1.1743, -1.1743, -1.1744, -1.1744, -1.1744,
        -1.1744], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9810e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9620e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2245, -0.4310, -0.4601, -0.4737, -0.4820, -0.4874, -0.4911, -0.4936,
        -0.4954, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8063e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7607e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5746e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2852, -0.4493, -0.4703, -0.4803, -0.4864, -0.4904, -0.4932, -0.4951,
        -0.4964, -0.4973, -0.4980, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8063e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3012e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1741, -1.1742, -1.1742, -1.1743, -1.1743, -1.1743, -1.1744, -1.1744,
        -1.1744, -1.1744], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 0 	 H2 	 H2 	 2.8891381911618353e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e14)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e14/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e14/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 14 || ,[' rho : 3.172016', ' ae : 55.276049', ' E : 1.372021'] ,|| total loss 41.580924 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7756, -109.8725, -109.7437, -109.6683, -109.6193, -109.5858,
        -109.5626, -109.5463, -109.5350, -109.5271, -109.5216, -109.5177,
        -109.5150, -109.5131, -109.5118, -109.5109, -109.5103, -109.5098,
        -109.5095, -109.5093, -109.5091, -109.5090, -109.5089, -109.5089,
        -109.5088], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3449e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4108, -54.4734, -54.5086, -54.5301, -54.5451, -54.5558, -54.5635,
        -54.5691, -54.5730, -54.5758, -54.5777, -54.5791, -54.5801, -54.5808,
        -54.5813, -54.5816, -54.5818, -54.5820, -54.5821, -54.5822, -54.5822,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7815e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4428, -54.5113, -54.5365, -54.5506, -54.5600, -54.5666, -54.5712,
        -54.5745, -54.5769, -54.5785, -54.5797, -54.5805, -54.5810, -54.5814,
        -54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5480e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5109, -109.5103, -109.5098, -109.5095, -109.5093, -109.5091,
        -109.5090, -109.5089, -109.5089, -109.5088], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823, -54.5823,
        -54.5823, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 1 	 N2 	 N2 	 9.202383482716174e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7420, -37.7790, -37.7976, -37.8086, -37.8162, -37.8216, -37.8255,
        -37.8283, -37.8303, -37.8317, -37.8327, -37.8334, -37.8339, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3595e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3595e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 4 	 C 	 C 	 6.873816658038755e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9652, -1.0913, -1.1238, -1.1404, -1.1510, -1.1581, -1.1630, -1.1665,
        -1.1689, -1.1706, -1.1717, -1.1725, -1.1731, -1.1735, -1.1738, -1.1740,
        -1.1741, -1.1742, -1.1743, -1.1743, -1.1744, -1.1744, -1.1744, -1.1744,
        -1.1744], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9823e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9646e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3275, -0.4608, -0.4768, -0.4845, -0.4892, -0.4924, -0.4945, -0.4960,
        -0.4971, -0.4978, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8043e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5877e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5732e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3042, -0.4546, -0.4732, -0.4822, -0.4877, -0.4913, -0.4938, -0.4955,
        -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8043e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9920e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1740, -1.1741, -1.1742, -1.1743, -1.1743, -1.1744, -1.1744, -1.1744,
        -1.1744, -1.1744], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 0 	 H2 	 H2 	 3.174174142447922e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4731, -7.4760, -7.4775, -7.4783, -7.4791, -7.4800, -7.4803,
        -7.4800, -7.4796, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795,
        -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4609, -7.3688, -7.3362, -7.3185, -7.3072, -7.2994, -7.2941, -7.2905,
        -7.2880, -7.2863, -7.2851, -7.2843, -7.2837, -7.2834, -7.2831, -7.2829,
        -7.2828, -7.2827, -7.2827, -7.2826, -7.2826, -7.2826, -7.2826, -7.2826,
        -7.2826], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2829, -7.2828, -7.2827, -7.2827, -7.2826, -7.2826, -7.2826, -7.2826,
        -7.2826, -7.2826], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 10 	 Li 	 Li 	 2.711412558323526e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2570, -0.4411, -0.4657, -0.4773, -0.4844, -0.4890, -0.4922, -0.4944,
        -0.4959, -0.4970, -0.4977, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8031e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0161e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6063e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 6 	 H 	 H 	 7.05399974925732e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1040, -93.5782, -93.4360, -93.3770, -93.3334, -93.3053, -93.2851,
        -93.2708, -93.2606, -93.2533, -93.2480, -93.2441, -93.2413, -93.2393,
        -93.2378, -93.2367, -93.2359, -93.2353, -93.2349, -93.2345, -93.2343,
        -93.2341, -93.2340, -93.2339, -93.2338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9757e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7577, -37.7966, -37.8103, -37.8179, -37.8230, -37.8266, -37.8291,
        -37.8309, -37.8321, -37.8330, -37.8337, -37.8341, -37.8344, -37.8346,
        -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1815e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4145, -54.4821, -54.5153, -54.5352, -54.5488, -54.5585, -54.5655,
        -54.5705, -54.5740, -54.5765, -54.5783, -54.5795, -54.5804, -54.5810,
        -54.5814, -54.5817, -54.5819, -54.5821, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6724e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3002, -0.4535, -0.4726, -0.4818, -0.4874, -0.4911, -0.4936, -0.4954,
        -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8026e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1120e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2367, -93.2359, -93.2353, -93.2349, -93.2345, -93.2343, -93.2341,
        -93.2340, -93.2339, -93.2338], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5821, -54.5822, -54.5823, -54.5823, -54.5823,
        -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 3 	 CHN 	 CNH 	 0.007773148248580067

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6763, -99.6955, -99.7071, -99.7142, -99.7193, -99.7230, -99.7258,
        -99.7277, -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7320,
        -99.7322, -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3657e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3657e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 5 	 F 	 F 	 3.925565805368368e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4655, -7.4726, -7.4756, -7.4772, -7.4782, -7.4789, -7.4798, -7.4803,
        -7.4800, -7.4797, -7.4795, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795,
        -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0012e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5815e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0027e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 7 	 Li 	 Li 	 5.839271599502411e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4107, -54.4735, -54.5086, -54.5300, -54.5449, -54.5556, -54.5633,
        -54.5688, -54.5727, -54.5754, -54.5774, -54.5788, -54.5797, -54.5804,
        -54.5809, -54.5812, -54.5815, -54.5816, -54.5817, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1641e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1641e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5812, -54.5815, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 8 	 N 	 N 	 1.2264730606500883e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7646, -37.8013, -37.8134, -37.8201, -37.8245, -37.8275, -37.8297,
        -37.8312, -37.8323, -37.8331, -37.8336, -37.8340, -37.8343, -37.8345,
        -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6368, -37.5080, -37.4690, -37.4486, -37.4355, -37.4266, -37.4204,
        -37.4161, -37.4130, -37.4109, -37.4095, -37.4084, -37.4077, -37.4072,
        -37.4069, -37.4066, -37.4064, -37.4063, -37.4062, -37.4062, -37.4061,
        -37.4061, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8348, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4066, -37.4064, -37.4063, -37.4062, -37.4062, -37.4061, -37.4061,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 9 	 C 	 C 	 5.233696932413878e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2423, -107.2840, -107.2471, -107.2421, -107.2382, -107.2362,
        -107.2357, -107.2358, -107.2364, -107.2370, -107.2376, -107.2382,
        -107.2387, -107.2392, -107.2397, -107.2402, -107.2406, -107.2409,
        -107.2412, -107.2415, -107.2417, -107.2419, -107.2420, -107.2422,
        -107.2423], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3623e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4649, -7.4714, -7.4748, -7.4767, -7.4778, -7.4786, -7.4794, -7.4802,
        -7.4802, -7.4798, -7.4796, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795,
        -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9972e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6519e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6790, -99.7018, -99.7118, -99.7178, -99.7218, -99.7248, -99.7269,
        -99.7284, -99.7295, -99.7303, -99.7308, -99.7312, -99.7315, -99.7317,
        -99.7318, -99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8659e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2402, -107.2406, -107.2409, -107.2412, -107.2415, -107.2417,
        -107.2419, -107.2420, -107.2422, -107.2423], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 2 	 FLi 	 LiF 	 0.008622287527427578

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e15)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e15/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e15/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 15 || ,[' rho : 3.162626', ' ae : 54.872697', ' E : 1.446642'] ,|| total loss 41.298564 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7489, -37.7889, -37.8048, -37.8139, -37.8200, -37.8243, -37.8274,
        -37.8296, -37.8312, -37.8323, -37.8331, -37.8336, -37.8340, -37.8343,
        -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5290e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5290e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 4 	 C 	 C 	 7.368278516014838e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0121, -93.5405, -93.4160, -93.3621, -93.3234, -93.2981, -93.2801,
        -93.2673, -93.2581, -93.2516, -93.2468, -93.2434, -93.2409, -93.2390,
        -93.2377, -93.2367, -93.2360, -93.2355, -93.2351, -93.2348, -93.2345,
        -93.2344, -93.2343, -93.2342, -93.2341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9495e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7429, -37.7809, -37.7989, -37.8096, -37.8169, -37.8221, -37.8258,
        -37.8285, -37.8304, -37.8317, -37.8327, -37.8334, -37.8338, -37.8342,
        -37.8344, -37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5105e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4135, -54.4803, -54.5138, -54.5340, -54.5478, -54.5577, -54.5648,
        -54.5699, -54.5735, -54.5760, -54.5778, -54.5791, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0497e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2323, -0.4334, -0.4614, -0.4746, -0.4825, -0.4878, -0.4913, -0.4938,
        -0.4955, -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7941e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.9281e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2367, -93.2360, -93.2355, -93.2351, -93.2348, -93.2345, -93.2344,
        -93.2343, -93.2342, -93.2341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 3 	 CHN 	 CNH 	 0.007698794371949824

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3232, -0.4597, -0.4761, -0.4840, -0.4889, -0.4921, -0.4943, -0.4959,
        -0.4970, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7923e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.0092e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5846e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 6 	 H 	 H 	 7.828865233466911e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4502, -54.5165, -54.5399, -54.5529, -54.5615, -54.5675, -54.5718,
        -54.5748, -54.5769, -54.5784, -54.5794, -54.5802, -54.5807, -54.5810,
        -54.5813, -54.5815, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5818, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0349e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0349e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5815, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818, -54.5818,
        -54.5818, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 8 	 N 	 N 	 1.2620527518896125e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7429, -37.7809, -37.7989, -37.8096, -37.8168, -37.8220, -37.8258,
        -37.8284, -37.8303, -37.8317, -37.8326, -37.8333, -37.8338, -37.8341,
        -37.8343, -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6251, -37.5023, -37.4655, -37.4462, -37.4338, -37.4254, -37.4196,
        -37.4155, -37.4127, -37.4107, -37.4093, -37.4083, -37.4077, -37.4072,
        -37.4069, -37.4066, -37.4065, -37.4064, -37.4063, -37.4062, -37.4062,
        -37.4061, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4066, -37.4065, -37.4064, -37.4063, -37.4062, -37.4062, -37.4061,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 9 	 C 	 C 	 5.1805224516211086e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9747, -1.0951, -1.1263, -1.1423, -1.1524, -1.1592, -1.1639, -1.1672,
        -1.1695, -1.1711, -1.1722, -1.1730, -1.1736, -1.1739, -1.1742, -1.1744,
        -1.1745, -1.1746, -1.1747, -1.1747, -1.1748, -1.1748, -1.1748, -1.1748,
        -1.1748], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0007e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0014e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2991, -0.4531, -0.4724, -0.4816, -0.4873, -0.4910, -0.4936, -0.4953,
        -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7887e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.5629e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5788e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2691, -0.4446, -0.4676, -0.4785, -0.4852, -0.4896, -0.4926, -0.4947,
        -0.4961, -0.4971, -0.4978, -0.4983, -0.4986, -0.4989, -0.4990, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7887e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1943e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1744, -1.1745, -1.1746, -1.1747, -1.1747, -1.1748, -1.1748, -1.1748,
        -1.1748, -1.1748], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 0 	 H2 	 H2 	 6.452103988471026e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.4723, -7.4755, -7.4772, -7.4782, -7.4789, -7.4798, -7.4804,
        -7.4803, -7.4799, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4612, -7.3690, -7.3364, -7.3187, -7.3074, -7.2996, -7.2944, -7.2907,
        -7.2882, -7.2865, -7.2853, -7.2845, -7.2840, -7.2836, -7.2833, -7.2832,
        -7.2830, -7.2830, -7.2829, -7.2829, -7.2828, -7.2828, -7.2828, -7.2828,
        -7.2828], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2832, -7.2830, -7.2830, -7.2829, -7.2829, -7.2828, -7.2828, -7.2828,
        -7.2828, -7.2828], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 10 	 Li 	 Li 	 3.1516643308079573e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6799, -99.7029, -99.7126, -99.7183, -99.7222, -99.7250, -99.7270,
        -99.7285, -99.7295, -99.7302, -99.7307, -99.7311, -99.7314, -99.7316,
        -99.7317, -99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7319,
        -99.7320, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4319e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4319e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7319, -99.7320,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 5 	 F 	 F 	 8.696600223288942e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2986, -107.3041, -107.2650, -107.2541, -107.2472, -107.2432,
        -107.2411, -107.2402, -107.2398, -107.2397, -107.2397, -107.2399,
        -107.2402, -107.2405, -107.2408, -107.2412, -107.2415, -107.2418,
        -107.2421, -107.2423, -107.2425, -107.2426, -107.2427, -107.2428,
        -107.2429], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3615e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.4722, -7.4755, -7.4772, -7.4782, -7.4789, -7.4798, -7.4805,
        -7.4804, -7.4799, -7.4797, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9945e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2756e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6814, -99.7047, -99.7139, -99.7193, -99.7229, -99.7255, -99.7274,
        -99.7288, -99.7297, -99.7304, -99.7309, -99.7312, -99.7315, -99.7316,
        -99.7318, -99.7318, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1725e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2412, -107.2415, -107.2418, -107.2421, -107.2423, -107.2425,
        -107.2426, -107.2427, -107.2428, -107.2429], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7318, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 2 	 FLi 	 LiF 	 0.008568579796059596

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8410, -109.7779, -109.6949, -109.6358, -109.5966, -109.5697,
        -109.5511, -109.5382, -109.5292, -109.5230, -109.5187, -109.5157,
        -109.5136, -109.5121, -109.5111, -109.5104, -109.5099, -109.5095,
        -109.5093, -109.5091, -109.5090, -109.5089, -109.5089, -109.5088,
        -109.5088], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3349e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4121, -54.4768, -54.5111, -54.5319, -54.5463, -54.5566, -54.5640,
        -54.5692, -54.5730, -54.5757, -54.5775, -54.5789, -54.5798, -54.5804,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1777e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4119, -54.4764, -54.5108, -54.5317, -54.5461, -54.5565, -54.5639,
        -54.5692, -54.5730, -54.5756, -54.5775, -54.5788, -54.5798, -54.5804,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1804e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5104, -109.5099, -109.5095, -109.5093, -109.5091, -109.5090,
        -109.5089, -109.5089, -109.5088, -109.5088], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 1 	 N2 	 N2 	 8.487593427066545e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4739, -7.4766, -7.4779, -7.4787, -7.4795, -7.4803, -7.4805,
        -7.4801, -7.4798, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9925e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3820e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9853e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 7 	 Li 	 Li 	 7.613283240668075e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e16)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e16/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e16/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 16 || ,[' rho : 3.156665', ' ae : 54.650482', ' E : 1.513734'] ,|| total loss 41.141843 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3474, -0.4659, -0.4796, -0.4863, -0.4904, -0.4932, -0.4951, -0.4964,
        -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7842e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.8746e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5685e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 6 	 H 	 H 	 8.509906118151883e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2186, -107.2775, -107.2412, -107.2386, -107.2360, -107.2348,
        -107.2349, -107.2355, -107.2363, -107.2373, -107.2381, -107.2388,
        -107.2394, -107.2400, -107.2406, -107.2411, -107.2416, -107.2420,
        -107.2423, -107.2426, -107.2428, -107.2430, -107.2432, -107.2433,
        -107.2435], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3682e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4653, -7.4719, -7.4752, -7.4771, -7.4781, -7.4789, -7.4797, -7.4804,
        -7.4804, -7.4800, -7.4797, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9911e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3361e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6763, -99.6955, -99.7070, -99.7141, -99.7191, -99.7228, -99.7255,
        -99.7275, -99.7289, -99.7299, -99.7306, -99.7311, -99.7315, -99.7317,
        -99.7319, -99.7320, -99.7321, -99.7322, -99.7322, -99.7323, -99.7323,
        -99.7323, -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3607e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2411, -107.2416, -107.2420, -107.2423, -107.2426, -107.2428,
        -107.2430, -107.2432, -107.2433, -107.2435], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7320, -99.7321, -99.7322, -99.7322, -99.7323, -99.7323, -99.7323,
        -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 2 	 FLi 	 LiF 	 0.008551069455116479

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6764, -99.6955, -99.7070, -99.7142, -99.7192, -99.7229, -99.7256,
        -99.7276, -99.7290, -99.7300, -99.7307, -99.7312, -99.7316, -99.7318,
        -99.7320, -99.7321, -99.7322, -99.7323, -99.7323, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9742e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9742e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7321, -99.7322, -99.7323, -99.7323, -99.7324, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 5 	 F 	 F 	 5.173439573422359e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9660, -1.0918, -1.1243, -1.1410, -1.1516, -1.1587, -1.1636, -1.1671,
        -1.1695, -1.1711, -1.1723, -1.1731, -1.1737, -1.1741, -1.1744, -1.1746,
        -1.1747, -1.1748, -1.1749, -1.1749, -1.1750, -1.1750, -1.1750, -1.1750,
        -1.1750], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0102e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0204e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3263, -0.4604, -0.4765, -0.4843, -0.4891, -0.4922, -0.4944, -0.4959,
        -0.4970, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7824e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2707e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5852e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2204, -0.4296, -0.4593, -0.4732, -0.4816, -0.4871, -0.4909, -0.4935,
        -0.4953, -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7823e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.6701e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1746, -1.1747, -1.1748, -1.1749, -1.1749, -1.1750, -1.1750, -1.1750,
        -1.1750, -1.1750], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 0 	 H2 	 H2 	 8.605420349586176e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7690, -109.8784, -109.7470, -109.6707, -109.6212, -109.5873,
        -109.5638, -109.5474, -109.5359, -109.5279, -109.5223, -109.5184,
        -109.5157, -109.5138, -109.5125, -109.5115, -109.5109, -109.5104,
        -109.5101, -109.5099, -109.5097, -109.5096, -109.5095, -109.5095,
        -109.5094], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3307e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4110, -54.4722, -54.5076, -54.5293, -54.5444, -54.5553, -54.5631,
        -54.5687, -54.5726, -54.5755, -54.5775, -54.5789, -54.5798, -54.5805,
        -54.5810, -54.5814, -54.5816, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0122e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4312, -54.5016, -54.5295, -54.5456, -54.5563, -54.5639, -54.5692,
        -54.5731, -54.5758, -54.5777, -54.5790, -54.5799, -54.5806, -54.5811,
        -54.5814, -54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8168e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5115, -109.5109, -109.5104, -109.5101, -109.5099, -109.5097,
        -109.5096, -109.5095, -109.5095, -109.5094], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821, -54.5821,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 1 	 N2 	 N2 	 8.265887059593713e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4296, -54.5001, -54.5285, -54.5448, -54.5558, -54.5635, -54.5690,
        -54.5729, -54.5756, -54.5776, -54.5789, -54.5799, -54.5806, -54.5811,
        -54.5814, -54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8120e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8120e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821, -54.5821,
        -54.5821, -54.5821, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 8 	 N 	 N 	 1.1651410072131983e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7464, -37.7858, -37.8026, -37.8123, -37.8189, -37.8236, -37.8270,
        -37.8293, -37.8310, -37.8323, -37.8331, -37.8337, -37.8341, -37.8344,
        -37.8346, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6434, -37.5114, -37.4712, -37.4501, -37.4366, -37.4275, -37.4211,
        -37.4166, -37.4135, -37.4113, -37.4098, -37.4088, -37.4080, -37.4075,
        -37.4071, -37.4069, -37.4067, -37.4066, -37.4065, -37.4064, -37.4064,
        -37.4064, -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4069, -37.4067, -37.4066, -37.4065, -37.4064, -37.4064, -37.4064,
        -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 9 	 C 	 C 	 5.194577724997384e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4672, -7.4743, -7.4769, -7.4781, -7.4789, -7.4797, -7.4804, -7.4804,
        -7.4800, -7.4797, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4241, -7.3452, -7.3208, -7.3082, -7.3000, -7.2947, -7.2909, -7.2884,
        -7.2867, -7.2855, -7.2847, -7.2841, -7.2837, -7.2835, -7.2833, -7.2832,
        -7.2831, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829, -7.2829, -7.2829,
        -7.2829], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2832, -7.2831, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829, -7.2829,
        -7.2829, -7.2829], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 10 	 Li 	 Li 	 3.391827573993307e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9423, -93.5119, -93.4014, -93.3518, -93.3171, -93.2942, -93.2779,
        -93.2664, -93.2581, -93.2522, -93.2479, -93.2448, -93.2426, -93.2409,
        -93.2397, -93.2388, -93.2382, -93.2377, -93.2373, -93.2371, -93.2369,
        -93.2367, -93.2366, -93.2365, -93.2365], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8923e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7431, -37.7804, -37.7986, -37.8094, -37.8168, -37.8221, -37.8259,
        -37.8286, -37.8306, -37.8319, -37.8329, -37.8336, -37.8341, -37.8344,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2121e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4455, -54.5132, -54.5378, -54.5516, -54.5607, -54.5671, -54.5717,
        -54.5749, -54.5771, -54.5787, -54.5798, -54.5806, -54.5812, -54.5816,
        -54.5818, -54.5820, -54.5822, -54.5822, -54.5823, -54.5824, -54.5824,
        -54.5824, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4518e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2241, -0.4307, -0.4599, -0.4736, -0.4819, -0.4873, -0.4910, -0.4935,
        -0.4953, -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7811e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.6069e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2388, -93.2382, -93.2377, -93.2373, -93.2371, -93.2369, -93.2367,
        -93.2366, -93.2365, -93.2365], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5820, -54.5822, -54.5822, -54.5823, -54.5824, -54.5824, -54.5824,
        -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 3 	 CHN 	 CNH 	 0.007552377722616454

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4652, -7.4715, -7.4749, -7.4769, -7.4780, -7.4788, -7.4796, -7.4804,
        -7.4804, -7.4800, -7.4797, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9819e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3034e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9642e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 7 	 Li 	 Li 	 7.475983203235673e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7567, -37.7958, -37.8097, -37.8175, -37.8226, -37.8263, -37.8288,
        -37.8307, -37.8320, -37.8329, -37.8335, -37.8340, -37.8343, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2940e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2940e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 4 	 C 	 C 	 6.936678815462174e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e17)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e17/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e17/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 17 || ,[' rho : 3.148237', ' ae : 54.371098', ' E : 1.449470'] ,|| total loss 40.943339 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3218, -0.4592, -0.4758, -0.4838, -0.4887, -0.4920, -0.4943, -0.4958,
        -0.4969, -0.4976, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7766e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.5367e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5533e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 6 	 H 	 H 	 9.298130633934276e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9714, -1.0940, -1.1257, -1.1420, -1.1523, -1.1593, -1.1641, -1.1674,
        -1.1698, -1.1714, -1.1725, -1.1733, -1.1739, -1.1743, -1.1746, -1.1748,
        -1.1749, -1.1750, -1.1751, -1.1751, -1.1751, -1.1752, -1.1752, -1.1752,
        -1.1752], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0136e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0272e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2184, -0.4289, -0.4589, -0.4729, -0.4814, -0.4870, -0.4908, -0.4934,
        -0.4952, -0.4965, -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7755e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9794e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5782e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2848, -0.4491, -0.4701, -0.4801, -0.4862, -0.4903, -0.4931, -0.4950,
        -0.4963, -0.4972, -0.4979, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7755e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2931e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1748, -1.1749, -1.1750, -1.1751, -1.1751, -1.1751, -1.1752, -1.1752,
        -1.1752, -1.1752], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 0 	 H2 	 H2 	 1.0399112917252372e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4661, -7.4731, -7.4761, -7.4776, -7.4785, -7.4792, -7.4801, -7.4805,
        -7.4802, -7.4798, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4367, -7.3525, -7.3255, -7.3114, -7.3023, -7.2962, -7.2920, -7.2891,
        -7.2872, -7.2858, -7.2849, -7.2843, -7.2838, -7.2836, -7.2833, -7.2832,
        -7.2831, -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829,
        -7.2829], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2832, -7.2831, -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829,
        -7.2829, -7.2829], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 10 	 Li 	 Li 	 3.604879953582264e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8456, -109.7712, -109.6918, -109.6340, -109.5955, -109.5691,
        -109.5509, -109.5383, -109.5295, -109.5234, -109.5192, -109.5163,
        -109.5142, -109.5128, -109.5118, -109.5111, -109.5106, -109.5103,
        -109.5100, -109.5099, -109.5098, -109.5097, -109.5096, -109.5096,
        -109.5096], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3249e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4115, -54.4739, -54.5089, -54.5302, -54.5451, -54.5557, -54.5634,
        -54.5688, -54.5727, -54.5755, -54.5774, -54.5788, -54.5798, -54.5804,
        -54.5809, -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1279e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4445, -54.5123, -54.5371, -54.5509, -54.5602, -54.5666, -54.5712,
        -54.5744, -54.5767, -54.5783, -54.5794, -54.5802, -54.5807, -54.5811,
        -54.5814, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8862e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5111, -109.5106, -109.5103, -109.5100, -109.5099, -109.5098,
        -109.5097, -109.5096, -109.5096, -109.5096], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5816, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 1 	 N2 	 N2 	 7.977024395399577e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6818, -99.7049, -99.7142, -99.7196, -99.7233, -99.7260, -99.7279,
        -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7320, -99.7322,
        -99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2594e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2594e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325, -99.7325,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 5 	 F 	 F 	 4.2112360518486754e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7487, -37.7885, -37.8045, -37.8136, -37.8198, -37.8242, -37.8273,
        -37.8295, -37.8311, -37.8322, -37.8330, -37.8335, -37.8339, -37.8342,
        -37.8344, -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7232, -37.5539, -37.4976, -37.4679, -37.4488, -37.4359, -37.4269,
        -37.4206, -37.4162, -37.4132, -37.4111, -37.4096, -37.4085, -37.4078,
        -37.4073, -37.4069, -37.4067, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4062, -37.4062, -37.4062, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4069, -37.4067, -37.4065, -37.4064, -37.4063, -37.4063, -37.4062,
        -37.4062, -37.4062, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 9 	 C 	 C 	 5.1285686302960366e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2889, -107.3024, -107.2631, -107.2534, -107.2470, -107.2434,
        -107.2415, -107.2408, -107.2407, -107.2407, -107.2409, -107.2412,
        -107.2415, -107.2419, -107.2423, -107.2427, -107.2431, -107.2434,
        -107.2437, -107.2439, -107.2441, -107.2443, -107.2444, -107.2445,
        -107.2446], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3771e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4751, -7.4774, -7.4784, -7.4791, -7.4800, -7.4805, -7.4802,
        -7.4798, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9568e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2017e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6767, -99.6958, -99.7072, -99.7143, -99.7193, -99.7230, -99.7257,
        -99.7276, -99.7290, -99.7300, -99.7307, -99.7312, -99.7316, -99.7319,
        -99.7320, -99.7322, -99.7322, -99.7323, -99.7324, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9016e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2427, -107.2431, -107.2434, -107.2437, -107.2439, -107.2441,
        -107.2443, -107.2444, -107.2445, -107.2446], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7322, -99.7322, -99.7323, -99.7324, -99.7324, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 2 	 FLi 	 LiF 	 0.008453328556177007

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7618, -37.7993, -37.8121, -37.8191, -37.8237, -37.8270, -37.8293,
        -37.8309, -37.8321, -37.8329, -37.8334, -37.8339, -37.8341, -37.8343,
        -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5949e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5949e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8346, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 4 	 C 	 C 	 7.626609823194697e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9456, -93.5132, -93.4020, -93.3522, -93.3173, -93.2944, -93.2780,
        -93.2665, -93.2582, -93.2523, -93.2480, -93.2449, -93.2426, -93.2410,
        -93.2398, -93.2389, -93.2383, -93.2378, -93.2374, -93.2372, -93.2370,
        -93.2368, -93.2367, -93.2366, -93.2366], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8613e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7416, -37.7768, -37.7958, -37.8072, -37.8151, -37.8207, -37.8248,
        -37.8277, -37.8298, -37.8313, -37.8323, -37.8331, -37.8336, -37.8340,
        -37.8342, -37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7010e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4179, -54.4869, -54.5187, -54.5376, -54.5504, -54.5596, -54.5661,
        -54.5708, -54.5741, -54.5764, -54.5780, -54.5792, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1578e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2299, -0.4326, -0.4609, -0.4742, -0.4823, -0.4876, -0.4912, -0.4936,
        -0.4954, -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7691e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.8714e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2389, -93.2383, -93.2378, -93.2374, -93.2372, -93.2370, -93.2368,
        -93.2367, -93.2366, -93.2366], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 3 	 CHN 	 CNH 	 0.00746070572550431

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4116, -54.4744, -54.5092, -54.5304, -54.5451, -54.5557, -54.5633,
        -54.5687, -54.5726, -54.5753, -54.5772, -54.5786, -54.5796, -54.5802,
        -54.5807, -54.5810, -54.5813, -54.5814, -54.5815, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3829e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3829e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5813, -54.5814, -54.5815, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 8 	 N 	 N 	 1.2979758012290869e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4741, -7.4767, -7.4780, -7.4788, -7.4796, -7.4804, -7.4804,
        -7.4800, -7.4797, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9482e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2195e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8968e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 7 	 Li 	 Li 	 7.258139869729506e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e18)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e18/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e18/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 18 || ,[' rho : 3.142792', ' ae : 54.051048', ' E : 1.514950'] ,|| total loss 40.722521 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4690, -7.4757, -7.4777, -7.4786, -7.4794, -7.4802, -7.4805, -7.4801,
        -7.4798, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9484e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2834e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8971e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 7 	 Li 	 Li 	 7.377668503696702e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0034, -93.5378, -93.4151, -93.3621, -93.3240, -93.2992, -93.2815,
        -93.2690, -93.2601, -93.2537, -93.2491, -93.2457, -93.2433, -93.2416,
        -93.2403, -93.2393, -93.2386, -93.2381, -93.2378, -93.2375, -93.2373,
        -93.2371, -93.2370, -93.2369, -93.2368], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8477e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7472, -37.7867, -37.8032, -37.8126, -37.8190, -37.8236, -37.8268,
        -37.8291, -37.8308, -37.8320, -37.8328, -37.8334, -37.8338, -37.8341,
        -37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7634e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4192, -54.4886, -54.5200, -54.5385, -54.5510, -54.5600, -54.5663,
        -54.5709, -54.5741, -54.5763, -54.5780, -54.5791, -54.5799, -54.5804,
        -54.5808, -54.5811, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3496e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2763, -0.4466, -0.4687, -0.4792, -0.4856, -0.4898, -0.4927, -0.4947,
        -0.4961, -0.4971, -0.4978, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7639e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.8928e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2393, -93.2386, -93.2381, -93.2378, -93.2375, -93.2373, -93.2371,
        -93.2370, -93.2369, -93.2368], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5811, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 3 	 CHN 	 CNH 	 0.00741259823239025

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7640, -37.8007, -37.8129, -37.8196, -37.8241, -37.8272, -37.8293,
        -37.8309, -37.8320, -37.8328, -37.8333, -37.8337, -37.8340, -37.8341,
        -37.8343, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6439, -37.5114, -37.4711, -37.4499, -37.4364, -37.4272, -37.4208,
        -37.4163, -37.4132, -37.4110, -37.4095, -37.4084, -37.4077, -37.4072,
        -37.4068, -37.4065, -37.4064, -37.4062, -37.4061, -37.4061, -37.4060,
        -37.4060, -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4064, -37.4062, -37.4061, -37.4061, -37.4060, -37.4060,
        -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 9 	 C 	 C 	 5.075870039267717e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6760, -99.6953, -99.7066, -99.7136, -99.7186, -99.7222, -99.7249,
        -99.7268, -99.7282, -99.7292, -99.7299, -99.7304, -99.7307, -99.7310,
        -99.7312, -99.7313, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6508e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.6508e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7313, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 5 	 F 	 F 	 1.28460386719719e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2865, -107.3019, -107.2620, -107.2525, -107.2462, -107.2427,
        -107.2408, -107.2401, -107.2399, -107.2400, -107.2402, -107.2405,
        -107.2408, -107.2412, -107.2417, -107.2421, -107.2424, -107.2428,
        -107.2430, -107.2433, -107.2435, -107.2437, -107.2438, -107.2439,
        -107.2440], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3694e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4683, -7.4752, -7.4774, -7.4784, -7.4791, -7.4800, -7.4805, -7.4802,
        -7.4798, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9244e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1699e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6779, -99.7001, -99.7103, -99.7164, -99.7206, -99.7237, -99.7259,
        -99.7275, -99.7286, -99.7294, -99.7300, -99.7304, -99.7307, -99.7309,
        -99.7310, -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6723e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2421, -107.2424, -107.2428, -107.2430, -107.2433, -107.2435,
        -107.2437, -107.2438, -107.2439, -107.2440], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 2 	 FLi 	 LiF 	 0.008406708980342485

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9695, -1.0934, -1.1255, -1.1419, -1.1524, -1.1594, -1.1643, -1.1677,
        -1.1701, -1.1717, -1.1729, -1.1737, -1.1743, -1.1747, -1.1749, -1.1751,
        -1.1753, -1.1754, -1.1754, -1.1755, -1.1755, -1.1755, -1.1755, -1.1755,
        -1.1756], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0278e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0556e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2397, -0.4356, -0.4626, -0.4752, -0.4829, -0.4880, -0.4915, -0.4938,
        -0.4955, -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7550e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.1629e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5656e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3480, -0.4659, -0.4796, -0.4863, -0.4904, -0.4931, -0.4950, -0.4963,
        -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7551e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8680e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1751, -1.1753, -1.1754, -1.1754, -1.1755, -1.1755, -1.1755, -1.1755,
        -1.1755, -1.1756], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 0 	 H2 	 H2 	 1.5867656389722133e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2569, -0.4409, -0.4655, -0.4771, -0.4842, -0.4889, -0.4920, -0.4942,
        -0.4958, -0.4968, -0.4976, -0.4981, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7531e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7825e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5063e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 6 	 H 	 H 	 1.198013267389876e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7026, -109.9104, -109.7621, -109.6803, -109.6274, -109.5913,
        -109.5662, -109.5486, -109.5364, -109.5278, -109.5218, -109.5176,
        -109.5146, -109.5126, -109.5111, -109.5101, -109.5094, -109.5089,
        -109.5086, -109.5083, -109.5082, -109.5081, -109.5080, -109.5079,
        -109.5079], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3135e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4106, -54.4721, -54.5072, -54.5287, -54.5436, -54.5543, -54.5620,
        -54.5675, -54.5715, -54.5742, -54.5762, -54.5776, -54.5786, -54.5792,
        -54.5797, -54.5801, -54.5803, -54.5805, -54.5806, -54.5807, -54.5807,
        -54.5808, -54.5808, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5034e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4434, -54.5111, -54.5359, -54.5497, -54.5589, -54.5654, -54.5699,
        -54.5732, -54.5755, -54.5771, -54.5782, -54.5790, -54.5795, -54.5799,
        -54.5802, -54.5804, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808,
        -54.5808, -54.5808, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2306e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5101, -109.5094, -109.5089, -109.5086, -109.5083, -109.5082,
        -109.5081, -109.5080, -109.5079, -109.5079], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5804, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808, -54.5808,
        -54.5808, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 1 	 N2 	 N2 	 7.366496265892273e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4728, -7.4759, -7.4775, -7.4784, -7.4791, -7.4800, -7.4804,
        -7.4801, -7.4797, -7.4795, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4639, -7.3711, -7.3378, -7.3197, -7.3081, -7.3002, -7.2948, -7.2910,
        -7.2885, -7.2867, -7.2855, -7.2847, -7.2841, -7.2838, -7.2835, -7.2833,
        -7.2832, -7.2831, -7.2831, -7.2830, -7.2830, -7.2830, -7.2830, -7.2830,
        -7.2829], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2833, -7.2832, -7.2831, -7.2831, -7.2830, -7.2830, -7.2830, -7.2830,
        -7.2830, -7.2829], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 10 	 Li 	 Li 	 4.365027177107476e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7593, -37.7973, -37.8104, -37.8176, -37.8224, -37.8258, -37.8282,
        -37.8299, -37.8311, -37.8319, -37.8325, -37.8330, -37.8333, -37.8335,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7314e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7314e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 4 	 C 	 C 	 1.0075325257101767e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4244, -54.4945, -54.5240, -54.5411, -54.5527, -54.5608, -54.5666,
        -54.5707, -54.5737, -54.5757, -54.5772, -54.5782, -54.5789, -54.5794,
        -54.5798, -54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805,
        -54.5805, -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6300e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6300e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805, -54.5805,
        -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 8 	 N 	 N 	 1.7410837284283577e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e19)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e19/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e19/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 19 || ,[' rho : 3.136789', ' ae : 53.894480', ' E : 1.693117'] ,|| total loss 40.609420 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7599, -37.7978, -37.8107, -37.8179, -37.8227, -37.8260, -37.8284,
        -37.8300, -37.8312, -37.8321, -37.8326, -37.8331, -37.8334, -37.8336,
        -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6181, -37.4986, -37.4629, -37.4443, -37.4324, -37.4243, -37.4186,
        -37.4147, -37.4119, -37.4100, -37.4087, -37.4077, -37.4071, -37.4066,
        -37.4063, -37.4061, -37.4059, -37.4058, -37.4057, -37.4057, -37.4056,
        -37.4056, -37.4056, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4061, -37.4059, -37.4058, -37.4057, -37.4057, -37.4056, -37.4056,
        -37.4056, -37.4056, -37.4056], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 9 	 C 	 C 	 4.974452126528909e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3001, -0.4533, -0.4724, -0.4816, -0.4872, -0.4909, -0.4935, -0.4952,
        -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7472e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0356e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4944e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 6 	 H 	 H 	 1.2537995099209902e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9851, -1.0997, -1.1294, -1.1447, -1.1543, -1.1608, -1.1653, -1.1685,
        -1.1707, -1.1722, -1.1733, -1.1740, -1.1746, -1.1749, -1.1752, -1.1754,
        -1.1755, -1.1756, -1.1756, -1.1757, -1.1757, -1.1757, -1.1757, -1.1758,
        -1.1758], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0396e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0792e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3096, -0.4559, -0.4739, -0.4825, -0.4878, -0.4914, -0.4938, -0.4954,
        -0.4966, -0.4974, -0.4980, -0.4984, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7470e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.8492e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5734e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2137, -0.4272, -0.4579, -0.4723, -0.4809, -0.4866, -0.4905, -0.4932,
        -0.4950, -0.4963, -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7469e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2608e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1754, -1.1755, -1.1756, -1.1756, -1.1757, -1.1757, -1.1757, -1.1757,
        -1.1758, -1.1758], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 0 	 H2 	 H2 	 1.9543584204785184e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7531, -37.7925, -37.8071, -37.8154, -37.8209, -37.8248, -37.8275,
        -37.8295, -37.8309, -37.8319, -37.8326, -37.8331, -37.8334, -37.8336,
        -37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8341, -37.8342,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3954e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3954e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8339, -37.8340, -37.8341, -37.8341, -37.8341, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 4 	 C 	 C 	 9.28771107142716e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9309, -109.4504, -109.5313, -109.5289, -109.5220, -109.5169,
        -109.5136, -109.5116, -109.5103, -109.5096, -109.5091, -109.5089,
        -109.5087, -109.5086, -109.5086, -109.5085, -109.5085, -109.5085,
        -109.5085, -109.5085, -109.5085, -109.5085, -109.5085, -109.5085,
        -109.5085], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3107e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4169, -54.4853, -54.5173, -54.5363, -54.5493, -54.5585, -54.5651,
        -54.5698, -54.5731, -54.5755, -54.5771, -54.5783, -54.5791, -54.5797,
        -54.5801, -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1341e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4846, -54.5168, -54.5359, -54.5490, -54.5583, -54.5649,
        -54.5697, -54.5730, -54.5754, -54.5771, -54.5783, -54.5791, -54.5797,
        -54.5801, -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1396e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5085, -109.5085, -109.5085, -109.5085, -109.5085, -109.5085,
        -109.5085, -109.5085, -109.5085, -109.5085], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 1 	 N2 	 N2 	 7.244920059339492e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4657, -7.4721, -7.4754, -7.4773, -7.4783, -7.4790, -7.4798, -7.4805,
        -7.4805, -7.4800, -7.4797, -7.4796, -7.4797, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4177, -7.3417, -7.3187, -7.3068, -7.2992, -7.2941, -7.2906, -7.2883,
        -7.2866, -7.2855, -7.2848, -7.2842, -7.2839, -7.2836, -7.2835, -7.2834,
        -7.2833, -7.2832, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831, -7.2831,
        -7.2831], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2834, -7.2833, -7.2832, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831,
        -7.2831, -7.2831], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 10 	 Li 	 Li 	 4.461419454791421e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2162, -107.2789, -107.2414, -107.2391, -107.2368, -107.2358,
        -107.2360, -107.2366, -107.2375, -107.2384, -107.2392, -107.2400,
        -107.2407, -107.2413, -107.2419, -107.2425, -107.2430, -107.2434,
        -107.2438, -107.2441, -107.2444, -107.2446, -107.2448, -107.2449,
        -107.2451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3785e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4675, -7.4746, -7.4771, -7.4783, -7.4790, -7.4799, -7.4806, -7.4805,
        -7.4800, -7.4798, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9075e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6385e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6831, -99.7060, -99.7148, -99.7198, -99.7232, -99.7256, -99.7273,
        -99.7286, -99.7295, -99.7301, -99.7305, -99.7309, -99.7311, -99.7312,
        -99.7313, -99.7314, -99.7315, -99.7315, -99.7315, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1602e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2425, -107.2430, -107.2434, -107.2438, -107.2441, -107.2444,
        -107.2446, -107.2448, -107.2449, -107.2451], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7314, -99.7315, -99.7315, -99.7315, -99.7316, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 2 	 FLi 	 LiF 	 0.008352292475358946

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6792, -99.7016, -99.7115, -99.7174, -99.7215, -99.7244, -99.7265,
        -99.7281, -99.7291, -99.7299, -99.7305, -99.7308, -99.7311, -99.7313,
        -99.7315, -99.7315, -99.7316, -99.7317, -99.7317, -99.7317, -99.7317,
        -99.7317, -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.4442e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4442e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7315, -99.7316, -99.7317, -99.7317, -99.7317, -99.7317, -99.7317,
        -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 5 	 F 	 F 	 1.0762345681175131e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9860, -93.5309, -93.4118, -93.3600, -93.3229, -93.2988, -93.2816,
        -93.2695, -93.2608, -93.2546, -93.2501, -93.2469, -93.2445, -93.2428,
        -93.2416, -93.2407, -93.2400, -93.2395, -93.2392, -93.2389, -93.2387,
        -93.2386, -93.2385, -93.2384, -93.2383], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7948e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7627, -37.7998, -37.8123, -37.8192, -37.8237, -37.8269, -37.8292,
        -37.8308, -37.8319, -37.8327, -37.8333, -37.8337, -37.8339, -37.8341,
        -37.8343, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8663e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4438, -54.5115, -54.5364, -54.5503, -54.5595, -54.5660, -54.5705,
        -54.5738, -54.5760, -54.5777, -54.5788, -54.5796, -54.5801, -54.5805,
        -54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5242e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2958, -0.4521, -0.4717, -0.4811, -0.4869, -0.4907, -0.4933, -0.4951,
        -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7468e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1301e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2407, -93.2400, -93.2395, -93.2392, -93.2389, -93.2387, -93.2386,
        -93.2385, -93.2384, -93.2383], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 3 	 CHN 	 CNH 	 0.007253351127891753

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4210, -54.4906, -54.5213, -54.5394, -54.5516, -54.5603, -54.5665,
        -54.5709, -54.5740, -54.5762, -54.5777, -54.5788, -54.5796, -54.5801,
        -54.5805, -54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813,
        -54.5813, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7104e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7104e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5813,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 8 	 N 	 N 	 1.4369663146987345e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4675, -7.4746, -7.4772, -7.4784, -7.4791, -7.4799, -7.4806, -7.4806,
        -7.4801, -7.4798, -7.4797, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9088e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9468e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8180e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 7 	 Li 	 Li 	 8.876804518343523e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e20)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e20/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e20/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 20 || ,[' rho : 3.128805', ' ae : 53.523121', ' E : 1.650116'] ,|| total loss 40.350687 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1836, -93.6118, -93.4540, -93.3917, -93.3442, -93.3143, -93.2927,
        -93.2775, -93.2667, -93.2590, -93.2534, -93.2494, -93.2465, -93.2444,
        -93.2429, -93.2417, -93.2409, -93.2403, -93.2399, -93.2396, -93.2393,
        -93.2392, -93.2390, -93.2389, -93.2389], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7904e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7600, -37.7980, -37.8111, -37.8183, -37.8231, -37.8265, -37.8289,
        -37.8306, -37.8318, -37.8326, -37.8332, -37.8337, -37.8340, -37.8342,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7859e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4337, -54.5034, -54.5306, -54.5462, -54.5566, -54.5639, -54.5691,
        -54.5727, -54.5753, -54.5772, -54.5785, -54.5794, -54.5800, -54.5805,
        -54.5808, -54.5810, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4949e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3370, -0.4631, -0.4780, -0.4852, -0.4896, -0.4926, -0.4946, -0.4960,
        -0.4970, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7443e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.4529e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2417, -93.2409, -93.2403, -93.2399, -93.2396, -93.2393, -93.2392,
        -93.2390, -93.2389, -93.2389], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 3 	 CHN 	 CNH 	 0.0072168272429035145

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6846, -99.7073, -99.7158, -99.7206, -99.7239, -99.7262, -99.7279,
        -99.7291, -99.7299, -99.7305, -99.7309, -99.7312, -99.7314, -99.7316,
        -99.7317, -99.7318, -99.7318, -99.7318, -99.7319, -99.7319, -99.7319,
        -99.7319, -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5574e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5574e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7318, -99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7319,
        -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 5 	 F 	 F 	 9.197409599120565e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4719, -7.4753, -7.4773, -7.4784, -7.4791, -7.4799, -7.4806,
        -7.4807, -7.4802, -7.4799, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9031e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1179e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8066e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 7 	 Li 	 Li 	 9.297531712334913e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7532, -37.7926, -37.8073, -37.8155, -37.8211, -37.8250, -37.8278,
        -37.8297, -37.8311, -37.8321, -37.8328, -37.8333, -37.8337, -37.8339,
        -37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0351e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0351e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 4 	 C 	 C 	 8.50672222303346e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4182, -54.4868, -54.5184, -54.5372, -54.5499, -54.5590, -54.5655,
        -54.5701, -54.5734, -54.5757, -54.5774, -54.5785, -54.5793, -54.5799,
        -54.5803, -54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811,
        -54.5811, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9543e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9543e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 8 	 N 	 N 	 1.5076576003187305e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4670, -7.4739, -7.4768, -7.4782, -7.4790, -7.4797, -7.4806, -7.4808,
        -7.4804, -7.4801, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4801,
        -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4172, -7.3415, -7.3187, -7.3069, -7.2993, -7.2943, -7.2909, -7.2885,
        -7.2869, -7.2858, -7.2851, -7.2845, -7.2842, -7.2839, -7.2838, -7.2837,
        -7.2836, -7.2835, -7.2835, -7.2835, -7.2835, -7.2835, -7.2834, -7.2834,
        -7.2834], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4802,
        -7.4802, -7.4802], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2837, -7.2836, -7.2835, -7.2835, -7.2835, -7.2835, -7.2835, -7.2834,
        -7.2834, -7.2834], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 10 	 Li 	 Li 	 4.836073640420153e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9122, -109.5492, -109.5804, -109.5610, -109.5447, -109.5333,
        -109.5256, -109.5204, -109.5170, -109.5146, -109.5131, -109.5120,
        -109.5113, -109.5108, -109.5105, -109.5103, -109.5101, -109.5100,
        -109.5100, -109.5099, -109.5099, -109.5098, -109.5098, -109.5098,
        -109.5098], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3065e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4556, -54.5198, -54.5420, -54.5543, -54.5624, -54.5680, -54.5720,
        -54.5748, -54.5768, -54.5782, -54.5791, -54.5798, -54.5803, -54.5807,
        -54.5809, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4901e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4500, -54.5160, -54.5394, -54.5524, -54.5611, -54.5671, -54.5713,
        -54.5743, -54.5764, -54.5779, -54.5790, -54.5797, -54.5802, -54.5806,
        -54.5809, -54.5810, -54.5812, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5092e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5103, -109.5101, -109.5100, -109.5100, -109.5099, -109.5099,
        -109.5098, -109.5098, -109.5098, -109.5098], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5812, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 1 	 N2 	 N2 	 6.808276721459318e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3404, -0.4640, -0.4785, -0.4855, -0.4898, -0.4927, -0.4947, -0.4961,
        -0.4970, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7375e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7018e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4751e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 6 	 H 	 H 	 1.3664934565655308e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7438, -37.7813, -37.7992, -37.8097, -37.8169, -37.8221, -37.8258,
        -37.8284, -37.8303, -37.8316, -37.8326, -37.8333, -37.8337, -37.8341,
        -37.8343, -37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6612, -37.5204, -37.4769, -37.4540, -37.4394, -37.4294, -37.4225,
        -37.4176, -37.4143, -37.4119, -37.4103, -37.4091, -37.4083, -37.4077,
        -37.4073, -37.4071, -37.4069, -37.4067, -37.4066, -37.4066, -37.4065,
        -37.4065, -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4071, -37.4069, -37.4067, -37.4066, -37.4066, -37.4065, -37.4065,
        -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 9 	 C 	 C 	 4.9105582986702755e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3118, -107.3140, -107.2724, -107.2606, -107.2531, -107.2487,
        -107.2461, -107.2448, -107.2442, -107.2438, -107.2438, -107.2439,
        -107.2441, -107.2444, -107.2448, -107.2452, -107.2455, -107.2458,
        -107.2461, -107.2463, -107.2465, -107.2467, -107.2468, -107.2469,
        -107.2470], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3900e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4678, -7.4748, -7.4774, -7.4787, -7.4794, -7.4802, -7.4809, -7.4809,
        -7.4805, -7.4802, -7.4801, -7.4801, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8982e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2979e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6780, -99.6990, -99.7097, -99.7161, -99.7207, -99.7239, -99.7263,
        -99.7280, -99.7293, -99.7302, -99.7308, -99.7312, -99.7315, -99.7318,
        -99.7319, -99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322,
        -99.7322, -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4121e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2452, -107.2455, -107.2458, -107.2461, -107.2463, -107.2465,
        -107.2467, -107.2468, -107.2469, -107.2470], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322, -99.7322,
        -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 2 	 FLi 	 LiF 	 0.008267957987262556

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0210, -1.1143, -1.1387, -1.1511, -1.1590, -1.1643, -1.1680, -1.1706,
        -1.1724, -1.1736, -1.1745, -1.1751, -1.1755, -1.1758, -1.1760, -1.1762,
        -1.1763, -1.1764, -1.1764, -1.1764, -1.1765, -1.1765, -1.1765, -1.1765,
        -1.1765], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1118e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2236e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2521, -0.4393, -0.4646, -0.4765, -0.4838, -0.4886, -0.4918, -0.4941,
        -0.4956, -0.4967, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7362e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6518e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6962e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2526, -0.4395, -0.4647, -0.4766, -0.4838, -0.4886, -0.4918, -0.4941,
        -0.4956, -0.4967, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7362e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6389e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1762, -1.1763, -1.1764, -1.1764, -1.1764, -1.1765, -1.1765, -1.1765,
        -1.1765, -1.1765], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 0 	 H2 	 H2 	 3.2232976525565515e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e21)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e21/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e21/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 21 || ,[' rho : 3.129574', ' ae : 53.310838', ' E : 1.603192'] ,|| total loss 40.211106 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0668, -1.1327, -1.1499, -1.1587, -1.1642, -1.1679, -1.1705, -1.1723,
        -1.1736, -1.1745, -1.1751, -1.1755, -1.1758, -1.1761, -1.1762, -1.1763,
        -1.1764, -1.1764, -1.1765, -1.1765, -1.1765, -1.1765, -1.1765, -1.1765,
        -1.1765], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1130e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2261e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3276, -0.4607, -0.4766, -0.4843, -0.4890, -0.4921, -0.4943, -0.4958,
        -0.4968, -0.4976, -0.4981, -0.4984, -0.4987, -0.4988, -0.4990, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7356e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0105e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6973e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3092, -0.4557, -0.4738, -0.4825, -0.4878, -0.4913, -0.4937, -0.4954,
        -0.4965, -0.4974, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7355e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.3627e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1763, -1.1764, -1.1764, -1.1765, -1.1765, -1.1765, -1.1765, -1.1765,
        -1.1765, -1.1765], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 0 	 H2 	 H2 	 3.262562590738316e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9465, -93.5152, -93.4042, -93.3549, -93.3202, -93.2975, -93.2813,
        -93.2699, -93.2618, -93.2559, -93.2518, -93.2487, -93.2465, -93.2450,
        -93.2438, -93.2430, -93.2423, -93.2419, -93.2415, -93.2413, -93.2411,
        -93.2410, -93.2409, -93.2408, -93.2407], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7489e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7548, -37.7940, -37.8083, -37.8164, -37.8219, -37.8257, -37.8284,
        -37.8303, -37.8316, -37.8326, -37.8333, -37.8338, -37.8341, -37.8343,
        -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5126e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4335, -54.5031, -54.5305, -54.5461, -54.5565, -54.5639, -54.5691,
        -54.5728, -54.5755, -54.5773, -54.5786, -54.5795, -54.5802, -54.5806,
        -54.5809, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3333e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3292, -0.4611, -0.4768, -0.4844, -0.4891, -0.4922, -0.4943, -0.4958,
        -0.4969, -0.4976, -0.4981, -0.4984, -0.4987, -0.4988, -0.4990, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7347e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0165e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2430, -93.2423, -93.2419, -93.2415, -93.2413, -93.2411, -93.2410,
        -93.2409, -93.2408, -93.2407], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 3 	 CHN 	 CNH 	 0.0070937077099829885

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6846, -99.7073, -99.7158, -99.7207, -99.7240, -99.7263, -99.7280,
        -99.7292, -99.7301, -99.7307, -99.7311, -99.7314, -99.7316, -99.7318,
        -99.7319, -99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7918e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7918e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 5 	 F 	 F 	 7.559694213836862e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3451, -0.4652, -0.4791, -0.4859, -0.4901, -0.4929, -0.4948, -0.4962,
        -0.4971, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7304e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.9172e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4609e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 6 	 H 	 H 	 1.4541522107039004e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7429, -37.7793, -37.7976, -37.8085, -37.8160, -37.8213, -37.8252,
        -37.8279, -37.8299, -37.8313, -37.8323, -37.8329, -37.8334, -37.8338,
        -37.8340, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9822e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9822e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 4 	 C 	 C 	 8.214283247075908e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7811, -37.7989, -37.8095, -37.8167, -37.8218, -37.8255,
        -37.8282, -37.8301, -37.8314, -37.8323, -37.8330, -37.8335, -37.8338,
        -37.8340, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6316, -37.5055, -37.4675, -37.4476, -37.4349, -37.4262, -37.4202,
        -37.4160, -37.4131, -37.4110, -37.4096, -37.4086, -37.4079, -37.4074,
        -37.4071, -37.4068, -37.4067, -37.4065, -37.4065, -37.4064, -37.4064,
        -37.4063, -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4068, -37.4067, -37.4065, -37.4065, -37.4064, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 9 	 C 	 C 	 4.849275378302918e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4737, -7.4767, -7.4783, -7.4791, -7.4798, -7.4806, -7.4810,
        -7.4807, -7.4803, -7.4801, -7.4800, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8723e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2104e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7452e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 7 	 Li 	 Li 	 1.170531664031811e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3309, -107.3193, -107.2780, -107.2644, -107.2560, -107.2508,
        -107.2478, -107.2460, -107.2449, -107.2443, -107.2441, -107.2440,
        -107.2442, -107.2445, -107.2448, -107.2451, -107.2454, -107.2457,
        -107.2459, -107.2461, -107.2463, -107.2465, -107.2466, -107.2467,
        -107.2468], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3862e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4702, -7.4766, -7.4785, -7.4793, -7.4800, -7.4809, -7.4810, -7.4805,
        -7.4802, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802, -7.4802, -7.4802,
        -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8690e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2374e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6870, -99.7091, -99.7169, -99.7213, -99.7243, -99.7264, -99.7279,
        -99.7289, -99.7297, -99.7302, -99.7306, -99.7309, -99.7311, -99.7312,
        -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5755e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2451, -107.2454, -107.2457, -107.2459, -107.2461, -107.2463,
        -107.2465, -107.2466, -107.2467, -107.2468], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 2 	 FLi 	 LiF 	 0.008219800389936268

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8629, -109.7212, -109.6662, -109.6170, -109.5835, -109.5607,
        -109.5449, -109.5340, -109.5265, -109.5213, -109.5177, -109.5152,
        -109.5134, -109.5122, -109.5114, -109.5108, -109.5104, -109.5101,
        -109.5099, -109.5098, -109.5097, -109.5096, -109.5096, -109.5095,
        -109.5095], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2998e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4384, -54.5071, -54.5331, -54.5478, -54.5576, -54.5645, -54.5694,
        -54.5728, -54.5752, -54.5770, -54.5782, -54.5790, -54.5796, -54.5801,
        -54.5803, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0342e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4255, -54.4954, -54.5247, -54.5417, -54.5532, -54.5613, -54.5671,
        -54.5712, -54.5741, -54.5762, -54.5776, -54.5786, -54.5794, -54.5799,
        -54.5802, -54.5805, -54.5806, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1066e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5108, -109.5104, -109.5101, -109.5099, -109.5098, -109.5097,
        -109.5096, -109.5096, -109.5095, -109.5095], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5805, -54.5806, -54.5808, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 1 	 N2 	 N2 	 6.344948982030141e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4696, -7.4762, -7.4783, -7.4791, -7.4798, -7.4807, -7.4810, -7.4806,
        -7.4802, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4143, -7.3400, -7.3178, -7.3063, -7.2990, -7.2942, -7.2908, -7.2886,
        -7.2870, -7.2859, -7.2852, -7.2847, -7.2843, -7.2841, -7.2840, -7.2838,
        -7.2838, -7.2837, -7.2837, -7.2837, -7.2836, -7.2836, -7.2836, -7.2836,
        -7.2836], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2838, -7.2838, -7.2837, -7.2837, -7.2837, -7.2836, -7.2836, -7.2836,
        -7.2836, -7.2836], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 10 	 Li 	 Li 	 5.372420633033694e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4245, -54.4943, -54.5239, -54.5411, -54.5527, -54.5609, -54.5668,
        -54.5709, -54.5739, -54.5760, -54.5774, -54.5785, -54.5792, -54.5797,
        -54.5801, -54.5803, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808,
        -54.5808, -54.5808, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2864e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2864e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5803, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808, -54.5808,
        -54.5808, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 8 	 N 	 N 	 1.6295319707000005e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e22)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e22/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e22/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 22 || ,[' rho : 3.120906', ' ae : 53.010859', ' E : 1.639845'] ,|| total loss 39.998795 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4683, -7.4752, -7.4777, -7.4788, -7.4795, -7.4803, -7.4809, -7.4808,
        -7.4803, -7.4801, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4308, -7.3492, -7.3236, -7.3103, -7.3017, -7.2960, -7.2921, -7.2894,
        -7.2876, -7.2863, -7.2855, -7.2849, -7.2845, -7.2842, -7.2840, -7.2839,
        -7.2838, -7.2837, -7.2837, -7.2837, -7.2837, -7.2836, -7.2836, -7.2836,
        -7.2836], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2839, -7.2838, -7.2837, -7.2837, -7.2837, -7.2837, -7.2836, -7.2836,
        -7.2836, -7.2836], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 10 	 Li 	 Li 	 5.458937944475177e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9303, -93.5081, -93.4003, -93.3519, -93.3182, -93.2960, -93.2803,
        -93.2692, -93.2613, -93.2556, -93.2515, -93.2486, -93.2465, -93.2449,
        -93.2438, -93.2430, -93.2424, -93.2420, -93.2416, -93.2414, -93.2412,
        -93.2411, -93.2410, -93.2409, -93.2409], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7153e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7429, -37.7793, -37.7975, -37.8084, -37.8159, -37.8212, -37.8250,
        -37.8278, -37.8297, -37.8311, -37.8321, -37.8328, -37.8333, -37.8336,
        -37.8339, -37.8340, -37.8342, -37.8342, -37.8343, -37.8343, -37.8344,
        -37.8344, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1878e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4437, -54.5112, -54.5360, -54.5499, -54.5591, -54.5655, -54.5701,
        -54.5733, -54.5756, -54.5772, -54.5784, -54.5792, -54.5797, -54.5801,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0054e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2206, -0.4294, -0.4591, -0.4730, -0.4814, -0.4869, -0.4907, -0.4932,
        -0.4950, -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7207e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.2540e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2430, -93.2424, -93.2420, -93.2416, -93.2414, -93.2412, -93.2411,
        -93.2410, -93.2409, -93.2409], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8340, -37.8342, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 3 	 CHN 	 CNH 	 0.006991595357700285

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4171, -54.4848, -54.5169, -54.5360, -54.5490, -54.5582, -54.5649,
        -54.5696, -54.5729, -54.5753, -54.5770, -54.5782, -54.5790, -54.5796,
        -54.5800, -54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808,
        -54.5808, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3082e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3082e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5808,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 8 	 N 	 N 	 1.6172810232384024e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2369, -0.4346, -0.4619, -0.4748, -0.4826, -0.4877, -0.4912, -0.4936,
        -0.4953, -0.4965, -0.4973, -0.4979, -0.4983, -0.4985, -0.4987, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7182e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8855e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4365e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 6 	 H 	 H 	 1.650091710154899e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7607, -109.8826, -109.7491, -109.6721, -109.6223, -109.5882,
        -109.5645, -109.5480, -109.5364, -109.5284, -109.5228, -109.5188,
        -109.5161, -109.5142, -109.5128, -109.5119, -109.5112, -109.5108,
        -109.5104, -109.5102, -109.5100, -109.5099, -109.5099, -109.5098,
        -109.5098], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2964e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4145, -54.4801, -54.5133, -54.5333, -54.5471, -54.5569, -54.5639,
        -54.5689, -54.5725, -54.5750, -54.5768, -54.5780, -54.5789, -54.5795,
        -54.5800, -54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2631e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4519, -54.5171, -54.5400, -54.5527, -54.5611, -54.5670, -54.5711,
        -54.5741, -54.5761, -54.5776, -54.5786, -54.5793, -54.5798, -54.5802,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5809,
        -54.5809, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0251e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5119, -109.5112, -109.5108, -109.5104, -109.5102, -109.5100,
        -109.5099, -109.5099, -109.5098, -109.5098], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5809, -54.5809,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 1 	 N2 	 N2 	 6.100283604223921e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7558, -37.7946, -37.8087, -37.8166, -37.8218, -37.8255, -37.8281,
        -37.8300, -37.8313, -37.8322, -37.8329, -37.8334, -37.8337, -37.8339,
        -37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6835, -37.5319, -37.4840, -37.4588, -37.4426, -37.4316, -37.4239,
        -37.4186, -37.4149, -37.4123, -37.4105, -37.4092, -37.4083, -37.4077,
        -37.4072, -37.4069, -37.4067, -37.4066, -37.4065, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4069, -37.4067, -37.4066, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 9 	 C 	 C 	 4.78218521963875e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0027, -1.1073, -1.1346, -1.1486, -1.1574, -1.1634, -1.1675, -1.1704,
        -1.1724, -1.1738, -1.1748, -1.1755, -1.1759, -1.1763, -1.1765, -1.1767,
        -1.1768, -1.1769, -1.1769, -1.1770, -1.1770, -1.1770, -1.1770, -1.1770,
        -1.1770], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1544e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3087e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3248, -0.4599, -0.4761, -0.4839, -0.4887, -0.4919, -0.4941, -0.4957,
        -0.4967, -0.4975, -0.4980, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7159e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9149e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7406e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2291, -0.4321, -0.4606, -0.4739, -0.4820, -0.4873, -0.4909, -0.4934,
        -0.4952, -0.4964, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7158e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.2363e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1767, -1.1768, -1.1769, -1.1769, -1.1770, -1.1770, -1.1770, -1.1770,
        -1.1770, -1.1770], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 0 	 H2 	 H2 	 4.514047581152395e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4731, -7.4763, -7.4781, -7.4790, -7.4797, -7.4805, -7.4811,
        -7.4809, -7.4804, -7.4802, -7.4801, -7.4801, -7.4802, -7.4802, -7.4803,
        -7.4803, -7.4803, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8425e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.5595e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6855e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804,
        -7.4804, -7.4804], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 7 	 Li 	 Li 	 1.249614400289255e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7660, -37.8018, -37.8136, -37.8200, -37.8243, -37.8272, -37.8293,
        -37.8308, -37.8319, -37.8326, -37.8331, -37.8335, -37.8338, -37.8339,
        -37.8341, -37.8342, -37.8342, -37.8343, -37.8343, -37.8343, -37.8343,
        -37.8343, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1310e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1310e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8342, -37.8343, -37.8343, -37.8343, -37.8343, -37.8343,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 4 	 C 	 C 	 8.817470148671748e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2469, -107.2929, -107.2520, -107.2470, -107.2431, -107.2411,
        -107.2405, -107.2404, -107.2407, -107.2412, -107.2418, -107.2424,
        -107.2430, -107.2436, -107.2442, -107.2447, -107.2452, -107.2456,
        -107.2460, -107.2463, -107.2466, -107.2468, -107.2470, -107.2471,
        -107.2473], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3923e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4743, -7.4771, -7.4786, -7.4793, -7.4800, -7.4809, -7.4811,
        -7.4807, -7.4803, -7.4801, -7.4801, -7.4802, -7.4802, -7.4802, -7.4803,
        -7.4803, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8341e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.6079e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.6978, -99.7085, -99.7150, -99.7196, -99.7229, -99.7253,
        -99.7270, -99.7282, -99.7291, -99.7298, -99.7302, -99.7305, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2414e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2447, -107.2452, -107.2456, -107.2460, -107.2463, -107.2466,
        -107.2468, -107.2470, -107.2471, -107.2473], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4803, -7.4803, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804, -7.4804], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 2 	 FLi 	 LiF 	 0.00816971347836382

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6846, -99.7070, -99.7154, -99.7202, -99.7234, -99.7257, -99.7273,
        -99.7285, -99.7293, -99.7299, -99.7303, -99.7306, -99.7308, -99.7310,
        -99.7311, -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5983e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5983e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 5 	 F 	 F 	 1.5711622173427239e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e23)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e23/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e23/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 23 || ,[' rho : 3.115080', ' ae : 52.748407', ' E : 1.704655'] ,|| total loss 39.815836 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6777, -99.6986, -99.7092, -99.7156, -99.7200, -99.7233, -99.7256,
        -99.7273, -99.7285, -99.7294, -99.7300, -99.7304, -99.7308, -99.7310,
        -99.7311, -99.7312, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0104e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0104e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7312, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 5 	 F 	 F 	 1.3875970446959072e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4141, -54.4790, -54.5125, -54.5327, -54.5467, -54.5566, -54.5637,
        -54.5688, -54.5725, -54.5750, -54.5768, -54.5781, -54.5790, -54.5796,
        -54.5801, -54.5804, -54.5806, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5811, -54.5811], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1376e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1376e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5804, -54.5806, -54.5808, -54.5809, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5811, -54.5811], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 8 	 N 	 N 	 1.5495136426233944e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7557, -37.7945, -37.8087, -37.8167, -37.8220, -37.8257, -37.8283,
        -37.8302, -37.8316, -37.8325, -37.8332, -37.8336, -37.8340, -37.8342,
        -37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6958e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6958e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 4 	 C 	 C 	 7.793366398985745e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2943, -107.3119, -107.2690, -107.2589, -107.2522, -107.2485,
        -107.2463, -107.2453, -107.2450, -107.2449, -107.2451, -107.2454,
        -107.2458, -107.2462, -107.2467, -107.2471, -107.2475, -107.2479,
        -107.2482, -107.2485, -107.2487, -107.2489, -107.2491, -107.2492,
        -107.2493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4098e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4731, -7.4764, -7.4782, -7.4792, -7.4798, -7.4806, -7.4813,
        -7.4811, -7.4806, -7.4804, -7.4803, -7.4803, -7.4804, -7.4804, -7.4805,
        -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8495e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5717e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6782, -99.6980, -99.7090, -99.7157, -99.7204, -99.7239, -99.7264,
        -99.7282, -99.7295, -99.7304, -99.7311, -99.7316, -99.7319, -99.7321,
        -99.7323, -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0716e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2471, -107.2475, -107.2479, -107.2482, -107.2485, -107.2487,
        -107.2489, -107.2491, -107.2492, -107.2493], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 2 	 FLi 	 LiF 	 0.008129631375947187

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8341, -93.4674, -93.3796, -93.3372, -93.3091, -93.2903, -93.2771,
        -93.2677, -93.2610, -93.2562, -93.2528, -93.2503, -93.2485, -93.2472,
        -93.2463, -93.2456, -93.2451, -93.2447, -93.2444, -93.2442, -93.2441,
        -93.2440, -93.2439, -93.2438, -93.2438], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6842e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7463, -37.7847, -37.8018, -37.8117, -37.8185, -37.8233, -37.8268,
        -37.8292, -37.8310, -37.8322, -37.8331, -37.8337, -37.8341, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2336e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4320, -54.5015, -54.5294, -54.5454, -54.5561, -54.5637, -54.5691,
        -54.5729, -54.5756, -54.5775, -54.5788, -54.5798, -54.5804, -54.5809,
        -54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0218e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2546, -0.4400, -0.4650, -0.4767, -0.4839, -0.4886, -0.4918, -0.4941,
        -0.4956, -0.4967, -0.4974, -0.4980, -0.4983, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7159e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5085e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2456, -93.2451, -93.2447, -93.2444, -93.2442, -93.2441, -93.2440,
        -93.2439, -93.2438, -93.2438], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 3 	 CHN 	 CNH 	 0.006890504728091643

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7439, -37.7803, -37.7985, -37.8093, -37.8167, -37.8220, -37.8259,
        -37.8286, -37.8305, -37.8319, -37.8329, -37.8336, -37.8341, -37.8344,
        -37.8347, -37.8348, -37.8350, -37.8350, -37.8351, -37.8351, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6679, -37.5241, -37.4794, -37.4559, -37.4408, -37.4306, -37.4235,
        -37.4185, -37.4150, -37.4126, -37.4109, -37.4097, -37.4089, -37.4083,
        -37.4079, -37.4076, -37.4074, -37.4073, -37.4072, -37.4071, -37.4071,
        -37.4070, -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8348, -37.8350, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4074, -37.4073, -37.4072, -37.4071, -37.4071, -37.4070,
        -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 9 	 C 	 C 	 4.8167628767590546e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4751, -7.4778, -7.4791, -7.4798, -7.4805, -7.4813, -7.4814,
        -7.4809, -7.4805, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8492e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2570e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6992e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 7 	 Li 	 Li 	 1.6242404320671244e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4739, -7.4770, -7.4787, -7.4795, -7.4801, -7.4810, -7.4814,
        -7.4811, -7.4807, -7.4805, -7.4804, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4339, -7.3512, -7.3251, -7.3114, -7.3027, -7.2968, -7.2928, -7.2901,
        -7.2882, -7.2869, -7.2861, -7.2854, -7.2850, -7.2848, -7.2846, -7.2844,
        -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2844, -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842, -7.2842], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 10 	 Li 	 Li 	 5.989977833956641e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3151, -0.4573, -0.4746, -0.4830, -0.4881, -0.4915, -0.4938, -0.4954,
        -0.4966, -0.4973, -0.4979, -0.4983, -0.4985, -0.4987, -0.4989, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7129e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2520e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4259e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 6 	 H 	 H 	 1.7009722523673153e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9543, -109.3207, -109.4701, -109.4911, -109.4971, -109.5005,
        -109.5032, -109.5053, -109.5071, -109.5085, -109.5095, -109.5103,
        -109.5109, -109.5114, -109.5117, -109.5120, -109.5121, -109.5122,
        -109.5123, -109.5124, -109.5124, -109.5125, -109.5125, -109.5125,
        -109.5125], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2932e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4135, -54.4748, -54.5094, -54.5307, -54.5454, -54.5560, -54.5636,
        -54.5690, -54.5729, -54.5756, -54.5775, -54.5789, -54.5799, -54.5805,
        -54.5810, -54.5813, -54.5816, -54.5817, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0351e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4137, -54.4753, -54.5099, -54.5310, -54.5456, -54.5562, -54.5637,
        -54.5691, -54.5729, -54.5757, -54.5776, -54.5789, -54.5799, -54.5806,
        -54.5810, -54.5814, -54.5816, -54.5817, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0309e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5120, -109.5121, -109.5122, -109.5123, -109.5124, -109.5124,
        -109.5125, -109.5125, -109.5125, -109.5125], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5817, -54.5819, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 1 	 N2 	 N2 	 5.7583314248551274e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0716, -1.1352, -1.1519, -1.1603, -1.1657, -1.1693, -1.1718, -1.1736,
        -1.1748, -1.1756, -1.1762, -1.1766, -1.1769, -1.1771, -1.1773, -1.1774,
        -1.1775, -1.1775, -1.1775, -1.1776, -1.1776, -1.1776, -1.1776, -1.1776,
        -1.1776], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2163e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4325e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2344, -0.4337, -0.4615, -0.4745, -0.4824, -0.4876, -0.4911, -0.4936,
        -0.4952, -0.4964, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7112e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3212e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8550e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2941, -0.4515, -0.4714, -0.4809, -0.4867, -0.4905, -0.4931, -0.4950,
        -0.4962, -0.4971, -0.4977, -0.4982, -0.4985, -0.4987, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7112e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7769e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1774, -1.1775, -1.1775, -1.1775, -1.1776, -1.1776, -1.1776, -1.1776,
        -1.1776, -1.1776], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 0 	 H2 	 H2 	 5.810846493749407e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e24)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e24/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e24/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 24 || ,[' rho : 3.113572', ' ae : 52.498948', ' E : 1.560141'] ,|| total loss 39.648212 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4344, -54.5037, -54.5310, -54.5466, -54.5570, -54.5643, -54.5695,
        -54.5732, -54.5759, -54.5777, -54.5790, -54.5799, -54.5806, -54.5810,
        -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9174e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9174e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 8 	 N 	 N 	 1.2046837859605531e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7435, -37.7787, -37.7973, -37.8084, -37.8161, -37.8216, -37.8256,
        -37.8284, -37.8304, -37.8319, -37.8329, -37.8336, -37.8341, -37.8345,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6177, -37.4992, -37.4639, -37.4454, -37.4336, -37.4256, -37.4200,
        -37.4161, -37.4134, -37.4115, -37.4102, -37.4092, -37.4086, -37.4081,
        -37.4078, -37.4076, -37.4074, -37.4073, -37.4072, -37.4072, -37.4071,
        -37.4071, -37.4071, -37.4071, -37.4071], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4074, -37.4073, -37.4072, -37.4072, -37.4071, -37.4071,
        -37.4071, -37.4071, -37.4071], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 9 	 C 	 C 	 4.799258367972003e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1200, -93.5894, -93.4445, -93.3861, -93.3422, -93.3144, -93.2944,
        -93.2805, -93.2705, -93.2634, -93.2583, -93.2546, -93.2520, -93.2501,
        -93.2487, -93.2477, -93.2470, -93.2464, -93.2460, -93.2457, -93.2455,
        -93.2454, -93.2453, -93.2452, -93.2451], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6662e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7450, -37.7823, -37.8001, -37.8105, -37.8176, -37.8227, -37.8264,
        -37.8290, -37.8309, -37.8322, -37.8331, -37.8338, -37.8342, -37.8346,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0591e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4234, -54.4925, -54.5229, -54.5407, -54.5528, -54.5613, -54.5674,
        -54.5718, -54.5749, -54.5770, -54.5786, -54.5796, -54.5804, -54.5809,
        -54.5813, -54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8543e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2478, -0.4379, -0.4638, -0.4760, -0.4834, -0.4883, -0.4916, -0.4939,
        -0.4955, -0.4966, -0.4974, -0.4979, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7097e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0063e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2477, -93.2470, -93.2464, -93.2460, -93.2457, -93.2455, -93.2454,
        -93.2453, -93.2452, -93.2451], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5816, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821, -54.5821,
        -54.5821, -54.5821, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 3 	 CHN 	 CNH 	 0.0068092918000990255

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2662, -107.3030, -107.2606, -107.2540, -107.2493, -107.2466,
        -107.2455, -107.2450, -107.2451, -107.2454, -107.2458, -107.2463,
        -107.2469, -107.2474, -107.2480, -107.2485, -107.2490, -107.2494,
        -107.2498, -107.2501, -107.2503, -107.2506, -107.2507, -107.2509,
        -107.2510], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4260e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4684, -7.4753, -7.4780, -7.4792, -7.4799, -7.4806, -7.4814, -7.4814,
        -7.4809, -7.4806, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8258e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6303e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6894, -99.7113, -99.7190, -99.7234, -99.7263, -99.7284, -99.7299,
        -99.7309, -99.7317, -99.7322, -99.7326, -99.7328, -99.7330, -99.7332,
        -99.7332, -99.7333, -99.7334, -99.7334, -99.7334, -99.7334, -99.7334,
        -99.7334, -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3974e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2485, -107.2490, -107.2494, -107.2498, -107.2501, -107.2503,
        -107.2506, -107.2507, -107.2509, -107.2510], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7333, -99.7334, -99.7334, -99.7334, -99.7334, -99.7334, -99.7334,
        -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 2 	 FLi 	 LiF 	 0.00806777832077047

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7470, -37.7856, -37.8024, -37.8122, -37.8188, -37.8235, -37.8269,
        -37.8293, -37.8311, -37.8323, -37.8331, -37.8337, -37.8342, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2357e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2357e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 4 	 C 	 C 	 6.691404543895713e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6831, -99.7054, -99.7147, -99.7202, -99.7239, -99.7266, -99.7285,
        -99.7299, -99.7309, -99.7316, -99.7321, -99.7324, -99.7327, -99.7328,
        -99.7330, -99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0948e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0948e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 5 	 F 	 F 	 1.0389474016198473e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3344, -0.4623, -0.4775, -0.4848, -0.4893, -0.4923, -0.4944, -0.4958,
        -0.4968, -0.4975, -0.4980, -0.4983, -0.4986, -0.4987, -0.4989, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7036e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3204e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4072e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 6 	 H 	 H 	 1.8266356259951102e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4672, -7.4729, -7.4764, -7.4783, -7.4793, -7.4800, -7.4807, -7.4814,
        -7.4814, -7.4809, -7.4806, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8109e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6179e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6226e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 7 	 Li 	 Li 	 1.7096186328538784e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0363, -1.1212, -1.1434, -1.1548, -1.1620, -1.1668, -1.1702, -1.1725,
        -1.1741, -1.1753, -1.1761, -1.1766, -1.1770, -1.1773, -1.1775, -1.1776,
        -1.1777, -1.1778, -1.1778, -1.1779, -1.1779, -1.1779, -1.1779, -1.1779,
        -1.1779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2490e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4979e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2202, -0.4291, -0.4589, -0.4728, -0.4813, -0.4868, -0.4906, -0.4932,
        -0.4950, -0.4962, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7013e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0258e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9006e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3412, -0.4641, -0.4785, -0.4855, -0.4898, -0.4926, -0.4946, -0.4960,
        -0.4969, -0.4976, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7014e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3000e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1776, -1.1777, -1.1778, -1.1778, -1.1779, -1.1779, -1.1779, -1.1779,
        -1.1779, -1.1779], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 0 	 H2 	 H2 	 6.695178859539538e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4673, -7.4734, -7.4767, -7.4785, -7.4794, -7.4800, -7.4808, -7.4815,
        -7.4813, -7.4808, -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4023, -7.3341, -7.3144, -7.3042, -7.2978, -7.2935, -7.2906, -7.2886,
        -7.2872, -7.2863, -7.2856, -7.2852, -7.2849, -7.2847, -7.2846, -7.2845,
        -7.2844, -7.2844, -7.2843, -7.2843, -7.2843, -7.2843, -7.2843, -7.2843,
        -7.2843], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2845, -7.2844, -7.2844, -7.2843, -7.2843, -7.2843, -7.2843, -7.2843,
        -7.2843, -7.2843], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 10 	 Li 	 Li 	 6.545209854605572e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7842, -109.8660, -109.7417, -109.6680, -109.6200, -109.5873,
        -109.5645, -109.5487, -109.5376, -109.5299, -109.5246, -109.5208,
        -109.5182, -109.5163, -109.5151, -109.5142, -109.5135, -109.5131,
        -109.5128, -109.5126, -109.5124, -109.5123, -109.5122, -109.5122,
        -109.5122], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2868e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4483, -54.5146, -54.5385, -54.5519, -54.5607, -54.5669, -54.5712,
        -54.5743, -54.5765, -54.5780, -54.5791, -54.5799, -54.5804, -54.5808,
        -54.5810, -54.5812, -54.5814, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2825e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4369, -54.5057, -54.5323, -54.5474, -54.5575, -54.5646, -54.5696,
        -54.5732, -54.5757, -54.5775, -54.5787, -54.5796, -54.5802, -54.5806,
        -54.5809, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3305e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5142, -109.5135, -109.5131, -109.5128, -109.5126, -109.5124,
        -109.5123, -109.5122, -109.5122, -109.5122], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 1 	 N2 	 N2 	 5.315472076155012e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e25)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e25/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e25/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 25 || ,[' rho : 3.111442', ' ae : 52.234265', ' E : 1.496909'] ,|| total loss 39.469648 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7518, -37.7910, -37.8062, -37.8149, -37.8207, -37.8249, -37.8278,
        -37.8299, -37.8314, -37.8324, -37.8331, -37.8337, -37.8340, -37.8343,
        -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6294, -37.5047, -37.4672, -37.4476, -37.4350, -37.4265, -37.4206,
        -37.4164, -37.4135, -37.4115, -37.4101, -37.4091, -37.4084, -37.4079,
        -37.4076, -37.4073, -37.4072, -37.4071, -37.4070, -37.4069, -37.4069,
        -37.4068, -37.4068, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4072, -37.4071, -37.4070, -37.4069, -37.4069, -37.4068,
        -37.4068, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 9 	 C 	 C 	 4.716957614838264e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6796, -99.7006, -99.7109, -99.7172, -99.7215, -99.7247, -99.7270,
        -99.7286, -99.7298, -99.7306, -99.7312, -99.7317, -99.7320, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1020e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1020e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 5 	 F 	 F 	 3.668145103881895e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9941, -93.5371, -93.4171, -93.3655, -93.3283, -93.3044, -93.2873,
        -93.2753, -93.2667, -93.2606, -93.2562, -93.2531, -93.2508, -93.2492,
        -93.2480, -93.2471, -93.2465, -93.2461, -93.2457, -93.2455, -93.2453,
        -93.2452, -93.2451, -93.2450, -93.2449], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6322e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7453, -37.7830, -37.8004, -37.8106, -37.8176, -37.8225, -37.8261,
        -37.8286, -37.8304, -37.8317, -37.8326, -37.8333, -37.8337, -37.8340,
        -37.8343, -37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7256e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4354, -54.5043, -54.5313, -54.5466, -54.5568, -54.5640, -54.5691,
        -54.5728, -54.5753, -54.5771, -54.5784, -54.5793, -54.5799, -54.5804,
        -54.5807, -54.5809, -54.5811, -54.5812, -54.5812, -54.5813, -54.5813,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6136e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3049, -0.4545, -0.4730, -0.4819, -0.4873, -0.4910, -0.4934, -0.4952,
        -0.4963, -0.4972, -0.4978, -0.4982, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6956e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2922e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2471, -93.2465, -93.2461, -93.2457, -93.2455, -93.2453, -93.2452,
        -93.2451, -93.2450, -93.2449], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 3 	 CHN 	 CNH 	 0.006715798128907586

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7435, -37.7794, -37.7976, -37.8085, -37.8160, -37.8213, -37.8252,
        -37.8279, -37.8299, -37.8313, -37.8323, -37.8330, -37.8335, -37.8338,
        -37.8340, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9530e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 4 	 C 	 C 	 8.150991455761648e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4695, -7.4762, -7.4785, -7.4795, -7.4801, -7.4810, -7.4814, -7.4811,
        -7.4806, -7.4804, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7604e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9969e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5215e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 7 	 Li 	 Li 	 1.5644392644906986e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4740, -7.4771, -7.4787, -7.4795, -7.4801, -7.4810, -7.4814,
        -7.4810, -7.4806, -7.4804, -7.4803, -7.4804, -7.4804, -7.4805, -7.4805,
        -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4107, -7.3383, -7.3170, -7.3059, -7.2989, -7.2943, -7.2911, -7.2889,
        -7.2874, -7.2864, -7.2857, -7.2852, -7.2849, -7.2847, -7.2845, -7.2844,
        -7.2843, -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2844, -7.2843, -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842, -7.2842], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 10 	 Li 	 Li 	 6.874023916966976e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0581, -1.1301, -1.1489, -1.1585, -1.1646, -1.1687, -1.1716, -1.1735,
        -1.1749, -1.1759, -1.1766, -1.1770, -1.1774, -1.1776, -1.1778, -1.1779,
        -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2671e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5342e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2611, -0.4419, -0.4659, -0.4773, -0.4843, -0.4888, -0.4920, -0.4941,
        -0.4956, -0.4967, -0.4974, -0.4979, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6881e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7396e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9106e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2761, -0.4463, -0.4684, -0.4789, -0.4853, -0.4896, -0.4925, -0.4945,
        -0.4959, -0.4968, -0.4975, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6881e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3491e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1779, -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781, -1.1781], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 0 	 H2 	 H2 	 7.4828281548675235e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3168, -107.3219, -107.2773, -107.2648, -107.2569, -107.2520,
        -107.2490, -107.2474, -107.2465, -107.2461, -107.2459, -107.2461,
        -107.2463, -107.2467, -107.2471, -107.2475, -107.2478, -107.2482,
        -107.2485, -107.2487, -107.2490, -107.2491, -107.2493, -107.2494,
        -107.2495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4106e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4678, -7.4743, -7.4773, -7.4788, -7.4796, -7.4802, -7.4810, -7.4813,
        -7.4809, -7.4805, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804, -7.4805,
        -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7392e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.6955e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6812, -99.7034, -99.7127, -99.7182, -99.7219, -99.7246, -99.7265,
        -99.7279, -99.7289, -99.7296, -99.7301, -99.7305, -99.7307, -99.7309,
        -99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8983e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2475, -107.2478, -107.2482, -107.2485, -107.2487, -107.2490,
        -107.2491, -107.2493, -107.2494, -107.2495], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 2 	 FLi 	 LiF 	 0.007991164780147875

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4561, -54.5196, -54.5416, -54.5537, -54.5617, -54.5672, -54.5711,
        -54.5739, -54.5759, -54.5772, -54.5782, -54.5789, -54.5794, -54.5797,
        -54.5799, -54.5801, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6405e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6405e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5801, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804, -54.5804,
        -54.5804, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 8 	 N 	 N 	 1.7880116955502247e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5851, -109.9167, -109.7637, -109.6820, -109.6294, -109.5935,
        -109.5685, -109.5510, -109.5387, -109.5302, -109.5242, -109.5199,
        -109.5170, -109.5149, -109.5135, -109.5125, -109.5118, -109.5113,
        -109.5109, -109.5107, -109.5105, -109.5104, -109.5103, -109.5103,
        -109.5102], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2799e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4361, -54.5048, -54.5313, -54.5463, -54.5564, -54.5635, -54.5685,
        -54.5720, -54.5745, -54.5763, -54.5776, -54.5784, -54.5791, -54.5795,
        -54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6983e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4550, -54.5189, -54.5411, -54.5534, -54.5614, -54.5671, -54.5710,
        -54.5738, -54.5758, -54.5772, -54.5782, -54.5789, -54.5794, -54.5797,
        -54.5799, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804, -54.5804,
        -54.5805, -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6165e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5125, -109.5118, -109.5113, -109.5109, -109.5107, -109.5105,
        -109.5104, -109.5103, -109.5103, -109.5102], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5801, -54.5802, -54.5803, -54.5804, -54.5804, -54.5804, -54.5805,
        -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 1 	 N2 	 N2 	 5.0669734376531156e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2327, -0.4331, -0.4611, -0.4742, -0.4822, -0.4874, -0.4910, -0.4934,
        -0.4951, -0.4963, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6832e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0823e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3664e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 6 	 H 	 H 	 2.175102311046713e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e26)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e26/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e26/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 26 || ,[' rho : 3.100561', ' ae : 51.946042', ' E : 1.705575'] ,|| total loss 39.261868 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7475, -37.7863, -37.8027, -37.8121, -37.8185, -37.8230, -37.8262,
        -37.8285, -37.8302, -37.8313, -37.8322, -37.8327, -37.8332, -37.8334,
        -37.8336, -37.8338, -37.8339, -37.8340, -37.8340, -37.8340, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6281, -37.5037, -37.4664, -37.4468, -37.4343, -37.4258, -37.4199,
        -37.4158, -37.4129, -37.4109, -37.4095, -37.4085, -37.4078, -37.4073,
        -37.4070, -37.4067, -37.4066, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8338, -37.8339, -37.8340, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4067, -37.4066, -37.4065, -37.4064, -37.4063, -37.4063, -37.4063,
        -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 9 	 C 	 C 	 4.591757376843236e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2811, -0.4477, -0.4692, -0.4794, -0.4857, -0.4898, -0.4926, -0.4946,
        -0.4959, -0.4969, -0.4975, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6816e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5654e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3633e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 6 	 H 	 H 	 2.1792097769808237e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2561, -107.2999, -107.2567, -107.2510, -107.2466, -107.2442,
        -107.2433, -107.2430, -107.2431, -107.2434, -107.2439, -107.2445,
        -107.2451, -107.2457, -107.2463, -107.2468, -107.2474, -107.2478,
        -107.2482, -107.2485, -107.2488, -107.2491, -107.2492, -107.2494,
        -107.2495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4139e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4736, -7.4768, -7.4785, -7.4794, -7.4800, -7.4808, -7.4813,
        -7.4810, -7.4805, -7.4803, -7.4803, -7.4803, -7.4803, -7.4804, -7.4804,
        -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7154e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4376e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6839, -99.7061, -99.7147, -99.7196, -99.7229, -99.7252, -99.7269,
        -99.7281, -99.7290, -99.7296, -99.7301, -99.7304, -99.7306, -99.7307,
        -99.7308, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0075e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2468, -107.2474, -107.2478, -107.2482, -107.2485, -107.2488,
        -107.2491, -107.2492, -107.2494, -107.2495], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7309, -99.7310, -99.7310, -99.7310, -99.7310, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 2 	 FLi 	 LiF 	 0.007971326648843478

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4697, -7.4763, -7.4786, -7.4795, -7.4801, -7.4809, -7.4813, -7.4809,
        -7.4804, -7.4803, -7.4802, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804,
        -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.3982, -7.3320, -7.3130, -7.3032, -7.2971, -7.2930, -7.2902, -7.2883,
        -7.2869, -7.2861, -7.2854, -7.2850, -7.2847, -7.2845, -7.2844, -7.2843,
        -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2841, -7.2841, -7.2841,
        -7.2841], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2841, -7.2841,
        -7.2841, -7.2841], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 10 	 Li 	 Li 	 7.196178186924931e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6782, -99.6990, -99.7094, -99.7156, -99.7199, -99.7231, -99.7254,
        -99.7270, -99.7282, -99.7290, -99.7296, -99.7300, -99.7303, -99.7306,
        -99.7307, -99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.5118e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5118e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 5 	 F 	 F 	 1.9246734839070232e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0159, -1.1132, -1.1386, -1.1517, -1.1599, -1.1655, -1.1694, -1.1721,
        -1.1739, -1.1753, -1.1762, -1.1768, -1.1773, -1.1776, -1.1778, -1.1779,
        -1.1781, -1.1781, -1.1782, -1.1782, -1.1782, -1.1783, -1.1783, -1.1783,
        -1.1783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2814e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5629e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2511, -0.4388, -0.4642, -0.4762, -0.4835, -0.4883, -0.4916, -0.4938,
        -0.4954, -0.4965, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6784e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0521e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9198e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3265, -0.4602, -0.4762, -0.4840, -0.4887, -0.4919, -0.4941, -0.4956,
        -0.4966, -0.4973, -0.4979, -0.4982, -0.4985, -0.4986, -0.4988, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6785e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7135e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1779, -1.1781, -1.1781, -1.1782, -1.1782, -1.1782, -1.1783, -1.1783,
        -1.1783, -1.1783], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 0 	 H2 	 H2 	 8.08476560393057e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0846, -93.5743, -93.4359, -93.3794, -93.3374, -93.3107, -93.2916,
        -93.2782, -93.2686, -93.2618, -93.2570, -93.2535, -93.2510, -93.2492,
        -93.2479, -93.2469, -93.2462, -93.2457, -93.2454, -93.2451, -93.2449,
        -93.2448, -93.2447, -93.2446, -93.2445], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5972e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7499, -37.7889, -37.8045, -37.8134, -37.8194, -37.8236, -37.8267,
        -37.8288, -37.8303, -37.8314, -37.8322, -37.8327, -37.8331, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7061e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4275, -54.4968, -54.5255, -54.5422, -54.5534, -54.5613, -54.5669,
        -54.5709, -54.5737, -54.5757, -54.5771, -54.5781, -54.5788, -54.5793,
        -54.5796, -54.5799, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8547e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3132, -0.4567, -0.4742, -0.4827, -0.4878, -0.4913, -0.4936, -0.4953,
        -0.4964, -0.4972, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6779e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0102e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2469, -93.2462, -93.2457, -93.2454, -93.2451, -93.2449, -93.2448,
        -93.2447, -93.2446, -93.2445], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 3 	 CHN 	 CNH 	 0.006604641845258561

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4544, -54.5184, -54.5407, -54.5530, -54.5611, -54.5668, -54.5707,
        -54.5736, -54.5756, -54.5770, -54.5779, -54.5786, -54.5791, -54.5795,
        -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9344e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9344e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5799, -54.5800, -54.5801, -54.5801, -54.5802, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 8 	 N 	 N 	 1.8817242614747367e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4672, -7.4729, -7.4763, -7.4781, -7.4792, -7.4798, -7.4805, -7.4812,
        -7.4810, -7.4805, -7.4803, -7.4802, -7.4802, -7.4803, -7.4803, -7.4804,
        -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6894e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1125e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3794e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4804, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 7 	 Li 	 Li 	 1.3753927465501908e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8828, -109.6547, -109.6327, -109.5950, -109.5683, -109.5500,
        -109.5375, -109.5289, -109.5230, -109.5190, -109.5162, -109.5143,
        -109.5130, -109.5121, -109.5114, -109.5110, -109.5107, -109.5105,
        -109.5103, -109.5102, -109.5101, -109.5101, -109.5101, -109.5100,
        -109.5100], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2744e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4394, -54.5073, -54.5330, -54.5475, -54.5572, -54.5639, -54.5687,
        -54.5721, -54.5745, -54.5762, -54.5774, -54.5783, -54.5789, -54.5793,
        -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0253e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4143, -54.4786, -54.5119, -54.5321, -54.5459, -54.5558, -54.5629,
        -54.5680, -54.5716, -54.5742, -54.5760, -54.5772, -54.5781, -54.5788,
        -54.5792, -54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2326e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5110, -109.5107, -109.5105, -109.5103, -109.5102, -109.5101,
        -109.5101, -109.5101, -109.5100, -109.5100], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5801,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 1 	 N2 	 N2 	 4.826903199072582e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7447, -37.7824, -37.7997, -37.8098, -37.8167, -37.8217, -37.8252,
        -37.8277, -37.8295, -37.8308, -37.8317, -37.8323, -37.8328, -37.8331,
        -37.8333, -37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9941e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9941e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 4 	 C 	 C 	 1.0443593919440583e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e27)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e27/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e27/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 27 || ,[' rho : 3.093368', ' ae : 51.719063', ' E : 1.839766'] ,|| total loss 39.100423 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0239, -1.1165, -1.1407, -1.1532, -1.1610, -1.1663, -1.1700, -1.1726,
        -1.1743, -1.1756, -1.1765, -1.1771, -1.1775, -1.1778, -1.1780, -1.1782,
        -1.1783, -1.1783, -1.1784, -1.1784, -1.1784, -1.1785, -1.1785, -1.1785,
        -1.1785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3043e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6085e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2474, -0.4377, -0.4636, -0.4758, -0.4832, -0.4881, -0.4914, -0.4937,
        -0.4953, -0.4964, -0.4972, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6723e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0971e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9531e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2573, -0.4407, -0.4653, -0.4769, -0.4839, -0.4886, -0.4918, -0.4940,
        -0.4955, -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6723e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0686e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1782, -1.1783, -1.1783, -1.1784, -1.1784, -1.1784, -1.1785, -1.1785,
        -1.1785, -1.1785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 0 	 H2 	 H2 	 8.79271500339637e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4675, -7.4736, -7.4768, -7.4785, -7.4794, -7.4799, -7.4808, -7.4813,
        -7.4810, -7.4805, -7.4803, -7.4802, -7.4803, -7.4803, -7.4804, -7.4804,
        -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4291, -7.3483, -7.3232, -7.3102, -7.3018, -7.2962, -7.2924, -7.2898,
        -7.2880, -7.2868, -7.2860, -7.2854, -7.2850, -7.2847, -7.2846, -7.2844,
        -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2844, -7.2843, -7.2843, -7.2842, -7.2842, -7.2842, -7.2842, -7.2842,
        -7.2842, -7.2842], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 10 	 Li 	 Li 	 7.622799439920792e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7627, -37.7994, -37.8118, -37.8186, -37.8231, -37.8263, -37.8285,
        -37.8301, -37.8312, -37.8320, -37.8326, -37.8330, -37.8332, -37.8334,
        -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7082, -37.5453, -37.4922, -37.4642, -37.4463, -37.4341, -37.4256,
        -37.4197, -37.4156, -37.4127, -37.4107, -37.4093, -37.4083, -37.4076,
        -37.4072, -37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4062,
        -37.4061, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8337, -37.8337, -37.8338, -37.8338, -37.8338, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4062, -37.4061,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 9 	 C 	 C 	 4.537234021605715e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7572, -37.7954, -37.8091, -37.8167, -37.8217, -37.8253, -37.8278,
        -37.8296, -37.8309, -37.8318, -37.8324, -37.8328, -37.8331, -37.8334,
        -37.8335, -37.8336, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8342e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8342e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 4 	 C 	 C 	 1.0275818931800588e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3123, -0.4564, -0.4741, -0.4826, -0.4878, -0.4912, -0.4936, -0.4952,
        -0.4964, -0.4972, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6703e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.4339e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3407e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 6 	 H 	 H 	 2.343866125171615e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8202, -109.8119, -109.7129, -109.6481, -109.6056, -109.5766,
        -109.5565, -109.5425, -109.5328, -109.5260, -109.5213, -109.5180,
        -109.5158, -109.5142, -109.5131, -109.5123, -109.5117, -109.5114,
        -109.5111, -109.5109, -109.5108, -109.5107, -109.5106, -109.5106,
        -109.5105], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2731e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4522, -54.5169, -54.5397, -54.5523, -54.5606, -54.5665, -54.5706,
        -54.5735, -54.5755, -54.5770, -54.5780, -54.5787, -54.5792, -54.5796,
        -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7909e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4211, -54.4894, -54.5201, -54.5382, -54.5505, -54.5592, -54.5654,
        -54.5698, -54.5729, -54.5751, -54.5767, -54.5778, -54.5786, -54.5791,
        -54.5795, -54.5797, -54.5799, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9668e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5123, -109.5117, -109.5114, -109.5111, -109.5109, -109.5108,
        -109.5107, -109.5106, -109.5106, -109.5105], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 1 	 N2 	 N2 	 4.660165071218986e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4685, -7.4751, -7.4779, -7.4791, -7.4798, -7.4805, -7.4812, -7.4813,
        -7.4807, -7.4804, -7.4803, -7.4803, -7.4804, -7.4804, -7.4805, -7.4805,
        -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6619e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7380e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3245e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 7 	 Li 	 Li 	 1.5102174467634756e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6771, -99.6951, -99.7063, -99.7133, -99.7182, -99.7219, -99.7245,
        -99.7265, -99.7279, -99.7289, -99.7296, -99.7301, -99.7304, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3109e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.3109e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 5 	 F 	 F 	 1.6324750221783272e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1107, -93.5854, -93.4419, -93.3842, -93.3408, -93.3135, -93.2939,
        -93.2801, -93.2703, -93.2634, -93.2584, -93.2548, -93.2523, -93.2504,
        -93.2491, -93.2481, -93.2474, -93.2469, -93.2465, -93.2463, -93.2461,
        -93.2459, -93.2458, -93.2457, -93.2457], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5747e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7678, -37.8027, -37.8141, -37.8203, -37.8244, -37.8272, -37.8293,
        -37.8307, -37.8317, -37.8324, -37.8329, -37.8333, -37.8335, -37.8337,
        -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5113e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4188, -54.4862, -54.5177, -54.5364, -54.5492, -54.5583, -54.5648,
        -54.5694, -54.5727, -54.5750, -54.5766, -54.5778, -54.5786, -54.5791,
        -54.5795, -54.5798, -54.5800, -54.5801, -54.5802, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8668e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3420, -0.4642, -0.4785, -0.4854, -0.4897, -0.4926, -0.4945, -0.4959,
        -0.4968, -0.4975, -0.4979, -0.4983, -0.4985, -0.4986, -0.4988, -0.4988,
        -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6695e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8745e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2481, -93.2474, -93.2469, -93.2465, -93.2463, -93.2461, -93.2459,
        -93.2458, -93.2457, -93.2457], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8339, -37.8339, -37.8340, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5800, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 3 	 CHN 	 CNH 	 0.006521466428428125

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4784, -54.5118, -54.5320, -54.5459, -54.5559, -54.5630,
        -54.5681, -54.5717, -54.5743, -54.5761, -54.5774, -54.5782, -54.5789,
        -54.5793, -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0785e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0785e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 8 	 N 	 N 	 1.849959856832497e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2289, -107.2917, -107.2490, -107.2461, -107.2434, -107.2421,
        -107.2420, -107.2424, -107.2428, -107.2435, -107.2442, -107.2449,
        -107.2456, -107.2464, -107.2471, -107.2477, -107.2483, -107.2488,
        -107.2493, -107.2496, -107.2499, -107.2502, -107.2504, -107.2506,
        -107.2507], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4265e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4710, -7.4773, -7.4791, -7.4799, -7.4806, -7.4813, -7.4813, -7.4808,
        -7.4805, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6503e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.1233e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.6956, -99.7066, -99.7135, -99.7185, -99.7220, -99.7247,
        -99.7266, -99.7279, -99.7289, -99.7296, -99.7301, -99.7304, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3238e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2477, -107.2483, -107.2488, -107.2493, -107.2496, -107.2499,
        -107.2502, -107.2504, -107.2506, -107.2507], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 2 	 FLi 	 LiF 	 0.00789477877809825

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e28)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e28/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e28/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 28 || ,[' rho : 3.090207', ' ae : 51.433853', ' E : 1.821534'] ,|| total loss 38.906830 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3110, -107.3229, -107.2770, -107.2651, -107.2573, -107.2526,
        -107.2497, -107.2481, -107.2473, -107.2470, -107.2469, -107.2471,
        -107.2475, -107.2479, -107.2484, -107.2488, -107.2492, -107.2496,
        -107.2499, -107.2502, -107.2504, -107.2506, -107.2508, -107.2509,
        -107.2510], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4261e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4686, -7.4752, -7.4780, -7.4792, -7.4799, -7.4806, -7.4813, -7.4813,
        -7.4808, -7.4805, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6446e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.1939e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6875, -99.7092, -99.7169, -99.7213, -99.7242, -99.7263, -99.7277,
        -99.7288, -99.7295, -99.7301, -99.7305, -99.7307, -99.7309, -99.7310,
        -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4179e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2488, -107.2492, -107.2496, -107.2499, -107.2502, -107.2504,
        -107.2506, -107.2508, -107.2509, -107.2510], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 2 	 FLi 	 LiF 	 0.00787348896861831

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4677, -7.4736, -7.4768, -7.4786, -7.4795, -7.4801, -7.4809, -7.4814,
        -7.4812, -7.4807, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6423e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.1633e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2853e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 7 	 Li 	 Li 	 1.608239497140537e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2475, -0.4377, -0.4636, -0.4758, -0.4832, -0.4881, -0.4914, -0.4937,
        -0.4953, -0.4964, -0.4972, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6645e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1405e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3291e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 6 	 H 	 H 	 2.4697643398658955e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7443, -37.7810, -37.7987, -37.8092, -37.8163, -37.8214, -37.8251,
        -37.8277, -37.8295, -37.8309, -37.8318, -37.8325, -37.8329, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6226, -37.5010, -37.4647, -37.4457, -37.4336, -37.4253, -37.4196,
        -37.4156, -37.4128, -37.4108, -37.4094, -37.4085, -37.4078, -37.4073,
        -37.4070, -37.4068, -37.4066, -37.4065, -37.4064, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4068, -37.4066, -37.4065, -37.4064, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 9 	 C 	 C 	 4.5035934599203995e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4694, -7.4761, -7.4785, -7.4795, -7.4801, -7.4809, -7.4814, -7.4811,
        -7.4806, -7.4804, -7.4803, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4588, -7.3672, -7.3356, -7.3186, -7.3077, -7.3003, -7.2953, -7.2918,
        -7.2895, -7.2879, -7.2867, -7.2860, -7.2855, -7.2851, -7.2849, -7.2847,
        -7.2846, -7.2845, -7.2845, -7.2844, -7.2844, -7.2844, -7.2844, -7.2844,
        -7.2844], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2847, -7.2846, -7.2845, -7.2845, -7.2844, -7.2844, -7.2844, -7.2844,
        -7.2844, -7.2844], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 10 	 Li 	 Li 	 8.071714365300403e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7583, -37.7962, -37.8096, -37.8171, -37.8220, -37.8255, -37.8280,
        -37.8298, -37.8310, -37.8319, -37.8325, -37.8329, -37.8332, -37.8335,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7271e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7271e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 4 	 C 	 C 	 1.0052062356296955e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9550, -93.5208, -93.4086, -93.3595, -93.3246, -93.3020, -93.2860,
        -93.2747, -93.2667, -93.2610, -93.2569, -93.2540, -93.2518, -93.2503,
        -93.2492, -93.2484, -93.2479, -93.2474, -93.2471, -93.2469, -93.2467,
        -93.2466, -93.2465, -93.2465, -93.2464], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5487e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7512, -37.7901, -37.8053, -37.8140, -37.8198, -37.8239, -37.8269,
        -37.8290, -37.8304, -37.8315, -37.8322, -37.8328, -37.8331, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7140e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4147, -54.4787, -54.5120, -54.5322, -54.5460, -54.5560, -54.5631,
        -54.5682, -54.5718, -54.5743, -54.5761, -54.5774, -54.5783, -54.5789,
        -54.5794, -54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0354e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2542, -0.4397, -0.4647, -0.4765, -0.4837, -0.4884, -0.4916, -0.4939,
        -0.4954, -0.4965, -0.4972, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6609e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1424e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2484, -93.2479, -93.2474, -93.2471, -93.2469, -93.2467, -93.2466,
        -93.2465, -93.2465, -93.2464], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 3 	 CHN 	 CNH 	 0.006447165316942878

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4219, -54.4902, -54.5207, -54.5386, -54.5507, -54.5593, -54.5654,
        -54.5698, -54.5729, -54.5751, -54.5766, -54.5777, -54.5785, -54.5790,
        -54.5794, -54.5796, -54.5798, -54.5800, -54.5800, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1109e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1109e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5800, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 8 	 N 	 N 	 1.8871262028620487e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8390, -109.7767, -109.6949, -109.6363, -109.5974, -109.5709,
        -109.5525, -109.5398, -109.5310, -109.5249, -109.5206, -109.5177,
        -109.5156, -109.5142, -109.5132, -109.5125, -109.5120, -109.5116,
        -109.5114, -109.5112, -109.5111, -109.5110, -109.5110, -109.5109,
        -109.5109], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2681e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4203, -54.4882, -54.5192, -54.5375, -54.5499, -54.5587, -54.5650,
        -54.5695, -54.5727, -54.5750, -54.5766, -54.5777, -54.5785, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0702e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4531, -54.5175, -54.5400, -54.5525, -54.5608, -54.5666, -54.5706,
        -54.5735, -54.5755, -54.5769, -54.5779, -54.5786, -54.5791, -54.5795,
        -54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8809e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5125, -109.5120, -109.5116, -109.5114, -109.5112, -109.5111,
        -109.5110, -109.5110, -109.5109, -109.5109], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5800, -54.5801, -54.5802, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 1 	 N2 	 N2 	 4.342564363994523e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6816, -99.7035, -99.7128, -99.7182, -99.7220, -99.7246, -99.7266,
        -99.7280, -99.7290, -99.7297, -99.7302, -99.7305, -99.7308, -99.7309,
        -99.7310, -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6140e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6140e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 5 	 F 	 F 	 1.5515093807234344e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0240, -1.1169, -1.1413, -1.1538, -1.1617, -1.1671, -1.1708, -1.1733,
        -1.1751, -1.1764, -1.1772, -1.1779, -1.1783, -1.1786, -1.1788, -1.1789,
        -1.1791, -1.1791, -1.1792, -1.1792, -1.1792, -1.1793, -1.1793, -1.1793,
        -1.1793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4110e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8220e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2458, -0.4371, -0.4632, -0.4756, -0.4830, -0.4880, -0.4913, -0.4936,
        -0.4952, -0.4964, -0.4971, -0.4977, -0.4981, -0.4983, -0.4985, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6571e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1908e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1363e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3237, -0.4594, -0.4757, -0.4836, -0.4885, -0.4917, -0.4939, -0.4954,
        -0.4965, -0.4972, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6572e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9463e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1789, -1.1791, -1.1791, -1.1792, -1.1792, -1.1792, -1.1793, -1.1793,
        -1.1793, -1.1793], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 0 	 H2 	 H2 	 1.1527172194427205e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e29)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e29/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e29/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 29 || ,[' rho : 3.086135', ' ae : 51.263633', ' E : 1.832140'] ,|| total loss 38.787860 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4692, -7.4758, -7.4784, -7.4795, -7.4801, -7.4809, -7.4815, -7.4813,
        -7.4808, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4368, -7.3529, -7.3263, -7.3123, -7.3034, -7.2975, -7.2934, -7.2906,
        -7.2887, -7.2873, -7.2865, -7.2858, -7.2854, -7.2851, -7.2849, -7.2848,
        -7.2847, -7.2846, -7.2846, -7.2846, -7.2846, -7.2845, -7.2845, -7.2845,
        -7.2845], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2848, -7.2847, -7.2846, -7.2846, -7.2846, -7.2846, -7.2845, -7.2845,
        -7.2845, -7.2845], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 10 	 Li 	 Li 	 8.38996986930254e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4335, -54.5022, -54.5294, -54.5450, -54.5554, -54.5628, -54.5680,
        -54.5717, -54.5743, -54.5761, -54.5774, -54.5783, -54.5790, -54.5794,
        -54.5797, -54.5800, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7482e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.7482e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5800, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 8 	 N 	 N 	 1.7935780208660645e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4686, -7.4750, -7.4779, -7.4793, -7.4800, -7.4806, -7.4814, -7.4816,
        -7.4811, -7.4807, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808,
        -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5830e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2079e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1668e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 7 	 Li 	 Li 	 1.83796643966119e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2418, -107.2988, -107.2546, -107.2506, -107.2473, -107.2455,
        -107.2451, -107.2452, -107.2454, -107.2459, -107.2465, -107.2471,
        -107.2478, -107.2486, -107.2493, -107.2499, -107.2505, -107.2510,
        -107.2515, -107.2518, -107.2522, -107.2524, -107.2526, -107.2528,
        -107.2530], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4469e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4694, -7.4760, -7.4786, -7.4797, -7.4803, -7.4810, -7.4816, -7.4815,
        -7.4809, -7.4807, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5812e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4961e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6783, -99.6963, -99.7074, -99.7143, -99.7192, -99.7228, -99.7255,
        -99.7274, -99.7288, -99.7298, -99.7305, -99.7310, -99.7313, -99.7316,
        -99.7317, -99.7319, -99.7319, -99.7320, -99.7320, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0030e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2499, -107.2505, -107.2510, -107.2515, -107.2518, -107.2522,
        -107.2524, -107.2526, -107.2528, -107.2530], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 2 	 FLi 	 LiF 	 0.007800815825649799

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0289, -1.1190, -1.1427, -1.1548, -1.1625, -1.1677, -1.1712, -1.1737,
        -1.1755, -1.1767, -1.1775, -1.1781, -1.1786, -1.1788, -1.1790, -1.1792,
        -1.1793, -1.1794, -1.1794, -1.1794, -1.1795, -1.1795, -1.1795, -1.1795,
        -1.1795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4431e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8862e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2618, -0.4420, -0.4659, -0.4773, -0.4842, -0.4888, -0.4919, -0.4940,
        -0.4955, -0.4966, -0.4973, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6569e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1461e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2000e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2701, -0.4444, -0.4673, -0.4782, -0.4848, -0.4892, -0.4922, -0.4942,
        -0.4956, -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6569e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1234e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1792, -1.1793, -1.1794, -1.1794, -1.1794, -1.1795, -1.1795, -1.1795,
        -1.1795, -1.1795], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 0 	 H2 	 H2 	 1.2345414661223328e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7652, -109.8824, -109.7502, -109.6738, -109.6242, -109.5904,
        -109.5668, -109.5504, -109.5390, -109.5310, -109.5254, -109.5215,
        -109.5188, -109.5169, -109.5156, -109.5146, -109.5140, -109.5135,
        -109.5132, -109.5130, -109.5128, -109.5127, -109.5126, -109.5126,
        -109.5125], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2682e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4378, -54.5059, -54.5322, -54.5472, -54.5571, -54.5641, -54.5691,
        -54.5726, -54.5751, -54.5768, -54.5781, -54.5789, -54.5795, -54.5800,
        -54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1265e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4231, -54.4913, -54.5217, -54.5395, -54.5516, -54.5601, -54.5662,
        -54.5706, -54.5736, -54.5758, -54.5773, -54.5784, -54.5792, -54.5797,
        -54.5801, -54.5803, -54.5805, -54.5807, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2201e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5146, -109.5140, -109.5135, -109.5132, -109.5130, -109.5128,
        -109.5127, -109.5126, -109.5126, -109.5125], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5803, -54.5805, -54.5807, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 1 	 N2 	 N2 	 4.123820469575686e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3146, -0.4570, -0.4744, -0.4827, -0.4879, -0.4913, -0.4936, -0.4952,
        -0.4964, -0.4971, -0.4977, -0.4981, -0.4983, -0.4985, -0.4987, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6560e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0205e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3121e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 6 	 H 	 H 	 2.592719814946192e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6821, -99.7038, -99.7133, -99.7189, -99.7228, -99.7256, -99.7276,
        -99.7291, -99.7301, -99.7308, -99.7314, -99.7317, -99.7320, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2044e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2044e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 5 	 F 	 F 	 4.035830083452943e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7535, -37.7922, -37.8070, -37.8153, -37.8209, -37.8249, -37.8277,
        -37.8297, -37.8311, -37.8321, -37.8328, -37.8333, -37.8337, -37.8339,
        -37.8341, -37.8342, -37.8343, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9864e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9864e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 4 	 C 	 C 	 8.395179151296332e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7479, -37.7862, -37.8027, -37.8122, -37.8187, -37.8233, -37.8266,
        -37.8289, -37.8306, -37.8318, -37.8326, -37.8332, -37.8336, -37.8339,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6654, -37.5227, -37.4785, -37.4552, -37.4403, -37.4302, -37.4232,
        -37.4183, -37.4148, -37.4124, -37.4108, -37.4096, -37.4088, -37.4082,
        -37.4078, -37.4075, -37.4073, -37.4072, -37.4071, -37.4070, -37.4070,
        -37.4069, -37.4069, -37.4069, -37.4069], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4075, -37.4073, -37.4072, -37.4071, -37.4070, -37.4070, -37.4069,
        -37.4069, -37.4069, -37.4069], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 9 	 C 	 C 	 4.483371871078266e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9101, -93.5029, -93.4003, -93.3540, -93.3219, -93.3008, -93.2859,
        -93.2755, -93.2680, -93.2628, -93.2590, -93.2563, -93.2543, -93.2529,
        -93.2519, -93.2512, -93.2506, -93.2502, -93.2500, -93.2498, -93.2496,
        -93.2495, -93.2494, -93.2494, -93.2493], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5221e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7521, -37.7909, -37.8061, -37.8147, -37.8205, -37.8247, -37.8276,
        -37.8297, -37.8311, -37.8322, -37.8329, -37.8335, -37.8338, -37.8341,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7830e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4508, -54.5161, -54.5394, -54.5524, -54.5610, -54.5670, -54.5712,
        -54.5742, -54.5763, -54.5778, -54.5788, -54.5796, -54.5801, -54.5804,
        -54.5807, -54.5809, -54.5810, -54.5811, -54.5811, -54.5812, -54.5812,
        -54.5812, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6875e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2678, -0.4437, -0.4669, -0.4779, -0.4846, -0.4891, -0.4921, -0.4942,
        -0.4956, -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6556e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1356e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2512, -93.2506, -93.2502, -93.2500, -93.2498, -93.2496, -93.2495,
        -93.2494, -93.2494, -93.2493], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5810, -54.5811, -54.5811, -54.5812, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 3 	 CHN 	 CNH 	 0.006348475058334776

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e30)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e30/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e30/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 30 || ,[' rho : 3.083748', ' ae : 50.949849', ' E : 1.686456'] ,|| total loss 38.576704 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2694, -0.4442, -0.4672, -0.4781, -0.4847, -0.4891, -0.4921, -0.4942,
        -0.4956, -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6540e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1401e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3082e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 6 	 H 	 H 	 2.642437293163865e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0246, -1.1174, -1.1418, -1.1543, -1.1622, -1.1675, -1.1712, -1.1738,
        -1.1756, -1.1768, -1.1777, -1.1783, -1.1787, -1.1790, -1.1792, -1.1794,
        -1.1795, -1.1796, -1.1796, -1.1797, -1.1797, -1.1797, -1.1797, -1.1797,
        -1.1797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4695e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9389e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2570, -0.4405, -0.4651, -0.4768, -0.4838, -0.4885, -0.4917, -0.4939,
        -0.4954, -0.4965, -0.4972, -0.4977, -0.4981, -0.4984, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6526e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1830e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2443e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2500, -0.4384, -0.4639, -0.4760, -0.4833, -0.4882, -0.4915, -0.4937,
        -0.4953, -0.4964, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6526e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2034e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1794, -1.1795, -1.1796, -1.1796, -1.1797, -1.1797, -1.1797, -1.1797,
        -1.1797, -1.1797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 0 	 H2 	 H2 	 1.3196277244781823e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4770, -7.4792, -7.4801, -7.4806, -7.4815, -7.4817, -7.4813,
        -7.4808, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4583, -7.3669, -7.3355, -7.3187, -7.3079, -7.3006, -7.2956, -7.2922,
        -7.2898, -7.2882, -7.2871, -7.2864, -7.2859, -7.2855, -7.2853, -7.2851,
        -7.2850, -7.2849, -7.2849, -7.2848, -7.2848, -7.2848, -7.2848, -7.2848,
        -7.2848], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2851, -7.2850, -7.2849, -7.2849, -7.2848, -7.2848, -7.2848, -7.2848,
        -7.2848, -7.2848], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 10 	 Li 	 Li 	 8.7536311670765e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4150, -54.4775, -54.5112, -54.5317, -54.5458, -54.5559, -54.5632,
        -54.5684, -54.5721, -54.5747, -54.5765, -54.5778, -54.5787, -54.5794,
        -54.5798, -54.5802, -54.5804, -54.5805, -54.5806, -54.5807, -54.5808,
        -54.5808, -54.5808, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.4076e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4076e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5802, -54.5804, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808,
        -54.5808, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 8 	 N 	 N 	 1.6320805132260754e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9949, -93.5393, -93.4194, -93.3683, -93.3313, -93.3076, -93.2907,
        -93.2789, -93.2705, -93.2645, -93.2602, -93.2572, -93.2550, -93.2534,
        -93.2522, -93.2514, -93.2508, -93.2504, -93.2501, -93.2498, -93.2497,
        -93.2495, -93.2494, -93.2494, -93.2493], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5117e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7451, -37.7818, -37.7994, -37.8098, -37.8169, -37.8219, -37.8256,
        -37.8282, -37.8300, -37.8313, -37.8323, -37.8329, -37.8334, -37.8337,
        -37.8339, -37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1204e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4564, -54.5198, -54.5419, -54.5540, -54.5620, -54.5676, -54.5716,
        -54.5743, -54.5763, -54.5777, -54.5787, -54.5794, -54.5798, -54.5802,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0610e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2423, -0.4360, -0.4626, -0.4751, -0.4827, -0.4878, -0.4912, -0.4935,
        -0.4952, -0.4963, -0.4971, -0.4976, -0.4980, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6494e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2451e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2514, -93.2508, -93.2504, -93.2501, -93.2498, -93.2497, -93.2495,
        -93.2494, -93.2494, -93.2493], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5806, -54.5807, -54.5808, -54.5808, -54.5809, -54.5809, -54.5809,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 3 	 CHN 	 CNH 	 0.006302033894803716

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7502, -37.7889, -37.8046, -37.8136, -37.8196, -37.8239, -37.8270,
        -37.8291, -37.8307, -37.8318, -37.8326, -37.8331, -37.8335, -37.8338,
        -37.8340, -37.8341, -37.8342, -37.8343, -37.8343, -37.8343, -37.8344,
        -37.8344, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6846, -37.5327, -37.4847, -37.4594, -37.4432, -37.4322, -37.4245,
        -37.4192, -37.4154, -37.4128, -37.4110, -37.4097, -37.4088, -37.4082,
        -37.4078, -37.4075, -37.4072, -37.4071, -37.4070, -37.4069, -37.4069,
        -37.4068, -37.4068, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8341, -37.8342, -37.8343, -37.8343, -37.8343, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4075, -37.4072, -37.4071, -37.4070, -37.4069, -37.4069, -37.4068,
        -37.4068, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 9 	 C 	 C 	 4.405420871585383e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2666, -107.3096, -107.2634, -107.2569, -107.2521, -107.2493,
        -107.2482, -107.2476, -107.2474, -107.2475, -107.2479, -107.2484,
        -107.2490, -107.2496, -107.2503, -107.2509, -107.2515, -107.2519,
        -107.2524, -107.2527, -107.2530, -107.2533, -107.2535, -107.2537,
        -107.2538], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4542e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4770, -7.4792, -7.4801, -7.4806, -7.4814, -7.4818, -7.4814,
        -7.4809, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809,
        -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5153e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.1530e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6791, -99.6989, -99.7094, -99.7159, -99.7204, -99.7237, -99.7261,
        -99.7278, -99.7291, -99.7300, -99.7306, -99.7310, -99.7314, -99.7316,
        -99.7317, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0548e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2509, -107.2515, -107.2519, -107.2524, -107.2527, -107.2530,
        -107.2533, -107.2535, -107.2537, -107.2538], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 2 	 FLi 	 LiF 	 0.007734651378738344

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6795, -99.6998, -99.7101, -99.7163, -99.7207, -99.7239, -99.7262,
        -99.7278, -99.7290, -99.7298, -99.7305, -99.7309, -99.7312, -99.7314,
        -99.7315, -99.7316, -99.7317, -99.7318, -99.7318, -99.7318, -99.7318,
        -99.7319, -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9799e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9799e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7316, -99.7317, -99.7318, -99.7318, -99.7318, -99.7318, -99.7319,
        -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 5 	 F 	 F 	 9.64230107957706e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4876, -109.8962, -109.7505, -109.6735, -109.6242, -109.5904,
        -109.5669, -109.5504, -109.5389, -109.5308, -109.5252, -109.5212,
        -109.5184, -109.5165, -109.5151, -109.5142, -109.5135, -109.5131,
        -109.5127, -109.5125, -109.5123, -109.5122, -109.5121, -109.5121,
        -109.5121], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2631e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4256, -54.4941, -54.5236, -54.5408, -54.5524, -54.5605, -54.5664,
        -54.5705, -54.5735, -54.5756, -54.5770, -54.5780, -54.5788, -54.5793,
        -54.5796, -54.5799, -54.5801, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8091e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4232, -54.4914, -54.5216, -54.5393, -54.5513, -54.5598, -54.5658,
        -54.5701, -54.5732, -54.5754, -54.5769, -54.5779, -54.5787, -54.5792,
        -54.5796, -54.5799, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8287e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5142, -109.5135, -109.5131, -109.5127, -109.5125, -109.5123,
        -109.5122, -109.5121, -109.5121, -109.5121], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 1 	 N2 	 N2 	 3.826182009538378e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4686, -7.4745, -7.4776, -7.4793, -7.4800, -7.4806, -7.4814, -7.4818,
        -7.4814, -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4904e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.9429e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9818e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 7 	 Li 	 Li 	 2.0030550474825865e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7789, -37.7971, -37.8079, -37.8154, -37.8207, -37.8246,
        -37.8273, -37.8293, -37.8307, -37.8316, -37.8323, -37.8328, -37.8332,
        -37.8334, -37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7957e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7957e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 4 	 C 	 C 	 9.958581986581428e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e31)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e31/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e31/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 31 || ,[' rho : 3.080343', ' ae : 50.744608', ' E : 1.763590'] ,|| total loss 38.435777 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7523, -37.7910, -37.8059, -37.8144, -37.8201, -37.8242, -37.8270,
        -37.8291, -37.8305, -37.8316, -37.8323, -37.8328, -37.8331, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7293, -37.5576, -37.4999, -37.4696, -37.4501, -37.4369, -37.4277,
        -37.4213, -37.4168, -37.4137, -37.4115, -37.4100, -37.4089, -37.4082,
        -37.4077, -37.4073, -37.4071, -37.4069, -37.4068, -37.4067, -37.4066,
        -37.4066, -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4071, -37.4069, -37.4068, -37.4067, -37.4066, -37.4066,
        -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 9 	 C 	 C 	 4.313138267250106e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6802, -99.7014, -99.7112, -99.7170, -99.7211, -99.7240, -99.7261,
        -99.7276, -99.7287, -99.7295, -99.7301, -99.7305, -99.7307, -99.7309,
        -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7314, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4752e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.4752e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7312, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313, -99.7314,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 5 	 F 	 F 	 1.5062631163651376e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2540, -107.3052, -107.2590, -107.2539, -107.2499, -107.2475,
        -107.2467, -107.2465, -107.2464, -107.2467, -107.2472, -107.2477,
        -107.2484, -107.2491, -107.2498, -107.2504, -107.2510, -107.2516,
        -107.2520, -107.2524, -107.2527, -107.2530, -107.2532, -107.2534,
        -107.2535], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4523e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4688, -7.4748, -7.4778, -7.4794, -7.4801, -7.4807, -7.4815, -7.4818,
        -7.4813, -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4649e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0389e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6848, -99.7066, -99.7151, -99.7200, -99.7233, -99.7256, -99.7273,
        -99.7285, -99.7294, -99.7300, -99.7304, -99.7307, -99.7309, -99.7311,
        -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9130e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2504, -107.2510, -107.2516, -107.2520, -107.2524, -107.2527,
        -107.2530, -107.2532, -107.2534, -107.2535], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 2 	 FLi 	 LiF 	 0.00770125184106317

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4289, -54.4976, -54.5261, -54.5425, -54.5536, -54.5614, -54.5669,
        -54.5708, -54.5736, -54.5756, -54.5770, -54.5780, -54.5786, -54.5791,
        -54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0741e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0741e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 8 	 N 	 N 	 1.890332161669781e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7377, -109.8993, -109.7586, -109.6793, -109.6280, -109.5930,
        -109.5686, -109.5516, -109.5397, -109.5314, -109.5256, -109.5216,
        -109.5187, -109.5167, -109.5153, -109.5144, -109.5137, -109.5132,
        -109.5129, -109.5127, -109.5125, -109.5124, -109.5123, -109.5122,
        -109.5122], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2608e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4367, -54.5048, -54.5313, -54.5463, -54.5564, -54.5634, -54.5684,
        -54.5720, -54.5745, -54.5762, -54.5775, -54.5784, -54.5790, -54.5794,
        -54.5797, -54.5799, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8092e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4179, -54.4837, -54.5158, -54.5350, -54.5482, -54.5575, -54.5642,
        -54.5690, -54.5723, -54.5747, -54.5764, -54.5776, -54.5784, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9572e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5144, -109.5137, -109.5132, -109.5129, -109.5127, -109.5125,
        -109.5124, -109.5123, -109.5122, -109.5122], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5801, -54.5802, -54.5803, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 1 	 N2 	 N2 	 3.666485551040909e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7453, -37.7822, -37.7996, -37.8098, -37.8169, -37.8218, -37.8254,
        -37.8280, -37.8298, -37.8311, -37.8320, -37.8327, -37.8331, -37.8335,
        -37.8337, -37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4811e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4811e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8341, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 4 	 C 	 C 	 9.33019265347949e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4687, -7.4742, -7.4774, -7.4792, -7.4801, -7.4806, -7.4814, -7.4819,
        -7.4816, -7.4811, -7.4809, -7.4808, -7.4808, -7.4809, -7.4810, -7.4810,
        -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4195, -7.3433, -7.3204, -7.3084, -7.3009, -7.2959, -7.2924, -7.2901,
        -7.2885, -7.2874, -7.2866, -7.2861, -7.2858, -7.2855, -7.2853, -7.2852,
        -7.2852, -7.2851, -7.2851, -7.2850, -7.2850, -7.2850, -7.2850, -7.2850,
        -7.2850], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2852, -7.2852, -7.2851, -7.2851, -7.2850, -7.2850, -7.2850, -7.2850,
        -7.2850, -7.2850], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 10 	 Li 	 Li 	 9.547274485921472e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0406, -93.5594, -93.4302, -93.3768, -93.3373, -93.3124, -93.2944,
        -93.2819, -93.2730, -93.2667, -93.2622, -93.2590, -93.2567, -93.2550,
        -93.2538, -93.2530, -93.2524, -93.2519, -93.2516, -93.2513, -93.2512,
        -93.2510, -93.2509, -93.2509, -93.2508], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4812e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7674, -37.8026, -37.8141, -37.8204, -37.8246, -37.8275, -37.8296,
        -37.8310, -37.8320, -37.8328, -37.8333, -37.8336, -37.8339, -37.8341,
        -37.8342, -37.8343, -37.8344, -37.8344, -37.8344, -37.8344, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9678e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4426, -54.5098, -54.5349, -54.5491, -54.5585, -54.5651, -54.5697,
        -54.5730, -54.5754, -54.5770, -54.5782, -54.5790, -54.5796, -54.5800,
        -54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5808,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1517e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2382, -0.4346, -0.4618, -0.4746, -0.4824, -0.4875, -0.4910, -0.4934,
        -0.4951, -0.4962, -0.4970, -0.4976, -0.4980, -0.4983, -0.4984, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6377e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3299e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2530, -93.2524, -93.2519, -93.2516, -93.2513, -93.2512, -93.2510,
        -93.2509, -93.2509, -93.2508], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8343, -37.8344, -37.8344, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 3 	 CHN 	 CNH 	 0.006183578502045468

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0513, -1.1286, -1.1490, -1.1594, -1.1660, -1.1704, -1.1735, -1.1756,
        -1.1771, -1.1782, -1.1789, -1.1794, -1.1797, -1.1800, -1.1802, -1.1803,
        -1.1804, -1.1804, -1.1805, -1.1805, -1.1805, -1.1805, -1.1806, -1.1806,
        -1.1806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6015e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2030e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2735, -0.4453, -0.4678, -0.4785, -0.4850, -0.4893, -0.4922, -0.4942,
        -0.4956, -0.4966, -0.4973, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6367e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2333e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4765e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2486, -0.4379, -0.4636, -0.4758, -0.4832, -0.4880, -0.4913, -0.4936,
        -0.4952, -0.4963, -0.4971, -0.4976, -0.4980, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6367e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3046e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1803, -1.1804, -1.1804, -1.1805, -1.1805, -1.1805, -1.1805, -1.1806,
        -1.1806, -1.1806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 0 	 H2 	 H2 	 1.6781250994835966e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2640, -0.4425, -0.4662, -0.4775, -0.4843, -0.4888, -0.4919, -0.4940,
        -0.4955, -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6355e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2671e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2711e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 6 	 H 	 H 	 2.9807851360644937e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4708, -7.4771, -7.4794, -7.4803, -7.4808, -7.4816, -7.4820, -7.4816,
        -7.4811, -7.4809, -7.4809, -7.4809, -7.4810, -7.4811, -7.4811, -7.4811,
        -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4341e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0458e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8692e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4812], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 7 	 Li 	 Li 	 2.332955100877949e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e32)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e32/2022-12-13_14:41:57.654750_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e32/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 32 || ,[' rho : 3.074676', ' ae : 50.479039', ' E : 1.792485'] ,|| total loss 38.251424 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7451, -37.7815, -37.7991, -37.8095, -37.8167, -37.8218, -37.8254,
        -37.8280, -37.8299, -37.8312, -37.8321, -37.8328, -37.8333, -37.8336,
        -37.8338, -37.8340, -37.8341, -37.8342, -37.8342, -37.8343, -37.8343,
        -37.8343, -37.8343, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6841, -37.5325, -37.4846, -37.4594, -37.4432, -37.4322, -37.4246,
        -37.4193, -37.4156, -37.4130, -37.4111, -37.4099, -37.4090, -37.4084,
        -37.4079, -37.4076, -37.4074, -37.4073, -37.4071, -37.4071, -37.4070,
        -37.4070, -37.4070, -37.4069, -37.4069], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8340, -37.8341, -37.8342, -37.8342, -37.8343, -37.8343, -37.8343,
        -37.8343, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4074, -37.4073, -37.4071, -37.4071, -37.4070, -37.4070,
        -37.4070, -37.4069, -37.4069], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 9 	 C 	 C 	 4.28462243870346e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0326, -1.1211, -1.1445, -1.1564, -1.1640, -1.1691, -1.1726, -1.1751,
        -1.1768, -1.1780, -1.1788, -1.1794, -1.1798, -1.1801, -1.1803, -1.1804,
        -1.1805, -1.1806, -1.1806, -1.1807, -1.1807, -1.1807, -1.1807, -1.1807,
        -1.1807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6299e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2598e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3348, -0.4622, -0.4773, -0.4846, -0.4891, -0.4921, -0.4942, -0.4956,
        -0.4966, -0.4973, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6318e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1192e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.5235e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3319, -0.4615, -0.4769, -0.4843, -0.4889, -0.4920, -0.4941, -0.4955,
        -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6318e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1252e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1804, -1.1805, -1.1806, -1.1806, -1.1807, -1.1807, -1.1807, -1.1807,
        -1.1807, -1.1807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 0 	 H2 	 H2 	 1.75620679943939e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4708, -7.4772, -7.4794, -7.4803, -7.4808, -7.4816, -7.4819, -7.4815,
        -7.4811, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4811, -7.4811,
        -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4196, -7.3434, -7.3204, -7.3085, -7.3010, -7.2959, -7.2925, -7.2902,
        -7.2886, -7.2875, -7.2867, -7.2862, -7.2858, -7.2856, -7.2854, -7.2853,
        -7.2852, -7.2852, -7.2852, -7.2851, -7.2851, -7.2851, -7.2851, -7.2851,
        -7.2851], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4812], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2853, -7.2852, -7.2852, -7.2852, -7.2851, -7.2851, -7.2851, -7.2851,
        -7.2851, -7.2851], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 10 	 Li 	 Li 	 9.883246215467354e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2374, -0.4343, -0.4616, -0.4745, -0.4823, -0.4874, -0.4909, -0.4933,
        -0.4950, -0.4962, -0.4970, -0.4975, -0.4979, -0.4982, -0.4984, -0.4986,
        -0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6290e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3887e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2581e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 6 	 H 	 H 	 3.116654822138107e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9948, -93.5398, -93.4199, -93.3690, -93.3321, -93.3085, -93.2916,
        -93.2799, -93.2715, -93.2656, -93.2613, -93.2583, -93.2561, -93.2546,
        -93.2534, -93.2526, -93.2520, -93.2516, -93.2513, -93.2511, -93.2509,
        -93.2508, -93.2507, -93.2507, -93.2506], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4628e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7444, -37.7802, -37.7980, -37.8087, -37.8159, -37.8211, -37.8249,
        -37.8276, -37.8295, -37.8308, -37.8318, -37.8325, -37.8329, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6989e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4326, -54.5011, -54.5286, -54.5443, -54.5549, -54.5623, -54.5676,
        -54.5714, -54.5740, -54.5759, -54.5772, -54.5781, -54.5788, -54.5792,
        -54.5795, -54.5798, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9797e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2463, -0.4371, -0.4632, -0.4755, -0.4830, -0.4879, -0.4912, -0.4935,
        -0.4952, -0.4963, -0.4970, -0.4976, -0.4980, -0.4982, -0.4984, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6278e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3681e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2526, -93.2520, -93.2516, -93.2513, -93.2511, -93.2509, -93.2508,
        -93.2507, -93.2507, -93.2506], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 3 	 CHN 	 CNH 	 0.0061165368712708425

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6789, -99.6989, -99.7092, -99.7155, -99.7199, -99.7231, -99.7254,
        -99.7271, -99.7283, -99.7292, -99.7298, -99.7302, -99.7305, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3265e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.3265e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 5 	 F 	 F 	 1.6680308326824775e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3219, -107.3335, -107.2845, -107.2713, -107.2627, -107.2574,
        -107.2539, -107.2517, -107.2505, -107.2500, -107.2498, -107.2500,
        -107.2503, -107.2508, -107.2512, -107.2517, -107.2521, -107.2525,
        -107.2529, -107.2532, -107.2534, -107.2537, -107.2538, -107.2540,
        -107.2541], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4542e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4719, -7.4780, -7.4798, -7.4804, -7.4811, -7.4818, -7.4817, -7.4812,
        -7.4809, -7.4808, -7.4808, -7.4808, -7.4809, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3750e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6455e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6777, -99.6956, -99.7065, -99.7133, -99.7182, -99.7218, -99.7244,
        -99.7263, -99.7276, -99.7286, -99.7293, -99.7298, -99.7301, -99.7304,
        -99.7306, -99.7307, -99.7308, -99.7308, -99.7309, -99.7309, -99.7309,
        -99.7309, -99.7309, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0190e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2517, -107.2521, -107.2525, -107.2529, -107.2532, -107.2534,
        -107.2537, -107.2538, -107.2540, -107.2541], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7307, -99.7308, -99.7308, -99.7309, -99.7309, -99.7309, -99.7309,
        -99.7309, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 2 	 FLi 	 LiF 	 0.007617939737645882

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4147, -54.4773, -54.5108, -54.5310, -54.5450, -54.5550, -54.5622,
        -54.5673, -54.5710, -54.5735, -54.5754, -54.5767, -54.5776, -54.5782,
        -54.5786, -54.5789, -54.5792, -54.5793, -54.5794, -54.5795, -54.5796,
        -54.5796, -54.5796, -54.5796, -54.5796], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9961e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9961e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5789, -54.5792, -54.5793, -54.5794, -54.5795, -54.5796, -54.5796,
        -54.5796, -54.5796, -54.5796], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 8 	 N 	 N 	 2.1422122437710323e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4703, -7.4766, -7.4791, -7.4801, -7.4806, -7.4813, -7.4818, -7.4816,
        -7.4810, -7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3538e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5071e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7086e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 7 	 Li 	 Li 	 2.1233907514157563e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7433, -37.7776, -37.7960, -37.8070, -37.8146, -37.8200, -37.8239,
        -37.8268, -37.8288, -37.8302, -37.8312, -37.8319, -37.8324, -37.8328,
        -37.8330, -37.8332, -37.8333, -37.8334, -37.8335, -37.8335, -37.8335,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3863e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3863e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8332, -37.8333, -37.8334, -37.8335, -37.8335, -37.8335, -37.8336,
        -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 4 	 C 	 C 	 1.1211647252100324e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7492, -109.8901, -109.7535, -109.6756, -109.6252, -109.5907,
        -109.5668, -109.5501, -109.5384, -109.5303, -109.5246, -109.5206,
        -109.5178, -109.5159, -109.5145, -109.5136, -109.5129, -109.5124,
        -109.5121, -109.5119, -109.5117, -109.5116, -109.5115, -109.5115,
        -109.5114], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2547e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4161, -54.4803, -54.5130, -54.5328, -54.5463, -54.5560, -54.5629,
        -54.5678, -54.5714, -54.5738, -54.5756, -54.5768, -54.5777, -54.5783,
        -54.5787, -54.5790, -54.5792, -54.5794, -54.5795, -54.5796, -54.5796,
        -54.5797, -54.5797, -54.5797, -54.5797], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8915e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4340, -54.5022, -54.5292, -54.5446, -54.5550, -54.5622, -54.5674,
        -54.5710, -54.5736, -54.5754, -54.5767, -54.5776, -54.5782, -54.5787,
        -54.5790, -54.5792, -54.5794, -54.5795, -54.5796, -54.5796, -54.5796,
        -54.5797, -54.5797, -54.5797, -54.5797], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7247e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5136, -109.5129, -109.5124, -109.5121, -109.5119, -109.5117,
        -109.5116, -109.5115, -109.5115, -109.5114], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5792, -54.5794, -54.5795, -54.5796, -54.5796, -54.5796, -54.5797,
        -54.5797, -54.5797, -54.5797], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 1 	 N2 	 N2 	 3.342206504315167e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e33)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e33/2022-12-13_14:41:57.654750_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e33/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 33 || ,[' rho : 3.068850', ' ae : 50.210524', ' E : 1.929301'] ,|| total loss 38.064976 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4691, -7.4747, -7.4778, -7.4795, -7.4802, -7.4807, -7.4815, -7.4819,
        -7.4815, -7.4810, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810, -7.4810,
        -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3411e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8209e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6832e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 7 	 Li 	 Li 	 2.1985068802165395e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0288, -1.1198, -1.1438, -1.1561, -1.1639, -1.1692, -1.1728, -1.1753,
        -1.1771, -1.1783, -1.1792, -1.1798, -1.1802, -1.1805, -1.1807, -1.1809,
        -1.1810, -1.1810, -1.1811, -1.1811, -1.1811, -1.1812, -1.1812, -1.1812,
        -1.1812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7026e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4053e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2109, -0.4252, -0.4566, -0.4713, -0.4801, -0.4859, -0.4899, -0.4926,
        -0.4945, -0.4958, -0.4967, -0.4973, -0.4978, -0.4981, -0.4983, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6176e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5606e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6406e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2669, -0.4433, -0.4666, -0.4777, -0.4844, -0.4889, -0.4919, -0.4940,
        -0.4955, -0.4965, -0.4972, -0.4977, -0.4980, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6176e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3751e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1809, -1.1810, -1.1810, -1.1811, -1.1811, -1.1811, -1.1812, -1.1812,
        -1.1812, -1.1812], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 0 	 H2 	 H2 	 1.9890002320903948e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 10C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [10, 9]
================================
Subsetting Dataset with molecules[ 10C]:  ,[10, 9]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7554, -37.7936, -37.8077, -37.8156, -37.8209, -37.8246, -37.8273,
        -37.8291, -37.8305, -37.8314, -37.8321, -37.8326, -37.8329, -37.8331,
        -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6795, -37.5298, -37.4827, -37.4579, -37.4421, -37.4313, -37.4238,
        -37.4186, -37.4149, -37.4124, -37.4106, -37.4093, -37.4084, -37.4078,
        -37.4074, -37.4071, -37.4069, -37.4068, -37.4066, -37.4066, -37.4065,
        -37.4065, -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8337], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4071, -37.4069, -37.4068, -37.4066, -37.4066, -37.4065, -37.4065,
        -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 9 	 C 	 C 	 4.150413313579443e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 12Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [12, 11]
================================
Subsetting Dataset with molecules[ 12Li]:  ,[12, 11]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4691, -7.4746, -7.4778, -7.4794, -7.4802, -7.4807, -7.4815, -7.4819,
        -7.4815, -7.4810, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4513, -7.3621, -7.3324, -7.3167, -7.3066, -7.2998, -7.2952, -7.2920,
        -7.2898, -7.2883, -7.2873, -7.2866, -7.2861, -7.2858, -7.2856, -7.2854,
        -7.2853, -7.2852, -7.2852, -7.2852, -7.2851, -7.2851, -7.2851, -7.2851,
        -7.2851], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2854, -7.2853, -7.2852, -7.2852, -7.2852, -7.2851, -7.2851, -7.2851,
        -7.2851, -7.2851], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 10 	 Li 	 Li 	 1.0688714677713836e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2425, -107.3026, -107.2558, -107.2520, -107.2487, -107.2467,
        -107.2462, -107.2462, -107.2464, -107.2467, -107.2473, -107.2479,
        -107.2486, -107.2494, -107.2501, -107.2508, -107.2515, -107.2520,
        -107.2525, -107.2530, -107.2533, -107.2536, -107.2538, -107.2540,
        -107.2542], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4603e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4693, -7.4751, -7.4781, -7.4796, -7.4803, -7.4808, -7.4816, -7.4819,
        -7.4814, -7.4810, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3154e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6636e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6863, -99.7078, -99.7157, -99.7202, -99.7233, -99.7254, -99.7270,
        -99.7281, -99.7288, -99.7294, -99.7298, -99.7301, -99.7303, -99.7304,
        -99.7305, -99.7306, -99.7306, -99.7306, -99.7307, -99.7307, -99.7307,
        -99.7307, -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1365e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2508, -107.2515, -107.2520, -107.2525, -107.2530, -107.2533,
        -107.2536, -107.2538, -107.2540, -107.2542], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7306, -99.7306, -99.7306, -99.7307, -99.7307, -99.7307, -99.7307,
        -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 2 	 FLi 	 LiF 	 0.007593359282601397

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2498, -0.4381, -0.4637, -0.4758, -0.4832, -0.4880, -0.4913, -0.4936,
        -0.4952, -0.4963, -0.4970, -0.4976, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6138e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4516e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2277e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 6 	 H 	 H 	 3.4151771282877464e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9487, -93.5198, -93.4092, -93.3609, -93.3266, -93.3045, -93.2887,
        -93.2777, -93.2699, -93.2643, -93.2604, -93.2576, -93.2556, -93.2541,
        -93.2531, -93.2523, -93.2518, -93.2514, -93.2511, -93.2509, -93.2507,
        -93.2506, -93.2505, -93.2505, -93.2504], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4345e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7453, -37.7822, -37.7994, -37.8095, -37.8164, -37.8213, -37.8248,
        -37.8273, -37.8291, -37.8304, -37.8313, -37.8319, -37.8324, -37.8327,
        -37.8329, -37.8331, -37.8332, -37.8332, -37.8333, -37.8333, -37.8334,
        -37.8334, -37.8334, -37.8334, -37.8334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6100e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4764, -54.5100, -54.5304, -54.5445, -54.5546, -54.5618,
        -54.5670, -54.5707, -54.5733, -54.5751, -54.5764, -54.5773, -54.5780,
        -54.5784, -54.5787, -54.5789, -54.5791, -54.5792, -54.5793, -54.5793,
        -54.5794, -54.5794, -54.5794, -54.5794], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2991e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2971, -0.4520, -0.4715, -0.4808, -0.4865, -0.4903, -0.4929, -0.4947,
        -0.4959, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6126e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3274e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2523, -93.2518, -93.2514, -93.2511, -93.2509, -93.2507, -93.2506,
        -93.2505, -93.2505, -93.2504], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8331, -37.8332, -37.8332, -37.8333, -37.8333, -37.8334, -37.8334,
        -37.8334, -37.8334, -37.8334], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5787, -54.5789, -54.5791, -54.5792, -54.5793, -54.5793, -54.5794,
        -54.5794, -54.5794, -54.5794], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 3 	 CHN 	 CNH 	 0.006015587809650062

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4159, -54.4803, -54.5129, -54.5325, -54.5460, -54.5556, -54.5625,
        -54.5674, -54.5709, -54.5734, -54.5751, -54.5763, -54.5772, -54.5778,
        -54.5782, -54.5785, -54.5787, -54.5789, -54.5790, -54.5790, -54.5791,
        -54.5791, -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6242e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6242e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5785, -54.5787, -54.5789, -54.5790, -54.5790, -54.5791, -54.5791,
        -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 8 	 N 	 N 	 2.3523574158342132e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9434, -109.3312, -109.4734, -109.4922, -109.4970, -109.4997,
        -109.5020, -109.5039, -109.5055, -109.5067, -109.5077, -109.5084,
        -109.5090, -109.5094, -109.5097, -109.5100, -109.5101, -109.5102,
        -109.5103, -109.5104, -109.5104, -109.5105, -109.5105, -109.5105,
        -109.5105], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2507e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4457, -54.5116, -54.5357, -54.5491, -54.5580, -54.5642, -54.5686,
        -54.5718, -54.5740, -54.5755, -54.5766, -54.5774, -54.5779, -54.5783,
        -54.5786, -54.5787, -54.5789, -54.5790, -54.5790, -54.5791, -54.5791,
        -54.5791, -54.5791, -54.5791, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4477e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4194, -54.4861, -54.5173, -54.5358, -54.5484, -54.5573, -54.5637,
        -54.5683, -54.5715, -54.5738, -54.5754, -54.5765, -54.5773, -54.5779,
        -54.5783, -54.5785, -54.5787, -54.5789, -54.5790, -54.5790, -54.5791,
        -54.5791, -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6333e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5100, -109.5101, -109.5102, -109.5103, -109.5104, -109.5104,
        -109.5105, -109.5105, -109.5105, -109.5105], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5785, -54.5787, -54.5789, -54.5790, -54.5790, -54.5791, -54.5791,
        -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 1 	 N2 	 N2 	 3.266997778404692e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6775, -99.6969, -99.7073, -99.7137, -99.7183, -99.7216, -99.7240,
        -99.7257, -99.7269, -99.7278, -99.7285, -99.7289, -99.7292, -99.7295,
        -99.7296, -99.7297, -99.7298, -99.7299, -99.7299, -99.7299, -99.7299,
        -99.7300, -99.7300, -99.7300, -99.7300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7516e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7516e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7297, -99.7298, -99.7299, -99.7299, -99.7299, -99.7299, -99.7300,
        -99.7300, -99.7300, -99.7300], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 5 	 F 	 F 	 3.622708134020327e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7581, -37.7956, -37.8090, -37.8164, -37.8213, -37.8248, -37.8273,
        -37.8290, -37.8303, -37.8311, -37.8318, -37.8322, -37.8325, -37.8327,
        -37.8329, -37.8330, -37.8330, -37.8331, -37.8331, -37.8332, -37.8332,
        -37.8332, -37.8332, -37.8332, -37.8332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8410e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8410e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8330, -37.8330, -37.8331, -37.8331, -37.8332, -37.8332, -37.8332,
        -37.8332, -37.8332, -37.8332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 4 	 C 	 C 	 1.2468844264633454e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e34)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e34/2022-12-13_14:41:57.654750_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/15/MODEL_MGGA_e34/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 34 || ,[' rho : 3.064114', ' ae : 49.993154', ' E : 2.064050'] ,|| total loss 37.914063 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2501, -0.4382, -0.4638, -0.4758, -0.4832, -0.4880, -0.4913, -0.4936,
        -0.4951, -0.4962, -0.4970, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6073e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4951e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2148e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 6 	 H 	 H 	 3.548639633279862e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4713, -7.4775, -7.4796, -7.4804, -7.4809, -7.4817, -7.4819, -7.4814,
        -7.4810, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810, -7.4810, -7.4811,
        -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2604e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9244e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5218e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 7 	 Li 	 Li 	 2.213911324996125e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7904, -109.8518, -109.7337, -109.6623, -109.6159, -109.5841,
        -109.5621, -109.5468, -109.5361, -109.5287, -109.5235, -109.5199,
        -109.5173, -109.5156, -109.5143, -109.5135, -109.5129, -109.5124,
        -109.5121, -109.5119, -109.5118, -109.5117, -109.5116, -109.5116,
        -109.5115], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2511e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4755, -54.5093, -54.5299, -54.5442, -54.5544, -54.5617,
        -54.5669, -54.5706, -54.5733, -54.5751, -54.5765, -54.5774, -54.5780,
        -54.5785, -54.5788, -54.5790, -54.5792, -54.5793, -54.5794, -54.5794,
        -54.5795, -54.5795, -54.5795, -54.5795], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1883e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4137, -54.4725, -54.5070, -54.5282, -54.5429, -54.5534, -54.5610,
        -54.5664, -54.5703, -54.5730, -54.5750, -54.5763, -54.5773, -54.5780,
        -54.5784, -54.5788, -54.5790, -54.5792, -54.5793, -54.5794, -54.5794,
        -54.5795, -54.5795, -54.5795, -54.5795], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2156e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5135, -109.5129, -109.5124, -109.5121, -109.5119, -109.5118,
        -109.5117, -109.5116, -109.5116, -109.5115], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5788, -54.5790, -54.5792, -54.5793, -54.5794, -54.5794, -54.5795,
        -54.5795, -54.5795, -54.5795], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 1 	 N2 	 N2 	 3.069430035844327e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2505, -107.3067, -107.2590, -107.2544, -107.2507, -107.2484,
        -107.2476, -107.2474, -107.2475, -107.2477, -107.2482, -107.2488,
        -107.2495, -107.2502, -107.2509, -107.2516, -107.2523, -107.2528,
        -107.2533, -107.2537, -107.2541, -107.2544, -107.2546, -107.2548,
        -107.2550], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504778
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4681e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4704, -7.4765, -7.4791, -7.4802, -7.4807, -7.4813, -7.4819, -7.4817,
        -7.4812, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4811, -7.4811,
        -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2528e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0256e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6799, -99.7006, -99.7104, -99.7163, -99.7204, -99.7233, -99.7255,
        -99.7270, -99.7281, -99.7289, -99.7295, -99.7299, -99.7301, -99.7303,
        -99.7305, -99.7306, -99.7306, -99.7307, -99.7307, -99.7307, -99.7308,
        -99.7308, -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1063e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2516, -107.2523, -107.2528, -107.2533, -107.2537, -107.2541,
        -107.2544, -107.2546, -107.2548, -107.2550], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4812], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7306, -99.7306, -99.7307, -99.7307, -99.7307, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 2 	 FLi 	 LiF 	 0.007541314321320028

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6857, -99.7072, -99.7153, -99.7200, -99.7231, -99.7253, -99.7269,
        -99.7281, -99.7289, -99.7295, -99.7299, -99.7302, -99.7304, -99.7305,
        -99.7306, -99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0547e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0547e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 5 	 F 	 F 	 2.208231492408045e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0238, -1.1181, -1.1430, -1.1558, -1.1638, -1.1693, -1.1731, -1.1757,
        -1.1775, -1.1788, -1.1797, -1.1803, -1.1808, -1.1811, -1.1813, -1.1814,
        -1.1815, -1.1816, -1.1817, -1.1817, -1.1817, -1.1817, -1.1818, -1.1818,
        -1.1818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668208
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7975e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5950e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2301, -0.4318, -0.4602, -0.4736, -0.4817, -0.4870, -0.4906, -0.4931,
        -0.4948, -0.4960, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6063e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5669e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8078e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3016, -0.4533, -0.4722, -0.4813, -0.4868, -0.4905, -0.4930, -0.4948,
        -0.4960, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6064e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3578e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1814, -1.1815, -1.1816, -1.1817, -1.1817, -1.1817, -1.1817, -1.1818,
        -1.1818, -1.1818], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 0 	 H2 	 H2 	 2.281160848238068e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1759, -93.6145, -93.4578, -93.3978, -93.3513, -93.3227, -93.3019,
        -93.2875, -93.2773, -93.2701, -93.2649, -93.2613, -93.2586, -93.2567,
        -93.2554, -93.2544, -93.2537, -93.2532, -93.2528, -93.2526, -93.2524,
        -93.2522, -93.2521, -93.2521, -93.2520], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4184e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7489, -37.7871, -37.8031, -37.8123, -37.8185, -37.8229, -37.8260,
        -37.8282, -37.8298, -37.8310, -37.8317, -37.8323, -37.8327, -37.8330,
        -37.8332, -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2493e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION

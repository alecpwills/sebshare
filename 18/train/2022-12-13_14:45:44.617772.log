{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/15",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/12/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": true,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "subset": true,
    "chkptmax": 999999999
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{' 11HONN': [11, 9, 10], ' 14CHHHHO': [14, 12, 13], ' 17HFF': [17, 15, 16], ' 19C': [19, 18], ' 21Li': [21, 20]}
MOLECULES TO TRAIN ON
{'  0HH': [0, 6, 6], '  1NN': [1, 8, 8], '  2LiF': [2, 7, 5], '  3CNH': [3, 4, 8, 6], 'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8], ' 11HONN': [11, 9, 10], ' 14CHHHHO': [14, 12, 13], ' 17HFF': [17, 15, 16], ' 19C': [19, 18], ' 21Li': [21, 20]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 2, 5: 2, 6: 3, 7: 2, 8: 3, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1, 18: 1, 19: 1, 20: 1, 21: 1}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4628, -7.4700, -7.4732, -7.4751, -7.4762, -7.4771, -7.4779, -7.4787,
        -7.4790, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4453, -7.3575, -7.3281, -7.3124, -7.3024, -7.2955, -7.2909, -7.2876,
        -7.2854, -7.2839, -7.2829, -7.2822, -7.2817, -7.2813, -7.2811, -7.2809,
        -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2806, -7.2806,
        -7.2806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2809, -7.2808, -7.2808, -7.2807, -7.2807, -7.2807, -7.2807, -7.2806,
        -7.2806, -7.2806], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 13 	 Li 	 Li 	 1.4178297816294163e-08

PASSTHROUGH -- Li DONE.
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4536], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7326], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0451], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4536], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7326], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 11 	 HF2 	 HF2 	 0.0007903100275391762

PASSTHROUGH -- HF2 DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1519], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5176], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1519], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5176], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 HN2O 	 HON2 	 0.0008370328301902746

PASSTHROUGH -- HN2O DONE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4182, -54.4908, -54.5224, -54.5410, -54.5536, -54.5626, -54.5689,
        -54.5735, -54.5767, -54.5790, -54.5806, -54.5817, -54.5825, -54.5830,
        -54.5834, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9618e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9618e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 8 	 N 	 N 	 5.6057966104336715e-06

PASSTHROUGH -- N DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9298, -93.5006, -93.3910, -93.3397, -93.3043, -93.2804, -93.2632,
        -93.2508, -93.2418, -93.2352, -93.2303, -93.2267, -93.2241, -93.2221,
        -93.2206, -93.2194, -93.2186, -93.2179, -93.2174, -93.2171, -93.2168,
        -93.2165, -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6294e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7459, -37.7872, -37.8039, -37.8135, -37.8200, -37.8246, -37.8279,
        -37.8303, -37.8319, -37.8331, -37.8339, -37.8345, -37.8349, -37.8352,
        -37.8354, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4411e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4418, -54.5121, -54.5377, -54.5521, -54.5616, -54.5683, -54.5731,
        -54.5764, -54.5788, -54.5804, -54.5816, -54.5824, -54.5830, -54.5834,
        -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8652e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2560, -0.4412, -0.4659, -0.4777, -0.4848, -0.4895, -0.4927, -0.4949,
        -0.4964, -0.4975, -0.4982, -0.4988, -0.4991, -0.4994, -0.4995, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1170e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2194, -93.2186, -93.2179, -93.2174, -93.2171, -93.2168, -93.2165,
        -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 3 	 CHN 	 CNH 	 0.009645700431395076

PASSTHROUGH -- CHN DONE.
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0631, -1.1282, -1.1450, -1.1536, -1.1590, -1.1627, -1.1652, -1.1670,
        -1.1682, -1.1691, -1.1697, -1.1701, -1.1704, -1.1706, -1.1708, -1.1709,
        -1.1710, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9059e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2825, -0.4489, -0.4703, -0.4804, -0.4866, -0.4907, -0.4936, -0.4955,
        -0.4968, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6427e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8497e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2997, -0.4537, -0.4730, -0.4822, -0.4878, -0.4916, -0.4941, -0.4959,
        -0.4971, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3734e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1709, -1.1710, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711, -1.1711], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 2.2960335715057312e-06

PASSTHROUGH -- H2 DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3319, -107.3033, -107.2677, -107.2532, -107.2445, -107.2394,
        -107.2365, -107.2347, -107.2337, -107.2329, -107.2325, -107.2323,
        -107.2322, -107.2322, -107.2323, -107.2324, -107.2325, -107.2326,
        -107.2327, -107.2328, -107.2329, -107.2330, -107.2330, -107.2331,
        -107.2331], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3964e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4636, -7.4710, -7.4740, -7.4756, -7.4766, -7.4774, -7.4783, -7.4789,
        -7.4789, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0713e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3421e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6807, -99.7057, -99.7153, -99.7209, -99.7247, -99.7274, -99.7294,
        -99.7308, -99.7318, -99.7325, -99.7330, -99.7333, -99.7336, -99.7338,
        -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7342,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6282e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2324, -107.2325, -107.2326, -107.2327, -107.2328, -107.2329,
        -107.2330, -107.2330, -107.2331, -107.2331], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7342, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 2 	 FLi 	 LiF 	 0.009542114711805749

PASSTHROUGH -- FLi DONE.
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6751, -99.6958, -99.7080, -99.7154, -99.7206, -99.7244, -99.7272,
        -99.7292, -99.7306, -99.7317, -99.7324, -99.7329, -99.7333, -99.7336,
        -99.7338, -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8472e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8472e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 F 	 F 	 1.6738614435648653e-08

PASSTHROUGH -- F DONE.
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7825, -109.8664, -109.7390, -109.6639, -109.6150, -109.5816,
        -109.5583, -109.5421, -109.5308, -109.5229, -109.5174, -109.5136,
        -109.5109, -109.5090, -109.5077, -109.5068, -109.5061, -109.5057,
        -109.5053, -109.5051, -109.5050, -109.5049, -109.5048, -109.5047,
        -109.5047], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4167, -54.4889, -54.5211, -54.5400, -54.5529, -54.5620, -54.5686,
        -54.5732, -54.5765, -54.5788, -54.5805, -54.5816, -54.5824, -54.5830,
        -54.5834, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9715e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4084, -54.4740, -54.5098, -54.5316, -54.5467, -54.5575, -54.5653,
        -54.5709, -54.5749, -54.5777, -54.5797, -54.5811, -54.5820, -54.5827,
        -54.5832, -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0575e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5068, -109.5061, -109.5057, -109.5053, -109.5051, -109.5050,
        -109.5049, -109.5048, -109.5047, -109.5047], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 1 	 N2 	 N2 	 0.00018176881503185075

PASSTHROUGH -- N2 DONE.
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8340], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8340], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 CH4O 	 CH4O 	 5.8297912045758484e-05

PASSTHROUGH -- CH4O DONE.
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7544, -37.7950, -37.8095, -37.8176, -37.8230, -37.8267, -37.8294,
        -37.8313, -37.8327, -37.8336, -37.8343, -37.8348, -37.8351, -37.8353,
        -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6466, -37.5130, -37.4722, -37.4507, -37.4369, -37.4275, -37.4210,
        -37.4165, -37.4133, -37.4111, -37.4095, -37.4085, -37.4077, -37.4072,
        -37.4068, -37.4065, -37.4064, -37.4062, -37.4061, -37.4061, -37.4060,
        -37.4060, -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4064, -37.4062, -37.4061, -37.4061, -37.4060, -37.4060,
        -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 12 	 C 	 C 	 6.014839888553748e-05

PASSTHROUGH -- C DONE.
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7475, -37.7889, -37.8052, -37.8145, -37.8207, -37.8251, -37.8283,
        -37.8305, -37.8321, -37.8332, -37.8340, -37.8346, -37.8350, -37.8352,
        -37.8354, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4313e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4313e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 4 	 C 	 C 	 5.0049776205074245e-06

PASSTHROUGH -- C DONE.
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4653, -7.4725, -7.4750, -7.4763, -7.4771, -7.4780, -7.4788, -7.4790,
        -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0706e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3685e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1412e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 Li 	 Li 	 5.519713629333637e-08

PASSTHROUGH -- Li DONE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2513, -0.4398, -0.4652, -0.4771, -0.4844, -0.4892, -0.4925, -0.4948,
        -0.4963, -0.4974, -0.4982, -0.4987, -0.4991, -0.4994, -0.4995, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.2097e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9437e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 6 	 H 	 H 	 7.433725150622651e-10

PASSTHROUGH -- H DONE.
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e00/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 2.913964', ' ae : 53.843655', ' E : 0.959680'] ,|| total loss 39.494343 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4730, -7.4753, -7.4765, -7.4773, -7.4782, -7.4789, -7.4789,
        -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0710e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3779e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1419e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 Li 	 Li 	 5.53322756373282e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6797, -99.7047, -99.7140, -99.7194, -99.7230, -99.7256, -99.7275,
        -99.7288, -99.7298, -99.7304, -99.7309, -99.7313, -99.7315, -99.7317,
        -99.7318, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1028e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1028e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 F 	 F 	 8.104679866585612e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5654], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8334], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5654], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7372], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8334], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 CH4O 	 CH4O 	 5.906281695959303e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1521], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5176], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1521], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5176], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 HN2O 	 HON2 	 0.0008417924067922893

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8560, -93.4693, -93.3736, -93.3271, -93.2958, -93.2744, -93.2591,
        -93.2480, -93.2399, -93.2340, -93.2296, -93.2263, -93.2239, -93.2221,
        -93.2207, -93.2197, -93.2189, -93.2183, -93.2179, -93.2175, -93.2172,
        -93.2170, -93.2169, -93.2168, -93.2167], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6336e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7406, -37.7792, -37.7981, -37.8094, -37.8171, -37.8226, -37.8265,
        -37.8293, -37.8313, -37.8328, -37.8338, -37.8345, -37.8350, -37.8353,
        -37.8356, -37.8358, -37.8359, -37.8360, -37.8360, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2252e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4507, -54.5185, -54.5423, -54.5555, -54.5642, -54.5703, -54.5746,
        -54.5776, -54.5798, -54.5813, -54.5823, -54.5831, -54.5836, -54.5839,
        -54.5842, -54.5844, -54.5845, -54.5846, -54.5847, -54.5847, -54.5847,
        -54.5848, -54.5848, -54.5848, -54.5848], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5321e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3448, -0.4656, -0.4797, -0.4866, -0.4908, -0.4936, -0.4955, -0.4969,
        -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997, -0.4998,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9724e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.1143e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2197, -93.2189, -93.2183, -93.2179, -93.2175, -93.2172, -93.2170,
        -93.2169, -93.2168, -93.2167], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8358, -37.8359, -37.8360, -37.8360, -37.8361, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5844, -54.5845, -54.5846, -54.5847, -54.5847, -54.5847, -54.5848,
        -54.5848, -54.5848, -54.5848], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 3 	 CHN 	 CNH 	 0.009666829197142813

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4079, -54.4714, -54.5078, -54.5301, -54.5457, -54.5568, -54.5649,
        -54.5706, -54.5747, -54.5776, -54.5797, -54.5811, -54.5822, -54.5829,
        -54.5834, -54.5837, -54.5840, -54.5841, -54.5843, -54.5843, -54.5844,
        -54.5844, -54.5845, -54.5845, -54.5845], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9363e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9363e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5837, -54.5840, -54.5841, -54.5843, -54.5843, -54.5844, -54.5844,
        -54.5845, -54.5845, -54.5845], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 8 	 N 	 N 	 5.204892131503756e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0460], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4541], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7330], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0460], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4541], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7330], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 11 	 HF2 	 HF2 	 0.0007949571165941369

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2238, -0.4312, -0.4604, -0.4741, -0.4824, -0.4878, -0.4915, -0.4941,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9668e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8666e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9335e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 6 	 H 	 H 	 1.5230472670989761e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6484, -109.9182, -109.7639, -109.6806, -109.6269, -109.5902,
        -109.5646, -109.5468, -109.5343, -109.5255, -109.5194, -109.5151,
        -109.5121, -109.5100, -109.5085, -109.5075, -109.5068, -109.5062,
        -109.5059, -109.5056, -109.5055, -109.5053, -109.5053, -109.5052,
        -109.5052], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4643e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4197, -54.4924, -54.5236, -54.5419, -54.5543, -54.5631, -54.5693,
        -54.5738, -54.5769, -54.5792, -54.5807, -54.5818, -54.5826, -54.5831,
        -54.5835, -54.5838, -54.5840, -54.5841, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5844, -54.5844, -54.5844], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8987e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4079, -54.4715, -54.5078, -54.5301, -54.5456, -54.5568, -54.5648,
        -54.5705, -54.5746, -54.5775, -54.5796, -54.5810, -54.5820, -54.5828,
        -54.5833, -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5843,
        -54.5843, -54.5844, -54.5844, -54.5844], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0182e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5075, -109.5068, -109.5062, -109.5059, -109.5056, -109.5055,
        -109.5053, -109.5053, -109.5052, -109.5052], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5843, -54.5843,
        -54.5844, -54.5844, -54.5844], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 1 	 N2 	 N2 	 0.00017744914904069462

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7393, -37.7758, -37.7955, -37.8073, -37.8155, -37.8214, -37.8256,
        -37.8286, -37.8308, -37.8323, -37.8334, -37.8342, -37.8347, -37.8351,
        -37.8354, -37.8356, -37.8357, -37.8358, -37.8358, -37.8359, -37.8359,
        -37.8359, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6706, -37.5252, -37.4799, -37.4559, -37.4406, -37.4301, -37.4228,
        -37.4178, -37.4142, -37.4118, -37.4100, -37.4088, -37.4080, -37.4074,
        -37.4070, -37.4067, -37.4065, -37.4064, -37.4063, -37.4062, -37.4061,
        -37.4061, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8356, -37.8357, -37.8358, -37.8358, -37.8359, -37.8359, -37.8359,
        -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4067, -37.4065, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 12 	 C 	 C 	 6.009925923876131e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7530, -37.7939, -37.8087, -37.8170, -37.8226, -37.8265, -37.8293,
        -37.8312, -37.8326, -37.8336, -37.8343, -37.8348, -37.8351, -37.8354,
        -37.8355, -37.8357, -37.8358, -37.8358, -37.8359, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3539e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3539e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8357, -37.8358, -37.8358, -37.8359, -37.8359, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 4 	 C 	 C 	 4.887576465484157e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0285, -1.1147, -1.1369, -1.1482, -1.1554, -1.1602, -1.1636, -1.1659,
        -1.1676, -1.1687, -1.1695, -1.1701, -1.1704, -1.1707, -1.1709, -1.1710,
        -1.1711, -1.1712, -1.1712, -1.1713, -1.1713, -1.1713, -1.1713, -1.1713,
        -1.1713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9408e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8817e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2611, -0.4427, -0.4668, -0.4782, -0.4851, -0.4897, -0.4928, -0.4950,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9624e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1067e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8064e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2742, -0.4465, -0.4689, -0.4795, -0.4860, -0.4903, -0.4932, -0.4953,
        -0.4967, -0.4977, -0.4983, -0.4988, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9624e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8658e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1710, -1.1711, -1.1712, -1.1712, -1.1713, -1.1713, -1.1713, -1.1713,
        -1.1713, -1.1713], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 1.8754899386910548e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4648, -7.4722, -7.4748, -7.4762, -7.4771, -7.4779, -7.4787, -7.4791,
        -7.4790, -7.4788, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4260, -7.3456, -7.3204, -7.3072, -7.2987, -7.2931, -7.2892, -7.2865,
        -7.2847, -7.2834, -7.2826, -7.2820, -7.2816, -7.2813, -7.2811, -7.2810,
        -7.2809, -7.2809, -7.2808, -7.2808, -7.2808, -7.2808, -7.2808, -7.2807,
        -7.2807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2810, -7.2809, -7.2809, -7.2808, -7.2808, -7.2808, -7.2808, -7.2808,
        -7.2807, -7.2807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 13 	 Li 	 Li 	 1.0786920756063179e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2793, -107.2897, -107.2540, -107.2441, -107.2374, -107.2337,
        -107.2320, -107.2314, -107.2313, -107.2313, -107.2313, -107.2314,
        -107.2316, -107.2318, -107.2320, -107.2322, -107.2324, -107.2326,
        -107.2327, -107.2329, -107.2330, -107.2331, -107.2332, -107.2333,
        -107.2333], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4043e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4635, -7.4708, -7.4739, -7.4756, -7.4766, -7.4774, -7.4783, -7.4790,
        -7.4791, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0140e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1201e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6876, -99.7114, -99.7193, -99.7238, -99.7268, -99.7289, -99.7304,
        -99.7315, -99.7323, -99.7328, -99.7332, -99.7334, -99.7336, -99.7338,
        -99.7339, -99.7339, -99.7340, -99.7340, -99.7340, -99.7340, -99.7341,
        -99.7341, -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.5076e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2322, -107.2324, -107.2326, -107.2327, -107.2329, -107.2330,
        -107.2331, -107.2332, -107.2333, -107.2333], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7339, -99.7340, -99.7340, -99.7340, -99.7340, -99.7341, -99.7341,
        -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 2 	 FLi 	 LiF 	 0.009532450622108748

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 2.914388', ' ae : 53.859685', ' E : 0.945842'] ,|| total loss 39.501340 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7496, -37.7909, -37.8066, -37.8155, -37.8215, -37.8258, -37.8288,
        -37.8309, -37.8324, -37.8335, -37.8343, -37.8348, -37.8352, -37.8354,
        -37.8356, -37.8358, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2621e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2621e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8358, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 4 	 C 	 C 	 4.660336024964973e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4730, -7.4754, -7.4766, -7.4774, -7.4783, -7.4790, -7.4792,
        -7.4790, -7.4788, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4173, -7.3407, -7.3173, -7.3051, -7.2973, -7.2921, -7.2886, -7.2861,
        -7.2844, -7.2833, -7.2825, -7.2820, -7.2816, -7.2813, -7.2812, -7.2811,
        -7.2810, -7.2809, -7.2809, -7.2809, -7.2808, -7.2808, -7.2808, -7.2808,
        -7.2808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2811, -7.2810, -7.2809, -7.2809, -7.2809, -7.2808, -7.2808, -7.2808,
        -7.2808, -7.2808], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 13 	 Li 	 Li 	 1.1743429425816829e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5189], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1539], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5189], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 HN2O 	 HON2 	 0.0008389934357038646

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2622, -0.4430, -0.4669, -0.4783, -0.4852, -0.4897, -0.4928, -0.4950,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9602e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1026e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9203e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 6 	 H 	 H 	 2.0520218889257534e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7421, -37.7816, -37.7999, -37.8108, -37.8182, -37.8234, -37.8272,
        -37.8299, -37.8318, -37.8332, -37.8341, -37.8348, -37.8353, -37.8356,
        -37.8359, -37.8360, -37.8361, -37.8362, -37.8363, -37.8363, -37.8364,
        -37.8364, -37.8364, -37.8364, -37.8364], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7358, -37.5611, -37.5022, -37.4711, -37.4511, -37.4375, -37.4281,
        -37.4216, -37.4170, -37.4138, -37.4116, -37.4100, -37.4089, -37.4082,
        -37.4077, -37.4073, -37.4070, -37.4069, -37.4067, -37.4066, -37.4066,
        -37.4065, -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8360, -37.8361, -37.8362, -37.8363, -37.8363, -37.8364, -37.8364,
        -37.8364, -37.8364, -37.8364], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4070, -37.4069, -37.4067, -37.4066, -37.4066, -37.4065,
        -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 12 	 C 	 C 	 6.012385350074131e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2758, -107.2893, -107.2539, -107.2446, -107.2383, -107.2348,
        -107.2333, -107.2328, -107.2328, -107.2329, -107.2330, -107.2332,
        -107.2333, -107.2336, -107.2338, -107.2340, -107.2342, -107.2344,
        -107.2346, -107.2348, -107.2349, -107.2350, -107.2351, -107.2351,
        -107.2352], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4167e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4736, -7.4758, -7.4769, -7.4777, -7.4786, -7.4792, -7.4793,
        -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0260e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2825e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6764, -99.6971, -99.7092, -99.7165, -99.7217, -99.7255, -99.7283,
        -99.7303, -99.7318, -99.7328, -99.7336, -99.7341, -99.7345, -99.7347,
        -99.7349, -99.7350, -99.7351, -99.7352, -99.7352, -99.7353, -99.7353,
        -99.7353, -99.7353, -99.7353, -99.7353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0639e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2340, -107.2342, -107.2344, -107.2346, -107.2348, -107.2349,
        -107.2350, -107.2351, -107.2351, -107.2352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7350, -99.7351, -99.7352, -99.7352, -99.7353, -99.7353, -99.7353,
        -99.7353, -99.7353, -99.7353], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 2 	 FLi 	 LiF 	 0.009486167503435559

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0600, -1.1272, -1.1446, -1.1535, -1.1591, -1.1628, -1.1655, -1.1673,
        -1.1686, -1.1695, -1.1701, -1.1705, -1.1708, -1.1711, -1.1712, -1.1713,
        -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9531e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9062e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3007, -0.4540, -0.4731, -0.4822, -0.4878, -0.4916, -0.4941, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4990, -0.4992, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9601e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4483e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8264e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2746, -0.4466, -0.4690, -0.4796, -0.4860, -0.4903, -0.4933, -0.4953,
        -0.4967, -0.4977, -0.4983, -0.4988, -0.4991, -0.4994, -0.4995, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9600e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8745e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1713, -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715, -1.1715], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 1.5999152108112236e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5697], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7395], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8354], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5697], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7395], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8354], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 CH4O 	 CH4O 	 5.873305289397999e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6843, -99.7091, -99.7183, -99.7236, -99.7272, -99.7298, -99.7316,
        -99.7329, -99.7339, -99.7345, -99.7350, -99.7353, -99.7356, -99.7357,
        -99.7359, -99.7359, -99.7360, -99.7360, -99.7361, -99.7361, -99.7361,
        -99.7361, -99.7361, -99.7361, -99.7361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9824e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9824e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7359, -99.7360, -99.7360, -99.7361, -99.7361, -99.7361, -99.7361,
        -99.7361, -99.7361, -99.7361], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 F 	 F 	 1.1478925369254844e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7746, -109.8793, -109.7471, -109.6703, -109.6204, -109.5863,
        -109.5626, -109.5460, -109.5345, -109.5264, -109.5208, -109.5168,
        -109.5141, -109.5122, -109.5108, -109.5099, -109.5092, -109.5087,
        -109.5084, -109.5082, -109.5080, -109.5079, -109.5078, -109.5078,
        -109.5078], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4543e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4448, -54.5144, -54.5396, -54.5537, -54.5631, -54.5697, -54.5743,
        -54.5776, -54.5799, -54.5816, -54.5827, -54.5835, -54.5841, -54.5845,
        -54.5847, -54.5849, -54.5851, -54.5852, -54.5852, -54.5853, -54.5853,
        -54.5853, -54.5854, -54.5854, -54.5854], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1856e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4096, -54.4743, -54.5102, -54.5321, -54.5474, -54.5583, -54.5662,
        -54.5718, -54.5758, -54.5787, -54.5807, -54.5821, -54.5831, -54.5838,
        -54.5842, -54.5846, -54.5848, -54.5850, -54.5851, -54.5852, -54.5853,
        -54.5853, -54.5853, -54.5853, -54.5854], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3646e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5099, -109.5092, -109.5087, -109.5084, -109.5082, -109.5080,
        -109.5079, -109.5078, -109.5078, -109.5078], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5846, -54.5848, -54.5850, -54.5851, -54.5852, -54.5853, -54.5853,
        -54.5853, -54.5853, -54.5854], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 1 	 N2 	 N2 	 0.00016931536449716548

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4498, -54.5180, -54.5421, -54.5555, -54.5644, -54.5706, -54.5750,
        -54.5781, -54.5803, -54.5818, -54.5829, -54.5836, -54.5842, -54.5845,
        -54.5848, -54.5850, -54.5851, -54.5852, -54.5853, -54.5853, -54.5853,
        -54.5854, -54.5854, -54.5854, -54.5854], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1620e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1620e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5850, -54.5851, -54.5852, -54.5853, -54.5853, -54.5853, -54.5854,
        -54.5854, -54.5854, -54.5854], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 8 	 N 	 N 	 3.3985452169542744e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1104, -93.5774, -93.4344, -93.3731, -93.3283, -93.2988, -93.2774,
        -93.2622, -93.2511, -93.2430, -93.2371, -93.2328, -93.2296, -93.2272,
        -93.2254, -93.2241, -93.2231, -93.2224, -93.2218, -93.2214, -93.2211,
        -93.2208, -93.2206, -93.2205, -93.2204], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5674e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7619, -37.8005, -37.8135, -37.8207, -37.8255, -37.8288, -37.8311,
        -37.8328, -37.8340, -37.8348, -37.8354, -37.8358, -37.8361, -37.8363,
        -37.8364, -37.8365, -37.8366, -37.8367, -37.8367, -37.8367, -37.8367,
        -37.8367, -37.8368, -37.8368, -37.8368], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5789e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4258, -54.4985, -54.5284, -54.5457, -54.5573, -54.5655, -54.5714,
        -54.5756, -54.5785, -54.5806, -54.5821, -54.5831, -54.5838, -54.5843,
        -54.5847, -54.5849, -54.5851, -54.5852, -54.5853, -54.5854, -54.5854,
        -54.5854, -54.5855, -54.5855, -54.5855], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1856e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2320, -0.4338, -0.4618, -0.4750, -0.4830, -0.4882, -0.4918, -0.4943,
        -0.4960, -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9585e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7427e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2241, -93.2231, -93.2224, -93.2218, -93.2214, -93.2211, -93.2208,
        -93.2206, -93.2205, -93.2204], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8365, -37.8366, -37.8367, -37.8367, -37.8367, -37.8367, -37.8367,
        -37.8368, -37.8368, -37.8368], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5849, -54.5851, -54.5852, -54.5853, -54.5854, -54.5854, -54.5854,
        -54.5855, -54.5855, -54.5855], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 3 	 CHN 	 CNH 	 0.009433601889614115

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4653, -7.4727, -7.4752, -7.4765, -7.4774, -7.4782, -7.4791, -7.4793,
        -7.4791, -7.4789, -7.4788, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0275e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.6006e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0551e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 Li 	 Li 	 1.5057897396105102e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7345], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0495], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4559], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7345], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 11 	 HF2 	 HF2 	 0.0008030375333869606

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e02)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e02/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e02/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 2.906022', ' ae : 53.477720', ' E : 0.830405'] ,|| total loss 39.226334 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7541, -37.7948, -37.8095, -37.8178, -37.8233, -37.8272, -37.8299,
        -37.8319, -37.8333, -37.8342, -37.8349, -37.8354, -37.8357, -37.8360,
        -37.8361, -37.8363, -37.8364, -37.8364, -37.8364, -37.8365, -37.8365,
        -37.8365, -37.8365, -37.8365, -37.8365], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6951, -37.5384, -37.4883, -37.4618, -37.4447, -37.4332, -37.4251,
        -37.4195, -37.4156, -37.4129, -37.4110, -37.4096, -37.4087, -37.4080,
        -37.4076, -37.4073, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067,
        -37.4066, -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8363, -37.8364, -37.8364, -37.8364, -37.8365, -37.8365, -37.8365,
        -37.8365, -37.8365, -37.8365], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067, -37.4066,
        -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 12 	 C 	 C 	 6.04796891390817e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4395, -54.5103, -54.5366, -54.5515, -54.5614, -54.5683, -54.5733,
        -54.5767, -54.5792, -54.5809, -54.5821, -54.5830, -54.5836, -54.5840,
        -54.5843, -54.5845, -54.5847, -54.5848, -54.5848, -54.5849, -54.5849,
        -54.5850, -54.5850, -54.5850, -54.5850], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4268e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4268e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5845, -54.5847, -54.5848, -54.5848, -54.5849, -54.5849, -54.5850,
        -54.5850, -54.5850, -54.5850], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 8 	 N 	 N 	 4.160893878105717e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4554], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7340], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0486], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4554], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7340], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 11 	 HF2 	 HF2 	 0.0008066986508081963

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9307, -109.5078, -109.5600, -109.5474, -109.5347, -109.5256,
        -109.5194, -109.5153, -109.5126, -109.5108, -109.5096, -109.5088,
        -109.5083, -109.5079, -109.5077, -109.5075, -109.5074, -109.5073,
        -109.5073, -109.5072, -109.5072, -109.5072, -109.5072, -109.5071,
        -109.5071], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4471e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4154, -54.4863, -54.5192, -54.5387, -54.5521, -54.5616, -54.5684,
        -54.5733, -54.5767, -54.5792, -54.5809, -54.5821, -54.5829, -54.5835,
        -54.5839, -54.5842, -54.5844, -54.5846, -54.5847, -54.5848, -54.5848,
        -54.5848, -54.5849, -54.5849, -54.5849], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5931e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4274, -54.5000, -54.5293, -54.5462, -54.5575, -54.5655, -54.5712,
        -54.5753, -54.5781, -54.5802, -54.5816, -54.5826, -54.5833, -54.5838,
        -54.5841, -54.5844, -54.5845, -54.5846, -54.5847, -54.5848, -54.5848,
        -54.5849, -54.5849, -54.5849, -54.5849], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5280e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5075, -109.5074, -109.5073, -109.5073, -109.5072, -109.5072,
        -109.5072, -109.5072, -109.5071, -109.5071], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5844, -54.5845, -54.5846, -54.5847, -54.5848, -54.5848, -54.5849,
        -54.5849, -54.5849, -54.5849], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 1 	 N2 	 N2 	 0.0001660975145112366

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5692], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7392], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8352], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5692], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7392], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8352], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 CH4O 	 CH4O 	 5.904793265647778e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1555], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7391], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5199], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1555], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7391], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5199], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 HN2O 	 HON2 	 0.000846608276109209

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6806, -99.7052, -99.7152, -99.7211, -99.7252, -99.7280, -99.7301,
        -99.7316, -99.7327, -99.7335, -99.7340, -99.7344, -99.7347, -99.7348,
        -99.7350, -99.7351, -99.7351, -99.7352, -99.7352, -99.7352, -99.7353,
        -99.7353, -99.7353, -99.7353, -99.7353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9100e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9100e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7351, -99.7351, -99.7352, -99.7352, -99.7352, -99.7353, -99.7353,
        -99.7353, -99.7353, -99.7353], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 F 	 F 	 4.424223395675149e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4665, -7.4735, -7.4757, -7.4769, -7.4777, -7.4786, -7.4792, -7.4793,
        -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0116e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0119e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0232e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 Li 	 Li 	 1.3716241463484231e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7400, -37.7763, -37.7959, -37.8077, -37.8158, -37.8217, -37.8259,
        -37.8289, -37.8310, -37.8326, -37.8336, -37.8344, -37.8349, -37.8353,
        -37.8356, -37.8358, -37.8359, -37.8360, -37.8361, -37.8361, -37.8361,
        -37.8362, -37.8362, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2069e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2069e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8358, -37.8359, -37.8360, -37.8361, -37.8361, -37.8361, -37.8362,
        -37.8362, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 4 	 C 	 C 	 4.3767105651293776e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2185, -0.4295, -0.4594, -0.4734, -0.4819, -0.4875, -0.4913, -0.4939,
        -0.4957, -0.4970, -0.4978, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9429e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2133e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8858e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 6 	 H 	 H 	 4.8119836781123734e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0910, -93.5691, -93.4296, -93.3694, -93.3256, -93.2967, -93.2759,
        -93.2610, -93.2502, -93.2424, -93.2366, -93.2324, -93.2293, -93.2270,
        -93.2253, -93.2240, -93.2231, -93.2224, -93.2218, -93.2214, -93.2211,
        -93.2209, -93.2207, -93.2205, -93.2204], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5148e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7507, -37.7917, -37.8072, -37.8160, -37.8219, -37.8261, -37.8290,
        -37.8311, -37.8326, -37.8337, -37.8344, -37.8349, -37.8353, -37.8356,
        -37.8357, -37.8359, -37.8360, -37.8360, -37.8361, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1469e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4333, -54.5052, -54.5329, -54.5486, -54.5592, -54.5666, -54.5719,
        -54.5756, -54.5783, -54.5802, -54.5815, -54.5824, -54.5830, -54.5835,
        -54.5838, -54.5840, -54.5842, -54.5843, -54.5844, -54.5844, -54.5845,
        -54.5845, -54.5845, -54.5845, -54.5845], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7554e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2819, -0.4487, -0.4701, -0.4803, -0.4865, -0.4906, -0.4934, -0.4954,
        -0.4967, -0.4977, -0.4983, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9423e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8949e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2240, -93.2231, -93.2224, -93.2218, -93.2214, -93.2211, -93.2209,
        -93.2207, -93.2205, -93.2204], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8359, -37.8360, -37.8360, -37.8361, -37.8361, -37.8361, -37.8361,
        -37.8361, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5840, -54.5842, -54.5843, -54.5844, -54.5844, -54.5845, -54.5845,
        -54.5845, -54.5845, -54.5845], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 3 	 CHN 	 CNH 	 0.009279095081803603

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2883, -107.2941, -107.2579, -107.2473, -107.2403, -107.2364,
        -107.2346, -107.2339, -107.2336, -107.2335, -107.2335, -107.2336,
        -107.2337, -107.2339, -107.2341, -107.2343, -107.2345, -107.2347,
        -107.2349, -107.2350, -107.2352, -107.2353, -107.2353, -107.2354,
        -107.2355], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4019e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4651, -7.4725, -7.4751, -7.4764, -7.4773, -7.4781, -7.4790, -7.4793,
        -7.4791, -7.4788, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0015e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.5856e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.7002, -99.7114, -99.7180, -99.7227, -99.7260, -99.7285,
        -99.7302, -99.7315, -99.7324, -99.7330, -99.7335, -99.7338, -99.7340,
        -99.7342, -99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0479e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2343, -107.2345, -107.2347, -107.2349, -107.2350, -107.2352,
        -107.2353, -107.2353, -107.2354, -107.2355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 2 	 FLi 	 LiF 	 0.009382714874221206

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4700, -7.4734, -7.4753, -7.4765, -7.4773, -7.4782, -7.4790,
        -7.4793, -7.4791, -7.4788, -7.4787, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4357, -7.3515, -7.3243, -7.3099, -7.3007, -7.2945, -7.2903, -7.2873,
        -7.2853, -7.2840, -7.2830, -7.2824, -7.2819, -7.2816, -7.2814, -7.2813,
        -7.2812, -7.2811, -7.2811, -7.2811, -7.2810, -7.2810, -7.2810, -7.2810,
        -7.2810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2813, -7.2812, -7.2811, -7.2811, -7.2811, -7.2810, -7.2810, -7.2810,
        -7.2810, -7.2810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 13 	 Li 	 Li 	 3.060896756892842e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0375, -1.1185, -1.1394, -1.1500, -1.1568, -1.1613, -1.1645, -1.1667,
        -1.1682, -1.1693, -1.1701, -1.1706, -1.1709, -1.1712, -1.1714, -1.1715,
        -1.1716, -1.1717, -1.1717, -1.1717, -1.1718, -1.1718, -1.1718, -1.1718,
        -1.1718], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9367e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8735e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2798, -0.4481, -0.4697, -0.4801, -0.4863, -0.4905, -0.4934, -0.4953,
        -0.4967, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9363e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9889e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7461e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2691, -0.4450, -0.4680, -0.4789, -0.4856, -0.4900, -0.4930, -0.4951,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9363e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1834e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1715, -1.1716, -1.1717, -1.1717, -1.1717, -1.1718, -1.1718, -1.1718,
        -1.1718, -1.1718], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 1.1726736325014874e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e03)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e03/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e03/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 2.895135', ' ae : 53.135207', ' E : 0.890721'] ,|| total loss 38.971467 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4637, -7.4710, -7.4741, -7.4758, -7.4768, -7.4776, -7.4785, -7.4792,
        -7.4792, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4076, -7.3356, -7.3141, -7.3030, -7.2959, -7.2913, -7.2880, -7.2858,
        -7.2843, -7.2832, -7.2825, -7.2820, -7.2817, -7.2815, -7.2813, -7.2812,
        -7.2812, -7.2811, -7.2811, -7.2810, -7.2810, -7.2810, -7.2810, -7.2810,
        -7.2810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2812, -7.2812, -7.2811, -7.2811, -7.2810, -7.2810, -7.2810, -7.2810,
        -7.2810, -7.2810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 13 	 Li 	 Li 	 3.290714254706993e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2422, -0.4369, -0.4635, -0.4761, -0.4837, -0.4887, -0.4921, -0.4944,
        -0.4961, -0.4972, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9329e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7692e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8658e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 6 	 H 	 H 	 6.636060088521023e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7644, -37.8018, -37.8140, -37.8208, -37.8252, -37.8283, -37.8305,
        -37.8321, -37.8332, -37.8339, -37.8345, -37.8349, -37.8351, -37.8353,
        -37.8354, -37.8355, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5064e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5064e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 4 	 C 	 C 	 5.2882208166486e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6792, -99.7035, -99.7136, -99.7196, -99.7236, -99.7266, -99.7287,
        -99.7302, -99.7313, -99.7320, -99.7326, -99.7330, -99.7332, -99.7334,
        -99.7336, -99.7337, -99.7337, -99.7338, -99.7338, -99.7338, -99.7339,
        -99.7339, -99.7339, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5669e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.5669e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7337, -99.7337, -99.7338, -99.7338, -99.7338, -99.7339, -99.7339,
        -99.7339, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 F 	 F 	 1.2179478696747348e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1532], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5186], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1532], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5186], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 HN2O 	 HON2 	 0.0008542972309907608

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5674], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8347], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5674], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8347], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 CH4O 	 CH4O 	 5.9276866172068884e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8585, -93.4713, -93.3754, -93.3291, -93.2980, -93.2768, -93.2617,
        -93.2509, -93.2430, -93.2372, -93.2330, -93.2299, -93.2275, -93.2258,
        -93.2245, -93.2235, -93.2228, -93.2223, -93.2218, -93.2215, -93.2213,
        -93.2211, -93.2209, -93.2208, -93.2207], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4567e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7546, -37.7949, -37.8094, -37.8174, -37.8228, -37.8266, -37.8293,
        -37.8312, -37.8325, -37.8335, -37.8342, -37.8346, -37.8350, -37.8352,
        -37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5518e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4877, -54.5200, -54.5391, -54.5521, -54.5613, -54.5679,
        -54.5726, -54.5759, -54.5783, -54.5799, -54.5811, -54.5819, -54.5825,
        -54.5829, -54.5832, -54.5834, -54.5835, -54.5836, -54.5837, -54.5838,
        -54.5838, -54.5838, -54.5838, -54.5838], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2968, -0.4528, -0.4724, -0.4818, -0.4875, -0.4913, -0.4939, -0.4957,
        -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9278e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7861e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2235, -93.2228, -93.2223, -93.2218, -93.2215, -93.2213, -93.2211,
        -93.2209, -93.2208, -93.2207], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5832, -54.5834, -54.5835, -54.5836, -54.5837, -54.5838, -54.5838,
        -54.5838, -54.5838, -54.5838], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 3 	 CHN 	 CNH 	 0.009146247202941396

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7001, -109.9117, -109.7618, -109.6794, -109.6261, -109.5897,
        -109.5644, -109.5467, -109.5343, -109.5257, -109.5196, -109.5154,
        -109.5124, -109.5103, -109.5089, -109.5079, -109.5072, -109.5067,
        -109.5063, -109.5061, -109.5059, -109.5058, -109.5057, -109.5056,
        -109.5056], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4339e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4086, -54.4728, -54.5086, -54.5305, -54.5457, -54.5566, -54.5645,
        -54.5701, -54.5741, -54.5770, -54.5790, -54.5804, -54.5813, -54.5820,
        -54.5825, -54.5829, -54.5831, -54.5833, -54.5834, -54.5835, -54.5835,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5882e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4414, -54.5114, -54.5370, -54.5513, -54.5609, -54.5676, -54.5724,
        -54.5757, -54.5781, -54.5797, -54.5809, -54.5817, -54.5823, -54.5827,
        -54.5830, -54.5832, -54.5834, -54.5834, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5836, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3774e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5079, -109.5072, -109.5067, -109.5063, -109.5061, -109.5059,
        -109.5058, -109.5057, -109.5056, -109.5056], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5832, -54.5834, -54.5834, -54.5835, -54.5836, -54.5836, -54.5836,
        -54.5836, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 1 	 N2 	 N2 	 0.00015422310579790702

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0443], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4530], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0443], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4530], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7317], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 11 	 HF2 	 HF2 	 0.0008272279611219616

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7393, -37.7752, -37.7948, -37.8067, -37.8149, -37.8208, -37.8250,
        -37.8280, -37.8302, -37.8317, -37.8328, -37.8336, -37.8341, -37.8345,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6248, -37.5022, -37.4653, -37.4459, -37.4336, -37.4252, -37.4193,
        -37.4152, -37.4124, -37.4104, -37.4090, -37.4080, -37.4073, -37.4069,
        -37.4065, -37.4063, -37.4061, -37.4060, -37.4059, -37.4059, -37.4058,
        -37.4058, -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4063, -37.4061, -37.4060, -37.4059, -37.4059, -37.4058, -37.4058,
        -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 12 	 C 	 C 	 5.786863435705942e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4082, -54.4723, -54.5082, -54.5300, -54.5452, -54.5561, -54.5640,
        -54.5696, -54.5736, -54.5764, -54.5784, -54.5798, -54.5808, -54.5815,
        -54.5820, -54.5824, -54.5826, -54.5828, -54.5829, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0456e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0456e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5824, -54.5826, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 8 	 N 	 N 	 8.701387116937739e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4732, -7.4755, -7.4767, -7.4775, -7.4784, -7.4791, -7.4793,
        -7.4790, -7.4788, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9779e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3082e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9559e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 Li 	 Li 	 1.2153473475184222e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0446, -1.1214, -1.1412, -1.1514, -1.1578, -1.1621, -1.1651, -1.1672,
        -1.1686, -1.1697, -1.1704, -1.1709, -1.1712, -1.1715, -1.1716, -1.1718,
        -1.1718, -1.1719, -1.1719, -1.1720, -1.1720, -1.1720, -1.1720, -1.1720,
        -1.1720], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9293e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8585e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3026, -0.4544, -0.4733, -0.4823, -0.4879, -0.4915, -0.4941, -0.4958,
        -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9162e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8237e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6910e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2147, -0.4282, -0.4587, -0.4729, -0.4816, -0.4872, -0.4911, -0.4937,
        -0.4956, -0.4968, -0.4977, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9161e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6405e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1718, -1.1718, -1.1719, -1.1719, -1.1720, -1.1720, -1.1720, -1.1720,
        -1.1720, -1.1720], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 8.314735341501943e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2775, -107.2892, -107.2531, -107.2435, -107.2371, -107.2336,
        -107.2320, -107.2314, -107.2313, -107.2313, -107.2315, -107.2316,
        -107.2318, -107.2320, -107.2323, -107.2325, -107.2328, -107.2330,
        -107.2332, -107.2334, -107.2335, -107.2336, -107.2337, -107.2338,
        -107.2339], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3689e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4634, -7.4704, -7.4737, -7.4755, -7.4766, -7.4774, -7.4783, -7.4791,
        -7.4793, -7.4790, -7.4788, -7.4787, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9759e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2967e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6738, -99.6937, -99.7058, -99.7132, -99.7185, -99.7223, -99.7251,
        -99.7272, -99.7286, -99.7297, -99.7304, -99.7310, -99.7313, -99.7316,
        -99.7318, -99.7319, -99.7320, -99.7321, -99.7321, -99.7321, -99.7322,
        -99.7322, -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7985e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2325, -107.2328, -107.2330, -107.2332, -107.2334, -107.2335,
        -107.2336, -107.2337, -107.2338, -107.2339], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7320, -99.7321, -99.7321, -99.7321, -99.7322, -99.7322,
        -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 2 	 FLi 	 LiF 	 0.009314240898418865

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e04)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e04/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e04/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 2.880617', ' ae : 52.870012', ' E : 1.069569'] ,|| total loss 38.756158 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1506], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5172], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1506], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7367], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5172], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 HN2O 	 HON2 	 0.0008593223465193025

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4422, -54.5117, -54.5370, -54.5512, -54.5606, -54.5672, -54.5718,
        -54.5751, -54.5774, -54.5791, -54.5802, -54.5810, -54.5816, -54.5820,
        -54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0042e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0042e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 8 	 N 	 N 	 9.227458226323945e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7416, -37.7808, -37.7990, -37.8098, -37.8171, -37.8223, -37.8261,
        -37.8288, -37.8307, -37.8320, -37.8330, -37.8337, -37.8341, -37.8345,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7362, -37.5611, -37.5018, -37.4706, -37.4506, -37.4369, -37.4274,
        -37.4209, -37.4163, -37.4131, -37.4108, -37.4093, -37.4082, -37.4074,
        -37.4069, -37.4065, -37.4063, -37.4061, -37.4060, -37.4059, -37.4058,
        -37.4058, -37.4058, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4063, -37.4061, -37.4060, -37.4059, -37.4058, -37.4058,
        -37.4058, -37.4057, -37.4057], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 12 	 C 	 C 	 5.7189494185624054e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0004, -1.1040, -1.1307, -1.1443, -1.1529, -1.1588, -1.1628, -1.1656,
        -1.1676, -1.1689, -1.1699, -1.1706, -1.1710, -1.1714, -1.1716, -1.1718,
        -1.1719, -1.1720, -1.1720, -1.1721, -1.1721, -1.1721, -1.1721, -1.1721,
        -1.1721], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9311e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8621e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3329, -0.4625, -0.4778, -0.4853, -0.4899, -0.4929, -0.4950, -0.4964,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9124e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4308e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6868e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2653, -0.4438, -0.4673, -0.4785, -0.4853, -0.4898, -0.4928, -0.4949,
        -0.4964, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9123e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5375e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1718, -1.1719, -1.1720, -1.1720, -1.1721, -1.1721, -1.1721, -1.1721,
        -1.1721, -1.1721], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 7.384098061182755e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0435], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4526], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7312], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0435], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4526], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7312], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 11 	 HF2 	 HF2 	 0.0008353684050889537

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4640, -7.4713, -7.4743, -7.4760, -7.4770, -7.4778, -7.4787, -7.4793,
        -7.4793, -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9797e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5836e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9594e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 Li 	 Li 	 1.5091509306249257e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2182, -107.2716, -107.2376, -107.2339, -107.2305, -107.2287,
        -107.2281, -107.2287, -107.2296, -107.2305, -107.2311, -107.2317,
        -107.2322, -107.2326, -107.2330, -107.2333, -107.2337, -107.2340,
        -107.2342, -107.2344, -107.2346, -107.2347, -107.2349, -107.2350,
        -107.2350], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3756e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4737, -7.4759, -7.4770, -7.4778, -7.4787, -7.4793, -7.4793,
        -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9788e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7405e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6827, -99.7070, -99.7159, -99.7210, -99.7244, -99.7268, -99.7286,
        -99.7298, -99.7307, -99.7314, -99.7318, -99.7321, -99.7323, -99.7325,
        -99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4187e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2333, -107.2337, -107.2340, -107.2342, -107.2344, -107.2346,
        -107.2347, -107.2349, -107.2350, -107.2350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7328, -99.7328,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 2 	 FLi 	 LiF 	 0.009275437334509508

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2453, -0.4378, -0.4640, -0.4763, -0.4838, -0.4888, -0.4921, -0.4945,
        -0.4961, -0.4972, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9103e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9829e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8207e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 6 	 H 	 H 	 1.2373739041138392e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4724, -7.4751, -7.4765, -7.4774, -7.4782, -7.4790, -7.4794,
        -7.4792, -7.4789, -7.4788, -7.4787, -7.4787, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4294, -7.3477, -7.3219, -7.3084, -7.2997, -7.2939, -7.2899, -7.2872,
        -7.2853, -7.2840, -7.2831, -7.2825, -7.2821, -7.2818, -7.2816, -7.2815,
        -7.2814, -7.2814, -7.2813, -7.2813, -7.2813, -7.2813, -7.2812, -7.2812,
        -7.2812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2815, -7.2814, -7.2814, -7.2813, -7.2813, -7.2813, -7.2813, -7.2812,
        -7.2812, -7.2812], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 13 	 Li 	 Li 	 6.099677052929249e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5672], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8348], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5672], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8348], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 CH4O 	 CH4O 	 5.9399484202327496e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7397, -37.7755, -37.7951, -37.8069, -37.8151, -37.8210, -37.8252,
        -37.8282, -37.8304, -37.8319, -37.8330, -37.8338, -37.8343, -37.8347,
        -37.8350, -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8258e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8258e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 4 	 C 	 C 	 5.684947159238417e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1246, -93.5831, -93.4370, -93.3754, -93.3301, -93.3004, -93.2790,
        -93.2638, -93.2528, -93.2448, -93.2390, -93.2347, -93.2316, -93.2293,
        -93.2276, -93.2263, -93.2253, -93.2246, -93.2241, -93.2237, -93.2234,
        -93.2232, -93.2230, -93.2229, -93.2228], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3938e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7628, -37.8007, -37.8133, -37.8202, -37.8248, -37.8280, -37.8303,
        -37.8319, -37.8330, -37.8338, -37.8344, -37.8348, -37.8350, -37.8352,
        -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356,
        -37.8357, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5885e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4136, -54.4833, -54.5166, -54.5365, -54.5501, -54.5599, -54.5668,
        -54.5718, -54.5753, -54.5778, -54.5796, -54.5808, -54.5817, -54.5823,
        -54.5827, -54.5830, -54.5832, -54.5834, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4811e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3169, -0.4583, -0.4754, -0.4837, -0.4888, -0.4922, -0.4945, -0.4961,
        -0.4972, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9097e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6836e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2263, -93.2253, -93.2246, -93.2241, -93.2237, -93.2234, -93.2232,
        -93.2230, -93.2229, -93.2228], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356, -37.8357,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5832, -54.5834, -54.5835, -54.5836, -54.5836, -54.5836,
        -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 3 	 CHN 	 CNH 	 0.008935612623037577

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6465, -109.9192, -109.7650, -109.6817, -109.6280, -109.5913,
        -109.5658, -109.5479, -109.5354, -109.5267, -109.5206, -109.5163,
        -109.5133, -109.5112, -109.5097, -109.5087, -109.5080, -109.5075,
        -109.5071, -109.5069, -109.5067, -109.5066, -109.5065, -109.5064,
        -109.5064], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4200e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4389, -54.5093, -54.5355, -54.5503, -54.5602, -54.5671, -54.5720,
        -54.5754, -54.5779, -54.5796, -54.5808, -54.5817, -54.5823, -54.5827,
        -54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4057e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4267, -54.4989, -54.5281, -54.5449, -54.5563, -54.5643, -54.5700,
        -54.5740, -54.5769, -54.5789, -54.5803, -54.5813, -54.5820, -54.5825,
        -54.5828, -54.5831, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4550e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5087, -109.5080, -109.5075, -109.5071, -109.5069, -109.5067,
        -109.5066, -109.5065, -109.5064, -109.5064], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5831, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 1 	 N2 	 N2 	 0.0001441637893452741

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6785, -99.7025, -99.7128, -99.7189, -99.7230, -99.7260, -99.7282,
        -99.7298, -99.7309, -99.7317, -99.7323, -99.7326, -99.7329, -99.7331,
        -99.7333, -99.7334, -99.7334, -99.7335, -99.7335, -99.7335, -99.7336,
        -99.7336, -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3054e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3054e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7334, -99.7334, -99.7335, -99.7335, -99.7335, -99.7336, -99.7336,
        -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 F 	 F 	 2.3679021771174854e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e05/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 2.871390', ' ae : 52.527704', ' E : 1.074206'] ,|| total loss 38.502849 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2632, -0.4432, -0.4670, -0.4782, -0.4851, -0.4896, -0.4927, -0.4949,
        -0.4963, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9047e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6826e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8094e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 6 	 H 	 H 	 1.3961986078925926e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4731, -7.4756, -7.4768, -7.4777, -7.4785, -7.4793, -7.4794,
        -7.4791, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4033, -7.3334, -7.3129, -7.3023, -7.2956, -7.2911, -7.2880, -7.2859,
        -7.2844, -7.2834, -7.2828, -7.2823, -7.2820, -7.2818, -7.2816, -7.2815,
        -7.2815, -7.2814, -7.2814, -7.2814, -7.2813, -7.2813, -7.2813, -7.2813,
        -7.2813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2815, -7.2815, -7.2814, -7.2814, -7.2814, -7.2813, -7.2813, -7.2813,
        -7.2813, -7.2813], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 13 	 Li 	 Li 	 7.059200851328932e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2357, -107.2776, -107.2428, -107.2377, -107.2335, -107.2312,
        -107.2304, -107.2308, -107.2314, -107.2321, -107.2326, -107.2331,
        -107.2335, -107.2339, -107.2343, -107.2346, -107.2350, -107.2352,
        -107.2355, -107.2357, -107.2359, -107.2360, -107.2361, -107.2362,
        -107.2363], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3795e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4661, -7.4733, -7.4757, -7.4769, -7.4777, -7.4786, -7.4793, -7.4794,
        -7.4791, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9762e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.5907e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.7005, -99.7112, -99.7176, -99.7220, -99.7252, -99.7275,
        -99.7292, -99.7304, -99.7313, -99.7319, -99.7323, -99.7326, -99.7328,
        -99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0966e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2346, -107.2350, -107.2352, -107.2355, -107.2357, -107.2359,
        -107.2360, -107.2361, -107.2362, -107.2363], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7331, -99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 2 	 FLi 	 LiF 	 0.00920225295510858

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8799, -93.4810, -93.3813, -93.3340, -93.3018, -93.2801, -93.2646,
        -93.2535, -93.2455, -93.2396, -93.2353, -93.2322, -93.2299, -93.2281,
        -93.2268, -93.2259, -93.2252, -93.2246, -93.2242, -93.2239, -93.2236,
        -93.2235, -93.2233, -93.2232, -93.2231], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3523e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7605, -37.7990, -37.8121, -37.8193, -37.8241, -37.8274, -37.8298,
        -37.8315, -37.8327, -37.8335, -37.8341, -37.8345, -37.8348, -37.8350,
        -37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8015e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4313, -54.5030, -54.5310, -54.5470, -54.5577, -54.5652, -54.5706,
        -54.5744, -54.5771, -54.5789, -54.5803, -54.5812, -54.5819, -54.5823,
        -54.5827, -54.5829, -54.5830, -54.5832, -54.5832, -54.5833, -54.5833,
        -54.5834, -54.5834, -54.5834, -54.5834], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6332e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3268, -0.4609, -0.4769, -0.4847, -0.4894, -0.4926, -0.4948, -0.4963,
        -0.4973, -0.4981, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9012e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6511e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2259, -93.2252, -93.2246, -93.2242, -93.2239, -93.2236, -93.2235,
        -93.2233, -93.2232, -93.2231], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8353, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5829, -54.5830, -54.5832, -54.5832, -54.5833, -54.5833, -54.5834,
        -54.5834, -54.5834, -54.5834], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 3 	 CHN 	 CNH 	 0.008857057210237463

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7515, -37.7922, -37.8073, -37.8158, -37.8216, -37.8256, -37.8285,
        -37.8305, -37.8319, -37.8330, -37.8337, -37.8342, -37.8346, -37.8348,
        -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9443e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9443e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 4 	 C 	 C 	 6.143898642317181e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0445], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4532], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0445], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4532], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 11 	 HF2 	 HF2 	 0.0008434064695417839

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5668], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7373], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8347], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5668], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7373], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8347], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 CH4O 	 CH4O 	 5.9516501345829845e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0317, -1.1165, -1.1385, -1.1497, -1.1567, -1.1615, -1.1648, -1.1671,
        -1.1688, -1.1699, -1.1707, -1.1712, -1.1716, -1.1719, -1.1721, -1.1722,
        -1.1723, -1.1724, -1.1724, -1.1724, -1.1725, -1.1725, -1.1725, -1.1725,
        -1.1725], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9318e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8637e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3311, -0.4620, -0.4775, -0.4851, -0.4897, -0.4928, -0.4949, -0.4964,
        -0.4974, -0.4981, -0.4986, -0.4989, -0.4992, -0.4993, -0.4995, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8934e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7005e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6505e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3424, -0.4649, -0.4792, -0.4861, -0.4904, -0.4933, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8934e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5510e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1722, -1.1723, -1.1724, -1.1724, -1.1724, -1.1725, -1.1725, -1.1725,
        -1.1725, -1.1725], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 3.9837060707974965e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4163, -54.4872, -54.5194, -54.5384, -54.5513, -54.5605, -54.5671,
        -54.5718, -54.5751, -54.5774, -54.5791, -54.5803, -54.5811, -54.5816,
        -54.5820, -54.5823, -54.5825, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0932e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0932e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5823, -54.5825, -54.5827, -54.5828, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 8 	 N 	 N 	 9.13449556323172e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4732, -7.4757, -7.4769, -7.4777, -7.4786, -7.4793, -7.4795,
        -7.4792, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9730e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4244e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9461e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 Li 	 Li 	 1.9213880551720378e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7400, -37.7766, -37.7958, -37.8074, -37.8154, -37.8211, -37.8252,
        -37.8281, -37.8302, -37.8317, -37.8328, -37.8335, -37.8340, -37.8344,
        -37.8347, -37.8348, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6517, -37.5155, -37.4736, -37.4516, -37.4375, -37.4279, -37.4212,
        -37.4166, -37.4133, -37.4110, -37.4095, -37.4084, -37.4076, -37.4070,
        -37.4067, -37.4064, -37.4062, -37.4061, -37.4060, -37.4059, -37.4059,
        -37.4058, -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8348, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4062, -37.4061, -37.4060, -37.4059, -37.4059, -37.4058,
        -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 12 	 C 	 C 	 5.664066395077163e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1524], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5184], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1524], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7372], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5184], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 HN2O 	 HON2 	 0.0008668122566556217

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9243, -109.5126, -109.5612, -109.5476, -109.5344, -109.5249,
        -109.5185, -109.5143, -109.5114, -109.5096, -109.5083, -109.5075,
        -109.5069, -109.5066, -109.5063, -109.5061, -109.5060, -109.5059,
        -109.5059, -109.5058, -109.5058, -109.5058, -109.5058, -109.5058,
        -109.5058], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4076e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4273, -54.4992, -54.5281, -54.5448, -54.5560, -54.5639, -54.5695,
        -54.5735, -54.5763, -54.5783, -54.5797, -54.5807, -54.5814, -54.5818,
        -54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5829, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0310e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4086, -54.4714, -54.5074, -54.5294, -54.5447, -54.5557, -54.5636,
        -54.5693, -54.5733, -54.5762, -54.5782, -54.5796, -54.5806, -54.5813,
        -54.5818, -54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5829, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2055e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5061, -109.5060, -109.5059, -109.5059, -109.5058, -109.5058,
        -109.5058, -109.5058, -109.5058, -109.5058], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5829, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 1 	 N2 	 N2 	 0.00013621841848969262

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6822, -99.7064, -99.7154, -99.7205, -99.7240, -99.7265, -99.7283,
        -99.7296, -99.7305, -99.7311, -99.7316, -99.7319, -99.7322, -99.7323,
        -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8902e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8902e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7325, -99.7326, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 F 	 F 	 3.5071700601130095e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e06)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e06/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e06/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 2.864417', ' ae : 52.320700', ' E : 1.140325'] ,|| total loss 38.344044 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0424, -1.1209, -1.1412, -1.1515, -1.1581, -1.1625, -1.1656, -1.1677,
        -1.1692, -1.1702, -1.1710, -1.1715, -1.1718, -1.1721, -1.1723, -1.1724,
        -1.1725, -1.1725, -1.1726, -1.1726, -1.1726, -1.1726, -1.1727, -1.1727,
        -1.1727], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9356e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8711e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2879, -0.4502, -0.4709, -0.4808, -0.4868, -0.4908, -0.4935, -0.4954,
        -0.4967, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8862e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4941e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6434e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2432, -0.4371, -0.4636, -0.4760, -0.4836, -0.4886, -0.4920, -0.4943,
        -0.4960, -0.4971, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8861e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4114e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1724, -1.1725, -1.1725, -1.1726, -1.1726, -1.1726, -1.1726, -1.1727,
        -1.1727, -1.1727], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 2.755884878006322e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1524], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5185], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1524], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7371], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5185], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 HN2O 	 HON2 	 0.0008681062982283074

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4649, -7.4723, -7.4751, -7.4766, -7.4775, -7.4782, -7.4791, -7.4796,
        -7.4794, -7.4791, -7.4789, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4172, -7.3409, -7.3176, -7.3056, -7.2978, -7.2927, -7.2892, -7.2868,
        -7.2851, -7.2840, -7.2832, -7.2827, -7.2823, -7.2820, -7.2819, -7.2818,
        -7.2817, -7.2816, -7.2816, -7.2816, -7.2815, -7.2815, -7.2815, -7.2815,
        -7.2815], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2818, -7.2817, -7.2816, -7.2816, -7.2816, -7.2815, -7.2815, -7.2815,
        -7.2815, -7.2815], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 13 	 Li 	 Li 	 1.0100319488302777e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6749, -99.6952, -99.7070, -99.7143, -99.7193, -99.7231, -99.7258,
        -99.7278, -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7320,
        -99.7322, -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3194e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3194e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 F 	 F 	 3.833757475475908e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1059, -93.5758, -93.4331, -93.3728, -93.3286, -93.2996, -93.2788,
        -93.2640, -93.2533, -93.2456, -93.2400, -93.2359, -93.2329, -93.2307,
        -93.2290, -93.2278, -93.2269, -93.2263, -93.2257, -93.2254, -93.2251,
        -93.2249, -93.2247, -93.2246, -93.2245], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2984e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7458, -37.7864, -37.8031, -37.8128, -37.8193, -37.8239, -37.8272,
        -37.8296, -37.8312, -37.8324, -37.8333, -37.8338, -37.8343, -37.8346,
        -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1501e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4259, -54.4979, -54.5271, -54.5440, -54.5554, -54.5635, -54.5692,
        -54.5732, -54.5761, -54.5781, -54.5796, -54.5806, -54.5813, -54.5818,
        -54.5821, -54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5829, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0912e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2470, -0.4383, -0.4642, -0.4764, -0.4839, -0.4888, -0.4921, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8834e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3709e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2278, -93.2269, -93.2263, -93.2257, -93.2254, -93.2251, -93.2249,
        -93.2247, -93.2246, -93.2245], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 3 	 CHN 	 CNH 	 0.00865955457199658

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4367, -54.5072, -54.5338, -54.5488, -54.5588, -54.5659, -54.5708,
        -54.5744, -54.5769, -54.5786, -54.5799, -54.5807, -54.5813, -54.5818,
        -54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1957e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1957e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 8 	 N 	 N 	 9.781457740316119e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0433], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4525], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7308], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0433], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4525], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7308], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 11 	 HF2 	 HF2 	 0.0008562435510583869

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7530, -37.7933, -37.8080, -37.8163, -37.8218, -37.8257, -37.8285,
        -37.8304, -37.8318, -37.8328, -37.8335, -37.8340, -37.8343, -37.8346,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2470e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2470e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 4 	 C 	 C 	 6.810697363251752e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2473, -107.2811, -107.2457, -107.2395, -107.2348, -107.2323,
        -107.2312, -107.2314, -107.2319, -107.2324, -107.2329, -107.2333,
        -107.2337, -107.2341, -107.2345, -107.2348, -107.2352, -107.2354,
        -107.2357, -107.2359, -107.2361, -107.2362, -107.2363, -107.2364,
        -107.2365], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3627e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4675, -7.4743, -7.4764, -7.4775, -7.4782, -7.4791, -7.4797, -7.4795,
        -7.4792, -7.4790, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9733e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1447e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6801, -99.7043, -99.7138, -99.7192, -99.7230, -99.7256, -99.7275,
        -99.7289, -99.7299, -99.7306, -99.7311, -99.7314, -99.7317, -99.7318,
        -99.7320, -99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322,
        -99.7322, -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3563e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2348, -107.2352, -107.2354, -107.2357, -107.2359, -107.2361,
        -107.2362, -107.2363, -107.2364, -107.2365], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322, -99.7322,
        -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 2 	 FLi 	 LiF 	 0.00910321756207898

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9350, -109.4535, -109.5323, -109.5289, -109.5215, -109.5159,
        -109.5122, -109.5098, -109.5083, -109.5074, -109.5068, -109.5065,
        -109.5062, -109.5061, -109.5060, -109.5060, -109.5059, -109.5059,
        -109.5059, -109.5059, -109.5059, -109.5059, -109.5059, -109.5059,
        -109.5058], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4025e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4412, -54.5107, -54.5362, -54.5506, -54.5601, -54.5668, -54.5715,
        -54.5749, -54.5772, -54.5789, -54.5801, -54.5809, -54.5815, -54.5819,
        -54.5821, -54.5823, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1402e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4099, -54.4756, -54.5105, -54.5317, -54.5464, -54.5569, -54.5644,
        -54.5698, -54.5736, -54.5764, -54.5783, -54.5796, -54.5806, -54.5812,
        -54.5817, -54.5820, -54.5823, -54.5824, -54.5825, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3458e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5060, -109.5059, -109.5059, -109.5059, -109.5059, -109.5059,
        -109.5059, -109.5059, -109.5059, -109.5058], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5820, -54.5823, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 1 	 N2 	 N2 	 0.00013133260291764708

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4652, -7.4726, -7.4753, -7.4768, -7.4777, -7.4785, -7.4793, -7.4797,
        -7.4795, -7.4792, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791, -7.4791,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9774e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2632e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9550e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792,
        -7.4792, -7.4792], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 Li 	 Li 	 2.8684538478240723e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2822, -0.4486, -0.4700, -0.4801, -0.4864, -0.4905, -0.4933, -0.4952,
        -0.4966, -0.4975, -0.4982, -0.4986, -0.4989, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8765e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7653e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7531e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 6 	 H 	 H 	 2.4659135976261293e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5671], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8351], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5671], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7372], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8351], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 CH4O 	 CH4O 	 5.9341693971068836e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7642, -37.8014, -37.8137, -37.8204, -37.8248, -37.8279, -37.8301,
        -37.8317, -37.8328, -37.8335, -37.8341, -37.8345, -37.8347, -37.8349,
        -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6466, -37.5130, -37.4721, -37.4506, -37.4369, -37.4275, -37.4210,
        -37.4165, -37.4133, -37.4111, -37.4096, -37.4085, -37.4077, -37.4072,
        -37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061,
        -37.4061, -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8352, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4066, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061, -37.4061,
        -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 12 	 C 	 C 	 5.597445309680605e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e07)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e07/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e07/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 2.854262', ' ae : 51.918215', ' E : 1.198180'] ,|| total loss 38.047797 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4352, -54.5060, -54.5330, -54.5483, -54.5585, -54.5657, -54.5708,
        -54.5744, -54.5770, -54.5788, -54.5800, -54.5809, -54.5815, -54.5820,
        -54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9899e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9899e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5825, -54.5826, -54.5827, -54.5828, -54.5829, -54.5829, -54.5829,
        -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 8 	 N 	 N 	 9.102118267087665e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0450], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0450], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 11 	 HF2 	 HF2 	 0.0008602424580752801

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9394, -93.5075, -93.3968, -93.3462, -93.3109, -93.2874, -93.2706,
        -93.2587, -93.2500, -93.2438, -93.2392, -93.2359, -93.2334, -93.2316,
        -93.2303, -93.2293, -93.2285, -93.2280, -93.2275, -93.2272, -93.2270,
        -93.2268, -93.2267, -93.2266, -93.2265], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2472e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7631, -37.8007, -37.8133, -37.8202, -37.8247, -37.8279, -37.8301,
        -37.8317, -37.8329, -37.8337, -37.8342, -37.8346, -37.8349, -37.8351,
        -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7473e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4176, -54.4885, -54.5204, -54.5391, -54.5519, -54.5610, -54.5675,
        -54.5721, -54.5754, -54.5777, -54.5793, -54.5805, -54.5813, -54.5819,
        -54.5823, -54.5825, -54.5827, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9048e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2400, -0.4361, -0.4630, -0.4757, -0.4833, -0.4884, -0.4918, -0.4942,
        -0.4959, -0.4970, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8747e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7020e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2293, -93.2285, -93.2280, -93.2275, -93.2272, -93.2270, -93.2268,
        -93.2267, -93.2266, -93.2265], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5825, -54.5827, -54.5829, -54.5830, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5832, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 3 	 CHN 	 CNH 	 0.008530202001372708

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5676], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8353], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5676], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8353], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 CH4O 	 CH4O 	 5.928757640301272e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2845, -0.4493, -0.4703, -0.4804, -0.4865, -0.4906, -0.4933, -0.4953,
        -0.4966, -0.4975, -0.4982, -0.4986, -0.4989, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8713e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8197e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7427e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 6 	 H 	 H 	 2.7113549319510395e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7468, -37.7873, -37.8038, -37.8133, -37.8197, -37.8243, -37.8275,
        -37.8298, -37.8315, -37.8326, -37.8335, -37.8340, -37.8344, -37.8347,
        -37.8349, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9731e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9731e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 4 	 C 	 C 	 6.15182434622578e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4646, -7.4717, -7.4748, -7.4765, -7.4775, -7.4783, -7.4792, -7.4798,
        -7.4798, -7.4795, -7.4792, -7.4792, -7.4791, -7.4792, -7.4792, -7.4792,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4088, -7.3366, -7.3151, -7.3039, -7.2969, -7.2922, -7.2889, -7.2867,
        -7.2852, -7.2841, -7.2834, -7.2830, -7.2826, -7.2824, -7.2822, -7.2821,
        -7.2821, -7.2820, -7.2820, -7.2820, -7.2819, -7.2819, -7.2819, -7.2819,
        -7.2819], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2821, -7.2821, -7.2820, -7.2820, -7.2820, -7.2819, -7.2819, -7.2819,
        -7.2819, -7.2819], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 13 	 Li 	 Li 	 1.3058500267509376e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6754, -99.6962, -99.7077, -99.7148, -99.7197, -99.7234, -99.7260,
        -99.7279, -99.7293, -99.7303, -99.7310, -99.7315, -99.7318, -99.7320,
        -99.7322, -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3230e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3230e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 F 	 F 	 3.8962505161918164e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7434, -37.7829, -37.8006, -37.8110, -37.8180, -37.8231, -37.8267,
        -37.8292, -37.8311, -37.8324, -37.8333, -37.8339, -37.8344, -37.8347,
        -37.8349, -37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6423, -37.5109, -37.4709, -37.4498, -37.4364, -37.4272, -37.4209,
        -37.4164, -37.4133, -37.4112, -37.4097, -37.4086, -37.4079, -37.4073,
        -37.4070, -37.4067, -37.4066, -37.4064, -37.4063, -37.4063, -37.4062,
        -37.4062, -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4067, -37.4066, -37.4064, -37.4063, -37.4063, -37.4062, -37.4062,
        -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 12 	 C 	 C 	 5.523488589148849e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4640, -7.4704, -7.4739, -7.4759, -7.4772, -7.4780, -7.4788, -7.4796,
        -7.4800, -7.4797, -7.4794, -7.4793, -7.4792, -7.4792, -7.4793, -7.4793,
        -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9910e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8493e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9822e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 Li 	 Li 	 4.192979233339106e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9739, -1.0942, -1.1251, -1.1410, -1.1510, -1.1577, -1.1624, -1.1657,
        -1.1680, -1.1696, -1.1707, -1.1715, -1.1720, -1.1724, -1.1727, -1.1728,
        -1.1730, -1.1731, -1.1731, -1.1732, -1.1732, -1.1732, -1.1732, -1.1733,
        -1.1733], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9668e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9337e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3425, -0.4648, -0.4791, -0.4861, -0.4904, -0.4932, -0.4952, -0.4965,
        -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8659e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9921e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6655e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2994, -0.4534, -0.4726, -0.4819, -0.4875, -0.4912, -0.4938, -0.4956,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8658e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6543e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1728, -1.1730, -1.1731, -1.1731, -1.1732, -1.1732, -1.1732, -1.1732,
        -1.1733, -1.1733], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 3.2884854564403715e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6823, -109.9154, -109.7639, -109.6811, -109.6277, -109.5912,
        -109.5657, -109.5480, -109.5356, -109.5269, -109.5208, -109.5165,
        -109.5135, -109.5115, -109.5100, -109.5090, -109.5083, -109.5078,
        -109.5074, -109.5072, -109.5070, -109.5069, -109.5068, -109.5067,
        -109.5067], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3948e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4277, -54.4993, -54.5282, -54.5448, -54.5559, -54.5638, -54.5694,
        -54.5734, -54.5762, -54.5782, -54.5795, -54.5805, -54.5812, -54.5817,
        -54.5820, -54.5823, -54.5824, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1677e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4261, -54.4978, -54.5271, -54.5440, -54.5554, -54.5634, -54.5691,
        -54.5732, -54.5760, -54.5780, -54.5795, -54.5805, -54.5812, -54.5817,
        -54.5820, -54.5823, -54.5824, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1759e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5090, -109.5083, -109.5078, -109.5074, -109.5072, -109.5070,
        -109.5069, -109.5068, -109.5067, -109.5067], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5824, -54.5826, -54.5826, -54.5827, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 1 	 N2 	 N2 	 0.00012258362802999785

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3054, -107.3008, -107.2633, -107.2515, -107.2441, -107.2399,
        -107.2377, -107.2366, -107.2361, -107.2358, -107.2357, -107.2357,
        -107.2359, -107.2361, -107.2363, -107.2366, -107.2368, -107.2370,
        -107.2372, -107.2374, -107.2375, -107.2376, -107.2377, -107.2378,
        -107.2379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3599e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4745, -7.4767, -7.4777, -7.4785, -7.4794, -7.4800, -7.4799,
        -7.4795, -7.4793, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9869e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9078e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6778, -99.7013, -99.7115, -99.7176, -99.7218, -99.7248, -99.7270,
        -99.7286, -99.7297, -99.7305, -99.7310, -99.7314, -99.7317, -99.7319,
        -99.7321, -99.7322, -99.7322, -99.7323, -99.7323, -99.7323, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9201e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2366, -107.2368, -107.2370, -107.2372, -107.2374, -107.2375,
        -107.2376, -107.2377, -107.2378, -107.2379], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7322, -99.7322, -99.7323, -99.7323, -99.7323, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 2 	 FLi 	 LiF 	 0.009016462245538866

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1531], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5191], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1531], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7371], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5191], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 HN2O 	 HON2 	 0.0008701616197794929

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e08/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 2.846567', ' ae : 51.609150', ' E : 1.164054'] ,|| total loss 37.822562 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0288, -1.1158, -1.1384, -1.1499, -1.1571, -1.1620, -1.1654, -1.1678,
        -1.1695, -1.1706, -1.1714, -1.1720, -1.1724, -1.1727, -1.1729, -1.1730,
        -1.1731, -1.1732, -1.1732, -1.1733, -1.1733, -1.1733, -1.1733, -1.1733,
        -1.1733], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9645e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9289e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2572, -0.4413, -0.4658, -0.4775, -0.4845, -0.4892, -0.4924, -0.4946,
        -0.4961, -0.4972, -0.4979, -0.4984, -0.4988, -0.4991, -0.4992, -0.4994,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8623e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5536e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6536e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3024, -0.4542, -0.4731, -0.4822, -0.4877, -0.4914, -0.4939, -0.4956,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8624e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.6684e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1730, -1.1731, -1.1732, -1.1732, -1.1733, -1.1733, -1.1733, -1.1733,
        -1.1733, -1.1733], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 2.1612566196568283e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1730, -93.6037, -93.4484, -93.3849, -93.3374, -93.3067, -93.2846,
        -93.2689, -93.2576, -93.2494, -93.2435, -93.2392, -93.2361, -93.2338,
        -93.2321, -93.2309, -93.2300, -93.2293, -93.2288, -93.2284, -93.2281,
        -93.2279, -93.2277, -93.2276, -93.2275], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2126e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7588, -37.7978, -37.8112, -37.8186, -37.8236, -37.8270, -37.8295,
        -37.8312, -37.8324, -37.8333, -37.8339, -37.8343, -37.8347, -37.8349,
        -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9501e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4178, -54.4885, -54.5203, -54.5390, -54.5517, -54.5607, -54.5672,
        -54.5718, -54.5750, -54.5773, -54.5790, -54.5801, -54.5809, -54.5815,
        -54.5819, -54.5821, -54.5823, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2750e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2691, -0.4448, -0.4678, -0.4787, -0.4854, -0.4898, -0.4928, -0.4949,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8615e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3158e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2309, -93.2300, -93.2293, -93.2288, -93.2284, -93.2281, -93.2279,
        -93.2277, -93.2276, -93.2275], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5821, -54.5823, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 3 	 CHN 	 CNH 	 0.008384045469315406

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2488, -0.4387, -0.4644, -0.4766, -0.4839, -0.4888, -0.4921, -0.4944,
        -0.4960, -0.4971, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8589e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.8135e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7178e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 6 	 H 	 H 	 3.390843992040039e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4646, -7.4716, -7.4748, -7.4765, -7.4775, -7.4783, -7.4792, -7.4798,
        -7.4798, -7.4795, -7.4793, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9767e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6947e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9535e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 Li 	 Li 	 3.841789166436808e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4160, -54.4863, -54.5185, -54.5375, -54.5505, -54.5597, -54.5663,
        -54.5710, -54.5743, -54.5767, -54.5783, -54.5795, -54.5803, -54.5809,
        -54.5813, -54.5816, -54.5818, -54.5819, -54.5820, -54.5821, -54.5821,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8396e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8396e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5816, -54.5818, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 8 	 N 	 N 	 1.1498810996604864e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1515], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7363], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5182], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1515], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7363], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5182], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 HN2O 	 HON2 	 0.0008757538348915068

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6781, -99.7019, -99.7118, -99.7176, -99.7215, -99.7243, -99.7264,
        -99.7279, -99.7289, -99.7297, -99.7302, -99.7306, -99.7308, -99.7310,
        -99.7311, -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0121e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0121e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 F 	 F 	 1.4139439523963192e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7521, -37.7924, -37.8073, -37.8158, -37.8214, -37.8253, -37.8281,
        -37.8301, -37.8316, -37.8326, -37.8333, -37.8338, -37.8341, -37.8344,
        -37.8345, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6511, -37.5151, -37.4734, -37.4514, -37.4374, -37.4278, -37.4212,
        -37.4165, -37.4133, -37.4110, -37.4095, -37.4084, -37.4076, -37.4070,
        -37.4067, -37.4064, -37.4062, -37.4061, -37.4060, -37.4059, -37.4059,
        -37.4059, -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4064, -37.4062, -37.4061, -37.4060, -37.4059, -37.4059, -37.4059,
        -37.4058, -37.4058, -37.4058], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 12 	 C 	 C 	 5.4185467250799986e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2400, -107.2799, -107.2441, -107.2387, -107.2345, -107.2322,
        -107.2314, -107.2316, -107.2323, -107.2329, -107.2334, -107.2339,
        -107.2344, -107.2348, -107.2352, -107.2356, -107.2360, -107.2363,
        -107.2365, -107.2368, -107.2370, -107.2371, -107.2373, -107.2374,
        -107.2375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3513e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4662, -7.4735, -7.4761, -7.4773, -7.4781, -7.4790, -7.4798, -7.4799,
        -7.4796, -7.4793, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9690e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7485e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6842, -99.7077, -99.7160, -99.7206, -99.7238, -99.7260, -99.7276,
        -99.7287, -99.7295, -99.7301, -99.7305, -99.7308, -99.7310, -99.7312,
        -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6450e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2356, -107.2360, -107.2363, -107.2365, -107.2368, -107.2370,
        -107.2371, -107.2373, -107.2374, -107.2375], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7313, -99.7314, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 2 	 FLi 	 LiF 	 0.008971594680745163

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5662], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7364], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8350], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5662], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7364], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8350], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 CH4O 	 CH4O 	 5.936757894535207e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4666, -7.4738, -7.4763, -7.4775, -7.4782, -7.4791, -7.4798, -7.4799,
        -7.4796, -7.4793, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793,
        -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4511, -7.3616, -7.3313, -7.3150, -7.3046, -7.2975, -7.2927, -7.2893,
        -7.2870, -7.2855, -7.2844, -7.2836, -7.2831, -7.2828, -7.2826, -7.2824,
        -7.2823, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2824, -7.2823, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821, -7.2821], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 13 	 Li 	 Li 	 1.6892853812143756e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6707, -109.9164, -109.7640, -109.6810, -109.6275, -109.5909,
        -109.5655, -109.5477, -109.5352, -109.5265, -109.5204, -109.5161,
        -109.5131, -109.5110, -109.5096, -109.5086, -109.5078, -109.5073,
        -109.5070, -109.5067, -109.5066, -109.5064, -109.5064, -109.5063,
        -109.5063], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3837e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4128, -54.4811, -54.5146, -54.5346, -54.5484, -54.5582, -54.5652,
        -54.5702, -54.5738, -54.5763, -54.5781, -54.5794, -54.5802, -54.5809,
        -54.5813, -54.5816, -54.5818, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7945e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4141, -54.4833, -54.5162, -54.5359, -54.5493, -54.5589, -54.5657,
        -54.5706, -54.5740, -54.5765, -54.5782, -54.5794, -54.5803, -54.5809,
        -54.5813, -54.5816, -54.5818, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7794e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5086, -109.5078, -109.5073, -109.5070, -109.5067, -109.5066,
        -109.5064, -109.5064, -109.5063, -109.5063], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5816, -54.5818, -54.5820, -54.5821, -54.5821, -54.5822, -54.5822,
        -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 1 	 N2 	 N2 	 0.0001157234987351601

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0433], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4524], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7304], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0433], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4524], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7304], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 11 	 HF2 	 HF2 	 0.0008798397013159706

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7421, -37.7807, -37.7989, -37.8096, -37.8169, -37.8221, -37.8259,
        -37.8286, -37.8305, -37.8318, -37.8328, -37.8335, -37.8339, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3973e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3973e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 4 	 C 	 C 	 6.9803786194137e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e09/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 2.838906', ' ae : 51.356744', ' E : 1.278380'] ,|| total loss 37.626983 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9274, -109.4882, -109.5494, -109.5401, -109.5294, -109.5217,
        -109.5165, -109.5130, -109.5108, -109.5094, -109.5084, -109.5078,
        -109.5074, -109.5071, -109.5069, -109.5068, -109.5067, -109.5067,
        -109.5066, -109.5066, -109.5066, -109.5066, -109.5066, -109.5066,
        -109.5066], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3817e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4323, -54.5033, -54.5309, -54.5466, -54.5572, -54.5646, -54.5698,
        -54.5736, -54.5762, -54.5781, -54.5794, -54.5803, -54.5809, -54.5814,
        -54.5817, -54.5819, -54.5821, -54.5822, -54.5823, -54.5823, -54.5824,
        -54.5824, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5187e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4415, -54.5107, -54.5361, -54.5504, -54.5599, -54.5665, -54.5712,
        -54.5745, -54.5769, -54.5785, -54.5797, -54.5805, -54.5811, -54.5815,
        -54.5818, -54.5820, -54.5821, -54.5822, -54.5823, -54.5823, -54.5824,
        -54.5824, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4808e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5068, -109.5067, -109.5067, -109.5066, -109.5066, -109.5066,
        -109.5066, -109.5066, -109.5066, -109.5066], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5820, -54.5821, -54.5822, -54.5823, -54.5823, -54.5824, -54.5824,
        -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 1 	 N2 	 N2 	 0.0001163268756190476

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0464, -93.5529, -93.4217, -93.3651, -93.3242, -93.2974, -93.2782,
        -93.2646, -93.2548, -93.2477, -93.2426, -93.2388, -93.2361, -93.2341,
        -93.2326, -93.2315, -93.2307, -93.2301, -93.2297, -93.2293, -93.2291,
        -93.2289, -93.2288, -93.2287, -93.2286], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1543e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7598, -37.7983, -37.8115, -37.8188, -37.8236, -37.8270, -37.8294,
        -37.8311, -37.8323, -37.8332, -37.8338, -37.8342, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1672e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4287, -54.5001, -54.5286, -54.5450, -54.5560, -54.5638, -54.5693,
        -54.5732, -54.5759, -54.5779, -54.5793, -54.5802, -54.5809, -54.5814,
        -54.5817, -54.5820, -54.5821, -54.5822, -54.5823, -54.5824, -54.5824,
        -54.5824, -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4745e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2175, -0.4288, -0.4590, -0.4731, -0.4816, -0.4872, -0.4910, -0.4936,
        -0.4954, -0.4967, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8470e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8826e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2315, -93.2307, -93.2301, -93.2297, -93.2293, -93.2291, -93.2289,
        -93.2288, -93.2287, -93.2286], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5820, -54.5821, -54.5822, -54.5823, -54.5824, -54.5824, -54.5824,
        -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 3 	 CHN 	 CNH 	 0.00824504461342276

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1529], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5190], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1529], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7368], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5190], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 HN2O 	 HON2 	 0.0008791412535945452

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0266, -1.1151, -1.1381, -1.1498, -1.1571, -1.1621, -1.1656, -1.1680,
        -1.1697, -1.1709, -1.1717, -1.1723, -1.1727, -1.1730, -1.1732, -1.1733,
        -1.1734, -1.1735, -1.1735, -1.1736, -1.1736, -1.1736, -1.1736, -1.1736,
        -1.1736], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9255e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2362, -0.4348, -0.4622, -0.4751, -0.4830, -0.4881, -0.4916, -0.4940,
        -0.4957, -0.4969, -0.4977, -0.4983, -0.4987, -0.4989, -0.4991, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8432e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.4792e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6119e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3461, -0.4657, -0.4796, -0.4864, -0.4905, -0.4933, -0.4952, -0.4965,
        -0.4975, -0.4981, -0.4985, -0.4989, -0.4991, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8433e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3866e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1733, -1.1734, -1.1735, -1.1735, -1.1736, -1.1736, -1.1736, -1.1736,
        -1.1736, -1.1736], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 2.911649581616933e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0429], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4522], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0429], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4522], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 11 	 HF2 	 HF2 	 0.0008848312069318076

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4744, -7.4767, -7.4777, -7.4785, -7.4794, -7.4799, -7.4798,
        -7.4795, -7.4793, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.3964, -7.3303, -7.3113, -7.3014, -7.2952, -7.2911, -7.2882, -7.2863,
        -7.2850, -7.2841, -7.2834, -7.2830, -7.2827, -7.2825, -7.2824, -7.2823,
        -7.2822, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2823, -7.2822, -7.2822, -7.2822, -7.2821, -7.2821, -7.2821, -7.2821,
        -7.2821, -7.2821], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 13 	 Li 	 Li 	 1.8416164903615465e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2861, -0.4496, -0.4705, -0.4804, -0.4865, -0.4905, -0.4933, -0.4952,
        -0.4965, -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8382e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4885e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6765e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 6 	 H 	 H 	 4.545757248532483e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6741, -99.6941, -99.7058, -99.7129, -99.7180, -99.7217, -99.7244,
        -99.7263, -99.7277, -99.7287, -99.7295, -99.7300, -99.7303, -99.7306,
        -99.7308, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9318e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9318e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 F 	 F 	 1.760600373133614e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3054, -107.3012, -107.2633, -107.2515, -107.2442, -107.2399,
        -107.2377, -107.2366, -107.2360, -107.2357, -107.2357, -107.2357,
        -107.2359, -107.2361, -107.2364, -107.2366, -107.2369, -107.2371,
        -107.2373, -107.2375, -107.2377, -107.2378, -107.2379, -107.2380,
        -107.2381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3478e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.4727, -7.4755, -7.4770, -7.4779, -7.4787, -7.4795, -7.4800,
        -7.4797, -7.4794, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9662e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7615e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6752, -99.6971, -99.7081, -99.7147, -99.7193, -99.7227, -99.7251,
        -99.7268, -99.7281, -99.7290, -99.7296, -99.7301, -99.7304, -99.7306,
        -99.7308, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9128e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2366, -107.2369, -107.2371, -107.2373, -107.2375, -107.2377,
        -107.2378, -107.2379, -107.2380, -107.2381], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 2 	 FLi 	 LiF 	 0.008883083816566951

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4394, -54.5088, -54.5346, -54.5491, -54.5588, -54.5656, -54.5704,
        -54.5738, -54.5762, -54.5779, -54.5791, -54.5799, -54.5805, -54.5809,
        -54.5812, -54.5814, -54.5815, -54.5816, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1018e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1018e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5814, -54.5815, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 8 	 N 	 N 	 1.27254990121964e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7606, -37.7988, -37.8117, -37.8189, -37.8236, -37.8269, -37.8292,
        -37.8309, -37.8321, -37.8329, -37.8335, -37.8339, -37.8342, -37.8344,
        -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5363e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5363e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 4 	 C 	 C 	 7.494829762927955e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5668], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8353], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5668], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7367], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8353], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 CH4O 	 CH4O 	 5.960009228238127e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4733, -7.4760, -7.4774, -7.4782, -7.4790, -7.4798, -7.4801,
        -7.4798, -7.4795, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9847e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1689e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9697e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 Li 	 Li 	 4.896851854309088e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7797, -37.7982, -37.8091, -37.8166, -37.8220, -37.8258,
        -37.8286, -37.8305, -37.8319, -37.8329, -37.8336, -37.8341, -37.8345,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6913, -37.5362, -37.4867, -37.4605, -37.4438, -37.4324, -37.4244,
        -37.4189, -37.4151, -37.4124, -37.4105, -37.4092, -37.4083, -37.4076,
        -37.4072, -37.4069, -37.4067, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4062, -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4069, -37.4067, -37.4065, -37.4064, -37.4063, -37.4063, -37.4062,
        -37.4062, -37.4062, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 12 	 C 	 C 	 5.390952323977958e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e10/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 2.829995', ' ae : 51.048957', ' E : 1.298603'] ,|| total loss 37.399411 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7463, -37.7864, -37.8031, -37.8128, -37.8193, -37.8240, -37.8273,
        -37.8296, -37.8313, -37.8325, -37.8334, -37.8339, -37.8344, -37.8347,
        -37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7247, -37.5548, -37.4982, -37.4683, -37.4492, -37.4361, -37.4271,
        -37.4208, -37.4164, -37.4133, -37.4112, -37.4097, -37.4086, -37.4079,
        -37.4074, -37.4070, -37.4068, -37.4066, -37.4065, -37.4064, -37.4063,
        -37.4063, -37.4063, -37.4063, -37.4062], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4070, -37.4068, -37.4066, -37.4065, -37.4064, -37.4063, -37.4063,
        -37.4063, -37.4063, -37.4062], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 12 	 C 	 C 	 5.396601521333765e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4684, -7.4751, -7.4772, -7.4782, -7.4789, -7.4798, -7.4802, -7.4799,
        -7.4796, -7.4794, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4527, -7.3627, -7.3321, -7.3157, -7.3051, -7.2979, -7.2931, -7.2897,
        -7.2874, -7.2858, -7.2847, -7.2840, -7.2834, -7.2831, -7.2829, -7.2827,
        -7.2826, -7.2825, -7.2825, -7.2824, -7.2824, -7.2824, -7.2824, -7.2824,
        -7.2824], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4795, -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2827, -7.2826, -7.2825, -7.2825, -7.2824, -7.2824, -7.2824, -7.2824,
        -7.2824, -7.2824], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 13 	 Li 	 Li 	 2.0109288628510372e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0458], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4537], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0458], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4537], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 11 	 HF2 	 HF2 	 0.0008867807741372673

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0366, -93.5499, -93.4207, -93.3649, -93.3247, -93.2983, -93.2795,
        -93.2661, -93.2565, -93.2495, -93.2445, -93.2409, -93.2382, -93.2362,
        -93.2348, -93.2337, -93.2330, -93.2324, -93.2319, -93.2316, -93.2314,
        -93.2312, -93.2311, -93.2309, -93.2309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1041e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7440, -37.7832, -37.8008, -37.8111, -37.8182, -37.8232, -37.8267,
        -37.8293, -37.8311, -37.8324, -37.8333, -37.8340, -37.8344, -37.8347,
        -37.8350, -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8811e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4270, -54.4983, -54.5274, -54.5442, -54.5556, -54.5635, -54.5692,
        -54.5733, -54.5761, -54.5781, -54.5796, -54.5806, -54.5813, -54.5817,
        -54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1154e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2841, -0.4491, -0.4702, -0.4802, -0.4864, -0.4904, -0.4932, -0.4951,
        -0.4965, -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8368e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5644e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2337, -93.2330, -93.2324, -93.2319, -93.2316, -93.2314, -93.2312,
        -93.2311, -93.2309, -93.2309], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5828,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 3 	 CHN 	 CNH 	 0.008104823094594638

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2674, -107.2904, -107.2535, -107.2458, -107.2405, -107.2375,
        -107.2362, -107.2360, -107.2363, -107.2366, -107.2370, -107.2374,
        -107.2378, -107.2382, -107.2386, -107.2389, -107.2393, -107.2396,
        -107.2398, -107.2400, -107.2402, -107.2404, -107.2405, -107.2406,
        -107.2407], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3680e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4646, -7.4711, -7.4745, -7.4765, -7.4776, -7.4784, -7.4792, -7.4800,
        -7.4802, -7.4799, -7.4796, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795,
        -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9980e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5194e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6793, -99.7027, -99.7127, -99.7186, -99.7227, -99.7256, -99.7277,
        -99.7292, -99.7303, -99.7310, -99.7316, -99.7320, -99.7323, -99.7324,
        -99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329,
        -99.7329, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4474e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2389, -107.2393, -107.2396, -107.2398, -107.2400, -107.2402,
        -107.2404, -107.2405, -107.2406, -107.2407], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4795, -7.4795, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796,
        -7.4796, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 2 	 FLi 	 LiF 	 0.008826515369828931

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6774, -99.6998, -99.7105, -99.7170, -99.7214, -99.7246, -99.7270,
        -99.7287, -99.7299, -99.7307, -99.7314, -99.7318, -99.7321, -99.7323,
        -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7051e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7051e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7326, -99.7326, -99.7327, -99.7327, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 F 	 F 	 2.8301529154004165e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4829, -54.5160, -54.5358, -54.5493, -54.5590, -54.5659,
        -54.5708, -54.5743, -54.5768, -54.5786, -54.5798, -54.5807, -54.5813,
        -54.5817, -54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5826,
        -54.5826, -54.5826, -54.5826, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4135e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4135e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826,
        -54.5826, -54.5826, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 8 	 N 	 N 	 1.0072997174980966e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9916, -1.1015, -1.1299, -1.1444, -1.1536, -1.1598, -1.1641, -1.1671,
        -1.1692, -1.1707, -1.1717, -1.1724, -1.1729, -1.1733, -1.1735, -1.1737,
        -1.1738, -1.1739, -1.1739, -1.1740, -1.1740, -1.1740, -1.1740, -1.1740,
        -1.1741], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9873e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9746e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2658, -0.4438, -0.4672, -0.4783, -0.4851, -0.4895, -0.4926, -0.4947,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8316e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.0743e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6379e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2870, -0.4499, -0.4706, -0.4805, -0.4866, -0.4906, -0.4933, -0.4952,
        -0.4965, -0.4974, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8316e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6351e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1737, -1.1738, -1.1739, -1.1739, -1.1740, -1.1740, -1.1740, -1.1740,
        -1.1740, -1.1741], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 9.134633855798038e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2436, -0.4371, -0.4635, -0.4759, -0.4835, -0.4884, -0.4918, -0.4942,
        -0.4958, -0.4969, -0.4977, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8309e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.6093e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6619e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 6 	 H 	 H 	 5.1238216374532374e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4548, -109.8837, -109.7410, -109.6659, -109.6177, -109.5848,
        -109.5619, -109.5459, -109.5346, -109.5268, -109.5213, -109.5174,
        -109.5147, -109.5128, -109.5115, -109.5105, -109.5099, -109.5094,
        -109.5091, -109.5089, -109.5087, -109.5086, -109.5086, -109.5085,
        -109.5085], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3682e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4175, -54.4874, -54.5194, -54.5383, -54.5513, -54.5604, -54.5670,
        -54.5717, -54.5750, -54.5773, -54.5790, -54.5801, -54.5809, -54.5815,
        -54.5819, -54.5822, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2188e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4108, -54.4745, -54.5096, -54.5310, -54.5459, -54.5565, -54.5642,
        -54.5697, -54.5735, -54.5763, -54.5783, -54.5796, -54.5806, -54.5813,
        -54.5817, -54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3050e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5105, -109.5099, -109.5094, -109.5091, -109.5089, -109.5087,
        -109.5086, -109.5086, -109.5085, -109.5085], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 1 	 N2 	 N2 	 0.00010444376880715425

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7462, -37.7862, -37.8030, -37.8127, -37.8193, -37.8240, -37.8274,
        -37.8297, -37.8314, -37.8326, -37.8335, -37.8341, -37.8345, -37.8348,
        -37.8350, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8597e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8597e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 4 	 C 	 C 	 5.892710628832212e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1560], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5211], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1560], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5211], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 HN2O 	 HON2 	 0.0008817383640926183

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4719, -7.4752, -7.4769, -7.4780, -7.4787, -7.4796, -7.4803,
        -7.4803, -7.4799, -7.4796, -7.4795, -7.4795, -7.4796, -7.4796, -7.4796,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0121e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9505e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0246e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 Li 	 Li 	 6.659663635742949e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5693], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8364], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5693], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8364], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 CH4O 	 CH4O 	 5.939056124827644e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e11/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 2.825035', ' ae : 50.751638', ' E : 1.189678'] ,|| total loss 37.186897 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9444, -93.5117, -93.4006, -93.3503, -93.3151, -93.2919, -93.2753,
        -93.2635, -93.2551, -93.2490, -93.2445, -93.2413, -93.2390, -93.2372,
        -93.2360, -93.2350, -93.2343, -93.2338, -93.2334, -93.2331, -93.2329,
        -93.2327, -93.2326, -93.2325, -93.2325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0621e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7517, -37.7920, -37.8072, -37.8159, -37.8217, -37.8257, -37.8286,
        -37.8307, -37.8322, -37.8332, -37.8339, -37.8345, -37.8348, -37.8351,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6428e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4313, -54.5022, -54.5303, -54.5464, -54.5572, -54.5647, -54.5701,
        -54.5740, -54.5767, -54.5786, -54.5799, -54.5809, -54.5815, -54.5820,
        -54.5823, -54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9157e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2919, -0.4512, -0.4714, -0.4810, -0.4869, -0.4908, -0.4935, -0.4953,
        -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8282e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6258e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2350, -93.2343, -93.2338, -93.2334, -93.2331, -93.2329, -93.2327,
        -93.2326, -93.2325, -93.2325], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 3 	 CHN 	 CNH 	 0.007998934580223788

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4671, -7.4743, -7.4768, -7.4780, -7.4787, -7.4796, -7.4803, -7.4803,
        -7.4799, -7.4797, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4037, -7.3342, -7.3138, -7.3033, -7.2967, -7.2922, -7.2892, -7.2871,
        -7.2857, -7.2847, -7.2840, -7.2836, -7.2833, -7.2831, -7.2829, -7.2828,
        -7.2827, -7.2827, -7.2827, -7.2826, -7.2826, -7.2826, -7.2826, -7.2826,
        -7.2826], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2828, -7.2827, -7.2827, -7.2827, -7.2826, -7.2826, -7.2826, -7.2826,
        -7.2826, -7.2826], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 13 	 Li 	 Li 	 2.3077581023577062e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7434, -37.7820, -37.7999, -37.8105, -37.8177, -37.8228, -37.8265,
        -37.8291, -37.8310, -37.8323, -37.8333, -37.8339, -37.8344, -37.8347,
        -37.8349, -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9029e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9029e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8354,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 4 	 C 	 C 	 5.933638725519176e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0460], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4538], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0460], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4538], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 11 	 HF2 	 HF2 	 0.0008963603230601139

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3041, -0.4546, -0.4733, -0.4822, -0.4877, -0.4913, -0.4938, -0.4955,
        -0.4967, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8216e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5717e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6432e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 6 	 H 	 H 	 5.6695720721766876e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7413, -37.7773, -37.7964, -37.8078, -37.8157, -37.8213, -37.8254,
        -37.8283, -37.8304, -37.8319, -37.8329, -37.8337, -37.8342, -37.8345,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7405, -37.5641, -37.5039, -37.4722, -37.4519, -37.4380, -37.4284,
        -37.4218, -37.4171, -37.4139, -37.4116, -37.4101, -37.4090, -37.4082,
        -37.4077, -37.4073, -37.4070, -37.4068, -37.4067, -37.4066, -37.4065,
        -37.4065, -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4070, -37.4068, -37.4067, -37.4066, -37.4065, -37.4065,
        -37.4065, -37.4065, -37.4064], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 12 	 C 	 C 	 5.298514098190357e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4506, -54.5171, -54.5406, -54.5536, -54.5622, -54.5682, -54.5724,
        -54.5754, -54.5776, -54.5790, -54.5801, -54.5808, -54.5813, -54.5817,
        -54.5820, -54.5821, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3493e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3493e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 8 	 N 	 N 	 1.0411301353588075e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8362], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 CH4O 	 CH4O 	 5.928317531911724e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5570, -109.9110, -109.7590, -109.6782, -109.6263, -109.5908,
        -109.5661, -109.5488, -109.5367, -109.5283, -109.5223, -109.5182,
        -109.5152, -109.5132, -109.5118, -109.5108, -109.5101, -109.5096,
        -109.5092, -109.5090, -109.5088, -109.5087, -109.5086, -109.5086,
        -109.5085], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3622e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4220, -54.4928, -54.5234, -54.5412, -54.5533, -54.5618, -54.5679,
        -54.5723, -54.5753, -54.5775, -54.5790, -54.5801, -54.5809, -54.5814,
        -54.5818, -54.5820, -54.5822, -54.5823, -54.5824, -54.5825, -54.5825,
        -54.5826, -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3890e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4331, -54.5036, -54.5312, -54.5469, -54.5574, -54.5648, -54.5700,
        -54.5738, -54.5764, -54.5783, -54.5796, -54.5805, -54.5811, -54.5816,
        -54.5819, -54.5821, -54.5823, -54.5824, -54.5825, -54.5825, -54.5826,
        -54.5826, -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3287e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5108, -109.5101, -109.5096, -109.5092, -109.5090, -109.5088,
        -109.5087, -109.5086, -109.5086, -109.5085], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5821, -54.5823, -54.5824, -54.5825, -54.5825, -54.5826, -54.5826,
        -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 1 	 N2 	 N2 	 9.97937870918044e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4661, -7.4733, -7.4761, -7.4776, -7.4785, -7.4793, -7.4801, -7.4805,
        -7.4803, -7.4799, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0098e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5010e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0200e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 Li 	 Li 	 7.871462675020227e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6761, -99.6957, -99.7073, -99.7145, -99.7195, -99.7232, -99.7259,
        -99.7279, -99.7293, -99.7303, -99.7310, -99.7315, -99.7319, -99.7322,
        -99.7323, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9635e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9635e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 F 	 F 	 3.124592539637241e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2952, -107.3022, -107.2635, -107.2528, -107.2460, -107.2421,
        -107.2401, -107.2393, -107.2390, -107.2389, -107.2389, -107.2391,
        -107.2394, -107.2397, -107.2400, -107.2403, -107.2406, -107.2409,
        -107.2412, -107.2414, -107.2415, -107.2417, -107.2418, -107.2419,
        -107.2420], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3660e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4747, -7.4771, -7.4782, -7.4790, -7.4798, -7.4805, -7.4805,
        -7.4801, -7.4798, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0090e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6058e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6813, -99.7049, -99.7143, -99.7198, -99.7235, -99.7262, -99.7281,
        -99.7294, -99.7304, -99.7311, -99.7316, -99.7320, -99.7322, -99.7324,
        -99.7325, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327, -99.7328,
        -99.7328, -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6442e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2403, -107.2406, -107.2409, -107.2412, -107.2414, -107.2415,
        -107.2417, -107.2418, -107.2419, -107.2420], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7326, -99.7327, -99.7327, -99.7327, -99.7327, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 2 	 FLi 	 LiF 	 0.008728852304886727

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5211], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1559], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5211], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 HN2O 	 HON2 	 0.00088328378219318

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0453, -1.1231, -1.1433, -1.1536, -1.1601, -1.1645, -1.1675, -1.1696,
        -1.1711, -1.1721, -1.1729, -1.1734, -1.1737, -1.1740, -1.1742, -1.1743,
        -1.1744, -1.1744, -1.1745, -1.1745, -1.1745, -1.1745, -1.1745, -1.1745,
        -1.1746], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0171e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0342e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3394, -0.4639, -0.4785, -0.4856, -0.4900, -0.4929, -0.4949, -0.4963,
        -0.4973, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8167e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1254e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6675e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2781, -0.4473, -0.4691, -0.4795, -0.4859, -0.4901, -0.4930, -0.4949,
        -0.4963, -0.4973, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8166e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2191e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1743, -1.1744, -1.1744, -1.1745, -1.1745, -1.1745, -1.1745, -1.1745,
        -1.1745, -1.1746], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 3.520261612378186e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e12/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 2.818593', ' ae : 50.465417', ' E : 1.187593'] ,|| total loss 36.976525 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4151, -54.4834, -54.5164, -54.5361, -54.5496, -54.5592, -54.5661,
        -54.5710, -54.5745, -54.5770, -54.5787, -54.5799, -54.5808, -54.5814,
        -54.5818, -54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2723e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2723e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5823, -54.5825, -54.5826, -54.5827, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 8 	 N 	 N 	 9.63168712188985e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0471], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4543], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0471], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4543], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7319], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 11 	 HF2 	 HF2 	 0.0009013075696038352

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2645, -107.2918, -107.2544, -107.2472, -107.2422, -107.2394,
        -107.2381, -107.2380, -107.2383, -107.2387, -107.2391, -107.2395,
        -107.2400, -107.2404, -107.2409, -107.2413, -107.2416, -107.2420,
        -107.2422, -107.2425, -107.2427, -107.2428, -107.2430, -107.2431,
        -107.2432], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3774e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4731, -7.4761, -7.4777, -7.4785, -7.4793, -7.4802, -7.4806,
        -7.4804, -7.4800, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0140e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.8599e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6798, -99.7028, -99.7129, -99.7190, -99.7231, -99.7261, -99.7283,
        -99.7298, -99.7309, -99.7317, -99.7323, -99.7327, -99.7330, -99.7332,
        -99.7333, -99.7334, -99.7335, -99.7335, -99.7335, -99.7336, -99.7336,
        -99.7336, -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0761e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2413, -107.2416, -107.2420, -107.2422, -107.2425, -107.2427,
        -107.2428, -107.2430, -107.2431, -107.2432], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7334, -99.7335, -99.7335, -99.7335, -99.7336, -99.7336, -99.7336,
        -99.7336, -99.7336, -99.7336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 2 	 FLi 	 LiF 	 0.008701760541285377

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4668, -7.4740, -7.4767, -7.4780, -7.4788, -7.4796, -7.4804, -7.4806,
        -7.4803, -7.4799, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4288, -7.3479, -7.3226, -7.3093, -7.3009, -7.2952, -7.2913, -7.2887,
        -7.2869, -7.2856, -7.2847, -7.2842, -7.2838, -7.2835, -7.2833, -7.2832,
        -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829, -7.2829,
        -7.2829], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2832, -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829,
        -7.2829, -7.2829], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 13 	 Li 	 Li 	 2.602485552747512e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6788, -99.7006, -99.7115, -99.7180, -99.7226, -99.7258, -99.7282,
        -99.7300, -99.7312, -99.7321, -99.7327, -99.7332, -99.7335, -99.7337,
        -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7342, -99.7342,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3596e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3596e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7340, -99.7340, -99.7341, -99.7341, -99.7342, -99.7342, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 F 	 F 	 2.23531081967542e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7554, -37.7951, -37.8096, -37.8176, -37.8231, -37.8268, -37.8295,
        -37.8315, -37.8328, -37.8338, -37.8345, -37.8349, -37.8353, -37.8355,
        -37.8357, -37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7252, -37.5554, -37.4989, -37.4690, -37.4499, -37.4368, -37.4278,
        -37.4215, -37.4171, -37.4141, -37.4119, -37.4104, -37.4094, -37.4087,
        -37.4082, -37.4078, -37.4076, -37.4074, -37.4073, -37.4072, -37.4071,
        -37.4071, -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4078, -37.4076, -37.4074, -37.4073, -37.4072, -37.4071, -37.4071,
        -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 12 	 C 	 C 	 5.358909714539431e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9796, -1.0971, -1.1274, -1.1430, -1.1528, -1.1594, -1.1640, -1.1672,
        -1.1695, -1.1711, -1.1721, -1.1729, -1.1734, -1.1738, -1.1741, -1.1743,
        -1.1744, -1.1745, -1.1745, -1.1746, -1.1746, -1.1746, -1.1747, -1.1747,
        -1.1747], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0247e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0494e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2186, -0.4291, -0.4590, -0.4731, -0.4815, -0.4871, -0.4909, -0.4935,
        -0.4953, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8173e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.6646e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6840e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2509, -0.4392, -0.4647, -0.4767, -0.4840, -0.4888, -0.4920, -0.4943,
        -0.4959, -0.4970, -0.4977, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8173e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8149e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1743, -1.1744, -1.1745, -1.1745, -1.1746, -1.1746, -1.1746, -1.1747,
        -1.1747, -1.1747], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 4.2177771780007967e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1669, -93.6045, -93.4508, -93.3884, -93.3417, -93.3117, -93.2901,
        -93.2748, -93.2639, -93.2561, -93.2504, -93.2463, -93.2433, -93.2411,
        -93.2395, -93.2384, -93.2375, -93.2369, -93.2364, -93.2361, -93.2358,
        -93.2356, -93.2355, -93.2354, -93.2353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0153e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7551, -37.7949, -37.8094, -37.8175, -37.8230, -37.8268, -37.8295,
        -37.8315, -37.8329, -37.8338, -37.8345, -37.8350, -37.8353, -37.8356,
        -37.8357, -37.8359, -37.8359, -37.8360, -37.8360, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1739e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4268, -54.4978, -54.5273, -54.5443, -54.5558, -54.5640, -54.5697,
        -54.5739, -54.5768, -54.5788, -54.5803, -54.5813, -54.5820, -54.5825,
        -54.5828, -54.5831, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4493e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2336, -0.4339, -0.4617, -0.4748, -0.4827, -0.4879, -0.4914, -0.4939,
        -0.4956, -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4990, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8170e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2586e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2384, -93.2375, -93.2369, -93.2364, -93.2361, -93.2358, -93.2356,
        -93.2355, -93.2354, -93.2353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8359, -37.8359, -37.8360, -37.8360, -37.8361, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5831, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836, -54.5836,
        -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 3 	 CHN 	 CNH 	 0.00783968599084366

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2786, -0.4474, -0.4692, -0.4796, -0.4859, -0.4901, -0.4930, -0.4949,
        -0.4963, -0.4973, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8150e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2540e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6301e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 6 	 H 	 H 	 6.233722997272411e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4653, -7.4718, -7.4752, -7.4771, -7.4782, -7.4789, -7.4798, -7.4805,
        -7.4806, -7.4802, -7.4799, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0155e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9087e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0314e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 Li 	 Li 	 8.806769585988105e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1583], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5225], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1583], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5225], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 HN2O 	 HON2 	 0.0008869042149293435

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5702], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7384], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5702], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7384], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8370], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 CH4O 	 CH4O 	 5.9598415072906534e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7527, -37.7927, -37.8077, -37.8162, -37.8219, -37.8259, -37.8287,
        -37.8308, -37.8322, -37.8332, -37.8339, -37.8344, -37.8348, -37.8350,
        -37.8352, -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6803e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6803e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 4 	 C 	 C 	 5.577729701953662e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6724, -109.9202, -109.7676, -109.6846, -109.6311, -109.5945,
        -109.5690, -109.5512, -109.5387, -109.5300, -109.5239, -109.5197,
        -109.5167, -109.5146, -109.5131, -109.5121, -109.5114, -109.5109,
        -109.5105, -109.5103, -109.5101, -109.5100, -109.5099, -109.5098,
        -109.5098], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3518e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4308, -54.5016, -54.5298, -54.5459, -54.5568, -54.5645, -54.5699,
        -54.5737, -54.5765, -54.5784, -54.5797, -54.5807, -54.5814, -54.5818,
        -54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5828, -54.5828,
        -54.5829, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0633e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4139, -54.4808, -54.5144, -54.5346, -54.5486, -54.5585, -54.5656,
        -54.5707, -54.5743, -54.5769, -54.5787, -54.5799, -54.5808, -54.5815,
        -54.5819, -54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5829, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1864e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5121, -109.5114, -109.5109, -109.5105, -109.5103, -109.5101,
        -109.5100, -109.5099, -109.5098, -109.5098], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5822, -54.5824, -54.5826, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 1 	 N2 	 N2 	 9.332275282188675e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e13/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 2.812810', ' ae : 50.197267', ' E : 1.129367'] ,|| total loss 36.780433 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4730, -7.4760, -7.4776, -7.4785, -7.4792, -7.4801, -7.4806,
        -7.4803, -7.4799, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9953e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6236e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9910e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 7 	 Li 	 Li 	 8.158112696780547e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2789, -107.2974, -107.2591, -107.2505, -107.2447, -107.2414,
        -107.2398, -107.2394, -107.2395, -107.2397, -107.2400, -107.2403,
        -107.2407, -107.2411, -107.2415, -107.2419, -107.2422, -107.2426,
        -107.2428, -107.2431, -107.2433, -107.2434, -107.2435, -107.2437,
        -107.2437], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3799e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4741, -7.4767, -7.4780, -7.4788, -7.4796, -7.4804, -7.4805,
        -7.4801, -7.4798, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9896e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5660e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6818, -99.7052, -99.7147, -99.7202, -99.7240, -99.7267, -99.7286,
        -99.7300, -99.7310, -99.7317, -99.7322, -99.7326, -99.7328, -99.7330,
        -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9134e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2419, -107.2422, -107.2426, -107.2428, -107.2431, -107.2433,
        -107.2434, -107.2435, -107.2437, -107.2437], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7332, -99.7333, -99.7333, -99.7333, -99.7334, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 2 	 FLi 	 LiF 	 0.008624685989656133

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4192, -54.4891, -54.5206, -54.5392, -54.5518, -54.5608, -54.5672,
        -54.5718, -54.5750, -54.5773, -54.5789, -54.5801, -54.5809, -54.5814,
        -54.5818, -54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3049e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3049e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5823, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 8 	 N 	 N 	 9.838477840092272e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1573], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5219], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1573], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5219], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 9 	 HN2O 	 HON2 	 0.0008921458072973253

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0481], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4549], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7323], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0481], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4549], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7323], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 11 	 HF2 	 HF2 	 0.0009066624399796534

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6784, -99.6997, -99.7107, -99.7173, -99.7219, -99.7253, -99.7277,
        -99.7295, -99.7308, -99.7317, -99.7323, -99.7328, -99.7331, -99.7333,
        -99.7335, -99.7336, -99.7337, -99.7337, -99.7338, -99.7338, -99.7338,
        -99.7338, -99.7338, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2292e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2292e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7336, -99.7337, -99.7337, -99.7338, -99.7338, -99.7338, -99.7338,
        -99.7338, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 5 	 F 	 F 	 6.014241962409425e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7475, -37.7874, -37.8039, -37.8134, -37.8199, -37.8244, -37.8277,
        -37.8300, -37.8317, -37.8329, -37.8337, -37.8343, -37.8347, -37.8350,
        -37.8352, -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6344, -37.5071, -37.4687, -37.4485, -37.4356, -37.4268, -37.4208,
        -37.4165, -37.4135, -37.4115, -37.4100, -37.4090, -37.4083, -37.4078,
        -37.4074, -37.4072, -37.4070, -37.4069, -37.4068, -37.4068, -37.4067,
        -37.4067, -37.4067, -37.4067, -37.4067], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4072, -37.4070, -37.4069, -37.4068, -37.4068, -37.4067, -37.4067,
        -37.4067, -37.4067, -37.4067], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 12 	 C 	 C 	 5.320474859581119e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8326, -93.4641, -93.3753, -93.3321, -93.3036, -93.2843, -93.2707,
        -93.2610, -93.2540, -93.2490, -93.2454, -93.2427, -93.2408, -93.2394,
        -93.2383, -93.2376, -93.2370, -93.2366, -93.2362, -93.2360, -93.2358,
        -93.2357, -93.2356, -93.2355, -93.2355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9617e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7601, -37.7985, -37.8118, -37.8191, -37.8240, -37.8274, -37.8298,
        -37.8316, -37.8328, -37.8336, -37.8342, -37.8347, -37.8350, -37.8352,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6233e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4225, -54.4930, -54.5236, -54.5415, -54.5536, -54.5622, -54.5683,
        -54.5727, -54.5757, -54.5779, -54.5795, -54.5805, -54.5813, -54.5818,
        -54.5822, -54.5825, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2212, -0.4299, -0.4595, -0.4733, -0.4817, -0.4872, -0.4910, -0.4935,
        -0.4953, -0.4966, -0.4974, -0.4980, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8024e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0481e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2376, -93.2370, -93.2366, -93.2362, -93.2360, -93.2358, -93.2357,
        -93.2356, -93.2355, -93.2355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5825, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 3 	 CHN 	 CNH 	 0.0077339568852817925

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5701], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7383], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5701], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7383], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8370], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 CH4O 	 CH4O 	 5.997550980835892e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4689, -7.4756, -7.4777, -7.4786, -7.4793, -7.4802, -7.4806, -7.4802,
        -7.4799, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4164, -7.3409, -7.3181, -7.3063, -7.2988, -7.2938, -7.2903, -7.2880,
        -7.2864, -7.2853, -7.2845, -7.2840, -7.2837, -7.2834, -7.2833, -7.2831,
        -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829, -7.2829,
        -7.2829], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2831, -7.2831, -7.2830, -7.2830, -7.2830, -7.2829, -7.2829, -7.2829,
        -7.2829, -7.2829], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 13 	 Li 	 Li 	 3.131804368009077e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7780, -37.7968, -37.8081, -37.8159, -37.8215, -37.8255,
        -37.8284, -37.8304, -37.8319, -37.8329, -37.8336, -37.8342, -37.8345,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0627e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 4 	 C 	 C 	 6.221490615919459e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6496, -109.9215, -109.7677, -109.6845, -109.6310, -109.5944,
        -109.5689, -109.5511, -109.5386, -109.5298, -109.5237, -109.5195,
        -109.5165, -109.5144, -109.5129, -109.5119, -109.5112, -109.5106,
        -109.5103, -109.5100, -109.5099, -109.5098, -109.5097, -109.5096,
        -109.5096], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3440e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4116, -54.4748, -54.5097, -54.5310, -54.5458, -54.5564, -54.5640,
        -54.5695, -54.5733, -54.5761, -54.5780, -54.5794, -54.5803, -54.5810,
        -54.5815, -54.5818, -54.5821, -54.5822, -54.5823, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5453e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4127, -54.4781, -54.5122, -54.5329, -54.5472, -54.5574, -54.5648,
        -54.5700, -54.5737, -54.5763, -54.5782, -54.5795, -54.5804, -54.5811,
        -54.5815, -54.5819, -54.5821, -54.5822, -54.5824, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5218e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5119, -109.5112, -109.5106, -109.5103, -109.5100, -109.5099,
        -109.5098, -109.5097, -109.5096, -109.5096], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5819, -54.5821, -54.5822, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 1 	 N2 	 N2 	 8.914092465375857e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0018, -1.1060, -1.1330, -1.1468, -1.1556, -1.1615, -1.1656, -1.1684,
        -1.1704, -1.1718, -1.1728, -1.1734, -1.1739, -1.1742, -1.1745, -1.1746,
        -1.1748, -1.1748, -1.1749, -1.1749, -1.1750, -1.1750, -1.1750, -1.1750,
        -1.1750], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0234e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0469e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3220, -0.4593, -0.4759, -0.4839, -0.4888, -0.4921, -0.4943, -0.4959,
        -0.4969, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7946e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.0336e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6360e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2592, -0.4417, -0.4660, -0.4775, -0.4845, -0.4891, -0.4923, -0.4944,
        -0.4959, -0.4970, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7945e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3118e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1746, -1.1748, -1.1748, -1.1749, -1.1749, -1.1750, -1.1750, -1.1750,
        -1.1750, -1.1750], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 0 	 H2 	 H2 	 7.793763587145897e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2435, -0.4369, -0.4633, -0.4758, -0.4833, -0.4883, -0.4917, -0.4940,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7932e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7441e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5864e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 6 	 H 	 H 	 8.155093072933293e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e14)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e14/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e14/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 14 || ,[' rho : 2.803689', ' ae : 49.939570', ' E : 1.196169'] ,|| total loss 36.585336 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1563], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5214], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1563], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5214], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 9 	 HN2O 	 HON2 	 0.000897701444341386

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7425, -37.7797, -37.7981, -37.8090, -37.8165, -37.8218, -37.8257,
        -37.8284, -37.8304, -37.8318, -37.8328, -37.8335, -37.8340, -37.8343,
        -37.8346, -37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3174e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3174e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 4 	 C 	 C 	 6.7920363812974755e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5689], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8365], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5689], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8365], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 10 	 CH4O 	 CH4O 	 6.01148145623366e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4661, -7.4732, -7.4761, -7.4777, -7.4785, -7.4793, -7.4801, -7.4806,
        -7.4803, -7.4799, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9632e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5547e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9267e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 7 	 Li 	 Li 	 8.006748548157813e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6765, -99.6957, -99.7073, -99.7144, -99.7195, -99.7232, -99.7259,
        -99.7279, -99.7293, -99.7303, -99.7310, -99.7315, -99.7319, -99.7321,
        -99.7323, -99.7325, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0089e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0089e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7325, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 5 	 F 	 F 	 3.2121121470863974e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4129, -54.4786, -54.5126, -54.5331, -54.5472, -54.5574, -54.5646,
        -54.5698, -54.5735, -54.5761, -54.5779, -54.5792, -54.5801, -54.5808,
        -54.5812, -54.5815, -54.5818, -54.5819, -54.5820, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8395e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8395e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5815, -54.5818, -54.5819, -54.5820, -54.5821, -54.5822, -54.5822,
        -54.5822, -54.5822, -54.5823], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 8 	 N 	 N 	 1.1341190094599372e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7561, -37.7954, -37.8095, -37.8174, -37.8226, -37.8263, -37.8289,
        -37.8308, -37.8321, -37.8331, -37.8337, -37.8342, -37.8345, -37.8347,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6298, -37.5048, -37.4671, -37.4474, -37.4348, -37.4262, -37.4202,
        -37.4161, -37.4132, -37.4111, -37.4097, -37.4087, -37.4080, -37.4075,
        -37.4072, -37.4070, -37.4068, -37.4067, -37.4066, -37.4065, -37.4065,
        -37.4065, -37.4065, -37.4064, -37.4064], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4070, -37.4068, -37.4067, -37.4066, -37.4065, -37.4065, -37.4065,
        -37.4065, -37.4064, -37.4064], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 12 	 C 	 C 	 5.213541365198549e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2496, -107.2887, -107.2509, -107.2453, -107.2411, -107.2389,
        -107.2382, -107.2382, -107.2387, -107.2393, -107.2398, -107.2403,
        -107.2408, -107.2413, -107.2418, -107.2423, -107.2427, -107.2431,
        -107.2434, -107.2436, -107.2439, -107.2441, -107.2442, -107.2443,
        -107.2444], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3815e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4688, -7.4756, -7.4777, -7.4787, -7.4794, -7.4803, -7.4807, -7.4804,
        -7.4800, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9666e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9262e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6784, -99.7003, -99.7110, -99.7173, -99.7218, -99.7250, -99.7273,
        -99.7290, -99.7302, -99.7311, -99.7317, -99.7321, -99.7324, -99.7326,
        -99.7328, -99.7329, -99.7330, -99.7330, -99.7330, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0106e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2423, -107.2427, -107.2431, -107.2434, -107.2436, -107.2439,
        -107.2441, -107.2442, -107.2443, -107.2444], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7329, -99.7330, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 2 	 FLi 	 LiF 	 0.00854767445557318

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4546], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0476], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4546], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7319], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 11 	 HF2 	 HF2 	 0.0009165979374490948

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7774, -109.8739, -109.7450, -109.6696, -109.6206, -109.5871,
        -109.5639, -109.5477, -109.5363, -109.5284, -109.5229, -109.5191,
        -109.5164, -109.5145, -109.5132, -109.5122, -109.5116, -109.5112,
        -109.5108, -109.5106, -109.5105, -109.5103, -109.5103, -109.5102,
        -109.5102], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3403e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4518, -54.5179, -54.5412, -54.5541, -54.5626, -54.5685, -54.5727,
        -54.5757, -54.5778, -54.5793, -54.5803, -54.5810, -54.5816, -54.5819,
        -54.5822, -54.5823, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1562e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4265, -54.4972, -54.5265, -54.5435, -54.5550, -54.5631, -54.5689,
        -54.5730, -54.5759, -54.5779, -54.5794, -54.5804, -54.5811, -54.5816,
        -54.5819, -54.5822, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2597e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5122, -109.5116, -109.5112, -109.5108, -109.5106, -109.5105,
        -109.5103, -109.5103, -109.5102, -109.5102], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5822, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 1 	 N2 	 N2 	 8.649181703040921e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2113, -0.4264, -0.4576, -0.4721, -0.4809, -0.4866, -0.4905, -0.4932,
        -0.4951, -0.4964, -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7896e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7808e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5793e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 6 	 H 	 H 	 8.570438727191e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8510, -93.4726, -93.3803, -93.3361, -93.3066, -93.2868, -93.2727,
        -93.2628, -93.2556, -93.2505, -93.2468, -93.2441, -93.2421, -93.2406,
        -93.2396, -93.2388, -93.2382, -93.2378, -93.2375, -93.2372, -93.2371,
        -93.2369, -93.2368, -93.2367, -93.2367], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9194e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7680, -37.8037, -37.8152, -37.8216, -37.8257, -37.8286, -37.8307,
        -37.8321, -37.8332, -37.8339, -37.8344, -37.8348, -37.8350, -37.8352,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6678e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4232, -54.4936, -54.5240, -54.5417, -54.5537, -54.5622, -54.5683,
        -54.5726, -54.5756, -54.5778, -54.5793, -54.5804, -54.5811, -54.5817,
        -54.5820, -54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1415e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2731, -0.4457, -0.4682, -0.4789, -0.4855, -0.4898, -0.4927, -0.4947,
        -0.4961, -0.4971, -0.4978, -0.4983, -0.4986, -0.4989, -0.4990, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7896e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1517e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2388, -93.2382, -93.2378, -93.2375, -93.2372, -93.2371, -93.2369,
        -93.2368, -93.2367, -93.2367], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8354, -37.8355, -37.8355, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828, -54.5828,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 3 	 CHN 	 CNH 	 0.007604458969187537

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9888, -1.1010, -1.1300, -1.1449, -1.1543, -1.1607, -1.1651, -1.1682,
        -1.1703, -1.1718, -1.1728, -1.1736, -1.1741, -1.1744, -1.1747, -1.1749,
        -1.1750, -1.1751, -1.1751, -1.1752, -1.1752, -1.1752, -1.1753, -1.1753,
        -1.1753], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0395e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0790e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3220, -0.4593, -0.4759, -0.4839, -0.4888, -0.4920, -0.4943, -0.4958,
        -0.4969, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7877e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2483e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6545e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3003, -0.4535, -0.4726, -0.4817, -0.4873, -0.4911, -0.4936, -0.4954,
        -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7877e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.6457e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1749, -1.1750, -1.1751, -1.1751, -1.1752, -1.1752, -1.1752, -1.1753,
        -1.1753, -1.1753], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 0 	 H2 	 H2 	 1.0531920956806735e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4670, -7.4741, -7.4768, -7.4781, -7.4789, -7.4797, -7.4805, -7.4807,
        -7.4803, -7.4799, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4386, -7.3537, -7.3264, -7.3120, -7.3028, -7.2966, -7.2923, -7.2894,
        -7.2874, -7.2860, -7.2851, -7.2845, -7.2840, -7.2837, -7.2835, -7.2834,
        -7.2833, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831, -7.2831, -7.2831,
        -7.2831], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2834, -7.2833, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831, -7.2831,
        -7.2831, -7.2831], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 13 	 Li 	 Li 	 3.528492213128983e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e15)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e15/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e15/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 15 || ,[' rho : 2.797134', ' ae : 49.653207', ' E : 1.214216'] ,|| total loss 36.372249 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4492, -54.5159, -54.5397, -54.5530, -54.5617, -54.5678, -54.5722,
        -54.5752, -54.5774, -54.5789, -54.5800, -54.5807, -54.5812, -54.5816,
        -54.5819, -54.5821, -54.5822, -54.5823, -54.5823, -54.5824, -54.5824,
        -54.5824, -54.5824, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4271e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4271e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5822, -54.5823, -54.5823, -54.5824, -54.5824, -54.5824,
        -54.5824, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 8 	 N 	 N 	 1.0646250689095262e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4739, -7.4767, -7.4780, -7.4788, -7.4796, -7.4804, -7.4807,
        -7.4803, -7.4800, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4570, -7.3659, -7.3344, -7.3174, -7.3066, -7.2992, -7.2941, -7.2906,
        -7.2883, -7.2866, -7.2855, -7.2848, -7.2842, -7.2839, -7.2836, -7.2835,
        -7.2833, -7.2833, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831, -7.2831,
        -7.2831], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2835, -7.2833, -7.2833, -7.2832, -7.2832, -7.2832, -7.2831, -7.2831,
        -7.2831, -7.2831], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 13 	 Li 	 Li 	 3.6207972644141495e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7637, -37.8008, -37.8132, -37.8201, -37.8246, -37.8277, -37.8300,
        -37.8315, -37.8327, -37.8335, -37.8340, -37.8344, -37.8347, -37.8349,
        -37.8350, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9824e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9824e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 4 	 C 	 C 	 6.310780955400856e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0144, -1.1112, -1.1363, -1.1492, -1.1573, -1.1628, -1.1666, -1.1693,
        -1.1711, -1.1724, -1.1733, -1.1739, -1.1744, -1.1747, -1.1749, -1.1751,
        -1.1752, -1.1752, -1.1753, -1.1753, -1.1754, -1.1754, -1.1754, -1.1754,
        -1.1754], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0462e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0925e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3455, -0.4654, -0.4793, -0.4861, -0.4903, -0.4931, -0.4950, -0.4963,
        -0.4973, -0.4979, -0.4983, -0.4987, -0.4989, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7821e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.0466e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6566e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2435, -0.4369, -0.4633, -0.4758, -0.4833, -0.4883, -0.4917, -0.4940,
        -0.4956, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7820e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1239e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1751, -1.1752, -1.1752, -1.1753, -1.1753, -1.1754, -1.1754, -1.1754,
        -1.1754, -1.1754], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 0 	 H2 	 H2 	 1.2411808351956186e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4662, -7.4731, -7.4762, -7.4778, -7.4787, -7.4794, -7.4803, -7.4808,
        -7.4805, -7.4801, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9591e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3062e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9187e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 7 	 Li 	 Li 	 9.685401257390757e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2462, -0.4377, -0.4638, -0.4760, -0.4835, -0.4884, -0.4918, -0.4941,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7808e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0942e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5616e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 6 	 H 	 H 	 9.307784759838657e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5700], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5700], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8371], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 10 	 CH4O 	 CH4O 	 6.018161485777814e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1577], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5223], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1577], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5223], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 9 	 HN2O 	 HON2 	 0.0009009311618245041

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8826, -93.4865, -93.3880, -93.3420, -93.3107, -93.2898, -93.2750,
        -93.2645, -93.2570, -93.2516, -93.2477, -93.2449, -93.2428, -93.2413,
        -93.2402, -93.2394, -93.2388, -93.2384, -93.2381, -93.2378, -93.2376,
        -93.2375, -93.2374, -93.2373, -93.2373], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8911e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7552, -37.7947, -37.8090, -37.8171, -37.8225, -37.8262, -37.8289,
        -37.8308, -37.8322, -37.8331, -37.8338, -37.8343, -37.8346, -37.8349,
        -37.8350, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9093e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4508, -54.5170, -54.5405, -54.5535, -54.5622, -54.5682, -54.5724,
        -54.5754, -54.5775, -54.5790, -54.5801, -54.5808, -54.5813, -54.5817,
        -54.5820, -54.5821, -54.5823, -54.5823, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3501e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3020, -0.4539, -0.4728, -0.4819, -0.4874, -0.4911, -0.4936, -0.4954,
        -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7790e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8962e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2394, -93.2388, -93.2384, -93.2381, -93.2378, -93.2376, -93.2375,
        -93.2374, -93.2373, -93.2373], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5821, -54.5823, -54.5823, -54.5824, -54.5825, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 3 	 CHN 	 CNH 	 0.00751079146602181

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4752, -109.8911, -109.7463, -109.6700, -109.6210, -109.5875,
        -109.5642, -109.5479, -109.5365, -109.5285, -109.5229, -109.5190,
        -109.5162, -109.5143, -109.5129, -109.5120, -109.5113, -109.5109,
        -109.5105, -109.5103, -109.5102, -109.5100, -109.5100, -109.5099,
        -109.5099], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3337e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4507, -54.5170, -54.5404, -54.5534, -54.5620, -54.5680, -54.5722,
        -54.5752, -54.5774, -54.5788, -54.5799, -54.5806, -54.5811, -54.5815,
        -54.5818, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5453e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4382, -54.5075, -54.5338, -54.5487, -54.5586, -54.5656, -54.5705,
        -54.5740, -54.5765, -54.5782, -54.5795, -54.5803, -54.5809, -54.5814,
        -54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5915e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5120, -109.5113, -109.5109, -109.5105, -109.5103, -109.5102,
        -109.5100, -109.5100, -109.5099, -109.5099], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5819, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 1 	 N2 	 N2 	 8.228105636115422e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3258, -107.3139, -107.2743, -107.2613, -107.2531, -107.2483,
        -107.2455, -107.2440, -107.2431, -107.2426, -107.2423, -107.2423,
        -107.2425, -107.2427, -107.2430, -107.2433, -107.2436, -107.2439,
        -107.2441, -107.2443, -107.2445, -107.2446, -107.2447, -107.2448,
        -107.2449], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3788e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4745, -7.4771, -7.4783, -7.4791, -7.4799, -7.4806, -7.4807,
        -7.4803, -7.4800, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9405e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2969e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6813, -99.7044, -99.7139, -99.7194, -99.7232, -99.7259, -99.7278,
        -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7321, -99.7322,
        -99.7324, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0501e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2433, -107.2436, -107.2439, -107.2441, -107.2443, -107.2445,
        -107.2446, -107.2447, -107.2448, -107.2449], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 2 	 FLi 	 LiF 	 0.00847013879724899

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7454, -37.7844, -37.8016, -37.8116, -37.8184, -37.8232, -37.8266,
        -37.8291, -37.8308, -37.8321, -37.8330, -37.8336, -37.8340, -37.8343,
        -37.8345, -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7198, -37.5520, -37.4965, -37.4673, -37.4485, -37.4357, -37.4268,
        -37.4206, -37.4163, -37.4133, -37.4112, -37.4097, -37.4087, -37.4080,
        -37.4075, -37.4071, -37.4069, -37.4067, -37.4066, -37.4065, -37.4065,
        -37.4064, -37.4064, -37.4064, -37.4064], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4071, -37.4069, -37.4067, -37.4066, -37.4065, -37.4065, -37.4064,
        -37.4064, -37.4064, -37.4064], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 12 	 C 	 C 	 5.094850313352076e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6779, -99.6999, -99.7104, -99.7167, -99.7210, -99.7242, -99.7265,
        -99.7281, -99.7293, -99.7302, -99.7308, -99.7312, -99.7315, -99.7317,
        -99.7318, -99.7319, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7322, -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7082e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7082e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7319, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321, -99.7322,
        -99.7322, -99.7322, -99.7322], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 5 	 F 	 F 	 6.986563175070003e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0453], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4534], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7306], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0453], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4534], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7306], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 11 	 HF2 	 HF2 	 0.0009323241628936923

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e16)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e16/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e16/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 16 || ,[' rho : 2.791645', ' ae : 49.411777', ' E : 1.237896'] ,|| total loss 36.189727 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5208], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1552], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7368], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5208], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 9 	 HN2O 	 HON2 	 0.0009081151280905961

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6768, -109.9176, -109.7658, -109.6830, -109.6296, -109.5931,
        -109.5677, -109.5499, -109.5375, -109.5288, -109.5227, -109.5185,
        -109.5155, -109.5134, -109.5120, -109.5109, -109.5102, -109.5097,
        -109.5094, -109.5091, -109.5089, -109.5088, -109.5087, -109.5087,
        -109.5086], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3279e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4283, -54.4987, -54.5273, -54.5438, -54.5549, -54.5627, -54.5682,
        -54.5722, -54.5750, -54.5769, -54.5783, -54.5793, -54.5800, -54.5805,
        -54.5808, -54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815,
        -54.5815, -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4403e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4133, -54.4795, -54.5131, -54.5333, -54.5472, -54.5571, -54.5643,
        -54.5694, -54.5730, -54.5755, -54.5773, -54.5786, -54.5795, -54.5801,
        -54.5806, -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5700e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5109, -109.5102, -109.5097, -109.5094, -109.5091, -109.5089,
        -109.5088, -109.5087, -109.5087, -109.5086], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815,
        -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 1 	 N2 	 N2 	 7.941558884313709e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0447], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4530], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7303], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0447], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4530], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7303], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 11 	 HF2 	 HF2 	 0.0009350640352764799

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4657, -7.4721, -7.4754, -7.4773, -7.4783, -7.4790, -7.4798, -7.4806,
        -7.4805, -7.4801, -7.4798, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9149e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7464e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8302e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 7 	 Li 	 Li 	 8.451238060552778e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2894, -107.3036, -107.2633, -107.2533, -107.2467, -107.2430,
        -107.2410, -107.2403, -107.2401, -107.2401, -107.2402, -107.2405,
        -107.2408, -107.2412, -107.2416, -107.2420, -107.2424, -107.2427,
        -107.2430, -107.2432, -107.2434, -107.2436, -107.2437, -107.2438,
        -107.2439], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3708e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4738, -7.4766, -7.4780, -7.4788, -7.4795, -7.4804, -7.4806,
        -7.4802, -7.4799, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9074e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6652e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6777, -99.6999, -99.7102, -99.7163, -99.7206, -99.7237, -99.7259,
        -99.7275, -99.7287, -99.7295, -99.7300, -99.7305, -99.7307, -99.7310,
        -99.7311, -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2029e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2420, -107.2424, -107.2427, -107.2430, -107.2432, -107.2434,
        -107.2436, -107.2437, -107.2438, -107.2439], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 2 	 FLi 	 LiF 	 0.00843487420036115

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7652, -37.8014, -37.8134, -37.8199, -37.8242, -37.8272, -37.8294,
        -37.8309, -37.8319, -37.8327, -37.8332, -37.8336, -37.8338, -37.8340,
        -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0137e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0137e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8343, -37.8344, -37.8344, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 4 	 C 	 C 	 8.55913268179817e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6758, -99.6953, -99.7067, -99.7137, -99.7186, -99.7222, -99.7248,
        -99.7267, -99.7281, -99.7291, -99.7298, -99.7303, -99.7306, -99.7309,
        -99.7311, -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2451e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.2451e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 5 	 F 	 F 	 1.4114462042487656e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5677], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7366], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5677], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7366], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8362], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 10 	 CH4O 	 CH4O 	 6.092578188821157e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7608, -37.7986, -37.8115, -37.8186, -37.8233, -37.8266, -37.8290,
        -37.8306, -37.8318, -37.8326, -37.8332, -37.8336, -37.8339, -37.8341,
        -37.8343, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6485, -37.5138, -37.4726, -37.4509, -37.4371, -37.4277, -37.4211,
        -37.4166, -37.4134, -37.4111, -37.4096, -37.4085, -37.4077, -37.4072,
        -37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061,
        -37.4060, -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8344, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4066, -37.4064, -37.4063, -37.4062, -37.4061, -37.4061, -37.4060,
        -37.4060, -37.4060, -37.4060], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 12 	 C 	 C 	 5.0591227304090634e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3434, -0.4648, -0.4790, -0.4859, -0.4901, -0.4929, -0.4949, -0.4962,
        -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7604e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8216e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5209e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 6 	 H 	 H 	 1.1155908654974762e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9782, -1.0969, -1.1277, -1.1435, -1.1535, -1.1603, -1.1649, -1.1682,
        -1.1705, -1.1721, -1.1732, -1.1739, -1.1745, -1.1749, -1.1751, -1.1753,
        -1.1755, -1.1755, -1.1756, -1.1757, -1.1757, -1.1757, -1.1757, -1.1757,
        -1.1757], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0528e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1056e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3480, -0.4660, -0.4796, -0.4863, -0.4904, -0.4931, -0.4950, -0.4963,
        -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7602e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.7578e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6260e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3451, -0.4652, -0.4792, -0.4860, -0.4902, -0.4930, -0.4949, -0.4962,
        -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7602e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8038e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1753, -1.1755, -1.1755, -1.1756, -1.1757, -1.1757, -1.1757, -1.1757,
        -1.1757, -1.1757], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 0 	 H2 	 H2 	 1.7953509861988563e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0967, -93.5764, -93.4356, -93.3774, -93.3344, -93.3068, -93.2869,
        -93.2730, -93.2630, -93.2558, -93.2507, -93.2470, -93.2443, -93.2423,
        -93.2409, -93.2399, -93.2391, -93.2386, -93.2381, -93.2378, -93.2376,
        -93.2374, -93.2373, -93.2372, -93.2372], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8438e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7496, -37.7894, -37.8051, -37.8140, -37.8200, -37.8243, -37.8273,
        -37.8294, -37.8310, -37.8321, -37.8328, -37.8334, -37.8337, -37.8340,
        -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8523e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4352, -54.5048, -54.5317, -54.5469, -54.5571, -54.5643, -54.5694,
        -54.5730, -54.5755, -54.5773, -54.5786, -54.5795, -54.5801, -54.5806,
        -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815,
        -54.5815, -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4207e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2355, -0.4343, -0.4618, -0.4748, -0.4826, -0.4878, -0.4913, -0.4937,
        -0.4954, -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7595e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.1774e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2399, -93.2391, -93.2386, -93.2381, -93.2378, -93.2376, -93.2374,
        -93.2373, -93.2372, -93.2372], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5811, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5815,
        -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 3 	 CHN 	 CNH 	 0.007365312840854944

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4508, -54.5167, -54.5399, -54.5527, -54.5613, -54.5672, -54.5714,
        -54.5744, -54.5764, -54.5779, -54.5790, -54.5797, -54.5802, -54.5806,
        -54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5813,
        -54.5813, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5676e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5676e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5813, -54.5813,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 8 	 N 	 N 	 1.4350015705901059e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4666, -7.4737, -7.4765, -7.4779, -7.4787, -7.4795, -7.4803, -7.4806,
        -7.4802, -7.4799, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4562, -7.3653, -7.3340, -7.3172, -7.3064, -7.2990, -7.2941, -7.2906,
        -7.2883, -7.2866, -7.2855, -7.2848, -7.2842, -7.2839, -7.2837, -7.2835,
        -7.2834, -7.2833, -7.2832, -7.2832, -7.2832, -7.2832, -7.2832, -7.2832,
        -7.2831], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2835, -7.2834, -7.2833, -7.2832, -7.2832, -7.2832, -7.2832, -7.2832,
        -7.2832, -7.2831], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 13 	 Li 	 Li 	 4.4259106589341286e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e17)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e17/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e17/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 17 || ,[' rho : 2.781837', ' ae : 49.163404', ' E : 1.420920'] ,|| total loss 35.999846 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0449], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4531], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7303], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0449], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4531], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7303], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 11 	 HF2 	 HF2 	 0.0009403135763332048

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2397, -107.2868, -107.2482, -107.2436, -107.2399, -107.2381,
        -107.2377, -107.2378, -107.2384, -107.2390, -107.2397, -107.2403,
        -107.2408, -107.2414, -107.2420, -107.2425, -107.2429, -107.2433,
        -107.2437, -107.2440, -107.2442, -107.2444, -107.2446, -107.2447,
        -107.2448], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3803e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4725, -7.4757, -7.4775, -7.4785, -7.4791, -7.4800, -7.4806,
        -7.4805, -7.4800, -7.4798, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8918e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7227e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6771, -99.6984, -99.7091, -99.7155, -99.7201, -99.7233, -99.7257,
        -99.7274, -99.7287, -99.7295, -99.7302, -99.7306, -99.7309, -99.7311,
        -99.7313, -99.7314, -99.7315, -99.7315, -99.7316, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1132e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2425, -107.2429, -107.2433, -107.2437, -107.2440, -107.2442,
        -107.2444, -107.2446, -107.2447, -107.2448], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7314, -99.7315, -99.7315, -99.7316, -99.7316, -99.7316, -99.7316,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 2 	 FLi 	 LiF 	 0.0083786461672957

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4467, -54.5137, -54.5378, -54.5513, -54.5602, -54.5664, -54.5708,
        -54.5739, -54.5761, -54.5777, -54.5788, -54.5795, -54.5801, -54.5804,
        -54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5813,
        -54.5813, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6551e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6551e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5813, -54.5813,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 8 	 N 	 N 	 1.4589695461724271e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4668, -7.4738, -7.4767, -7.4781, -7.4789, -7.4796, -7.4804, -7.4807,
        -7.4803, -7.4799, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8913e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9107e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7829e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 7 	 Li 	 Li 	 8.803064710099691e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3192, -0.4585, -0.4754, -0.4835, -0.4885, -0.4918, -0.4941, -0.4957,
        -0.4968, -0.4975, -0.4981, -0.4984, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7531e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.5145e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5062e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 6 	 H 	 H 	 1.204334948036343e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8824, -93.4864, -93.3880, -93.3422, -93.3110, -93.2902, -93.2755,
        -93.2651, -93.2577, -93.2523, -93.2485, -93.2457, -93.2437, -93.2422,
        -93.2411, -93.2403, -93.2397, -93.2393, -93.2390, -93.2388, -93.2386,
        -93.2384, -93.2383, -93.2383, -93.2382], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8132e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7544, -37.7938, -37.8082, -37.8163, -37.8217, -37.8255, -37.8282,
        -37.8301, -37.8315, -37.8324, -37.8331, -37.8336, -37.8339, -37.8342,
        -37.8343, -37.8345, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7119e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4152, -54.4823, -54.5152, -54.5349, -54.5484, -54.5580, -54.5649,
        -54.5698, -54.5733, -54.5758, -54.5776, -54.5788, -54.5796, -54.5802,
        -54.5807, -54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4675e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3270, -0.4605, -0.4765, -0.4843, -0.4890, -0.4922, -0.4943, -0.4958,
        -0.4969, -0.4976, -0.4981, -0.4985, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7529e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3834e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2403, -93.2397, -93.2393, -93.2390, -93.2388, -93.2386, -93.2384,
        -93.2383, -93.2383, -93.2382], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8345, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 3 	 CHN 	 CNH 	 0.007291645712592816

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7432, -37.7807, -37.7987, -37.8093, -37.8166, -37.8218, -37.8255,
        -37.8282, -37.8301, -37.8314, -37.8324, -37.8331, -37.8335, -37.8339,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8926e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8926e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 4 	 C 	 C 	 8.042792093551177e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4698, -7.4763, -7.4782, -7.4790, -7.4798, -7.4806, -7.4807, -7.4803,
        -7.4800, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4420, -7.3558, -7.3278, -7.3130, -7.3035, -7.2972, -7.2928, -7.2898,
        -7.2878, -7.2864, -7.2854, -7.2848, -7.2843, -7.2840, -7.2838, -7.2836,
        -7.2835, -7.2835, -7.2834, -7.2834, -7.2834, -7.2834, -7.2834, -7.2833,
        -7.2833], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2836, -7.2835, -7.2835, -7.2834, -7.2834, -7.2834, -7.2834, -7.2834,
        -7.2833, -7.2833], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 13 	 Li 	 Li 	 4.7077722956536987e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9092, -109.5656, -109.5883, -109.5659, -109.5479, -109.5354,
        -109.5269, -109.5212, -109.5174, -109.5148, -109.5130, -109.5118,
        -109.5110, -109.5104, -109.5101, -109.5098, -109.5096, -109.5095,
        -109.5094, -109.5094, -109.5093, -109.5093, -109.5093, -109.5092,
        -109.5092], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3161e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4264, -54.4966, -54.5258, -54.5426, -54.5540, -54.5620, -54.5677,
        -54.5718, -54.5747, -54.5767, -54.5781, -54.5791, -54.5799, -54.5803,
        -54.5807, -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5485e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4214, -54.4912, -54.5218, -54.5397, -54.5519, -54.5605, -54.5667,
        -54.5710, -54.5741, -54.5763, -54.5779, -54.5790, -54.5797, -54.5803,
        -54.5806, -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5835e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5098, -109.5096, -109.5095, -109.5094, -109.5094, -109.5093,
        -109.5093, -109.5093, -109.5092, -109.5092], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 1 	 N2 	 N2 	 7.349381045451452e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7369], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8367], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 10 	 CH4O 	 CH4O 	 6.103578717089284e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0248, -1.1157, -1.1394, -1.1516, -1.1592, -1.1644, -1.1680, -1.1705,
        -1.1722, -1.1734, -1.1743, -1.1749, -1.1753, -1.1756, -1.1758, -1.1759,
        -1.1760, -1.1761, -1.1762, -1.1762, -1.1762, -1.1762, -1.1762, -1.1762,
        -1.1763], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0944e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1889e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2997, -0.4532, -0.4723, -0.4815, -0.4872, -0.4909, -0.4934, -0.4952,
        -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7459e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1911e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6808e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2737, -0.4458, -0.4682, -0.4789, -0.4853, -0.4896, -0.4926, -0.4946,
        -0.4960, -0.4970, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7459e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7671e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1759, -1.1760, -1.1761, -1.1762, -1.1762, -1.1762, -1.1762, -1.1762,
        -1.1762, -1.1763], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 0 	 H2 	 H2 	 2.6979203534231117e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7417, -37.7766, -37.7955, -37.8069, -37.8148, -37.8205, -37.8245,
        -37.8275, -37.8295, -37.8310, -37.8321, -37.8328, -37.8333, -37.8337,
        -37.8340, -37.8341, -37.8343, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6807, -37.5304, -37.4830, -37.4580, -37.4420, -37.4311, -37.4236,
        -37.4183, -37.4146, -37.4120, -37.4103, -37.4090, -37.4081, -37.4075,
        -37.4071, -37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4062,
        -37.4062, -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8341, -37.8343, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4068, -37.4066, -37.4064, -37.4063, -37.4062, -37.4062, -37.4062,
        -37.4061, -37.4061, -37.4061], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 12 	 C 	 C 	 4.955762951015453e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7366], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5210], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1553], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7366], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5210], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 9 	 HN2O 	 HON2 	 0.000920038097648314

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6838, -99.7066, -99.7152, -99.7201, -99.7234, -99.7257, -99.7274,
        -99.7286, -99.7295, -99.7301, -99.7305, -99.7308, -99.7311, -99.7312,
        -99.7313, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2680e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2680e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7314, -99.7314, -99.7315, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 5 	 F 	 F 	 1.2827224077067504e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e18)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e18/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e18/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 18 || ,[' rho : 2.777101', ' ae : 48.977733', ' E : 1.416715'] ,|| total loss 35.857221 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4744, -7.4771, -7.4784, -7.4791, -7.4799, -7.4807, -7.4808,
        -7.4803, -7.4800, -7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800,
        -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.3941, -7.3297, -7.3114, -7.3019, -7.2960, -7.2920, -7.2893, -7.2874,
        -7.2861, -7.2853, -7.2847, -7.2843, -7.2840, -7.2838, -7.2837, -7.2836,
        -7.2835, -7.2835, -7.2835, -7.2835, -7.2834, -7.2834, -7.2834, -7.2834,
        -7.2834], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2836, -7.2835, -7.2835, -7.2835, -7.2835, -7.2834, -7.2834, -7.2834,
        -7.2834, -7.2834], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 13 	 Li 	 Li 	 4.946482476591084e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1600, -93.6023, -93.4492, -93.3880, -93.3418, -93.3125, -93.2914,
        -93.2766, -93.2660, -93.2584, -93.2530, -93.2491, -93.2462, -93.2442,
        -93.2427, -93.2416, -93.2408, -93.2402, -93.2398, -93.2395, -93.2393,
        -93.2391, -93.2390, -93.2389, -93.2388], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7885e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7427, -37.7796, -37.7978, -37.8086, -37.8160, -37.8213, -37.8251,
        -37.8279, -37.8298, -37.8312, -37.8322, -37.8328, -37.8333, -37.8337,
        -37.8339, -37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344,
        -37.8344, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1295e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4530, -54.5180, -54.5408, -54.5533, -54.5616, -54.5674, -54.5715,
        -54.5744, -54.5764, -54.5778, -54.5788, -54.5795, -54.5800, -54.5804,
        -54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7737e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2941, -0.4516, -0.4715, -0.4809, -0.4868, -0.4906, -0.4932, -0.4951,
        -0.4963, -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7410e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5099e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2416, -93.2408, -93.2402, -93.2398, -93.2395, -93.2393, -93.2391,
        -93.2390, -93.2389, -93.2388], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5808, -54.5809, -54.5810, -54.5811, -54.5811, -54.5811, -54.5812,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 3 	 CHN 	 CNH 	 0.007180219936829962

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0648, -1.1318, -1.1493, -1.1582, -1.1639, -1.1677, -1.1703, -1.1722,
        -1.1734, -1.1743, -1.1750, -1.1754, -1.1757, -1.1759, -1.1761, -1.1762,
        -1.1762, -1.1763, -1.1763, -1.1764, -1.1764, -1.1764, -1.1764, -1.1764,
        -1.1764], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1053e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2106e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2616, -0.4422, -0.4662, -0.4776, -0.4845, -0.4890, -0.4921, -0.4943,
        -0.4958, -0.4968, -0.4976, -0.4981, -0.4984, -0.4987, -0.4988, -0.4990,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7387e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3660e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6880e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2488, -0.4384, -0.4641, -0.4762, -0.4835, -0.4884, -0.4917, -0.4940,
        -0.4956, -0.4967, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7386e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6984e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1762, -1.1762, -1.1763, -1.1763, -1.1764, -1.1764, -1.1764, -1.1764,
        -1.1764, -1.1764], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 0 	 H2 	 H2 	 3.049079391372371e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7537, -37.7930, -37.8075, -37.8156, -37.8211, -37.8249, -37.8276,
        -37.8296, -37.8309, -37.8319, -37.8326, -37.8331, -37.8334, -37.8337,
        -37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6608, -37.5200, -37.4764, -37.4535, -37.4388, -37.4288, -37.4219,
        -37.4171, -37.4137, -37.4113, -37.4097, -37.4085, -37.4077, -37.4072,
        -37.4068, -37.4065, -37.4063, -37.4062, -37.4061, -37.4060, -37.4060,
        -37.4059, -37.4059, -37.4059, -37.4059], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8339, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4063, -37.4062, -37.4061, -37.4060, -37.4060, -37.4059,
        -37.4059, -37.4059, -37.4059], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 12 	 C 	 C 	 4.885267385505229e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0430], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4521], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7292], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0430], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4521], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7292], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 11 	 HF2 	 HF2 	 0.0009571976602567832

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6859, -99.7080, -99.7158, -99.7202, -99.7231, -99.7252, -99.7266,
        -99.7277, -99.7284, -99.7290, -99.7294, -99.7296, -99.7298, -99.7299,
        -99.7300, -99.7301, -99.7301, -99.7302, -99.7302, -99.7302, -99.7302,
        -99.7302, -99.7302, -99.7302, -99.7302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4840e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4840e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7301, -99.7301, -99.7302, -99.7302, -99.7302, -99.7302, -99.7302,
        -99.7302, -99.7302, -99.7302], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 5 	 F 	 F 	 3.146001811839606e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5662], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7354], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8359], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5662], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7354], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8359], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 10 	 CH4O 	 CH4O 	 6.12754785471928e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3279, -107.3171, -107.2758, -107.2621, -107.2536, -107.2485,
        -107.2455, -107.2437, -107.2427, -107.2421, -107.2418, -107.2418,
        -107.2419, -107.2422, -107.2425, -107.2428, -107.2431, -107.2434,
        -107.2436, -107.2438, -107.2440, -107.2442, -107.2443, -107.2444,
        -107.2445], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3696e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4695, -7.4761, -7.4781, -7.4790, -7.4797, -7.4805, -7.4808, -7.4804,
        -7.4800, -7.4799, -7.4798, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8427e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3263e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6827, -99.7054, -99.7139, -99.7187, -99.7220, -99.7243, -99.7260,
        -99.7272, -99.7280, -99.7286, -99.7290, -99.7293, -99.7295, -99.7297,
        -99.7298, -99.7299, -99.7299, -99.7300, -99.7300, -99.7300, -99.7300,
        -99.7300, -99.7300, -99.7300, -99.7300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6561e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2428, -107.2431, -107.2434, -107.2436, -107.2438, -107.2440,
        -107.2442, -107.2443, -107.2444, -107.2445], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7299, -99.7299, -99.7300, -99.7300, -99.7300, -99.7300, -99.7300,
        -99.7300, -99.7300, -99.7300], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 2 	 FLi 	 LiF 	 0.008277774510503995

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2974, -0.4525, -0.4719, -0.4813, -0.4869, -0.4907, -0.4933, -0.4951,
        -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7288e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9559e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4577e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 6 	 H 	 H 	 1.5093039381953324e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1523], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7352], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5192], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1523], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7352], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5192], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 9 	 HN2O 	 HON2 	 0.0009271125740150463

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4738, -7.4767, -7.4782, -7.4790, -7.4796, -7.4805, -7.4808,
        -7.4804, -7.4800, -7.4799, -7.4798, -7.4799, -7.4799, -7.4799, -7.4800,
        -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8350e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2409e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6704e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4800, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 7 	 Li 	 Li 	 9.539816664260797e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4456, -54.5124, -54.5366, -54.5500, -54.5590, -54.5652, -54.5696,
        -54.5727, -54.5749, -54.5765, -54.5776, -54.5783, -54.5789, -54.5793,
        -54.5795, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1172e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1172e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 8 	 N 	 N 	 1.931505516389254e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7523, -37.7917, -37.8064, -37.8148, -37.8204, -37.8243, -37.8271,
        -37.8291, -37.8305, -37.8315, -37.8322, -37.8327, -37.8330, -37.8333,
        -37.8334, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9048e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9048e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 4 	 C 	 C 	 1.0383291082411384e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4810, -109.8913, -109.7458, -109.6690, -109.6197, -109.5860,
        -109.5626, -109.5462, -109.5347, -109.5266, -109.5210, -109.5170,
        -109.5143, -109.5123, -109.5110, -109.5100, -109.5093, -109.5089,
        -109.5085, -109.5083, -109.5082, -109.5080, -109.5080, -109.5079,
        -109.5079], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3063e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4194, -54.4886, -54.5196, -54.5379, -54.5502, -54.5590, -54.5653,
        -54.5698, -54.5729, -54.5752, -54.5767, -54.5778, -54.5786, -54.5792,
        -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8660e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4128, -54.4781, -54.5117, -54.5319, -54.5459, -54.5559, -54.5630,
        -54.5682, -54.5718, -54.5744, -54.5762, -54.5774, -54.5783, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9486e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5100, -109.5093, -109.5089, -109.5085, -109.5083, -109.5082,
        -109.5080, -109.5080, -109.5079, -109.5079], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5801, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 1 	 N2 	 N2 	 6.694000226161762e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e19)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e19/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e19/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 19 || ,[' rho : 2.769387', ' ae : 48.688222', ' E : 1.604053'] ,|| total loss 35.635613 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6786, -99.7010, -99.7108, -99.7166, -99.7206, -99.7235, -99.7255,
        -99.7270, -99.7281, -99.7289, -99.7294, -99.7298, -99.7300, -99.7302,
        -99.7304, -99.7305, -99.7305, -99.7306, -99.7306, -99.7306, -99.7306,
        -99.7306, -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1932e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1932e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7305, -99.7305, -99.7306, -99.7306, -99.7306, -99.7306, -99.7306,
        -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 5 	 F 	 F 	 2.4621324697876136e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5676], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8365], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5676], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8365], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 10 	 CH4O 	 CH4O 	 6.12166272806748e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4433, -54.5109, -54.5358, -54.5497, -54.5590, -54.5655, -54.5701,
        -54.5733, -54.5756, -54.5772, -54.5784, -54.5792, -54.5797, -54.5801,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9846e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9846e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 8 	 N 	 N 	 1.5613563412889454e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1564], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5218], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1564], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7369], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5218], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 9 	 HN2O 	 HON2 	 0.0009217947579593509

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7427, -37.7784, -37.7970, -37.8082, -37.8158, -37.8213, -37.8253,
        -37.8281, -37.8301, -37.8315, -37.8326, -37.8333, -37.8338, -37.8341,
        -37.8344, -37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6178, -37.4990, -37.4636, -37.4451, -37.4332, -37.4252, -37.4196,
        -37.4157, -37.4129, -37.4110, -37.4097, -37.4088, -37.4081, -37.4077,
        -37.4073, -37.4071, -37.4070, -37.4068, -37.4068, -37.4067, -37.4067,
        -37.4067, -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4071, -37.4070, -37.4068, -37.4068, -37.4067, -37.4067, -37.4067,
        -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 12 	 C 	 C 	 4.884564760700567e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4752, -7.4778, -7.4790, -7.4797, -7.4804, -7.4812, -7.4812,
        -7.4807, -7.4804, -7.4803, -7.4803, -7.4804, -7.4804, -7.4804, -7.4805,
        -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.3723, -7.3389, -7.3208, -7.3091, -7.3012, -7.2958, -7.2920,
        -7.2895, -7.2877, -7.2865, -7.2857, -7.2851, -7.2848, -7.2845, -7.2843,
        -7.2842, -7.2841, -7.2840, -7.2840, -7.2840, -7.2840, -7.2839, -7.2839,
        -7.2839], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2843, -7.2842, -7.2841, -7.2840, -7.2840, -7.2840, -7.2840, -7.2839,
        -7.2839, -7.2839], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 13 	 Li 	 Li 	 5.464010802895723e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9689, -1.0939, -1.1263, -1.1430, -1.1535, -1.1607, -1.1656, -1.1691,
        -1.1715, -1.1731, -1.1743, -1.1751, -1.1757, -1.1761, -1.1764, -1.1766,
        -1.1767, -1.1768, -1.1769, -1.1769, -1.1770, -1.1770, -1.1770, -1.1770,
        -1.1770], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1707e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3414e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2489, -0.4383, -0.4640, -0.4762, -0.4835, -0.4884, -0.4917, -0.4940,
        -0.4956, -0.4967, -0.4974, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7347e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.8909e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8109e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3090, -0.4557, -0.4738, -0.4824, -0.4877, -0.4913, -0.4937, -0.4954,
        -0.4965, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7348e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4827e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1766, -1.1767, -1.1768, -1.1769, -1.1769, -1.1770, -1.1770, -1.1770,
        -1.1770, -1.1770], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 0 	 H2 	 H2 	 4.172109492371734e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0446, -93.5577, -93.4276, -93.3728, -93.3328, -93.3070, -93.2886,
        -93.2756, -93.2664, -93.2598, -93.2550, -93.2516, -93.2491, -93.2473,
        -93.2460, -93.2451, -93.2444, -93.2439, -93.2435, -93.2432, -93.2430,
        -93.2429, -93.2428, -93.2427, -93.2426], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7478e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7479, -37.7871, -37.8036, -37.8132, -37.8196, -37.8242, -37.8275,
        -37.8298, -37.8315, -37.8327, -37.8335, -37.8341, -37.8345, -37.8348,
        -37.8350, -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8773e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4262, -54.4961, -54.5256, -54.5428, -54.5544, -54.5625, -54.5683,
        -54.5725, -54.5754, -54.5775, -54.5789, -54.5800, -54.5807, -54.5812,
        -54.5815, -54.5818, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6299e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2806, -0.4478, -0.4693, -0.4796, -0.4858, -0.4899, -0.4928, -0.4947,
        -0.4961, -0.4970, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7355e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.0604e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2451, -93.2444, -93.2439, -93.2435, -93.2432, -93.2430, -93.2429,
        -93.2428, -93.2427, -93.2426], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8354,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5818, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 3 	 CHN 	 CNH 	 0.00704487789715248

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2872, -107.3088, -107.2666, -107.2573, -107.2510, -107.2475,
        -107.2456, -107.2448, -107.2446, -107.2447, -107.2449, -107.2453,
        -107.2457, -107.2461, -107.2466, -107.2470, -107.2475, -107.2478,
        -107.2481, -107.2484, -107.2486, -107.2488, -107.2490, -107.2491,
        -107.2492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4133e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4672, -7.4738, -7.4769, -7.4786, -7.4794, -7.4801, -7.4809, -7.4814,
        -7.4811, -7.4807, -7.4805, -7.4804, -7.4805, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8865e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2473e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6859, -99.7087, -99.7172, -99.7221, -99.7254, -99.7277, -99.7294,
        -99.7306, -99.7314, -99.7321, -99.7325, -99.7328, -99.7330, -99.7332,
        -99.7333, -99.7333, -99.7334, -99.7334, -99.7334, -99.7335, -99.7335,
        -99.7335, -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2884e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2470, -107.2475, -107.2478, -107.2481, -107.2484, -107.2486,
        -107.2488, -107.2490, -107.2491, -107.2492], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7333, -99.7334, -99.7334, -99.7334, -99.7335, -99.7335, -99.7335,
        -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 2 	 FLi 	 LiF 	 0.008218569593973924

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7430, -37.7782, -37.7970, -37.8083, -37.8160, -37.8216, -37.8256,
        -37.8285, -37.8305, -37.8320, -37.8330, -37.8337, -37.8342, -37.8346,
        -37.8349, -37.8350, -37.8352, -37.8352, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9682e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9682e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8352, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 4 	 C 	 C 	 6.019737210262722e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3231, -0.4595, -0.4759, -0.4838, -0.4887, -0.4919, -0.4941, -0.4957,
        -0.4967, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7326e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.3025e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4652e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 6 	 H 	 H 	 1.4598497263674074e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5850, -109.9188, -109.7656, -109.6839, -109.6314, -109.5954,
        -109.5704, -109.5529, -109.5407, -109.5321, -109.5261, -109.5219,
        -109.5189, -109.5169, -109.5154, -109.5144, -109.5137, -109.5132,
        -109.5128, -109.5126, -109.5124, -109.5123, -109.5122, -109.5122,
        -109.5121], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3089e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4138, -54.4771, -54.5114, -54.5322, -54.5466, -54.5569, -54.5643,
        -54.5696, -54.5734, -54.5761, -54.5780, -54.5793, -54.5802, -54.5809,
        -54.5813, -54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7258e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4165, -54.4831, -54.5159, -54.5356, -54.5491, -54.5588, -54.5657,
        -54.5706, -54.5741, -54.5765, -54.5783, -54.5795, -54.5804, -54.5810,
        -54.5814, -54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6837e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5144, -109.5137, -109.5132, -109.5128, -109.5126, -109.5124,
        -109.5123, -109.5122, -109.5122, -109.5121], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 1 	 N2 	 N2 	 6.425041451174083e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0496], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4555], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7323], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0496], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4555], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7323], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 11 	 HF2 	 HF2 	 0.0009594141496366227

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4701, -7.4767, -7.4788, -7.4797, -7.4803, -7.4812, -7.4815, -7.4811,
        -7.4807, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8807e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7203e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7621e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 7 	 Li 	 Li 	 1.7225912620746286e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e20)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e20/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e20/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 20 || ,[' rho : 2.771997', ' ae : 48.385581', ' E : 1.332819'] ,|| total loss 35.434457 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8290, -109.8074, -109.7115, -109.6479, -109.6059, -109.5773,
        -109.5575, -109.5437, -109.5341, -109.5275, -109.5228, -109.5196,
        -109.5173, -109.5158, -109.5147, -109.5139, -109.5134, -109.5130,
        -109.5127, -109.5126, -109.5124, -109.5123, -109.5123, -109.5122,
        -109.5122], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3075e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4413, -54.5097, -54.5353, -54.5498, -54.5594, -54.5662, -54.5710,
        -54.5743, -54.5767, -54.5784, -54.5796, -54.5804, -54.5810, -54.5814,
        -54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5354e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4163, -54.4826, -54.5156, -54.5354, -54.5489, -54.5586, -54.5656,
        -54.5705, -54.5740, -54.5765, -54.5783, -54.5795, -54.5804, -54.5810,
        -54.5814, -54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6949e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5139, -109.5134, -109.5130, -109.5127, -109.5126, -109.5124,
        -109.5123, -109.5123, -109.5122, -109.5122], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 1 	 N2 	 N2 	 6.36496916153483e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1050, -93.5827, -93.4409, -93.3829, -93.3397, -93.3122, -93.2925,
        -93.2786, -93.2688, -93.2617, -93.2566, -93.2530, -93.2503, -93.2484,
        -93.2471, -93.2460, -93.2453, -93.2448, -93.2444, -93.2441, -93.2439,
        -93.2437, -93.2436, -93.2435, -93.2435], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7270e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7605, -37.7985, -37.8117, -37.8190, -37.8239, -37.8273, -37.8297,
        -37.8314, -37.8326, -37.8335, -37.8341, -37.8345, -37.8348, -37.8350,
        -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8354,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8127e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4407, -54.5092, -54.5350, -54.5495, -54.5592, -54.5660, -54.5708,
        -54.5742, -54.5766, -54.5783, -54.5795, -54.5804, -54.5810, -54.5814,
        -54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5913e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3223, -0.4592, -0.4758, -0.4837, -0.4886, -0.4919, -0.4941, -0.4956,
        -0.4967, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7286e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4890e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2460, -93.2453, -93.2448, -93.2444, -93.2441, -93.2439, -93.2437,
        -93.2436, -93.2435, -93.2435], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8354, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5819, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 3 	 CHN 	 CNH 	 0.006973974598152864

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0488], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0488], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4551], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7318], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 11 	 HF2 	 HF2 	 0.0009635375092394529

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4177, -54.4853, -54.5175, -54.5366, -54.5497, -54.5591, -54.5657,
        -54.5705, -54.5738, -54.5762, -54.5779, -54.5791, -54.5799, -54.5805,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5818, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2098e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2098e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5812, -54.5814, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5818, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 8 	 N 	 N 	 1.2656897520160133e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4744, -7.4773, -7.4788, -7.4796, -7.4802, -7.4811, -7.4814,
        -7.4811, -7.4807, -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8505e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3411e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7016e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 7 	 Li 	 Li 	 1.6433368325492003e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3369, -0.4630, -0.4779, -0.4851, -0.4895, -0.4925, -0.4945, -0.4959,
        -0.4969, -0.4976, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7209e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5737e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4418e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 6 	 H 	 H 	 1.612704019583572e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6853, -99.7079, -99.7163, -99.7212, -99.7244, -99.7267, -99.7284,
        -99.7296, -99.7305, -99.7311, -99.7315, -99.7318, -99.7320, -99.7321,
        -99.7322, -99.7323, -99.7324, -99.7324, -99.7324, -99.7324, -99.7325,
        -99.7325, -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4518e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4518e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7324, -99.7324, -99.7324, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 5 	 F 	 F 	 4.740991271659952e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5700], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5700], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8377], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 10 	 CH4O 	 CH4O 	 6.103957625672197e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7537, -37.7929, -37.8077, -37.8160, -37.8215, -37.8255, -37.8282,
        -37.8302, -37.8316, -37.8326, -37.8333, -37.8338, -37.8342, -37.8344,
        -37.8346, -37.8347, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3990e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3990e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 4 	 C 	 C 	 7.132505369647081e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1581], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5229], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1581], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5229], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 9 	 HN2O 	 HON2 	 0.0009246115781959809

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4671, -7.4731, -7.4765, -7.4783, -7.4794, -7.4800, -7.4807, -7.4814,
        -7.4814, -7.4809, -7.4806, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4491, -7.3606, -7.3312, -7.3156, -7.3056, -7.2989, -7.2943, -7.2911,
        -7.2889, -7.2874, -7.2864, -7.2857, -7.2853, -7.2849, -7.2847, -7.2846,
        -7.2845, -7.2844, -7.2843, -7.2843, -7.2843, -7.2843, -7.2843, -7.2842,
        -7.2842], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2846, -7.2845, -7.2844, -7.2843, -7.2843, -7.2843, -7.2843, -7.2843,
        -7.2842, -7.2842], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 13 	 Li 	 Li 	 6.099508408617995e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7439, -37.7805, -37.7986, -37.8094, -37.8168, -37.8221, -37.8258,
        -37.8285, -37.8305, -37.8319, -37.8328, -37.8335, -37.8340, -37.8343,
        -37.8346, -37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7218, -37.5535, -37.4976, -37.4682, -37.4493, -37.4364, -37.4275,
        -37.4213, -37.4170, -37.4139, -37.4118, -37.4104, -37.4093, -37.4086,
        -37.4081, -37.4078, -37.4075, -37.4073, -37.4072, -37.4071, -37.4071,
        -37.4070, -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8349, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4078, -37.4075, -37.4073, -37.4072, -37.4071, -37.4071, -37.4070,
        -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 12 	 C 	 C 	 4.755430548301413e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2672, -107.3028, -107.2601, -107.2532, -107.2481, -107.2454,
        -107.2441, -107.2436, -107.2436, -107.2439, -107.2443, -107.2448,
        -107.2453, -107.2459, -107.2464, -107.2469, -107.2473, -107.2477,
        -107.2481, -107.2484, -107.2487, -107.2489, -107.2490, -107.2492,
        -107.2493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4127e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4687, -7.4755, -7.4781, -7.4793, -7.4800, -7.4807, -7.4815, -7.4815,
        -7.4810, -7.4807, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807,
        -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8306e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0558e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6776, -99.6960, -99.7074, -99.7144, -99.7195, -99.7231, -99.7258,
        -99.7278, -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7320,
        -99.7322, -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3291e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2469, -107.2473, -107.2477, -107.2481, -107.2484, -107.2487,
        -107.2489, -107.2490, -107.2492, -107.2493], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 2 	 FLi 	 LiF 	 0.008148319174683068

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0559, -1.1290, -1.1481, -1.1579, -1.1640, -1.1682, -1.1711, -1.1731,
        -1.1745, -1.1755, -1.1761, -1.1766, -1.1770, -1.1772, -1.1774, -1.1775,
        -1.1775, -1.1776, -1.1776, -1.1777, -1.1777, -1.1777, -1.1777, -1.1777,
        -1.1777], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2449e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4898e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3158, -0.4575, -0.4747, -0.4830, -0.4881, -0.4915, -0.4938, -0.4955,
        -0.4966, -0.4974, -0.4979, -0.4983, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7162e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2015e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9223e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2835, -0.4485, -0.4697, -0.4798, -0.4859, -0.4900, -0.4928, -0.4947,
        -0.4961, -0.4970, -0.4976, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7162e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9011e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1775, -1.1775, -1.1776, -1.1776, -1.1777, -1.1777, -1.1777, -1.1777,
        -1.1777, -1.1777], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 0 	 H2 	 H2 	 6.03139344938732e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e21)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e21/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e21/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 21 || ,[' rho : 2.768179', ' ae : 48.176087', ' E : 1.296768'] ,|| total loss 35.282050 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4242, -54.4936, -54.5236, -54.5411, -54.5530, -54.5614, -54.5673,
        -54.5716, -54.5746, -54.5767, -54.5782, -54.5793, -54.5800, -54.5805,
        -54.5809, -54.5812, -54.5813, -54.5815, -54.5815, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2984e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2984e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5812, -54.5813, -54.5815, -54.5815, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 8 	 N 	 N 	 1.3101212248625219e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7663, -37.8023, -37.8142, -37.8207, -37.8250, -37.8280, -37.8301,
        -37.8316, -37.8327, -37.8335, -37.8340, -37.8344, -37.8346, -37.8348,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6434, -37.5117, -37.4717, -37.4507, -37.4372, -37.4281, -37.4217,
        -37.4173, -37.4142, -37.4121, -37.4105, -37.4095, -37.4087, -37.4082,
        -37.4079, -37.4076, -37.4074, -37.4073, -37.4072, -37.4072, -37.4071,
        -37.4071, -37.4071, -37.4071, -37.4070], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4074, -37.4073, -37.4072, -37.4072, -37.4071, -37.4071,
        -37.4071, -37.4071, -37.4070], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 12 	 C 	 C 	 4.7782162650534044e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1594], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5237], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1594], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5237], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 9 	 HN2O 	 HON2 	 0.0009244007891371577

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9768, -93.5299, -93.4134, -93.3627, -93.3265, -93.3030, -93.2862,
        -93.2744, -93.2660, -93.2600, -93.2557, -93.2526, -93.2504, -93.2488,
        -93.2476, -93.2468, -93.2461, -93.2457, -93.2453, -93.2451, -93.2449,
        -93.2448, -93.2447, -93.2446, -93.2445], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6868e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7454, -37.7832, -37.8007, -37.8110, -37.8180, -37.8230, -37.8266,
        -37.8291, -37.8310, -37.8323, -37.8332, -37.8338, -37.8343, -37.8346,
        -37.8348, -37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0442e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4185, -54.4862, -54.5182, -54.5372, -54.5502, -54.5594, -54.5660,
        -54.5707, -54.5741, -54.5764, -54.5781, -54.5793, -54.5801, -54.5807,
        -54.5811, -54.5814, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0284e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2701, -0.4446, -0.4675, -0.4784, -0.4850, -0.4894, -0.4924, -0.4944,
        -0.4958, -0.4968, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7155e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2468e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2468, -93.2461, -93.2457, -93.2453, -93.2451, -93.2449, -93.2448,
        -93.2447, -93.2446, -93.2445], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8350, -37.8351, -37.8352, -37.8352, -37.8353, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 3 	 CHN 	 CNH 	 0.006847493797225446

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2258, -0.4310, -0.4599, -0.4735, -0.4817, -0.4871, -0.4908, -0.4933,
        -0.4951, -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7137e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5690e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4275e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 6 	 H 	 H 	 1.7541756319380296e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7672, -37.8029, -37.8146, -37.8210, -37.8252, -37.8281, -37.8302,
        -37.8317, -37.8327, -37.8335, -37.8340, -37.8343, -37.8346, -37.8348,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1059e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1059e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8351, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 4 	 C 	 C 	 6.597789734342786e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5708], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8382], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5708], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8382], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 10 	 CH4O 	 CH4O 	 6.098991913974154e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9168, -109.5301, -109.5717, -109.5559, -109.5416, -109.5316,
        -109.5249, -109.5205, -109.5175, -109.5156, -109.5143, -109.5134,
        -109.5128, -109.5124, -109.5122, -109.5120, -109.5119, -109.5118,
        -109.5117, -109.5117, -109.5117, -109.5116, -109.5116, -109.5116,
        -109.5116], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2986e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4271, -54.4967, -54.5259, -54.5428, -54.5542, -54.5622, -54.5680,
        -54.5720, -54.5749, -54.5770, -54.5784, -54.5794, -54.5801, -54.5806,
        -54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2641e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4318, -54.5013, -54.5292, -54.5452, -54.5559, -54.5635, -54.5689,
        -54.5727, -54.5754, -54.5773, -54.5786, -54.5796, -54.5802, -54.5807,
        -54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2370e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5120, -109.5119, -109.5118, -109.5117, -109.5117, -109.5117,
        -109.5116, -109.5116, -109.5116, -109.5116], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 1 	 N2 	 N2 	 5.899563054119017e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0479], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4546], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7313], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0479], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4546], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7313], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 11 	 HF2 	 HF2 	 0.0009773989512513095

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6829, -99.7054, -99.7146, -99.7199, -99.7235, -99.7261, -99.7280,
        -99.7293, -99.7303, -99.7310, -99.7314, -99.7318, -99.7320, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2023e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2023e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 5 	 F 	 F 	 4.111874979111389e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4731, -7.4765, -7.4785, -7.4795, -7.4801, -7.4809, -7.4816,
        -7.4816, -7.4811, -7.4808, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4335, -7.3510, -7.3251, -7.3115, -7.3028, -7.2970, -7.2931, -7.2904,
        -7.2885, -7.2872, -7.2864, -7.2858, -7.2853, -7.2851, -7.2849, -7.2847,
        -7.2847, -7.2846, -7.2846, -7.2845, -7.2845, -7.2845, -7.2845, -7.2845,
        -7.2845], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2847, -7.2847, -7.2846, -7.2846, -7.2845, -7.2845, -7.2845, -7.2845,
        -7.2845, -7.2845], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 13 	 Li 	 Li 	 6.536775577203782e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4748, -7.4778, -7.4792, -7.4800, -7.4806, -7.4814, -7.4817,
        -7.4813, -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8083e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8688e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6175e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 7 	 Li 	 Li 	 1.98181940901697e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2235, -107.2885, -107.2473, -107.2447, -107.2422, -107.2410,
        -107.2410, -107.2414, -107.2421, -107.2429, -107.2436, -107.2444,
        -107.2451, -107.2458, -107.2465, -107.2471, -107.2477, -107.2481,
        -107.2485, -107.2489, -107.2492, -107.2494, -107.2497, -107.2498,
        -107.2500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4174e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4687, -7.4755, -7.4782, -7.4794, -7.4801, -7.4808, -7.4816, -7.4816,
        -7.4812, -7.4808, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8041e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8809e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6805, -99.7025, -99.7124, -99.7182, -99.7223, -99.7252, -99.7273,
        -99.7288, -99.7299, -99.7307, -99.7312, -99.7316, -99.7319, -99.7321,
        -99.7322, -99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4337e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2471, -107.2477, -107.2481, -107.2485, -107.2489, -107.2492,
        -107.2494, -107.2497, -107.2498, -107.2500], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 2 	 FLi 	 LiF 	 0.008098222063198015

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0097, -1.1107, -1.1371, -1.1506, -1.1591, -1.1649, -1.1689, -1.1717,
        -1.1736, -1.1750, -1.1759, -1.1766, -1.1771, -1.1774, -1.1776, -1.1778,
        -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2921e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5842e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2204, -0.4292, -0.4589, -0.4729, -0.4813, -0.4868, -0.4906, -0.4932,
        -0.4950, -0.4962, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7054e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0160e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9950e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2705, -0.4447, -0.4675, -0.4784, -0.4850, -0.4894, -0.4923, -0.4944,
        -0.4958, -0.4968, -0.4975, -0.4980, -0.4983, -0.4986, -0.4987, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7054e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7292e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1778, -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781, -1.1781], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 0 	 H2 	 H2 	 7.254222040762774e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e22)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e22/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e22/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 22 || ,[' rho : 2.761638', ' ae : 47.919393', ' E : 1.351814'] ,|| total loss 35.089694 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3003, -107.3171, -107.2724, -107.2615, -107.2543, -107.2502,
        -107.2477, -107.2465, -107.2460, -107.2459, -107.2460, -107.2462,
        -107.2466, -107.2470, -107.2474, -107.2479, -107.2483, -107.2486,
        -107.2490, -107.2492, -107.2495, -107.2497, -107.2498, -107.2500,
        -107.2501], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4166e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4674, -7.4732, -7.4765, -7.4785, -7.4795, -7.4801, -7.4808, -7.4816,
        -7.4815, -7.4811, -7.4808, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7985e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5531e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6783, -99.6984, -99.7092, -99.7158, -99.7204, -99.7238, -99.7263,
        -99.7280, -99.7293, -99.7302, -99.7309, -99.7313, -99.7317, -99.7319,
        -99.7321, -99.7322, -99.7322, -99.7323, -99.7323, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8720e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2479, -107.2483, -107.2486, -107.2490, -107.2492, -107.2495,
        -107.2497, -107.2498, -107.2500, -107.2501], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7322, -99.7322, -99.7323, -99.7323, -99.7324, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 2 	 FLi 	 LiF 	 0.008071613332051851

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4369, -54.5057, -54.5323, -54.5473, -54.5574, -54.5645, -54.5695,
        -54.5730, -54.5755, -54.5773, -54.5785, -54.5794, -54.5800, -54.5805,
        -54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5278e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5278e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814, -54.5814,
        -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 8 	 N 	 N 	 1.4049836230535818e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3173, -0.4578, -0.4749, -0.4831, -0.4882, -0.4916, -0.4939, -0.4954,
        -0.4966, -0.4973, -0.4979, -0.4982, -0.4985, -0.4987, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7027e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7965e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4055e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 6 	 H 	 H 	 1.877128022663957e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4548], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7314], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0483], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4548], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7314], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 11 	 HF2 	 HF2 	 0.000979597543109425

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7464, -37.7847, -37.8018, -37.8117, -37.8185, -37.8232, -37.8267,
        -37.8291, -37.8309, -37.8321, -37.8330, -37.8336, -37.8341, -37.8344,
        -37.8346, -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6652, -37.5227, -37.4785, -37.4553, -37.4404, -37.4303, -37.4232,
        -37.4183, -37.4149, -37.4125, -37.4109, -37.4097, -37.4089, -37.4083,
        -37.4079, -37.4076, -37.4074, -37.4073, -37.4072, -37.4071, -37.4071,
        -37.4070, -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4074, -37.4073, -37.4072, -37.4071, -37.4071, -37.4070,
        -37.4070, -37.4070, -37.4070], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 12 	 C 	 C 	 4.709807919721493e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6531, -109.9230, -109.7697, -109.6867, -109.6332, -109.5967,
        -109.5713, -109.5535, -109.5411, -109.5323, -109.5262, -109.5220,
        -109.5190, -109.5169, -109.5154, -109.5144, -109.5137, -109.5132,
        -109.5128, -109.5126, -109.5124, -109.5123, -109.5122, -109.5121,
        -109.5121], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2931e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4271, -54.4966, -54.5258, -54.5427, -54.5541, -54.5622, -54.5679,
        -54.5720, -54.5749, -54.5769, -54.5784, -54.5794, -54.5801, -54.5806,
        -54.5809, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2644e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4528, -54.5179, -54.5408, -54.5535, -54.5619, -54.5678, -54.5719,
        -54.5748, -54.5769, -54.5783, -54.5794, -54.5801, -54.5806, -54.5809,
        -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1476e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5144, -109.5137, -109.5132, -109.5128, -109.5126, -109.5124,
        -109.5123, -109.5122, -109.5121, -109.5121], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5815, -54.5816, -54.5816, -54.5817, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 1 	 N2 	 N2 	 5.512499221702843e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7031, -99.7129, -99.7188, -99.7228, -99.7258, -99.7279,
        -99.7294, -99.7305, -99.7312, -99.7318, -99.7322, -99.7324, -99.7326,
        -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7330,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0339e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0339e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7330, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 5 	 F 	 F 	 1.6023887916303862e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5712], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8383], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5712], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8383], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 10 	 CH4O 	 CH4O 	 6.144388932534404e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7524, -37.7916, -37.8068, -37.8154, -37.8211, -37.8252, -37.8281,
        -37.8301, -37.8316, -37.8327, -37.8334, -37.8339, -37.8343, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2621e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2621e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 4 	 C 	 C 	 6.8209874237803564e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4679, -7.4743, -7.4774, -7.4790, -7.4798, -7.4804, -7.4812, -7.4816,
        -7.4813, -7.4808, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808,
        -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7833e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2825e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5674e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 7 	 Li 	 Li 	 1.8543986105821041e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1607], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7383], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5245], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1607], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7383], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5245], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 9 	 HN2O 	 HON2 	 0.0009342771848595848

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8712, -93.4847, -93.3897, -93.3453, -93.3152, -93.2952, -93.2811,
        -93.2712, -93.2641, -93.2591, -93.2554, -93.2528, -93.2509, -93.2496,
        -93.2486, -93.2479, -93.2473, -93.2469, -93.2467, -93.2464, -93.2463,
        -93.2462, -93.2461, -93.2460, -93.2460], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6395e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7459, -37.7838, -37.8011, -37.8113, -37.8182, -37.8231, -37.8266,
        -37.8291, -37.8309, -37.8322, -37.8331, -37.8338, -37.8342, -37.8345,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1473e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4228, -54.4916, -54.5222, -54.5402, -54.5524, -54.5610, -54.5672,
        -54.5716, -54.5747, -54.5769, -54.5784, -54.5795, -54.5803, -54.5808,
        -54.5812, -54.5814, -54.5816, -54.5818, -54.5818, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9843e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2205, -0.4292, -0.4589, -0.4729, -0.4813, -0.4868, -0.4906, -0.4932,
        -0.4950, -0.4962, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7006e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0381e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2479, -93.2473, -93.2469, -93.2467, -93.2464, -93.2463, -93.2462,
        -93.2461, -93.2460, -93.2460], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5818, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 3 	 CHN 	 CNH 	 0.006722515405104193

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4702, -7.4768, -7.4789, -7.4798, -7.4804, -7.4813, -7.4816, -7.4812,
        -7.4808, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808, -7.4808,
        -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4490, -7.3606, -7.3313, -7.3157, -7.3057, -7.2990, -7.2944, -7.2913,
        -7.2891, -7.2876, -7.2866, -7.2859, -7.2854, -7.2851, -7.2849, -7.2848,
        -7.2847, -7.2846, -7.2845, -7.2845, -7.2845, -7.2845, -7.2845, -7.2844,
        -7.2844], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2848, -7.2847, -7.2846, -7.2845, -7.2845, -7.2845, -7.2845, -7.2845,
        -7.2844, -7.2844], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 13 	 Li 	 Li 	 6.949799897035117e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9669, -1.0936, -1.1266, -1.1436, -1.1544, -1.1617, -1.1667, -1.1702,
        -1.1727, -1.1744, -1.1756, -1.1764, -1.1770, -1.1774, -1.1777, -1.1779,
        -1.1780, -1.1781, -1.1782, -1.1782, -1.1783, -1.1783, -1.1783, -1.1783,
        -1.1783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3066e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6131e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2655, -0.4432, -0.4667, -0.4778, -0.4846, -0.4891, -0.4921, -0.4942,
        -0.4957, -0.4967, -0.4974, -0.4979, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6972e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.2547e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.0075e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3068, -0.4550, -0.4733, -0.4821, -0.4875, -0.4910, -0.4935, -0.4952,
        -0.4964, -0.4972, -0.4978, -0.4982, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6972e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2744e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1779, -1.1780, -1.1781, -1.1782, -1.1782, -1.1783, -1.1783, -1.1783,
        -1.1783, -1.1783], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 0 	 H2 	 H2 	 7.890474883317932e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e23)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e23/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e23/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 23 || ,[' rho : 2.753925', ' ae : 47.697778', ' E : 1.356587'] ,|| total loss 34.919878 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9970, -1.1057, -1.1341, -1.1486, -1.1579, -1.1641, -1.1684, -1.1714,
        -1.1735, -1.1750, -1.1760, -1.1767, -1.1772, -1.1776, -1.1778, -1.1780,
        -1.1781, -1.1782, -1.1782, -1.1783, -1.1783, -1.1783, -1.1783, -1.1783,
        -1.1784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3083e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6165e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3046, -0.4544, -0.4730, -0.4819, -0.4873, -0.4909, -0.4934, -0.4951,
        -0.4963, -0.4972, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6954e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4104e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.0074e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3103, -0.4559, -0.4738, -0.4824, -0.4877, -0.4912, -0.4936, -0.4953,
        -0.4964, -0.4972, -0.4978, -0.4982, -0.4985, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6954e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2882e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1780, -1.1781, -1.1782, -1.1782, -1.1783, -1.1783, -1.1783, -1.1783,
        -1.1783, -1.1784], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 0 	 H2 	 H2 	 7.989384913632601e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6790, -99.6993, -99.7099, -99.7164, -99.7210, -99.7243, -99.7267,
        -99.7284, -99.7297, -99.7305, -99.7312, -99.7316, -99.7319, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0901e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0901e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 5 	 F 	 F 	 3.5739547694570933e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7881, -109.8607, -109.7386, -109.6657, -109.6182, -109.5858,
        -109.5633, -109.5476, -109.5367, -109.5291, -109.5238, -109.5201,
        -109.5175, -109.5157, -109.5144, -109.5135, -109.5129, -109.5125,
        -109.5122, -109.5119, -109.5118, -109.5117, -109.5116, -109.5116,
        -109.5115], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2877e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4205, -54.4888, -54.5199, -54.5383, -54.5508, -54.5596, -54.5660,
        -54.5705, -54.5737, -54.5760, -54.5776, -54.5787, -54.5795, -54.5800,
        -54.5804, -54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812,
        -54.5812, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8225e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4429, -54.5105, -54.5355, -54.5496, -54.5590, -54.5656, -54.5702,
        -54.5735, -54.5758, -54.5775, -54.5786, -54.5794, -54.5800, -54.5804,
        -54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6882e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5135, -109.5129, -109.5125, -109.5122, -109.5119, -109.5118,
        -109.5117, -109.5116, -109.5116, -109.5115], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5812, -54.5813,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 1 	 N2 	 N2 	 5.2830184684865946e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7487, -37.7877, -37.8038, -37.8131, -37.8193, -37.8238, -37.8269,
        -37.8292, -37.8308, -37.8319, -37.8327, -37.8333, -37.8337, -37.8340,
        -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8955e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8955e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 4 	 C 	 C 	 8.143435531507292e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1582], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5230], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1582], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7371], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5230], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 9 	 HN2O 	 HON2 	 0.0009423950747212657

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7466, -37.7850, -37.8018, -37.8116, -37.8182, -37.8230, -37.8263,
        -37.8287, -37.8305, -37.8317, -37.8325, -37.8331, -37.8336, -37.8339,
        -37.8341, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6788, -37.5295, -37.4826, -37.4579, -37.4421, -37.4313, -37.4239,
        -37.4187, -37.4150, -37.4125, -37.4107, -37.4094, -37.4086, -37.4080,
        -37.4075, -37.4072, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067,
        -37.4066, -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4072, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067, -37.4066,
        -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 12 	 C 	 C 	 4.64190517627887e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5698], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5698], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8378], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 10 	 CH4O 	 CH4O 	 6.197333181572583e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8442, -93.4722, -93.3824, -93.3396, -93.3110, -93.2920, -93.2785,
        -93.2691, -93.2623, -93.2575, -93.2540, -93.2516, -93.2498, -93.2485,
        -93.2475, -93.2468, -93.2463, -93.2460, -93.2457, -93.2455, -93.2454,
        -93.2453, -93.2452, -93.2451, -93.2451], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6166e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7631, -37.7999, -37.8123, -37.8192, -37.8237, -37.8269, -37.8291,
        -37.8307, -37.8318, -37.8326, -37.8332, -37.8336, -37.8339, -37.8341,
        -37.8342, -37.8343, -37.8344, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9596e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4145, -54.4787, -54.5122, -54.5325, -54.5464, -54.5564, -54.5636,
        -54.5687, -54.5723, -54.5749, -54.5767, -54.5780, -54.5789, -54.5795,
        -54.5800, -54.5803, -54.5805, -54.5807, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2559e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2321, -0.4329, -0.4610, -0.4741, -0.4821, -0.4874, -0.4909, -0.4934,
        -0.4951, -0.4963, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6875e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0697e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2468, -93.2463, -93.2460, -93.2457, -93.2455, -93.2454, -93.2453,
        -93.2452, -93.2451, -93.2451], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8343, -37.8344, -37.8344, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5803, -54.5805, -54.5807, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 3 	 CHN 	 CNH 	 0.0066496338036955965

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4692, -7.4759, -7.4784, -7.4794, -7.4800, -7.4808, -7.4814, -7.4812,
        -7.4807, -7.4805, -7.4804, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4296, -7.3487, -7.3236, -7.3104, -7.3020, -7.2965, -7.2926, -7.2900,
        -7.2882, -7.2870, -7.2861, -7.2856, -7.2852, -7.2849, -7.2847, -7.2846,
        -7.2845, -7.2844, -7.2844, -7.2844, -7.2844, -7.2843, -7.2843, -7.2843,
        -7.2843], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2846, -7.2845, -7.2844, -7.2844, -7.2844, -7.2844, -7.2843, -7.2843,
        -7.2843, -7.2843], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 13 	 Li 	 Li 	 7.345413480880216e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4135, -54.4766, -54.5105, -54.5311, -54.5453, -54.5555, -54.5628,
        -54.5680, -54.5717, -54.5743, -54.5762, -54.5775, -54.5784, -54.5790,
        -54.5795, -54.5798, -54.5800, -54.5802, -54.5803, -54.5804, -54.5804,
        -54.5805, -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8411e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8411e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5798, -54.5800, -54.5802, -54.5803, -54.5804, -54.5804, -54.5805,
        -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 8 	 N 	 N 	 1.7694160410606216e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0455], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7298], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0455], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7298], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 11 	 HF2 	 HF2 	 0.00099380943156296

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4687, -7.4754, -7.4781, -7.4793, -7.4799, -7.4806, -7.4814, -7.4814,
        -7.4809, -7.4806, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7005e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.4941e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4018e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 7 	 Li 	 Li 	 1.6765487414534365e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3195, -107.3246, -107.2791, -107.2662, -107.2579, -107.2529,
        -107.2498, -107.2480, -107.2470, -107.2465, -107.2463, -107.2464,
        -107.2467, -107.2470, -107.2474, -107.2478, -107.2482, -107.2485,
        -107.2488, -107.2490, -107.2493, -107.2494, -107.2496, -107.2497,
        -107.2498], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4157e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4695, -7.4761, -7.4785, -7.4796, -7.4801, -7.4809, -7.4815, -7.4812,
        -7.4808, -7.4805, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6961e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.5611e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6790, -99.7005, -99.7105, -99.7165, -99.7206, -99.7235, -99.7257,
        -99.7272, -99.7283, -99.7291, -99.7297, -99.7301, -99.7304, -99.7306,
        -99.7307, -99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.5407e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2478, -107.2482, -107.2485, -107.2488, -107.2490, -107.2493,
        -107.2494, -107.2496, -107.2497, -107.2498], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 2 	 FLi 	 LiF 	 0.007955758848932007

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3331, -0.4619, -0.4772, -0.4846, -0.4892, -0.4922, -0.4943, -0.4957,
        -0.4967, -0.4974, -0.4979, -0.4982, -0.4985, -0.4986, -0.4988, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6789e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6738e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3579e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 6 	 H 	 H 	 2.23290264557875e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e24)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e24/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e24/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 24 || ,[' rho : 2.747224', ' ae : 47.434979', ' E : 1.499811'] ,|| total loss 34.718238 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2576, -107.3018, -107.2576, -107.2517, -107.2472, -107.2446,
        -107.2437, -107.2432, -107.2433, -107.2436, -107.2441, -107.2446,
        -107.2452, -107.2458, -107.2464, -107.2470, -107.2475, -107.2479,
        -107.2483, -107.2487, -107.2490, -107.2492, -107.2494, -107.2496,
        -107.2497], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4173e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4677, -7.4736, -7.4769, -7.4786, -7.4795, -7.4801, -7.4809, -7.4814,
        -7.4812, -7.4807, -7.4805, -7.4804, -7.4805, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6885e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3948e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7033, -99.7125, -99.7179, -99.7216, -99.7243, -99.7262,
        -99.7275, -99.7285, -99.7292, -99.7297, -99.7301, -99.7303, -99.7305,
        -99.7306, -99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7309, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0453e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2470, -107.2475, -107.2479, -107.2483, -107.2487, -107.2490,
        -107.2492, -107.2494, -107.2496, -107.2497], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7309, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 2 	 FLi 	 LiF 	 0.007955661775754736

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5681], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7360], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8372], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 10 	 CH4O 	 CH4O 	 6.222403662278704e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4684, -7.4750, -7.4778, -7.4791, -7.4798, -7.4804, -7.4812, -7.4814,
        -7.4809, -7.4805, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4178, -7.3422, -7.3194, -7.3076, -7.3001, -7.2951, -7.2917, -7.2894,
        -7.2878, -7.2867, -7.2860, -7.2854, -7.2851, -7.2849, -7.2847, -7.2846,
        -7.2845, -7.2844, -7.2844, -7.2844, -7.2844, -7.2844, -7.2844, -7.2843,
        -7.2843], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2846, -7.2845, -7.2844, -7.2844, -7.2844, -7.2844, -7.2844, -7.2844,
        -7.2843, -7.2843], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 13 	 Li 	 Li 	 7.781627239614566e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0231, -1.1163, -1.1408, -1.1533, -1.1612, -1.1665, -1.1702, -1.1728,
        -1.1746, -1.1759, -1.1767, -1.1774, -1.1778, -1.1781, -1.1783, -1.1784,
        -1.1785, -1.1786, -1.1787, -1.1787, -1.1787, -1.1787, -1.1788, -1.1788,
        -1.1788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3539e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7079e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3452, -0.4650, -0.4790, -0.4857, -0.4899, -0.4927, -0.4946, -0.4960,
        -0.4969, -0.4975, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6738e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7202e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.0555e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3283, -0.4606, -0.4765, -0.4841, -0.4888, -0.4920, -0.4941, -0.4956,
        -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6738e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0434e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1784, -1.1785, -1.1786, -1.1787, -1.1787, -1.1787, -1.1787, -1.1788,
        -1.1788, -1.1788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 0 	 H2 	 H2 	 9.616090551881234e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7011, -109.9118, -109.7635, -109.6818, -109.6290, -109.5929,
        -109.5678, -109.5503, -109.5380, -109.5295, -109.5235, -109.5193,
        -109.5163, -109.5143, -109.5128, -109.5118, -109.5111, -109.5106,
        -109.5103, -109.5100, -109.5099, -109.5098, -109.5097, -109.5096,
        -109.5096], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2784e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4385, -54.5066, -54.5324, -54.5470, -54.5568, -54.5636, -54.5685,
        -54.5719, -54.5743, -54.5760, -54.5772, -54.5781, -54.5787, -54.5791,
        -54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2536e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4167, -54.4835, -54.5156, -54.5348, -54.5479, -54.5572, -54.5639,
        -54.5686, -54.5720, -54.5744, -54.5761, -54.5773, -54.5781, -54.5787,
        -54.5791, -54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4180e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5118, -109.5111, -109.5106, -109.5103, -109.5100, -109.5099,
        -109.5098, -109.5097, -109.5096, -109.5096], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 1 	 N2 	 N2 	 4.8730703134445426e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7439, -37.7811, -37.7987, -37.8091, -37.8161, -37.8212, -37.8248,
        -37.8274, -37.8293, -37.8306, -37.8315, -37.8322, -37.8326, -37.8329,
        -37.8332, -37.8333, -37.8335, -37.8335, -37.8336, -37.8336, -37.8337,
        -37.8337, -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6372, -37.5080, -37.4690, -37.4485, -37.4354, -37.4265, -37.4203,
        -37.4159, -37.4129, -37.4108, -37.4093, -37.4083, -37.4076, -37.4071,
        -37.4067, -37.4065, -37.4063, -37.4062, -37.4061, -37.4060, -37.4060,
        -37.4060, -37.4059, -37.4059, -37.4059], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8333, -37.8335, -37.8335, -37.8336, -37.8336, -37.8337, -37.8337,
        -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4065, -37.4063, -37.4062, -37.4061, -37.4060, -37.4060, -37.4060,
        -37.4059, -37.4059, -37.4059], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 12 	 C 	 C 	 4.511924731184424e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4359, -54.5044, -54.5308, -54.5458, -54.5559, -54.5629, -54.5679,
        -54.5714, -54.5739, -54.5757, -54.5769, -54.5778, -54.5784, -54.5788,
        -54.5791, -54.5793, -54.5795, -54.5796, -54.5797, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5691e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5691e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5793, -54.5795, -54.5796, -54.5797, -54.5797, -54.5798, -54.5798,
        -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 8 	 N 	 N 	 2.0638960703514958e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7435, -37.7802, -37.7980, -37.8085, -37.8158, -37.8209, -37.8246,
        -37.8272, -37.8291, -37.8305, -37.8314, -37.8321, -37.8326, -37.8329,
        -37.8331, -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2706e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2706e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 4 	 C 	 C 	 1.1007508094823781e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2939, -0.4513, -0.4712, -0.4807, -0.4865, -0.4904, -0.4930, -0.4948,
        -0.4961, -0.4970, -0.4976, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6699e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9812e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3399e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 6 	 H 	 H 	 2.391187146996927e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4678, -7.4739, -7.4770, -7.4787, -7.4795, -7.4801, -7.4809, -7.4814,
        -7.4810, -7.4806, -7.4804, -7.4803, -7.4804, -7.4804, -7.4805, -7.4805,
        -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6534e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.8447e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3074e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 7 	 Li 	 Li 	 1.5364748038828309e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0972, -93.5799, -93.4390, -93.3820, -93.3393, -93.3123, -93.2929,
        -93.2794, -93.2697, -93.2629, -93.2580, -93.2545, -93.2519, -93.2501,
        -93.2488, -93.2478, -93.2471, -93.2466, -93.2463, -93.2460, -93.2458,
        -93.2456, -93.2455, -93.2455, -93.2454], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5806e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7497, -37.7887, -37.8044, -37.8133, -37.8193, -37.8236, -37.8266,
        -37.8288, -37.8303, -37.8314, -37.8322, -37.8327, -37.8331, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7470e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4337, -54.5025, -54.5297, -54.5451, -54.5555, -54.5628, -54.5679,
        -54.5716, -54.5742, -54.5760, -54.5773, -54.5782, -54.5789, -54.5793,
        -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9068e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2408, -0.4356, -0.4624, -0.4750, -0.4827, -0.4878, -0.4912, -0.4936,
        -0.4952, -0.4963, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6704e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1373e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2478, -93.2471, -93.2466, -93.2463, -93.2460, -93.2458, -93.2456,
        -93.2455, -93.2455, -93.2454], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8339,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 3 	 CHN 	 CNH 	 0.006524201815205152

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1562], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5218], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1562], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5218], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 9 	 HN2O 	 HON2 	 0.0009561953351943261

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4532], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7295], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0451], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4532], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7295], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 11 	 HF2 	 HF2 	 0.0010003877058078505

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6832, -99.7054, -99.7140, -99.7190, -99.7224, -99.7248, -99.7265,
        -99.7277, -99.7286, -99.7293, -99.7297, -99.7300, -99.7302, -99.7304,
        -99.7305, -99.7306, -99.7306, -99.7307, -99.7307, -99.7307, -99.7307,
        -99.7307, -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1248e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1248e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7306, -99.7306, -99.7307, -99.7307, -99.7307, -99.7307, -99.7307,
        -99.7307, -99.7307, -99.7307], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 5 	 F 	 F 	 2.347991795085755e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e25)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e25/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e25/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 25 || ,[' rho : 2.740529', ' ae : 47.267288', ' E : 1.672259'] ,|| total loss 34.582610 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1558], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7359], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5216], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1558], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7359], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5216], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 9 	 HN2O 	 HON2 	 0.0009574300528326996

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3261, -0.4601, -0.4761, -0.4839, -0.4887, -0.4918, -0.4940, -0.4955,
        -0.4966, -0.4973, -0.4978, -0.4982, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6649e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5639e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3298e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 6 	 H 	 H 	 2.4662593020728785e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5682], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8373], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5682], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7360], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8373], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 10 	 CH4O 	 CH4O 	 6.253917411522731e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8446, -109.7626, -109.6872, -109.6309, -109.5934, -109.5678,
        -109.5501, -109.5379, -109.5294, -109.5235, -109.5194, -109.5166,
        -109.5146, -109.5132, -109.5123, -109.5116, -109.5111, -109.5108,
        -109.5106, -109.5104, -109.5103, -109.5102, -109.5102, -109.5101,
        -109.5101], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2749e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4207, -54.4890, -54.5197, -54.5378, -54.5501, -54.5589, -54.5651,
        -54.5695, -54.5727, -54.5749, -54.5764, -54.5775, -54.5783, -54.5789,
        -54.5792, -54.5795, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2790e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4124, -54.4720, -54.5068, -54.5281, -54.5430, -54.5537, -54.5614,
        -54.5669, -54.5708, -54.5735, -54.5755, -54.5769, -54.5779, -54.5785,
        -54.5790, -54.5793, -54.5796, -54.5797, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4205e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5116, -109.5111, -109.5108, -109.5106, -109.5104, -109.5103,
        -109.5102, -109.5102, -109.5101, -109.5101], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5793, -54.5796, -54.5797, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 1 	 N2 	 N2 	 4.629548234918361e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3113, -107.3243, -107.2776, -107.2654, -107.2575, -107.2527,
        -107.2497, -107.2481, -107.2472, -107.2469, -107.2468, -107.2470,
        -107.2473, -107.2477, -107.2482, -107.2486, -107.2490, -107.2494,
        -107.2497, -107.2500, -107.2502, -107.2504, -107.2506, -107.2507,
        -107.2509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4274e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4708, -7.4772, -7.4791, -7.4799, -7.4805, -7.4813, -7.4814, -7.4810,
        -7.4806, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6169e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.5521e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6823, -99.7044, -99.7133, -99.7185, -99.7221, -99.7246, -99.7264,
        -99.7277, -99.7286, -99.7293, -99.7297, -99.7301, -99.7303, -99.7305,
        -99.7306, -99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0590e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2486, -107.2490, -107.2494, -107.2497, -107.2500, -107.2502,
        -107.2504, -107.2506, -107.2507, -107.2509], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7308], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 2 	 FLi 	 LiF 	 0.007852266244817534

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4332, -54.5020, -54.5292, -54.5447, -54.5551, -54.5624, -54.5676,
        -54.5713, -54.5739, -54.5757, -54.5770, -54.5779, -54.5786, -54.5790,
        -54.5793, -54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2521e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2521e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 8 	 N 	 N 	 1.9564578642617136e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0118, -1.1120, -1.1383, -1.1518, -1.1603, -1.1661, -1.1701, -1.1729,
        -1.1748, -1.1762, -1.1771, -1.1778, -1.1782, -1.1785, -1.1788, -1.1789,
        -1.1790, -1.1791, -1.1792, -1.1792, -1.1792, -1.1793, -1.1793, -1.1793,
        -1.1793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4219e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8437e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2333, -0.4332, -0.4611, -0.4742, -0.4821, -0.4873, -0.4909, -0.4933,
        -0.4950, -0.4962, -0.4971, -0.4976, -0.4980, -0.4983, -0.4985, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6625e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2082e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1689e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2579, -0.4408, -0.4653, -0.4769, -0.4839, -0.4886, -0.4918, -0.4939,
        -0.4955, -0.4965, -0.4973, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6625e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1347e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1789, -1.1790, -1.1791, -1.1792, -1.1792, -1.1792, -1.1793, -1.1793,
        -1.1793, -1.1793], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 0 	 H2 	 H2 	 1.1512256267153402e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7440, -37.7805, -37.7983, -37.8089, -37.8161, -37.8212, -37.8249,
        -37.8276, -37.8295, -37.8308, -37.8318, -37.8324, -37.8329, -37.8332,
        -37.8335, -37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7310, -37.5586, -37.5005, -37.4699, -37.4502, -37.4369, -37.4276,
        -37.4212, -37.4167, -37.4135, -37.4113, -37.4098, -37.4087, -37.4080,
        -37.4075, -37.4071, -37.4069, -37.4067, -37.4065, -37.4065, -37.4064,
        -37.4064, -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4071, -37.4069, -37.4067, -37.4065, -37.4065, -37.4064, -37.4064,
        -37.4063, -37.4063, -37.4063], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 12 	 C 	 C 	 4.463784858392235e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4704, -7.4768, -7.4790, -7.4798, -7.4804, -7.4812, -7.4815, -7.4811,
        -7.4807, -7.4805, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807, -7.4807,
        -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4561, -7.3653, -7.3344, -7.3179, -7.3073, -7.3001, -7.2952, -7.2918,
        -7.2895, -7.2880, -7.2869, -7.2861, -7.2856, -7.2853, -7.2851, -7.2849,
        -7.2848, -7.2847, -7.2846, -7.2846, -7.2846, -7.2846, -7.2846, -7.2846,
        -7.2845], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2849, -7.2848, -7.2847, -7.2846, -7.2846, -7.2846, -7.2846, -7.2846,
        -7.2846, -7.2845], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 13 	 Li 	 Li 	 8.478771602434159e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9073, -93.5004, -93.3980, -93.3516, -93.3195, -93.2985, -93.2835,
        -93.2731, -93.2656, -93.2603, -93.2565, -93.2538, -93.2518, -93.2504,
        -93.2494, -93.2486, -93.2481, -93.2477, -93.2474, -93.2472, -93.2471,
        -93.2470, -93.2469, -93.2468, -93.2468], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5525e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7635, -37.8000, -37.8122, -37.8190, -37.8235, -37.8266, -37.8288,
        -37.8304, -37.8315, -37.8323, -37.8328, -37.8332, -37.8335, -37.8337,
        -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5013e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4226, -54.4912, -54.5214, -54.5392, -54.5512, -54.5597, -54.5658,
        -54.5701, -54.5732, -54.5753, -54.5769, -54.5779, -54.5787, -54.5792,
        -54.5796, -54.5799, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8319e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2596, -0.4413, -0.4656, -0.4771, -0.4841, -0.4887, -0.4918, -0.4940,
        -0.4955, -0.4965, -0.4973, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6621e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1309e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2486, -93.2481, -93.2477, -93.2474, -93.2472, -93.2471, -93.2470,
        -93.2469, -93.2468, -93.2468], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8339, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 3 	 CHN 	 CNH 	 0.006436862713540952

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4693, -7.4759, -7.4785, -7.4796, -7.4801, -7.4809, -7.4815, -7.4813,
        -7.4808, -7.4806, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807, -7.4807,
        -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5982e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.8496e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1971e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 7 	 Li 	 Li 	 1.755696590754462e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6864, -99.7082, -99.7161, -99.7206, -99.7236, -99.7258, -99.7273,
        -99.7284, -99.7292, -99.7297, -99.7301, -99.7304, -99.7306, -99.7307,
        -99.7308, -99.7309, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3281e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3281e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7309, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 5 	 F 	 F 	 1.951586814018107e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0454], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7296], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0454], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7296], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 11 	 HF2 	 HF2 	 0.001007506188814855

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7607, -37.7979, -37.8108, -37.8179, -37.8226, -37.8259, -37.8282,
        -37.8298, -37.8310, -37.8318, -37.8324, -37.8328, -37.8331, -37.8333,
        -37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9365e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9365e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 4 	 C 	 C 	 1.0528236664980554e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e26)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e26/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e26/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 26 || ,[' rho : 2.736489', ' ae : 46.980762', ' E : 1.651758'] ,|| total loss 34.375936 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9748, -1.0973, -1.1293, -1.1459, -1.1563, -1.1634, -1.1683, -1.1717,
        -1.1741, -1.1757, -1.1769, -1.1777, -1.1783, -1.1787, -1.1790, -1.1792,
        -1.1793, -1.1794, -1.1794, -1.1795, -1.1795, -1.1796, -1.1796, -1.1796,
        -1.1796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4652e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9304e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3276, -0.4604, -0.4763, -0.4840, -0.4887, -0.4919, -0.4940, -0.4955,
        -0.4965, -0.4973, -0.4978, -0.4981, -0.4984, -0.4985, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6556e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0069e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2417e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2254, -0.4306, -0.4596, -0.4733, -0.4815, -0.4869, -0.4906, -0.4931,
        -0.4949, -0.4961, -0.4970, -0.4976, -0.4980, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6555e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2766e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1792, -1.1793, -1.1794, -1.1794, -1.1795, -1.1795, -1.1796, -1.1796,
        -1.1796, -1.1796], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 0 	 H2 	 H2 	 1.2702398731963257e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2573, -107.3045, -107.2589, -107.2532, -107.2488, -107.2463,
        -107.2453, -107.2449, -107.2449, -107.2452, -107.2456, -107.2462,
        -107.2468, -107.2475, -107.2481, -107.2487, -107.2493, -107.2498,
        -107.2502, -107.2505, -107.2508, -107.2511, -107.2513, -107.2515,
        -107.2516], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4373e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4681, -7.4739, -7.4771, -7.4789, -7.4797, -7.4803, -7.4810, -7.4816,
        -7.4813, -7.4808, -7.4806, -7.4805, -7.4806, -7.4806, -7.4807, -7.4807,
        -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5743e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0087e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6809, -99.7027, -99.7121, -99.7176, -99.7214, -99.7241, -99.7261,
        -99.7275, -99.7285, -99.7292, -99.7297, -99.7301, -99.7304, -99.7305,
        -99.7307, -99.7307, -99.7308, -99.7309, -99.7309, -99.7309, -99.7309,
        -99.7309, -99.7309, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.9643e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2487, -107.2493, -107.2498, -107.2502, -107.2505, -107.2508,
        -107.2511, -107.2513, -107.2515, -107.2516], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7307, -99.7308, -99.7309, -99.7309, -99.7309, -99.7309, -99.7309,
        -99.7309, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 2 	 FLi 	 LiF 	 0.007808892345397875

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2108, -0.4251, -0.4567, -0.4714, -0.4802, -0.4860, -0.4900, -0.4927,
        -0.4946, -0.4959, -0.4968, -0.4975, -0.4979, -0.4982, -0.4984, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6539e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3415e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3079e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 6 	 H 	 H 	 2.711794593818899e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4534], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7296], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0456], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4534], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7296], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 11 	 HF2 	 HF2 	 0.0010100352451548405

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7603, -37.7976, -37.8106, -37.8177, -37.8225, -37.8258, -37.8281,
        -37.8298, -37.8310, -37.8318, -37.8324, -37.8328, -37.8331, -37.8333,
        -37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9228e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9228e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 4 	 C 	 C 	 1.0494798954359099e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1569], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5223], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1569], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7362], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5223], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 9 	 HN2O 	 HON2 	 0.000963384947127607

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6799, -99.7013, -99.7111, -99.7170, -99.7210, -99.7240, -99.7261,
        -99.7276, -99.7287, -99.7295, -99.7300, -99.7304, -99.7307, -99.7309,
        -99.7310, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8292e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8292e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 5 	 F 	 F 	 1.5818574044354346e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9189, -93.5059, -93.4013, -93.3543, -93.3216, -93.3002, -93.2851,
        -93.2744, -93.2669, -93.2615, -93.2576, -93.2549, -93.2529, -93.2515,
        -93.2505, -93.2497, -93.2492, -93.2488, -93.2485, -93.2483, -93.2481,
        -93.2480, -93.2479, -93.2479, -93.2478], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5273e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7436, -37.7792, -37.7973, -37.8081, -37.8155, -37.8209, -37.8247,
        -37.8274, -37.8294, -37.8307, -37.8317, -37.8324, -37.8329, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6955e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4278, -54.4968, -54.5255, -54.5421, -54.5533, -54.5612, -54.5669,
        -54.5709, -54.5737, -54.5757, -54.5771, -54.5781, -54.5788, -54.5793,
        -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8681e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2175, -0.4279, -0.4582, -0.4723, -0.4808, -0.4865, -0.4903, -0.4929,
        -0.4947, -0.4960, -0.4969, -0.4975, -0.4979, -0.4982, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6524e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3214e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2497, -93.2492, -93.2488, -93.2485, -93.2483, -93.2481, -93.2480,
        -93.2479, -93.2479, -93.2478], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5800, -54.5801, -54.5802, -54.5803, -54.5803, -54.5803,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 3 	 CHN 	 CNH 	 0.00634453653451862

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4770, -7.4792, -7.4800, -7.4806, -7.4814, -7.4817, -7.4812,
        -7.4808, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808,
        -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5471e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5900e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0950e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 7 	 Li 	 Li 	 1.9176180457747618e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4735, -7.4769, -7.4787, -7.4797, -7.4803, -7.4810, -7.4816,
        -7.4815, -7.4810, -7.4807, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808,
        -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4540, -7.3638, -7.3335, -7.3173, -7.3069, -7.2999, -7.2951, -7.2918,
        -7.2896, -7.2881, -7.2870, -7.2863, -7.2858, -7.2855, -7.2852, -7.2851,
        -7.2850, -7.2849, -7.2848, -7.2848, -7.2848, -7.2848, -7.2848, -7.2848,
        -7.2848], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4808, -7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2851, -7.2850, -7.2849, -7.2848, -7.2848, -7.2848, -7.2848, -7.2848,
        -7.2848, -7.2848], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 13 	 Li 	 Li 	 9.227910459423411e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5690], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7363], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5690], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7363], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8377], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 10 	 CH4O 	 CH4O 	 6.273918268312215e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4282, -54.4971, -54.5257, -54.5422, -54.5533, -54.5611, -54.5667,
        -54.5707, -54.5735, -54.5754, -54.5768, -54.5778, -54.5785, -54.5790,
        -54.5793, -54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2513e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2513e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 8 	 N 	 N 	 1.9467201096683747e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4622, -109.8880, -109.7448, -109.6694, -109.6210, -109.5879,
        -109.5648, -109.5487, -109.5374, -109.5295, -109.5240, -109.5201,
        -109.5174, -109.5155, -109.5141, -109.5132, -109.5125, -109.5121,
        -109.5118, -109.5115, -109.5114, -109.5113, -109.5112, -109.5111,
        -109.5111], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2693e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4433, -54.5102, -54.5350, -54.5490, -54.5582, -54.5647, -54.5693,
        -54.5725, -54.5748, -54.5764, -54.5776, -54.5784, -54.5789, -54.5793,
        -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0106e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4142, -54.4767, -54.5105, -54.5309, -54.5451, -54.5552, -54.5625,
        -54.5677, -54.5714, -54.5740, -54.5759, -54.5772, -54.5781, -54.5787,
        -54.5792, -54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2518e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5132, -109.5125, -109.5121, -109.5118, -109.5115, -109.5114,
        -109.5113, -109.5112, -109.5111, -109.5111], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5801,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 1 	 N2 	 N2 	 4.1087039799756855e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7469, -37.7850, -37.8017, -37.8114, -37.8179, -37.8226, -37.8259,
        -37.8283, -37.8300, -37.8312, -37.8320, -37.8326, -37.8331, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7426, -37.5655, -37.5047, -37.4728, -37.4523, -37.4383, -37.4287,
        -37.4220, -37.4173, -37.4140, -37.4117, -37.4101, -37.4090, -37.4083,
        -37.4077, -37.4073, -37.4071, -37.4069, -37.4068, -37.4067, -37.4066,
        -37.4066, -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4073, -37.4071, -37.4069, -37.4068, -37.4067, -37.4066, -37.4066,
        -37.4065, -37.4065, -37.4065], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 12 	 C 	 C 	 4.355392653907515e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e27)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e27/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e27/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 27 || ,[' rho : 2.732638', ' ae : 46.772532', ' E : 1.646077'] ,|| total loss 34.223024 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0469], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4540], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0469], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4540], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 11 	 HF2 	 HF2 	 0.0010146293025543312

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6488, -109.9218, -109.7687, -109.6858, -109.6325, -109.5960,
        -109.5706, -109.5528, -109.5404, -109.5317, -109.5256, -109.5214,
        -109.5184, -109.5163, -109.5148, -109.5138, -109.5131, -109.5126,
        -109.5122, -109.5120, -109.5118, -109.5117, -109.5116, -109.5116,
        -109.5115], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2693e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4147, -54.4776, -54.5112, -54.5315, -54.5456, -54.5556, -54.5628,
        -54.5680, -54.5716, -54.5742, -54.5761, -54.5774, -54.5783, -54.5789,
        -54.5793, -54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0324e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4173, -54.4832, -54.5155, -54.5347, -54.5479, -54.5573, -54.5641,
        -54.5689, -54.5723, -54.5747, -54.5764, -54.5776, -54.5784, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9866e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5138, -109.5131, -109.5126, -109.5122, -109.5120, -109.5118,
        -109.5117, -109.5116, -109.5116, -109.5115], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 1 	 N2 	 N2 	 4.054067647497529e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7505, -37.7893, -37.8048, -37.8136, -37.8196, -37.8238, -37.8268,
        -37.8290, -37.8305, -37.8316, -37.8323, -37.8329, -37.8333, -37.8335,
        -37.8337, -37.8338, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6499, -37.5147, -37.4733, -37.4517, -37.4378, -37.4283, -37.4218,
        -37.4172, -37.4140, -37.4118, -37.4102, -37.4091, -37.4084, -37.4078,
        -37.4074, -37.4072, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067,
        -37.4066, -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8338, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4072, -37.4070, -37.4069, -37.4068, -37.4067, -37.4067, -37.4066,
        -37.4066, -37.4066, -37.4066], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 12 	 C 	 C 	 4.355774753372877e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7027, -99.7122, -99.7179, -99.7218, -99.7245, -99.7266,
        -99.7280, -99.7290, -99.7298, -99.7303, -99.7307, -99.7309, -99.7311,
        -99.7312, -99.7313, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5416e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5416e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7313, -99.7314, -99.7314, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 5 	 F 	 F 	 1.3164226421251288e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4693, -7.4754, -7.4783, -7.4797, -7.4803, -7.4809, -7.4817, -7.4818,
        -7.4813, -7.4810, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810, -7.4810,
        -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4206, -7.3439, -7.3207, -7.3087, -7.3010, -7.2960, -7.2925, -7.2901,
        -7.2885, -7.2874, -7.2866, -7.2861, -7.2857, -7.2855, -7.2853, -7.2852,
        -7.2851, -7.2851, -7.2851, -7.2850, -7.2850, -7.2850, -7.2850, -7.2850,
        -7.2850], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2852, -7.2851, -7.2851, -7.2851, -7.2850, -7.2850, -7.2850, -7.2850,
        -7.2850, -7.2850], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 13 	 Li 	 Li 	 9.436955122348241e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0168, -93.5486, -93.4242, -93.3718, -93.3336, -93.3093, -93.2918,
        -93.2796, -93.2710, -93.2648, -93.2604, -93.2573, -93.2550, -93.2534,
        -93.2522, -93.2514, -93.2508, -93.2503, -93.2500, -93.2498, -93.2496,
        -93.2495, -93.2494, -93.2493, -93.2493], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5075e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7670, -37.8023, -37.8138, -37.8202, -37.8243, -37.8272, -37.8293,
        -37.8308, -37.8318, -37.8325, -37.8330, -37.8334, -37.8336, -37.8338,
        -37.8339, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3047e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4265, -54.4952, -54.5244, -54.5414, -54.5528, -54.5609, -54.5666,
        -54.5707, -54.5736, -54.5757, -54.5771, -54.5781, -54.5788, -54.5793,
        -54.5797, -54.5799, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7664e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2757, -0.4460, -0.4682, -0.4787, -0.4851, -0.4894, -0.4923, -0.4943,
        -0.4957, -0.4967, -0.4973, -0.4978, -0.4981, -0.4984, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6453e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1901e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2514, -93.2508, -93.2503, -93.2500, -93.2498, -93.2496, -93.2495,
        -93.2494, -93.2493, -93.2493], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5801, -54.5802, -54.5803, -54.5804, -54.5804, -54.5804,
        -54.5804, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 3 	 CHN 	 CNH 	 0.006252600604747293

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7652, -37.8011, -37.8130, -37.8195, -37.8239, -37.8269, -37.8290,
        -37.8305, -37.8316, -37.8324, -37.8329, -37.8333, -37.8335, -37.8337,
        -37.8338, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4403e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4403e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8339, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 4 	 C 	 C 	 9.482556763133762e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9885, -1.1032, -1.1333, -1.1489, -1.1587, -1.1653, -1.1699, -1.1731,
        -1.1753, -1.1769, -1.1780, -1.1788, -1.1793, -1.1797, -1.1799, -1.1801,
        -1.1802, -1.1803, -1.1804, -1.1804, -1.1805, -1.1805, -1.1805, -1.1805,
        -1.1805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6074e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2148e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2981, -0.4524, -0.4718, -0.4810, -0.4867, -0.4905, -0.4930, -0.4948,
        -0.4960, -0.4969, -0.4975, -0.4979, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6426e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1513e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.5001e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2550, -0.4399, -0.4647, -0.4765, -0.4836, -0.4884, -0.4916, -0.4938,
        -0.4953, -0.4964, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6425e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2660e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1801, -1.1802, -1.1803, -1.1804, -1.1804, -1.1805, -1.1805, -1.1805,
        -1.1805, -1.1805], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 0 	 H2 	 H2 	 1.6448213228794195e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4208, -54.4884, -54.5193, -54.5375, -54.5500, -54.5588, -54.5650,
        -54.5695, -54.5727, -54.5749, -54.5765, -54.5776, -54.5784, -54.5789,
        -54.5793, -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1509e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1509e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 8 	 N 	 N 	 1.896061484954103e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3346, -107.3364, -107.2885, -107.2739, -107.2646, -107.2588,
        -107.2550, -107.2527, -107.2513, -107.2505, -107.2502, -107.2502,
        -107.2505, -107.2508, -107.2512, -107.2515, -107.2519, -107.2523,
        -107.2526, -107.2528, -107.2530, -107.2532, -107.2534, -107.2535,
        -107.2536], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4502e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4718, -7.4780, -7.4799, -7.4805, -7.4811, -7.4819, -7.4819, -7.4814,
        -7.4811, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4812, -7.4812,
        -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4879e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0730e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6780, -99.6967, -99.7075, -99.7143, -99.7190, -99.7225, -99.7250,
        -99.7269, -99.7282, -99.7291, -99.7298, -99.7303, -99.7306, -99.7309,
        -99.7310, -99.7311, -99.7312, -99.7313, -99.7313, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4051e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2515, -107.2519, -107.2523, -107.2526, -107.2528, -107.2530,
        -107.2532, -107.2534, -107.2535, -107.2536], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7311, -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 2 	 FLi 	 LiF 	 0.007708654942499299

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1584], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7366], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5233], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1584], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7366], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5233], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 9 	 HN2O 	 HON2 	 0.0009637918666263734

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5702], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8385], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5702], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7367], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8385], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 10 	 CH4O 	 CH4O 	 6.250954893519284e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2630, -0.4422, -0.4661, -0.4774, -0.4842, -0.4888, -0.4918, -0.4940,
        -0.4955, -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6403e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2560e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2807e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 6 	 H 	 H 	 2.939524305707125e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4690, -7.4742, -7.4775, -7.4793, -7.4803, -7.4808, -7.4815, -7.4821,
        -7.4819, -7.4814, -7.4811, -7.4811, -7.4811, -7.4811, -7.4812, -7.4812,
        -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814, -7.4814,
        -7.4814], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4784e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1402e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9579e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814,
        -7.4814, -7.4814], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 7 	 Li 	 Li 	 2.54953249970982e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e28)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e28/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e28/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 28 || ,[' rho : 2.730974', ' ae : 46.485050', ' E : 1.620744'] ,|| total loss 34.021451 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2414, -107.3020, -107.2559, -107.2521, -107.2488, -107.2468,
        -107.2464, -107.2464, -107.2466, -107.2471, -107.2476, -107.2483,
        -107.2490, -107.2498, -107.2505, -107.2512, -107.2518, -107.2523,
        -107.2528, -107.2532, -107.2535, -107.2538, -107.2541, -107.2542,
        -107.2544], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4610e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4692, -7.4748, -7.4780, -7.4796, -7.4804, -7.4809, -7.4817, -7.4821,
        -7.4818, -7.4813, -7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4813,
        -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814, -7.4814, -7.4814,
        -7.4814], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4728e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1461e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6791, -99.6989, -99.7094, -99.7158, -99.7203, -99.7236, -99.7260,
        -99.7277, -99.7289, -99.7298, -99.7304, -99.7309, -99.7312, -99.7314,
        -99.7316, -99.7317, -99.7317, -99.7318, -99.7318, -99.7319, -99.7319,
        -99.7319, -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8202e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2512, -107.2518, -107.2523, -107.2528, -107.2532, -107.2535,
        -107.2538, -107.2541, -107.2542, -107.2544], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814, -7.4814,
        -7.4814, -7.4814], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7317, -99.7317, -99.7318, -99.7318, -99.7319, -99.7319, -99.7319,
        -99.7319, -99.7319, -99.7319], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 2 	 FLi 	 LiF 	 0.007701107080515949

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1800, -93.6157, -93.4586, -93.3980, -93.3512, -93.3223, -93.3013,
        -93.2868, -93.2764, -93.2691, -93.2639, -93.2601, -93.2574, -93.2555,
        -93.2541, -93.2531, -93.2524, -93.2519, -93.2515, -93.2512, -93.2510,
        -93.2508, -93.2507, -93.2507, -93.2506], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4898e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7497, -37.7883, -37.8041, -37.8132, -37.8194, -37.8237, -37.8268,
        -37.8290, -37.8306, -37.8317, -37.8325, -37.8331, -37.8335, -37.8337,
        -37.8339, -37.8341, -37.8342, -37.8342, -37.8343, -37.8343, -37.8343,
        -37.8343, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1951e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4301, -54.4988, -54.5270, -54.5433, -54.5542, -54.5619, -54.5674,
        -54.5713, -54.5741, -54.5760, -54.5774, -54.5783, -54.5790, -54.5795,
        -54.5798, -54.5801, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805,
        -54.5805, -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6088e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2602, -0.4414, -0.4656, -0.4771, -0.4840, -0.4886, -0.4917, -0.4939,
        -0.4954, -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6383e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2763e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2531, -93.2524, -93.2519, -93.2515, -93.2512, -93.2510, -93.2508,
        -93.2507, -93.2507, -93.2506], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8341, -37.8342, -37.8342, -37.8343, -37.8343, -37.8343, -37.8343,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5801, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805, -54.5805,
        -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 3 	 CHN 	 CNH 	 0.006165583493452689

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7783, -37.7966, -37.8077, -37.8152, -37.8207, -37.8246,
        -37.8274, -37.8294, -37.8308, -37.8318, -37.8325, -37.8330, -37.8334,
        -37.8336, -37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7040, -37.5433, -37.4913, -37.4638, -37.4463, -37.4343, -37.4260,
        -37.4202, -37.4162, -37.4134, -37.4114, -37.4100, -37.4090, -37.4084,
        -37.4079, -37.4076, -37.4073, -37.4072, -37.4071, -37.4070, -37.4069,
        -37.4069, -37.4069, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8341, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4076, -37.4073, -37.4072, -37.4071, -37.4070, -37.4069, -37.4069,
        -37.4069, -37.4068, -37.4068], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 12 	 C 	 C 	 4.24300804267738e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3250, -0.4596, -0.4758, -0.4837, -0.4885, -0.4917, -0.4939, -0.4954,
        -0.4964, -0.4972, -0.4977, -0.4980, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6331e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1487e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2664e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 6 	 H 	 H 	 3.05064199431603e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5691], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5691], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8380], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 10 	 CH4O 	 CH4O 	 6.278046795694907e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0454], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7293], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0454], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7293], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 11 	 HF2 	 HF2 	 0.0010284305274700083

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9983, -1.1074, -1.1362, -1.1510, -1.1603, -1.1667, -1.1711, -1.1741,
        -1.1762, -1.1777, -1.1787, -1.1795, -1.1800, -1.1803, -1.1806, -1.1808,
        -1.1809, -1.1810, -1.1810, -1.1811, -1.1811, -1.1811, -1.1811, -1.1811,
        -1.1811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7147e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4293e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3128, -0.4564, -0.4740, -0.4824, -0.4876, -0.4911, -0.4934, -0.4951,
        -0.4962, -0.4970, -0.4976, -0.4979, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6267e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2174e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6828e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2562, -0.4401, -0.4649, -0.4766, -0.4837, -0.4884, -0.4916, -0.4938,
        -0.4953, -0.4964, -0.4971, -0.4976, -0.4980, -0.4983, -0.4984, -0.4986,
        -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6266e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3657e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1808, -1.1809, -1.1810, -1.1810, -1.1811, -1.1811, -1.1811, -1.1811,
        -1.1811, -1.1811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 0 	 H2 	 H2 	 1.9525382606672022e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4696, -7.4757, -7.4785, -7.4798, -7.4804, -7.4810, -7.4817, -7.4818,
        -7.4813, -7.4810, -7.4808, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810,
        -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3850e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9300e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7711e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 7 	 Li 	 Li 	 2.219199293811443e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7514, -37.7900, -37.8051, -37.8136, -37.8194, -37.8234, -37.8263,
        -37.8284, -37.8298, -37.8308, -37.8316, -37.8321, -37.8325, -37.8327,
        -37.8329, -37.8330, -37.8331, -37.8332, -37.8332, -37.8332, -37.8333,
        -37.8333, -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7341e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.7341e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8330, -37.8331, -37.8332, -37.8332, -37.8332, -37.8333, -37.8333,
        -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 4 	 C 	 C 	 1.2160205663484465e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4520, -54.5162, -54.5388, -54.5513, -54.5596, -54.5653, -54.5694,
        -54.5723, -54.5743, -54.5757, -54.5767, -54.5775, -54.5779, -54.5783,
        -54.5785, -54.5787, -54.5788, -54.5789, -54.5790, -54.5790, -54.5790,
        -54.5791, -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5129e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5129e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5787, -54.5788, -54.5789, -54.5790, -54.5790, -54.5790, -54.5791,
        -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 8 	 N 	 N 	 2.3922756933255504e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7351], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5214], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1552], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7351], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5214], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 9 	 HN2O 	 HON2 	 0.0009770907537738744

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6833, -99.7051, -99.7136, -99.7185, -99.7218, -99.7242, -99.7259,
        -99.7271, -99.7280, -99.7286, -99.7291, -99.7294, -99.7296, -99.7297,
        -99.7298, -99.7299, -99.7300, -99.7300, -99.7300, -99.7300, -99.7301,
        -99.7301, -99.7301, -99.7301, -99.7301], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6171e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6171e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7299, -99.7300, -99.7300, -99.7300, -99.7300, -99.7301, -99.7301,
        -99.7301, -99.7301, -99.7301], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 5 	 F 	 F 	 3.411672265098734e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8103, -109.8241, -109.7191, -109.6523, -109.6086, -109.5787,
        -109.5581, -109.5437, -109.5337, -109.5268, -109.5219, -109.5185,
        -109.5162, -109.5145, -109.5134, -109.5126, -109.5120, -109.5116,
        -109.5113, -109.5112, -109.5110, -109.5109, -109.5109, -109.5108,
        -109.5108], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2611e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4148, -54.4778, -54.5111, -54.5313, -54.5452, -54.5551, -54.5623,
        -54.5674, -54.5710, -54.5735, -54.5753, -54.5766, -54.5775, -54.5781,
        -54.5786, -54.5789, -54.5791, -54.5793, -54.5794, -54.5794, -54.5795,
        -54.5795, -54.5796, -54.5796, -54.5796], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0657e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4228, -54.4909, -54.5210, -54.5386, -54.5506, -54.5590, -54.5650,
        -54.5693, -54.5724, -54.5745, -54.5760, -54.5771, -54.5779, -54.5784,
        -54.5788, -54.5790, -54.5792, -54.5793, -54.5794, -54.5795, -54.5795,
        -54.5796, -54.5796, -54.5796, -54.5796], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9579e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5126, -109.5120, -109.5116, -109.5113, -109.5112, -109.5110,
        -109.5109, -109.5109, -109.5108, -109.5108], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5790, -54.5792, -54.5793, -54.5794, -54.5795, -54.5795, -54.5796,
        -54.5796, -54.5796, -54.5796], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 1 	 N2 	 N2 	 3.581812402525976e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4692, -7.4746, -7.4778, -7.4795, -7.4803, -7.4808, -7.4815, -7.4820,
        -7.4818, -7.4813, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4812,
        -7.4812, -7.4812, -7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4678, -7.3739, -7.3404, -7.3222, -7.3105, -7.3025, -7.2971, -7.2933,
        -7.2908, -7.2891, -7.2879, -7.2871, -7.2865, -7.2861, -7.2859, -7.2857,
        -7.2855, -7.2855, -7.2854, -7.2854, -7.2853, -7.2853, -7.2853, -7.2853,
        -7.2853], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4812, -7.4812, -7.4812, -7.4812, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2857, -7.2855, -7.2855, -7.2854, -7.2854, -7.2853, -7.2853, -7.2853,
        -7.2853, -7.2853], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 13 	 Li 	 Li 	 1.0857759125486236e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e29)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e29/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e29/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 29 || ,[' rho : 2.728377', ' ae : 46.371268', ' E : 1.728201'] ,|| total loss 33.925339 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3113, -107.3313, -107.2814, -107.2693, -107.2612, -107.2563,
        -107.2532, -107.2513, -107.2503, -107.2498, -107.2498, -107.2500,
        -107.2504, -107.2509, -107.2514, -107.2520, -107.2524, -107.2528,
        -107.2532, -107.2535, -107.2538, -107.2540, -107.2542, -107.2544,
        -107.2545], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4609e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4694, -7.4748, -7.4780, -7.4797, -7.4804, -7.4809, -7.4816, -7.4821,
        -7.4818, -7.4813, -7.4811, -7.4810, -7.4811, -7.4811, -7.4812, -7.4812,
        -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3726e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1246e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6817, -99.7033, -99.7126, -99.7180, -99.7217, -99.7244, -99.7263,
        -99.7277, -99.7287, -99.7294, -99.7299, -99.7302, -99.7305, -99.7307,
        -99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1792e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2520, -107.2524, -107.2528, -107.2532, -107.2535, -107.2538,
        -107.2540, -107.2542, -107.2544, -107.2545], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 2 	 FLi 	 LiF 	 0.00761490383039847

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6889, -99.7100, -99.7175, -99.7217, -99.7245, -99.7264, -99.7279,
        -99.7289, -99.7296, -99.7301, -99.7304, -99.7307, -99.7309, -99.7310,
        -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6681e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6681e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 5 	 F 	 F 	 1.6027630267502072e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7442, -37.7796, -37.7976, -37.8084, -37.8157, -37.8210, -37.8248,
        -37.8275, -37.8295, -37.8308, -37.8318, -37.8325, -37.8330, -37.8333,
        -37.8336, -37.8337, -37.8339, -37.8339, -37.8340, -37.8340, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6071e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6071e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8337, -37.8339, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 4 	 C 	 C 	 9.5618048138015e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4696, -7.4752, -7.4783, -7.4799, -7.4806, -7.4811, -7.4819, -7.4822,
        -7.4818, -7.4814, -7.4812, -7.4812, -7.4812, -7.4813, -7.4813, -7.4813,
        -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4815, -7.4815, -7.4815,
        -7.4815], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3716e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2108e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7445e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4813, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4815, -7.4815,
        -7.4815, -7.4815], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 7 	 Li 	 Li 	 2.70462413800998e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0031, -1.1096, -1.1377, -1.1522, -1.1613, -1.1675, -1.1718, -1.1747,
        -1.1768, -1.1782, -1.1793, -1.1800, -1.1805, -1.1808, -1.1811, -1.1812,
        -1.1813, -1.1814, -1.1815, -1.1815, -1.1816, -1.1816, -1.1816, -1.1816,
        -1.1816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7789e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5579e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3086, -0.4552, -0.4733, -0.4820, -0.4873, -0.4909, -0.4933, -0.4950,
        -0.4961, -0.4970, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6267e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2248e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8115e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2687, -0.4439, -0.4670, -0.4779, -0.4846, -0.4890, -0.4920, -0.4941,
        -0.4955, -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6267e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3271e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1812, -1.1813, -1.1814, -1.1815, -1.1815, -1.1816, -1.1816, -1.1816,
        -1.1816, -1.1816], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 0 	 H2 	 H2 	 2.148935984099981e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1610], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5249], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1610], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5249], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 9 	 HN2O 	 HON2 	 0.0009697991132513967

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9372, -93.5163, -93.4087, -93.3612, -93.3276, -93.3059, -93.2905,
        -93.2797, -93.2720, -93.2666, -93.2627, -93.2599, -93.2579, -93.2565,
        -93.2555, -93.2547, -93.2542, -93.2538, -93.2535, -93.2533, -93.2532,
        -93.2530, -93.2530, -93.2529, -93.2529], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7549, -37.7933, -37.8078, -37.8160, -37.8214, -37.8253, -37.8280,
        -37.8300, -37.8314, -37.8323, -37.8330, -37.8335, -37.8339, -37.8341,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8049e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4148, -54.4741, -54.5085, -54.5297, -54.5444, -54.5549, -54.5625,
        -54.5679, -54.5718, -54.5745, -54.5765, -54.5778, -54.5788, -54.5794,
        -54.5799, -54.5803, -54.5805, -54.5806, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2759e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2623, -0.4420, -0.4659, -0.4772, -0.4841, -0.4887, -0.4918, -0.4939,
        -0.4954, -0.4964, -0.4972, -0.4977, -0.4980, -0.4983, -0.4984, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6275e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3397e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2547, -93.2542, -93.2538, -93.2535, -93.2533, -93.2532, -93.2530,
        -93.2530, -93.2529, -93.2529], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5803, -54.5805, -54.5806, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 3 	 CHN 	 CNH 	 0.006045889020675886

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4795, -54.5128, -54.5328, -54.5467, -54.5566, -54.5637,
        -54.5687, -54.5723, -54.5749, -54.5767, -54.5780, -54.5788, -54.5795,
        -54.5799, -54.5802, -54.5804, -54.5806, -54.5807, -54.5808, -54.5808,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3335e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3335e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5802, -54.5804, -54.5806, -54.5807, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 8 	 N 	 N 	 1.6130667431386386e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5721], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8394], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5721], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8394], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 10 	 CH4O 	 CH4O 	 6.263536087346066e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2876, -0.4494, -0.4700, -0.4799, -0.4859, -0.4899, -0.4926, -0.4945,
        -0.4958, -0.4967, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6257e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2828e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2515e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 6 	 H 	 H 	 3.209404351708093e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4710, -7.4772, -7.4797, -7.4807, -7.4812, -7.4819, -7.4824, -7.4822,
        -7.4817, -7.4814, -7.4814, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816,
        -7.4816, -7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4189, -7.3432, -7.3206, -7.3088, -7.3013, -7.2964, -7.2930, -7.2907,
        -7.2891, -7.2880, -7.2873, -7.2868, -7.2864, -7.2862, -7.2860, -7.2859,
        -7.2858, -7.2858, -7.2858, -7.2857, -7.2857, -7.2857, -7.2857, -7.2857,
        -7.2857], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4816, -7.4816, -7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2859, -7.2858, -7.2858, -7.2858, -7.2857, -7.2857, -7.2857, -7.2857,
        -7.2857, -7.2857], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 13 	 Li 	 Li 	 1.091712404478761e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9240, -109.4852, -109.5505, -109.5429, -109.5333, -109.5265,
        -109.5220, -109.5192, -109.5174, -109.5163, -109.5156, -109.5152,
        -109.5149, -109.5147, -109.5146, -109.5145, -109.5145, -109.5144,
        -109.5144, -109.5144, -109.5144, -109.5144, -109.5144, -109.5144,
        -109.5144], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2646e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4507, -54.5158, -54.5392, -54.5522, -54.5608, -54.5669, -54.5711,
        -54.5741, -54.5762, -54.5777, -54.5788, -54.5795, -54.5800, -54.5804,
        -54.5807, -54.5808, -54.5810, -54.5811, -54.5811, -54.5812, -54.5812,
        -54.5812, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7254e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4522, -54.5170, -54.5400, -54.5528, -54.5612, -54.5671, -54.5713,
        -54.5743, -54.5763, -54.5778, -54.5788, -54.5796, -54.5801, -54.5804,
        -54.5807, -54.5808, -54.5810, -54.5811, -54.5811, -54.5812, -54.5812,
        -54.5812, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7195e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5145, -109.5145, -109.5144, -109.5144, -109.5144, -109.5144,
        -109.5144, -109.5144, -109.5144, -109.5144], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5808, -54.5810, -54.5811, -54.5811, -54.5812, -54.5812, -54.5812,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 1 	 N2 	 N2 	 3.4472026306631316e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7615, -37.7987, -37.8116, -37.8188, -37.8235, -37.8268, -37.8292,
        -37.8309, -37.8321, -37.8329, -37.8335, -37.8339, -37.8342, -37.8344,
        -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7446, -37.5672, -37.5061, -37.4741, -37.4535, -37.4396, -37.4299,
        -37.4231, -37.4184, -37.4152, -37.4129, -37.4113, -37.4102, -37.4094,
        -37.4088, -37.4085, -37.4082, -37.4080, -37.4079, -37.4078, -37.4077,
        -37.4077, -37.4076, -37.4076, -37.4076], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4085, -37.4082, -37.4080, -37.4079, -37.4078, -37.4077, -37.4077,
        -37.4076, -37.4076, -37.4076], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 12 	 C 	 C 	 4.1941734829836056e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0512], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4563], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7320], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0512], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4563], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7320], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 11 	 HF2 	 HF2 	 0.0010298914140253615

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e30)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e30/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e30/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 30 || ,[' rho : 2.723188', ' ae : 46.030398', ' E : 1.535391'] ,|| total loss 33.687082 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3418, -107.3441, -107.2947, -107.2796, -107.2700, -107.2638,
        -107.2598, -107.2572, -107.2556, -107.2548, -107.2545, -107.2545,
        -107.2547, -107.2550, -107.2555, -107.2559, -107.2563, -107.2566,
        -107.2569, -107.2572, -107.2574, -107.2576, -107.2578, -107.2579,
        -107.2580], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4930e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4703, -7.4761, -7.4790, -7.4804, -7.4810, -7.4815, -7.4823, -7.4825,
        -7.4820, -7.4816, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816, -7.4816,
        -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3345e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4276e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6844, -99.7060, -99.7151, -99.7205, -99.7242, -99.7268, -99.7287,
        -99.7301, -99.7310, -99.7317, -99.7322, -99.7325, -99.7328, -99.7330,
        -99.7331, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2833e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2559, -107.2563, -107.2566, -107.2569, -107.2572, -107.2574,
        -107.2576, -107.2578, -107.2579, -107.2580], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7332, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 2 	 FLi 	 LiF 	 0.0075426303377208155

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4701, -7.4755, -7.4786, -7.4802, -7.4809, -7.4814, -7.4821, -7.4825,
        -7.4821, -7.4816, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816,
        -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4583, -7.3670, -7.3359, -7.3192, -7.3086, -7.3014, -7.2964, -7.2931,
        -7.2908, -7.2892, -7.2881, -7.2874, -7.2869, -7.2865, -7.2863, -7.2861,
        -7.2860, -7.2859, -7.2859, -7.2858, -7.2858, -7.2858, -7.2858, -7.2858,
        -7.2858], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2861, -7.2860, -7.2859, -7.2859, -7.2858, -7.2858, -7.2858, -7.2858,
        -7.2858, -7.2858], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 13 	 Li 	 Li 	 1.1198283976441318e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1625], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5259], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1625], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5259], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 9 	 HN2O 	 HON2 	 0.0009712077831872898

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7545, -37.7929, -37.8076, -37.8159, -37.8214, -37.8253, -37.8281,
        -37.8300, -37.8315, -37.8324, -37.8331, -37.8336, -37.8340, -37.8342,
        -37.8344, -37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6267e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6267e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8345, -37.8346, -37.8347, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 4 	 C 	 C 	 7.624101468074492e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3349, -0.4622, -0.4773, -0.4846, -0.4891, -0.4921, -0.4941, -0.4955,
        -0.4965, -0.4972, -0.4977, -0.4980, -0.4983, -0.4984, -0.4986, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6211e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2010e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2423e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 6 	 H 	 H 	 3.273114248005179e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6288, -109.9249, -109.7713, -109.6886, -109.6354, -109.5991,
        -109.5737, -109.5560, -109.5436, -109.5349, -109.5289, -109.5246,
        -109.5216, -109.5196, -109.5181, -109.5171, -109.5164, -109.5159,
        -109.5155, -109.5153, -109.5151, -109.5150, -109.5149, -109.5148,
        -109.5148], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2628e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4153, -54.4739, -54.5084, -54.5297, -54.5445, -54.5551, -54.5627,
        -54.5681, -54.5720, -54.5748, -54.5767, -54.5781, -54.5790, -54.5797,
        -54.5802, -54.5805, -54.5808, -54.5809, -54.5810, -54.5811, -54.5812,
        -54.5812, -54.5812, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9462e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4217, -54.4886, -54.5197, -54.5381, -54.5507, -54.5596, -54.5659,
        -54.5704, -54.5737, -54.5759, -54.5775, -54.5787, -54.5794, -54.5800,
        -54.5804, -54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812,
        -54.5812, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8333e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5171, -109.5164, -109.5159, -109.5155, -109.5153, -109.5151,
        -109.5150, -109.5149, -109.5148, -109.5148], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 1 	 N2 	 N2 	 3.219301837931141e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9992, -1.1083, -1.1371, -1.1520, -1.1614, -1.1677, -1.1721, -1.1751,
        -1.1773, -1.1788, -1.1798, -1.1805, -1.1810, -1.1814, -1.1816, -1.1818,
        -1.1819, -1.1820, -1.1821, -1.1821, -1.1822, -1.1822, -1.1822, -1.1822,
        -1.1822], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8728e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.7456e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2411, -0.4354, -0.4622, -0.4749, -0.4825, -0.4876, -0.4910, -0.4934,
        -0.4950, -0.4962, -0.4970, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6204e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4492e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9866e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2312, -0.4322, -0.4605, -0.4737, -0.4818, -0.4871, -0.4907, -0.4931,
        -0.4949, -0.4961, -0.4969, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6204e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4819e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1818, -1.1819, -1.1820, -1.1821, -1.1821, -1.1822, -1.1822, -1.1822,
        -1.1822, -1.1822], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 0 	 H2 	 H2 	 2.4520060884278365e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7675, -37.8027, -37.8143, -37.8207, -37.8249, -37.8278, -37.8299,
        -37.8314, -37.8324, -37.8331, -37.8337, -37.8340, -37.8343, -37.8345,
        -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.7421, -37.5657, -37.5053, -37.4735, -37.4532, -37.4393, -37.4297,
        -37.4230, -37.4184, -37.4151, -37.4128, -37.4113, -37.4102, -37.4094,
        -37.4088, -37.4085, -37.4082, -37.4080, -37.4079, -37.4078, -37.4077,
        -37.4077, -37.4077, -37.4076, -37.4076], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4085, -37.4082, -37.4080, -37.4079, -37.4078, -37.4077, -37.4077,
        -37.4077, -37.4076, -37.4076], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 12 	 C 	 C 	 4.173907713232314e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9671, -93.5300, -93.4165, -93.3674, -93.3322, -93.3096, -93.2935,
        -93.2823, -93.2743, -93.2686, -93.2646, -93.2617, -93.2597, -93.2582,
        -93.2571, -93.2564, -93.2558, -93.2554, -93.2551, -93.2549, -93.2548,
        -93.2546, -93.2546, -93.2545, -93.2545], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4307e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7645, -37.8008, -37.8130, -37.8197, -37.8242, -37.8273, -37.8295,
        -37.8311, -37.8322, -37.8330, -37.8335, -37.8339, -37.8342, -37.8344,
        -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5495e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4200, -54.4859, -54.5176, -54.5366, -54.5495, -54.5587, -54.5653,
        -54.5700, -54.5733, -54.5757, -54.5773, -54.5785, -54.5793, -54.5799,
        -54.5803, -54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9184e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2882, -0.4495, -0.4701, -0.4799, -0.4859, -0.4899, -0.4926, -0.4945,
        -0.4958, -0.4967, -0.4973, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6191e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3203e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2564, -93.2558, -93.2554, -93.2551, -93.2549, -93.2548, -93.2546,
        -93.2546, -93.2545, -93.2545], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811, -54.5812,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 3 	 CHN 	 CNH 	 0.005954954725835003

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5724], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8396], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5724], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8396], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 10 	 CH4O 	 CH4O 	 6.280400238800515e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4526, -54.5170, -54.5399, -54.5526, -54.5610, -54.5668, -54.5709,
        -54.5739, -54.5759, -54.5774, -54.5784, -54.5791, -54.5796, -54.5800,
        -54.5802, -54.5804, -54.5805, -54.5806, -54.5806, -54.5807, -54.5807,
        -54.5807, -54.5807, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2795e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2795e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5804, -54.5805, -54.5806, -54.5806, -54.5807, -54.5807, -54.5807,
        -54.5807, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 8 	 N 	 N 	 1.6665416442553073e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4557], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7313], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0500], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4557], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7313], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 11 	 HF2 	 HF2 	 0.0010355338499117618

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6845, -99.7061, -99.7150, -99.7202, -99.7238, -99.7263, -99.7281,
        -99.7294, -99.7304, -99.7310, -99.7315, -99.7318, -99.7321, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0917e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0917e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 5 	 F 	 F 	 3.9033606754601873e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4708, -7.4766, -7.4794, -7.4806, -7.4811, -7.4817, -7.4824, -7.4824,
        -7.4818, -7.4815, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816,
        -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2623e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3981e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5261e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 7 	 Li 	 Li 	 3.1168672712504636e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e31)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e31/2022-12-13_14:45:44.617772_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e31/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 31 || ,[' rho : 2.723132', ' ae : 45.779599', ' E : 1.482913'] ,|| total loss 33.511843 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7492, -37.7873, -37.8034, -37.8127, -37.8191, -37.8235, -37.8267,
        -37.8290, -37.8306, -37.8318, -37.8326, -37.8332, -37.8336, -37.8338,
        -37.8340, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0453e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0453e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 4 	 C 	 C 	 8.459984631089124e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4704, -7.4760, -7.4789, -7.4804, -7.4810, -7.4815, -7.4823, -7.4825,
        -7.4820, -7.4816, -7.4815, -7.4815, -7.4815, -7.4816, -7.4816, -7.4816,
        -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4148, -7.3411, -7.3193, -7.3080, -7.3009, -7.2961, -7.2928, -7.2907,
        -7.2891, -7.2881, -7.2874, -7.2869, -7.2866, -7.2863, -7.2862, -7.2861,
        -7.2860, -7.2860, -7.2859, -7.2859, -7.2859, -7.2859, -7.2859, -7.2859,
        -7.2858], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2861, -7.2860, -7.2860, -7.2859, -7.2859, -7.2859, -7.2859, -7.2859,
        -7.2859, -7.2858], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 13 	 Li 	 Li 	 1.1788832148654309e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0504], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0504], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4559], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 11 	 HF2 	 HF2 	 0.0010378101274851688

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1621], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5257], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1621], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5257], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 9 	 HN2O 	 HON2 	 0.000977063450432705

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4503, -54.5154, -54.5389, -54.5519, -54.5606, -54.5666, -54.5709,
        -54.5739, -54.5760, -54.5775, -54.5786, -54.5793, -54.5798, -54.5802,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9936e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9936e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 8 	 N 	 N 	 1.571185999999495e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2655, -0.4429, -0.4664, -0.4775, -0.4843, -0.4888, -0.4918, -0.4939,
        -0.4954, -0.4964, -0.4971, -0.4976, -0.4980, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6128e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4219e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2257e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 6 	 H 	 H 	 3.458600392582251e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0350, -1.1232, -1.1465, -1.1585, -1.1660, -1.1711, -1.1747, -1.1771,
        -1.1788, -1.1800, -1.1809, -1.1814, -1.1818, -1.1821, -1.1823, -1.1825,
        -1.1826, -1.1826, -1.1827, -1.1827, -1.1827, -1.1828, -1.1828, -1.1828,
        -1.1828], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9630e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9259e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2214, -0.4288, -0.4586, -0.4726, -0.4810, -0.4865, -0.4903, -0.4929,
        -0.4947, -0.4959, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6137e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5579e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1534e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3174, -0.4575, -0.4746, -0.4828, -0.4879, -0.4912, -0.4935, -0.4951,
        -0.4962, -0.4970, -0.4976, -0.4979, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6137e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2814e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1825, -1.1826, -1.1826, -1.1827, -1.1827, -1.1827, -1.1828, -1.1828,
        -1.1828, -1.1828], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 0 	 H2 	 H2 	 2.752712688237606e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4704, -7.4754, -7.4786, -7.4804, -7.4812, -7.4816, -7.4823, -7.4828,
        -7.4825, -7.4820, -7.4818, -7.4817, -7.4818, -7.4818, -7.4819, -7.4819,
        -7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2625e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6524e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5267e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4819, -7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820, -7.4820], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 7 	 Li 	 Li 	 3.6849680174546574e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5742], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7388], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8405], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5742], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7388], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8405], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 10 	 CH4O 	 CH4O 	 6.248884328497237e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7507, -37.7889, -37.8048, -37.8140, -37.8202, -37.8246, -37.8277,
        -37.8299, -37.8315, -37.8326, -37.8334, -37.8340, -37.8344, -37.8347,
        -37.8349, -37.8350, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6349, -37.5080, -37.4698, -37.4498, -37.4370, -37.4282, -37.4222,
        -37.4180, -37.4150, -37.4129, -37.4115, -37.4105, -37.4098, -37.4093,
        -37.4089, -37.4087, -37.4085, -37.4084, -37.4083, -37.4083, -37.4082,
        -37.4082, -37.4082, -37.4082, -37.4082], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8350, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4087, -37.4085, -37.4084, -37.4083, -37.4083, -37.4082, -37.4082,
        -37.4082, -37.4082, -37.4082], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 12 	 C 	 C 	 4.116614914804303e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8233, -109.8175, -109.7181, -109.6534, -109.6109, -109.5819,
        -109.5619, -109.5480, -109.5383, -109.5315, -109.5269, -109.5236,
        -109.5213, -109.5197, -109.5186, -109.5178, -109.5173, -109.5169,
        -109.5167, -109.5165, -109.5163, -109.5163, -109.5162, -109.5161,
        -109.5161], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2623e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4243, -54.4917, -54.5222, -54.5400, -54.5522, -54.5608, -54.5669,
        -54.5713, -54.5744, -54.5766, -54.5781, -54.5792, -54.5800, -54.5805,
        -54.5809, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2701e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4169, -54.4782, -54.5119, -54.5324, -54.5466, -54.5567, -54.5640,
        -54.5692, -54.5729, -54.5756, -54.5774, -54.5787, -54.5796, -54.5803,
        -54.5807, -54.5810, -54.5813, -54.5814, -54.5815, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3661e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5178, -109.5173, -109.5169, -109.5167, -109.5165, -109.5163,
        -109.5163, -109.5162, -109.5161, -109.5161], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5813, -54.5814, -54.5815, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 1 	 N2 	 N2 	 3.02133648661225e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6926, -99.7135, -99.7208, -99.7249, -99.7276, -99.7296, -99.7309,
        -99.7319, -99.7326, -99.7331, -99.7335, -99.7337, -99.7339, -99.7340,
        -99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7343, -99.7343,
        -99.7343, -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6968e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6968e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7341, -99.7342, -99.7342, -99.7342, -99.7343, -99.7343, -99.7343,
        -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 5 	 F 	 F 	 3.3239575117965516e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2435, -107.3080, -107.2602, -107.2568, -107.2537, -107.2519,
        -107.2515, -107.2515, -107.2517, -107.2521, -107.2527, -107.2534,
        -107.2541, -107.2549, -107.2557, -107.2564, -107.2571, -107.2577,
        -107.2582, -107.2586, -107.2590, -107.2593, -107.2596, -107.2598,
        -107.2599], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5120e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4710, -7.4766, -7.4795, -7.4809, -7.4814, -7.4819, -7.4827, -7.4828,
        -7.4823, -7.4819, -7.4818, -7.4818, -7.4818, -7.4819, -7.4819, -7.4820,
        -7.4820, -7.4820, -7.4820, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821,
        -7.4821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2530e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7010e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6816, -99.7003, -99.7109, -99.7175, -99.7222, -99.7256, -99.7280,
        -99.7298, -99.7311, -99.7320, -99.7327, -99.7332, -99.7335, -99.7337,
        -99.7339, -99.7340, -99.7341, -99.7341, -99.7342, -99.7342, -99.7342,
        -99.7342, -99.7342, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7071e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2564, -107.2571, -107.2577, -107.2582, -107.2586, -107.2590,
        -107.2593, -107.2596, -107.2598, -107.2599], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4820, -7.4820, -7.4820, -7.4820, -7.4821, -7.4821, -7.4821, -7.4821,
        -7.4821, -7.4821], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7340, -99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7342,
        -99.7342, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 2 	 FLi 	 LiF 	 0.007492092423887949

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1336, -93.6003, -93.4532, -93.3955, -93.3513, -93.3240, -93.3042,
        -93.2905, -93.2807, -93.2738, -93.2689, -93.2654, -93.2629, -93.2611,
        -93.2598, -93.2589, -93.2582, -93.2577, -93.2574, -93.2571, -93.2569,
        -93.2568, -93.2567, -93.2566, -93.2566], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4151e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7615, -37.7987, -37.8117, -37.8190, -37.8238, -37.8271, -37.8295,
        -37.8312, -37.8324, -37.8333, -37.8339, -37.8343, -37.8346, -37.8348,
        -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353,
        -37.8353, -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0217e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4544, -54.5185, -54.5412, -54.5538, -54.5621, -54.5679, -54.5720,
        -54.5749, -54.5769, -54.5783, -54.5794, -54.5801, -54.5806, -54.5809,
        -54.5812, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1922e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2291, -0.4314, -0.4600, -0.4735, -0.4816, -0.4869, -0.4906, -0.4931,
        -0.4948, -0.4960, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6132e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5303e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2589, -93.2582, -93.2577, -93.2574, -93.2571, -93.2569, -93.2568,
        -93.2567, -93.2566, -93.2566], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8351, -37.8351, -37.8352, -37.8352, -37.8352, -37.8353, -37.8353,
        -37.8353, -37.8353, -37.8353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5814, -54.5815, -54.5816, -54.5816, -54.5817, -54.5817,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 3 	 CHN 	 CNH 	 0.005863771516963716

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e32)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e32/2022-12-13_14:45:44.617772_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e32/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 32 || ,[' rho : 2.723261', ' ae : 45.565108', ' E : 1.435906'] ,|| total loss 33.361408 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2144, -0.4264, -0.4573, -0.4717, -0.4804, -0.4861, -0.4900, -0.4927,
        -0.4945, -0.4958, -0.4967, -0.4973, -0.4978, -0.4981, -0.4983, -0.4984,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6107e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6020e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2215e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4984, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 6 	 H 	 H 	 3.5196524855981214e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 19C
SUBMOLECULES: ['C', 'C']
SUBMOLECULE INDICES: [19, 18]
================================
Subsetting Dataset with molecules[ 19C]:  ,[19, 18]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,19
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4139], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4139], dtype=torch.float64)
E_PRED: tensor([-37.7470, -37.7839, -37.8010, -37.8111, -37.8180, -37.8228, -37.8263,
        -37.8288, -37.8306, -37.8319, -37.8328, -37.8334, -37.8339, -37.8342,
        -37.8344, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-0.4138582934694864
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,18
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-37.6424, -37.5115, -37.4718, -37.4511, -37.4378, -37.4287, -37.4224,
        -37.4180, -37.4149, -37.4128, -37.4113, -37.4103, -37.4095, -37.4090,
        -37.4086, -37.4084, -37.4082, -37.4081, -37.4080, -37.4079, -37.4079,
        -37.4079, -37.4079, -37.4078, -37.4078], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.4139], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'A': tensor([-37.4084, -37.4082, -37.4081, -37.4080, -37.4079, -37.4079, -37.4079,
        -37.4079, -37.4078, -37.4078], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 12 	 C 	 C 	 4.0636248809248976e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5728], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801931
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8399], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967433
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5728], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8399], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 10 	 CH4O 	 CH4O 	 6.28704451562765e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7479, -37.7855, -37.8021, -37.8118, -37.8184, -37.8231, -37.8264,
        -37.8288, -37.8305, -37.8317, -37.8326, -37.8332, -37.8336, -37.8339,
        -37.8341, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8345, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9644e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9644e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 4 	 C 	 C 	 8.26040255090112e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0290, -1.1209, -1.1452, -1.1577, -1.1655, -1.1709, -1.1746, -1.1771,
        -1.1789, -1.1802, -1.1810, -1.1816, -1.1821, -1.1824, -1.1826, -1.1827,
        -1.1828, -1.1829, -1.1830, -1.1830, -1.1830, -1.1830, -1.1830, -1.1830,
        -1.1831], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668201
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0048e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0096e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3324, -0.4615, -0.4769, -0.4843, -0.4889, -0.4919, -0.4940, -0.4954,
        -0.4964, -0.4971, -0.4976, -0.4980, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6028e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3185e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2154e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2554, -0.4397, -0.4646, -0.4764, -0.4835, -0.4882, -0.4914, -0.4937,
        -0.4952, -0.4963, -0.4970, -0.4976, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6028e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5181e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1827, -1.1828, -1.1829, -1.1830, -1.1830, -1.1830, -1.1830, -1.1830,
        -1.1830, -1.1831], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 0 	 H2 	 H2 	 2.935236468704996e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780945
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7373], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345315
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5252], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1612], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7373], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5252], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 9 	 HN2O 	 HON2 	 0.0009841724173859174

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446964
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.3647418491967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7309], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0493], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4552], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7309], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 11 	 HF2 	 HF2 	 0.0010468143861662646

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4927, -109.8987, -109.7527, -109.6755, -109.6260, -109.5921,
        -109.5685, -109.5520, -109.5405, -109.5324, -109.5267, -109.5227,
        -109.5199, -109.5180, -109.5166, -109.5157, -109.5150, -109.5145,
        -109.5142, -109.5140, -109.5138, -109.5137, -109.5136, -109.5136,
        -109.5135], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018903
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2549e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4192, -54.4846, -54.5165, -54.5355, -54.5484, -54.5577, -54.5643,
        -54.5690, -54.5724, -54.5747, -54.5764, -54.5776, -54.5784, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0442e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4581, -54.5206, -54.5422, -54.5541, -54.5619, -54.5673, -54.5712,
        -54.5739, -54.5758, -54.5772, -54.5781, -54.5788, -54.5792, -54.5796,
        -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8103e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5157, -109.5150, -109.5145, -109.5142, -109.5140, -109.5138,
        -109.5137, -109.5136, -109.5136, -109.5135], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5800, -54.5801, -54.5802, -54.5802, -54.5803, -54.5803, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 1 	 N2 	 N2 	 2.8748370767484677e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3427, -107.3460, -107.2954, -107.2801, -107.2703, -107.2639,
        -107.2597, -107.2570, -107.2553, -107.2544, -107.2541, -107.2541,
        -107.2544, -107.2547, -107.2551, -107.2556, -107.2560, -107.2564,
        -107.2567, -107.2570, -107.2572, -107.2574, -107.2576, -107.2577,
        -107.2579], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4891e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4734, -7.4791, -7.4808, -7.4813, -7.4819, -7.4825, -7.4824, -7.4818,
        -7.4815, -7.4815, -7.4815, -7.4815, -7.4816, -7.4816, -7.4817, -7.4817,
        -7.4817, -7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1691e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4547e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6851, -99.7066, -99.7151, -99.7201, -99.7235, -99.7259, -99.7276,
        -99.7288, -99.7297, -99.7303, -99.7308, -99.7311, -99.7313, -99.7315,
        -99.7316, -99.7317, -99.7317, -99.7317, -99.7318, -99.7318, -99.7318,
        -99.7318, -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0051e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2556, -107.2560, -107.2564, -107.2567, -107.2570, -107.2572,
        -107.2574, -107.2576, -107.2577, -107.2579], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7317, -99.7317, -99.7317, -99.7318, -99.7318, -99.7318, -99.7318,
        -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 2 	 FLi 	 LiF 	 0.007431706160760691

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9565, -93.5254, -93.4138, -93.3654, -93.3309, -93.3087, -93.2928,
        -93.2818, -93.2740, -93.2684, -93.2645, -93.2617, -93.2597, -93.2582,
        -93.2572, -93.2564, -93.2559, -93.2555, -93.2552, -93.2550, -93.2549,
        -93.2548, -93.2547, -93.2546, -93.2546], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633894
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3894e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7650, -37.8007, -37.8127, -37.8193, -37.8237, -37.8267, -37.8289,
        -37.8304, -37.8315, -37.8322, -37.8328, -37.8331, -37.8334, -37.8336,
        -37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6122e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4226, -54.4898, -54.5202, -54.5382, -54.5504, -54.5590, -54.5652,
        -54.5695, -54.5727, -54.5748, -54.5764, -54.5775, -54.5783, -54.5788,
        -54.5792, -54.5794, -54.5796, -54.5798, -54.5798, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3805e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3286, -0.4605, -0.4763, -0.4839, -0.4886, -0.4917, -0.4938, -0.4953,
        -0.4964, -0.4971, -0.4976, -0.4979, -0.4982, -0.4983, -0.4985, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5960e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3715e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2564, -93.2559, -93.2555, -93.2552, -93.2550, -93.2549, -93.2548,
        -93.2547, -93.2546, -93.2546], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8338, -37.8339, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5794, -54.5796, -54.5798, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 3 	 CHN 	 CNH 	 0.005790942298814396

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4169, -54.4808, -54.5134, -54.5330, -54.5465, -54.5561, -54.5630,
        -54.5679, -54.5714, -54.5738, -54.5756, -54.5768, -54.5777, -54.5783,
        -54.5787, -54.5790, -54.5792, -54.5794, -54.5795, -54.5795, -54.5796,
        -54.5796, -54.5796, -54.5797, -54.5797], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9299e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9299e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5790, -54.5792, -54.5794, -54.5795, -54.5795, -54.5796, -54.5796,
        -54.5796, -54.5797, -54.5797], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 8 	 N 	 N 	 2.1293808442107923e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4724, -7.4783, -7.4804, -7.4810, -7.4815, -7.4822, -7.4824, -7.4819,
        -7.4815, -7.4813, -7.4813, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816,
        -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1326e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2665e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 7 	 Li 	 Li 	 3.0109732550148257e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21Li
SUBMOLECULES: ['Li', 'Li']
SUBMOLECULE INDICES: [21, 20]
================================
Subsetting Dataset with molecules[ 21Li]:  ,[21, 20]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,21
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1981], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1981], dtype=torch.float64)
E_PRED: tensor([-7.4722, -7.4781, -7.4803, -7.4810, -7.4814, -7.4821, -7.4824, -7.4819,
        -7.4815, -7.4813, -7.4813, -7.4814, -7.4814, -7.4815, -7.4815, -7.4815,
        -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-0.19814840281092005
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 1. A -> A
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,20
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-7.4323, -7.3507, -7.3253, -7.3121, -7.3036, -7.2980, -7.2941, -7.2915,
        -7.2897, -7.2885, -7.2877, -7.2871, -7.2867, -7.2864, -7.2862, -7.2861,
        -7.2860, -7.2860, -7.2859, -7.2859, -7.2859, -7.2859, -7.2859, -7.2858,
        -7.2858], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 12246])
ao_eval   ---   torch.Size([1, 10, 12246, 39])
grid_weights   ---   torch.Size([1, 12246])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AA': tensor([-0.1981], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AA': tensor([-7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-7.2861, -7.2860, -7.2860, -7.2859, -7.2859, -7.2859, -7.2859, -7.2859,
        -7.2858, -7.2858], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 13 	 Li 	 Li 	 1.308592603395142e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6828, -99.7042, -99.7130, -99.7182, -99.7217, -99.7242, -99.7260,
        -99.7273, -99.7282, -99.7289, -99.7293, -99.7297, -99.7299, -99.7301,
        -99.7302, -99.7303, -99.7303, -99.7304, -99.7304, -99.7304, -99.7304,
        -99.7304, -99.7304, -99.7304, -99.7304], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3371e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3371e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7303, -99.7303, -99.7304, -99.7304, -99.7304, -99.7304, -99.7304,
        -99.7304, -99.7304, -99.7304], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 5 	 F 	 F 	 2.797145526036463e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e33)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e33/2022-12-13_14:45:44.617772_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/17/MODEL_MGGA_e33/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 33 || ,[' rho : 2.713109', ' ae : 45.380622', ' E : 1.668354'] ,|| total loss 33.210159 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4704, -7.4754, -7.4785, -7.4802, -7.4809, -7.4813, -7.4820, -7.4824,
        -7.4820, -7.4815, -7.4813, -7.4813, -7.4813, -7.4814, -7.4815, -7.4815,
        -7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1078e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3259e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2170e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4815, -7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 7 	 Li 	 Li 	 2.9609284700944e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION

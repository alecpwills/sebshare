{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/08",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/06/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": false,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "chkptmax": 20
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3], '  4COO': [4], '  5ClCl': [5]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [6], 'Cl': [7], 'F': [8], 'H': [9], 'Li': [10], 'N': [11], 'O': [12]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{}
MOLECULES TO TRAIN ON
{'  0HH': [0, 9, 9], '  1NN': [1, 11, 11], '  2LiF': [2, 10, 8], '  3CNH': [3, 6, 11, 9], '  4COO': [4, 6, 12, 12], '  5ClCl': [5, 7, 7], 'C': [6], 'Cl': [7], 'F': [8], 'H': [9], 'Li': [10], 'N': [11], 'O': [12]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 3, 7: 2, 8: 2, 9: 3, 10: 2, 11: 3, 12: 2}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0306, -188.6692, -188.5954, -188.5612, -188.5395, -188.5247,
        -188.5145, -188.5074, -188.5024, -188.4989, -188.4964, -188.4947,
        -188.4935, -188.4927, -188.4921, -188.4917, -188.4914, -188.4912,
        -188.4910, -188.4909, -188.4909, -188.4908, -188.4908, -188.4908,
        -188.4907], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1893e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7491, -37.7892, -37.8044, -37.8130, -37.8187, -37.8227, -37.8256,
        -37.8276, -37.8290, -37.8300, -37.8307, -37.8312, -37.8316, -37.8318,
        -37.8320, -37.8321, -37.8322, -37.8323, -37.8323, -37.8323, -37.8324,
        -37.8324, -37.8324, -37.8324, -37.8324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8168e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1389, -460.1613, -460.1679, -460.1714, -460.1737, -460.1753,
        -460.1765, -460.1773, -460.1778, -460.1782, -460.1785, -460.1787,
        -460.1788, -460.1789, -460.1790, -460.1790, -460.1791, -460.1791,
        -460.1791, -460.1791, -460.1791, -460.1791, -460.1791, -460.1791,
        -460.1791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(0.0001, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0277e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1790, -460.1791, -460.1791, -460.1791, -460.1791, -460.1791,
        -460.1791, -460.1791, -460.1791, -460.1791], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 Cl 	 Cl 	 0.00022659914382686013

PASSTHROUGH -- Cl DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4607, -93.4037, -93.3884, -93.3821, -93.3785, -93.3761, -93.3745,
        -93.3734, -93.3726, -93.3720, -93.3716, -93.3713, -93.3711, -93.3710,
        -93.3709, -93.3708, -93.3708, -93.3708, -93.3707, -93.3707, -93.3707,
        -93.3707, -93.3707, -93.3707, -93.3707], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0665e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7585, -37.7966, -37.8095, -37.8166, -37.8213, -37.8246, -37.8269,
        -37.8285, -37.8297, -37.8305, -37.8311, -37.8315, -37.8317, -37.8319,
        -37.8321, -37.8322, -37.8322, -37.8323, -37.8323, -37.8323, -37.8324,
        -37.8324, -37.8324, -37.8324, -37.8324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7814e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3025, -0.4546, -0.4734, -0.4825, -0.4880, -0.4916, -0.4942, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4816e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7642, -37.8002, -37.8120, -37.8184, -37.8226, -37.8255, -37.8275,
        -37.8290, -37.8300, -37.8307, -37.8312, -37.8316, -37.8318, -37.8320,
        -37.8321, -37.8322, -37.8323, -37.8323, -37.8323, -37.8324, -37.8324,
        -37.8324, -37.8324, -37.8324, -37.8324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7651e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7651e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8322, -37.8323, -37.8323, -37.8323, -37.8324, -37.8324, -37.8324,
        -37.8324, -37.8324, -37.8324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 6 	 C 	 C 	 1.539018714914428e-05

PASSTHROUGH -- C DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2612, -107.3363, -107.3624, -107.3774, -107.3869, -107.3934,
        -107.3978, -107.4010, -107.4032, -107.4047, -107.4058, -107.4066,
        -107.4071, -107.4075, -107.4077, -107.4079, -107.4080, -107.4081,
        -107.4082, -107.4082, -107.4083, -107.4083, -107.4083, -107.4083,
        -107.4083], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4060e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6539, -109.5366, -109.5053, -109.4893, -109.4791, -109.4722,
        -109.4674, -109.4640, -109.4617, -109.4600, -109.4589, -109.4581,
        -109.4575, -109.4571, -109.4568, -109.4566, -109.4565, -109.4564,
        -109.4563, -109.4563, -109.4563, -109.4562, -109.4562, -109.4562,
        -109.4562], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5234e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4665, -7.4733, -7.4755, -7.4766, -7.4774, -7.4783, -7.4789, -7.4789,
        -7.4786, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2244e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2244e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 Li 	 Li 	 5.179550311540005e-08

PASSTHROUGH -- Li DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3491, -0.4668, -0.4804, -0.4870, -0.4910, -0.4937, -0.4956, -0.4969,
        -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.8344e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8344e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 H 	 H 	 2.8829927704645185e-09

PASSTHROUGH -- H DONE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4933, -920.4443, -920.4306, -920.4235, -920.4190, -920.4159,
        -920.4137, -920.4122, -920.4111, -920.4104, -920.4099, -920.4095,
        -920.4093, -920.4091, -920.4090, -920.4089, -920.4088, -920.4088,
        -920.4088, -920.4087, -920.4087, -920.4087, -920.4087, -920.4087,
        -920.4087], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1108e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1235, -460.1525, -460.1621, -460.1674, -460.1708, -460.1733,
        -460.1750, -460.1762, -460.1771, -460.1777, -460.1781, -460.1784,
        -460.1786, -460.1788, -460.1789, -460.1790, -460.1790, -460.1791,
        -460.1791, -460.1791, -460.1791, -460.1791, -460.1791, -460.1791,
        -460.1791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(0.0001, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4089, -920.4088, -920.4088, -920.4088, -920.4087, -920.4087,
        -920.4087, -920.4087, -920.4087, -920.4087], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1790, -460.1790, -460.1791, -460.1791, -460.1791, -460.1791,
        -460.1791, -460.1791, -460.1791, -460.1791], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 Cl2 	 Cl2 	 0.00045482380309189754

PASSTHROUGH -- Cl2 DONE.
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0071, -1.1041, -1.1290, -1.1417, -1.1498, -1.1552, -1.1590, -1.1616,
        -1.1635, -1.1648, -1.1656, -1.1663, -1.1667, -1.1670, -1.1672, -1.1674,
        -1.1675, -1.1676, -1.1676, -1.1677, -1.1677, -1.1677, -1.1677, -1.1677,
        -1.1677], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2724, -0.4462, -0.4687, -0.4794, -0.4859, -0.4902, -0.4932, -0.4952,
        -0.4966, -0.4976, -0.4983, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9751e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1674, -1.1675, -1.1676, -1.1676, -1.1677, -1.1677, -1.1677, -1.1677,
        -1.1677, -1.1677], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 9.547292173496706e-06

PASSTHROUGH -- H2 DONE.
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 0, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 0, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 0, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 0, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 0, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 0, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 0, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e00/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 6.074926', ' ae : 10.424934', ' E : 4.111720'] ,|| total loss 21.243492 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2290, -107.3213, -107.3529, -107.3711, -107.3825, -107.3903,
        -107.3957, -107.3995, -107.4021, -107.4040, -107.4053, -107.4062,
        -107.4068, -107.4073, -107.4076, -107.4078, -107.4080, -107.4081,
        -107.4082, -107.4082, -107.4082, -107.4083, -107.4083, -107.4083,
        -107.4083], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4060e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4641, -7.4715, -7.4743, -7.4758, -7.4767, -7.4776, -7.4784, -7.4789,
        -7.4788, -7.4786, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1913e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1913e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 Li 	 Li 	 5.1280363361533455e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8277, -188.6082, -188.5590, -188.5352, -188.5201, -188.5099,
        -188.5028, -188.4978, -188.4943, -188.4919, -188.4902, -188.4890,
        -188.4882, -188.4876, -188.4872, -188.4869, -188.4867, -188.4865,
        -188.4864, -188.4864, -188.4863, -188.4863, -188.4863, -188.4863,
        -188.4862], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1864e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7521, -37.7917, -37.8058, -37.8137, -37.8189, -37.8226, -37.8252,
        -37.8270, -37.8283, -37.8292, -37.8298, -37.8303, -37.8306, -37.8308,
        -37.8310, -37.8311, -37.8312, -37.8312, -37.8313, -37.8313, -37.8313,
        -37.8313, -37.8313, -37.8313, -37.8313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1084e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2194, -0.4302, -0.4598, -0.4737, -0.4821, -0.4876, -0.4914, -0.4939,
        -0.4957, -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1784e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1784e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 H 	 H 	 5.183362131654516e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6260, -109.5225, -109.4950, -109.4809, -109.4720, -109.4659,
        -109.4617, -109.4587, -109.4567, -109.4552, -109.4542, -109.4535,
        -109.4530, -109.4527, -109.4524, -109.4522, -109.4521, -109.4520,
        -109.4520, -109.4519, -109.4519, -109.4519, -109.4519, -109.4519,
        -109.4519], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5130e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1239, -460.1490, -460.1567, -460.1609, -460.1636, -460.1655,
        -460.1669, -460.1678, -460.1685, -460.1690, -460.1693, -460.1695,
        -460.1697, -460.1698, -460.1699, -460.1699, -460.1700, -460.1700,
        -460.1700, -460.1700, -460.1701, -460.1701, -460.1701, -460.1701,
        -460.1701], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1515e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1515e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1699, -460.1700, -460.1700, -460.1700, -460.1700, -460.1701,
        -460.1701, -460.1701, -460.1701, -460.1701], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 Cl 	 Cl 	 0.00011380094301345251

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7442, -37.7845, -37.8004, -37.8094, -37.8154, -37.8197, -37.8227,
        -37.8248, -37.8264, -37.8274, -37.8282, -37.8287, -37.8291, -37.8293,
        -37.8295, -37.8296, -37.8297, -37.8298, -37.8298, -37.8299, -37.8299,
        -37.8299, -37.8299, -37.8299, -37.8299], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.1170e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1170e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8296, -37.8297, -37.8298, -37.8298, -37.8299, -37.8299, -37.8299,
        -37.8299, -37.8299, -37.8299], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 6 	 C 	 C 	 2.612769810140929e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4613, -93.3990, -93.3822, -93.3754, -93.3716, -93.3691, -93.3674,
        -93.3662, -93.3654, -93.3648, -93.3644, -93.3641, -93.3639, -93.3637,
        -93.3636, -93.3636, -93.3635, -93.3635, -93.3635, -93.3634, -93.3634,
        -93.3634, -93.3634, -93.3634, -93.3634], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7441, -37.7843, -37.8001, -37.8091, -37.8151, -37.8193, -37.8223,
        -37.8244, -37.8259, -37.8269, -37.8277, -37.8282, -37.8286, -37.8288,
        -37.8290, -37.8291, -37.8292, -37.8293, -37.8293, -37.8294, -37.8294,
        -37.8294, -37.8294, -37.8294, -37.8294], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9203e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3330, -0.4626, -0.4780, -0.4854, -0.4899, -0.4930, -0.4951, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4996, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2854e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0077, -1.1040, -1.1287, -1.1414, -1.1494, -1.1548, -1.1585, -1.1612,
        -1.1630, -1.1642, -1.1651, -1.1658, -1.1662, -1.1665, -1.1667, -1.1669,
        -1.1670, -1.1670, -1.1671, -1.1671, -1.1672, -1.1672, -1.1672, -1.1672,
        -1.1672], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3438, -0.4654, -0.4795, -0.4864, -0.4906, -0.4934, -0.4954, -0.4967,
        -0.4977, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1535e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1669, -1.1670, -1.1670, -1.1671, -1.1671, -1.1672, -1.1672, -1.1672,
        -1.1672, -1.1672], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 1.0769121900878771e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4471, -920.4003, -920.3873, -920.3806, -920.3763, -920.3733,
        -920.3713, -920.3698, -920.3688, -920.3681, -920.3676, -920.3673,
        -920.3671, -920.3669, -920.3668, -920.3667, -920.3666, -920.3666,
        -920.3666, -920.3665, -920.3665, -920.3665, -920.3665, -920.3665,
        -920.3665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0987e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0994, -460.1295, -460.1398, -460.1454, -460.1491, -460.1517,
        -460.1536, -460.1549, -460.1558, -460.1565, -460.1569, -460.1573,
        -460.1575, -460.1577, -460.1578, -460.1578, -460.1579, -460.1579,
        -460.1580, -460.1580, -460.1580, -460.1580, -460.1580, -460.1580,
        -460.1580], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0529e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3667, -920.3666, -920.3666, -920.3666, -920.3665, -920.3665,
        -920.3665, -920.3665, -920.3665, -920.3665], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1578, -460.1579, -460.1579, -460.1580, -460.1580, -460.1580,
        -460.1580, -460.1580, -460.1580, -460.1580], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 Cl2 	 Cl2 	 0.00045400648296489265

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 1, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 1, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 1, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 1, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 1, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 1, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 1, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e01)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e01/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e01/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 6.073793', ' ae : 9.645730', ' E : 2.561077'] ,|| total loss 21.059135 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2325, -107.3177, -107.3469, -107.3638, -107.3744, -107.3817,
        -107.3867, -107.3902, -107.3927, -107.3944, -107.3956, -107.3965,
        -107.3971, -107.3975, -107.3978, -107.3980, -107.3981, -107.3982,
        -107.3983, -107.3983, -107.3984, -107.3984, -107.3984, -107.3984,
        -107.3984], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3794e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4656, -920.4057, -920.3887, -920.3797, -920.3740, -920.3701,
        -920.3674, -920.3655, -920.3642, -920.3632, -920.3626, -920.3621,
        -920.3618, -920.3616, -920.3614, -920.3613, -920.3612, -920.3612,
        -920.3611, -920.3611, -920.3611, -920.3611, -920.3611, -920.3611,
        -920.3610], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0959e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1099, -460.1346, -460.1422, -460.1463, -460.1490, -460.1508,
        -460.1522, -460.1531, -460.1537, -460.1542, -460.1545, -460.1548,
        -460.1549, -460.1550, -460.1551, -460.1552, -460.1552, -460.1552,
        -460.1552, -460.1553, -460.1553, -460.1553, -460.1553, -460.1553,
        -460.1553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5637e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3613, -920.3612, -920.3612, -920.3611, -920.3611, -920.3611,
        -920.3611, -920.3611, -920.3611, -920.3610], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1552, -460.1552, -460.1552, -460.1552, -460.1553, -460.1553,
        -460.1553, -460.1553, -460.1553, -460.1553], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 Cl2 	 Cl2 	 0.0004535389761518279

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4655, -7.4722, -7.4743, -7.4754, -7.4762, -7.4771, -7.4776, -7.4775,
        -7.4773, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4772,
        -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772,
        -7.4772], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8602e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8602e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772,
        -7.4772, -7.4772], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 Li 	 Li 	 1.663322498393179e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7521, -37.7908, -37.8042, -37.8116, -37.8165, -37.8199, -37.8223,
        -37.8240, -37.8252, -37.8261, -37.8267, -37.8271, -37.8274, -37.8276,
        -37.8277, -37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1177e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1177e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 6 	 C 	 C 	 3.628231946340917e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0884, -460.1192, -460.1299, -460.1358, -460.1397, -460.1425,
        -460.1444, -460.1458, -460.1468, -460.1475, -460.1480, -460.1483,
        -460.1485, -460.1487, -460.1488, -460.1489, -460.1490, -460.1490,
        -460.1490, -460.1491, -460.1491, -460.1491, -460.1491, -460.1491,
        -460.1491], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2122e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2122e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1489, -460.1490, -460.1490, -460.1490, -460.1491, -460.1491,
        -460.1491, -460.1491, -460.1491, -460.1491], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 Cl 	 Cl 	 2.785516433753009e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6363, -109.5218, -109.4914, -109.4757, -109.4658, -109.4591,
        -109.4544, -109.4511, -109.4488, -109.4472, -109.4461, -109.4453,
        -109.4447, -109.4444, -109.4441, -109.4439, -109.4438, -109.4437,
        -109.4436, -109.4436, -109.4435, -109.4435, -109.4435, -109.4435,
        -109.4435], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4907e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0094, -188.6481, -188.5742, -188.5399, -188.5181, -188.5033,
        -188.4931, -188.4859, -188.4809, -188.4774, -188.4749, -188.4732,
        -188.4720, -188.4712, -188.4706, -188.4702, -188.4699, -188.4697,
        -188.4696, -188.4695, -188.4694, -188.4693, -188.4693, -188.4693,
        -188.4693], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1790e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7509, -37.7899, -37.8034, -37.8109, -37.8159, -37.8194, -37.8219,
        -37.8236, -37.8248, -37.8257, -37.8263, -37.8267, -37.8270, -37.8272,
        -37.8274, -37.8275, -37.8275, -37.8276, -37.8276, -37.8277, -37.8277,
        -37.8277, -37.8277, -37.8277, -37.8277], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1807e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9742, -1.0907, -1.1206, -1.1358, -1.1455, -1.1520, -1.1565, -1.1597,
        -1.1619, -1.1634, -1.1645, -1.1652, -1.1658, -1.1661, -1.1664, -1.1666,
        -1.1667, -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1670, -1.1670,
        -1.1670], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2149, -0.4288, -0.4590, -0.4731, -0.4817, -0.4873, -0.4911, -0.4938,
        -0.4956, -0.4968, -0.4977, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6656e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1666, -1.1667, -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1670,
        -1.1670, -1.1670], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 1.1187306663835049e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2345, -0.4349, -0.4623, -0.4753, -0.4831, -0.4883, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2075e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2075e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 H 	 H 	 1.2639193276905625e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4398, -93.3886, -93.3749, -93.3690, -93.3657, -93.3634, -93.3619,
        -93.3608, -93.3600, -93.3595, -93.3591, -93.3589, -93.3587, -93.3586,
        -93.3585, -93.3584, -93.3584, -93.3583, -93.3583, -93.3583, -93.3583,
        -93.3583, -93.3583, -93.3583, -93.3583], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0437e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7398, -37.7798, -37.7963, -37.8058, -37.8122, -37.8166, -37.8198,
        -37.8221, -37.8237, -37.8248, -37.8256, -37.8262, -37.8265, -37.8268,
        -37.8270, -37.8272, -37.8272, -37.8273, -37.8274, -37.8274, -37.8274,
        -37.8274, -37.8274, -37.8275, -37.8275], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2322e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3344, -0.4630, -0.4781, -0.4855, -0.4900, -0.4930, -0.4951, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4451e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 2, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 2, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 2, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 2, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 2, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 2, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 2, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e02)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e02/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e02/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 6.069538', ' ae : 8.783430', ' E : 1.779194'] ,|| total loss 20.868274 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0391, -1.1162, -1.1361, -1.1463, -1.1527, -1.1570, -1.1600, -1.1621,
        -1.1636, -1.1646, -1.1653, -1.1658, -1.1662, -1.1664, -1.1666, -1.1667,
        -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1669, -1.1670, -1.1670,
        -1.1670], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3202, -0.4593, -0.4760, -0.4841, -0.4891, -0.4924, -0.4946, -0.4962,
        -0.4973, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6389e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1667, -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1669, -1.1670,
        -1.1670, -1.1670], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 1.1221902091459533e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3064, -0.4556, -0.4739, -0.4827, -0.4881, -0.4917, -0.4942, -0.4959,
        -0.4970, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8542e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8542e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 H 	 H 	 1.2477580240917605e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4742, -920.3973, -920.3743, -920.3622, -920.3544, -920.3491,
        -920.3454, -920.3428, -920.3410, -920.3397, -920.3388, -920.3382,
        -920.3377, -920.3374, -920.3372, -920.3371, -920.3370, -920.3369,
        -920.3368, -920.3368, -920.3368, -920.3367, -920.3367, -920.3367,
        -920.3367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0792e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0834, -460.1138, -460.1243, -460.1300, -460.1338, -460.1365,
        -460.1384, -460.1398, -460.1407, -460.1414, -460.1419, -460.1422,
        -460.1425, -460.1426, -460.1428, -460.1428, -460.1429, -460.1429,
        -460.1430, -460.1430, -460.1430, -460.1430, -460.1430, -460.1430,
        -460.1430], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7386e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3371, -920.3370, -920.3369, -920.3368, -920.3368, -920.3368,
        -920.3367, -920.3367, -920.3367, -920.3367], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1428, -460.1429, -460.1429, -460.1430, -460.1430, -460.1430,
        -460.1430, -460.1430, -460.1430, -460.1430], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 Cl2 	 Cl2 	 0.0004489016313914099

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4420, -93.3889, -93.3746, -93.3686, -93.3652, -93.3629, -93.3613,
        -93.3602, -93.3594, -93.3589, -93.3585, -93.3583, -93.3581, -93.3579,
        -93.3579, -93.3578, -93.3577, -93.3577, -93.3577, -93.3577, -93.3577,
        -93.3577, -93.3577, -93.3576, -93.3576], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0423e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7430, -37.7832, -37.7987, -37.8074, -37.8133, -37.8174, -37.8203,
        -37.8224, -37.8238, -37.8248, -37.8256, -37.8261, -37.8264, -37.8267,
        -37.8269, -37.8270, -37.8271, -37.8271, -37.8272, -37.8272, -37.8272,
        -37.8272, -37.8272, -37.8272, -37.8273], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2677e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2393, -0.4363, -0.4632, -0.4758, -0.4835, -0.4885, -0.4920, -0.4943,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1450e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2211, -107.3101, -107.3405, -107.3581, -107.3691, -107.3767,
        -107.3819, -107.3855, -107.3881, -107.3899, -107.3912, -107.3920,
        -107.3927, -107.3931, -107.3934, -107.3936, -107.3937, -107.3939,
        -107.3939, -107.3940, -107.3940, -107.3940, -107.3941, -107.3941,
        -107.3941], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1043, -460.1255, -460.1317, -460.1350, -460.1371, -460.1386,
        -460.1397, -460.1404, -460.1409, -460.1413, -460.1416, -460.1417,
        -460.1419, -460.1419, -460.1420, -460.1421, -460.1421, -460.1421,
        -460.1421, -460.1421, -460.1421, -460.1421, -460.1421, -460.1421,
        -460.1422], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6938e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6938e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1421, -460.1421, -460.1421, -460.1421, -460.1421, -460.1421,
        -460.1421, -460.1421, -460.1421, -460.1422], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 Cl 	 Cl 	 8.005072579425907e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7418, -37.7821, -37.7979, -37.8069, -37.8129, -37.8171, -37.8201,
        -37.8223, -37.8238, -37.8248, -37.8256, -37.8261, -37.8265, -37.8267,
        -37.8269, -37.8270, -37.8271, -37.8272, -37.8272, -37.8273, -37.8273,
        -37.8273, -37.8273, -37.8273, -37.8273], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2532e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2532e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8270, -37.8271, -37.8272, -37.8272, -37.8273, -37.8273, -37.8273,
        -37.8273, -37.8273, -37.8273], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 6 	 C 	 C 	 4.055030914132309e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6081, -109.5096, -109.4836, -109.4702, -109.4617, -109.4559,
        -109.4519, -109.4491, -109.4471, -109.4458, -109.4448, -109.4441,
        -109.4437, -109.4433, -109.4431, -109.4430, -109.4428, -109.4428,
        -109.4427, -109.4427, -109.4426, -109.4426, -109.4426, -109.4426,
        -109.4426], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4869e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4611, -7.4680, -7.4714, -7.4734, -7.4746, -7.4755, -7.4764, -7.4772,
        -7.4775, -7.4774, -7.4771, -7.4770, -7.4770, -7.4770, -7.4770, -7.4770,
        -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771,
        -7.4771], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.6336e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6336e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4770, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771, -7.4771,
        -7.4771, -7.4771], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 Li 	 Li 	 2.0158656338642225e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9448, -188.6299, -188.5635, -188.5323, -188.5125, -188.4991,
        -188.4897, -188.4832, -188.4786, -188.4755, -188.4732, -188.4717,
        -188.4706, -188.4698, -188.4693, -188.4689, -188.4686, -188.4684,
        -188.4683, -188.4682, -188.4682, -188.4681, -188.4681, -188.4681,
        -188.4681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1802e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7534, -37.7916, -37.8046, -37.8118, -37.8165, -37.8198, -37.8221,
        -37.8238, -37.8249, -37.8257, -37.8263, -37.8267, -37.8270, -37.8272,
        -37.8273, -37.8274, -37.8275, -37.8275, -37.8276, -37.8276, -37.8276,
        -37.8276, -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1904e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 3, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 3, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 3, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 3, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 3, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 3, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 3, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 6.067060', ' ae : 8.848233', ' E : 1.833614'] ,|| total loss 20.874852 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2615, -107.3294, -107.3531, -107.3668, -107.3754, -107.3813,
        -107.3854, -107.3882, -107.3902, -107.3916, -107.3926, -107.3933,
        -107.3938, -107.3941, -107.3944, -107.3945, -107.3947, -107.3947,
        -107.3948, -107.3948, -107.3949, -107.3949, -107.3949, -107.3949,
        -107.3949], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3646e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9910, -188.6424, -188.5705, -188.5370, -188.5158, -188.5013,
        -188.4913, -188.4843, -188.4794, -188.4760, -188.4736, -188.4719,
        -188.4708, -188.4699, -188.4694, -188.4690, -188.4687, -188.4685,
        -188.4683, -188.4682, -188.4682, -188.4681, -188.4681, -188.4681,
        -188.4681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1802e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7442, -37.7844, -37.7996, -37.8082, -37.8140, -37.8180, -37.8208,
        -37.8228, -37.8243, -37.8253, -37.8260, -37.8265, -37.8268, -37.8271,
        -37.8272, -37.8274, -37.8275, -37.8275, -37.8276, -37.8276, -37.8276,
        -37.8276, -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1955e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2406, -0.4367, -0.4634, -0.4759, -0.4836, -0.4886, -0.4920, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0789e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0789e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 H 	 H 	 1.2791916187241102e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4630, -7.4704, -7.4731, -7.4746, -7.4755, -7.4764, -7.4772, -7.4777,
        -7.4775, -7.4773, -7.4772, -7.4771, -7.4771, -7.4771, -7.4772, -7.4772,
        -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4773, -7.4773, -7.4773,
        -7.4773], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1428e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1428e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4772, -7.4773, -7.4773,
        -7.4773, -7.4773], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 Li 	 Li 	 1.4987257263892663e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9798, -1.0930, -1.1220, -1.1368, -1.1462, -1.1526, -1.1570, -1.1600,
        -1.1622, -1.1637, -1.1647, -1.1654, -1.1659, -1.1663, -1.1665, -1.1667,
        -1.1668, -1.1669, -1.1670, -1.1670, -1.1671, -1.1671, -1.1671, -1.1671,
        -1.1671], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3359, -0.4634, -0.4784, -0.4856, -0.4901, -0.4931, -0.4951, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4022e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1667, -1.1668, -1.1669, -1.1670, -1.1670, -1.1671, -1.1671, -1.1671,
        -1.1671, -1.1671], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 1.0795031872708287e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4801, -93.4015, -93.3802, -93.3723, -93.3682, -93.3655, -93.3637,
        -93.3624, -93.3615, -93.3609, -93.3604, -93.3601, -93.3599, -93.3597,
        -93.3596, -93.3596, -93.3595, -93.3595, -93.3594, -93.3594, -93.3594,
        -93.3594, -93.3594, -93.3594, -93.3594], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0449e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7394, -37.7793, -37.7961, -37.8058, -37.8123, -37.8169, -37.8202,
        -37.8225, -37.8241, -37.8253, -37.8261, -37.8267, -37.8271, -37.8274,
        -37.8276, -37.8277, -37.8278, -37.8279, -37.8279, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1280e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3203, -0.4593, -0.4760, -0.4841, -0.4891, -0.4924, -0.4946, -0.4962,
        -0.4973, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6018e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7486, -37.7882, -37.8024, -37.8103, -37.8156, -37.8192, -37.8218,
        -37.8237, -37.8250, -37.8259, -37.8265, -37.8270, -37.8273, -37.8275,
        -37.8277, -37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1214e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1214e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 6 	 C 	 C 	 3.635495789909431e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1016, -460.1256, -460.1329, -460.1368, -460.1394, -460.1412,
        -460.1424, -460.1433, -460.1440, -460.1444, -460.1447, -460.1449,
        -460.1451, -460.1452, -460.1453, -460.1453, -460.1453, -460.1454,
        -460.1454, -460.1454, -460.1454, -460.1454, -460.1454, -460.1454,
        -460.1454], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3580e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3580e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1453, -460.1453, -460.1454, -460.1454, -460.1454, -460.1454,
        -460.1454, -460.1454, -460.1454, -460.1454], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 Cl 	 Cl 	 1.5486955627032998e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4801, -920.4038, -920.3811, -920.3692, -920.3615, -920.3562,
        -920.3525, -920.3500, -920.3481, -920.3469, -920.3460, -920.3454,
        -920.3449, -920.3446, -920.3444, -920.3443, -920.3442, -920.3441,
        -920.3440, -920.3440, -920.3440, -920.3440, -920.3440, -920.3440,
        -920.3439], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0723e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0874, -460.1176, -460.1280, -460.1337, -460.1375, -460.1401,
        -460.1420, -460.1434, -460.1443, -460.1450, -460.1454, -460.1458,
        -460.1460, -460.1462, -460.1463, -460.1464, -460.1464, -460.1465,
        -460.1465, -460.1465, -460.1465, -460.1465, -460.1465, -460.1465,
        -460.1465], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6135e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3443, -920.3442, -920.3441, -920.3440, -920.3440, -920.3440,
        -920.3440, -920.3440, -920.3440, -920.3439], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1464, -460.1464, -460.1465, -460.1465, -460.1465, -460.1465,
        -460.1465, -460.1465, -460.1465, -460.1465], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 Cl2 	 Cl2 	 0.0004455748150651733

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7512, -109.5710, -109.5224, -109.4973, -109.4814, -109.4706,
        -109.4630, -109.4578, -109.4541, -109.4515, -109.4497, -109.4485,
        -109.4476, -109.4470, -109.4465, -109.4462, -109.4460, -109.4459,
        -109.4458, -109.4457, -109.4456, -109.4456, -109.4456, -109.4456,
        -109.4456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4928e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 4, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 4, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 4, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 4, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 4, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 4, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 4, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e04)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e04/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e04/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 6.066004', ' ae : 8.721646', ' E : 1.654350'] ,|| total loss 20.838431 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1098, -460.1309, -460.1371, -460.1404, -460.1425, -460.1440,
        -460.1450, -460.1458, -460.1463, -460.1467, -460.1469, -460.1471,
        -460.1472, -460.1473, -460.1474, -460.1474, -460.1474, -460.1475,
        -460.1475, -460.1475, -460.1475, -460.1475, -460.1475, -460.1475,
        -460.1475], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2944e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2944e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1474, -460.1474, -460.1475, -460.1475, -460.1475, -460.1475,
        -460.1475, -460.1475, -460.1475, -460.1475], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 Cl 	 Cl 	 5.5776534960677837e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0156, -1.1071, -1.1307, -1.1428, -1.1504, -1.1555, -1.1591, -1.1616,
        -1.1633, -1.1645, -1.1654, -1.1660, -1.1664, -1.1667, -1.1669, -1.1670,
        -1.1671, -1.1672, -1.1672, -1.1673, -1.1673, -1.1673, -1.1673, -1.1673,
        -1.1673], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3229, -0.4600, -0.4764, -0.4844, -0.4893, -0.4925, -0.4947, -0.4963,
        -0.4973, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4935e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1670, -1.1671, -1.1672, -1.1672, -1.1673, -1.1673, -1.1673, -1.1673,
        -1.1673, -1.1673], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 1.0175418771119356e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4842, -93.4045, -93.3828, -93.3749, -93.3708, -93.3681, -93.3663,
        -93.3650, -93.3641, -93.3634, -93.3630, -93.3627, -93.3625, -93.3623,
        -93.3622, -93.3621, -93.3621, -93.3620, -93.3620, -93.3620, -93.3620,
        -93.3620, -93.3620, -93.3620, -93.3620], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0490e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7388, -37.7780, -37.7955, -37.8056, -37.8125, -37.8173, -37.8208,
        -37.8233, -37.8250, -37.8262, -37.8271, -37.8277, -37.8282, -37.8285,
        -37.8287, -37.8288, -37.8289, -37.8290, -37.8290, -37.8291, -37.8291,
        -37.8291, -37.8291, -37.8291, -37.8291], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3984e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3073, -0.4559, -0.4741, -0.4829, -0.4882, -0.4918, -0.4942, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7023e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8618, -188.6102, -188.5550, -188.5285, -188.5117, -188.5002,
        -188.4923, -188.4868, -188.4829, -188.4802, -188.4783, -188.4770,
        -188.4761, -188.4754, -188.4750, -188.4747, -188.4744, -188.4743,
        -188.4742, -188.4741, -188.4740, -188.4740, -188.4740, -188.4740,
        -188.4739], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1847e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7611, -37.7971, -37.8088, -37.8152, -37.8193, -37.8223, -37.8243,
        -37.8257, -37.8268, -37.8275, -37.8280, -37.8283, -37.8286, -37.8288,
        -37.8289, -37.8290, -37.8290, -37.8291, -37.8291, -37.8291, -37.8291,
        -37.8291, -37.8291, -37.8291, -37.8291], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.2721e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3055, -0.4554, -0.4738, -0.4827, -0.4881, -0.4917, -0.4942, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7291e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7291e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 H 	 H 	 9.261016942942451e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4620, -7.4690, -7.4724, -7.4743, -7.4755, -7.4764, -7.4772, -7.4781,
        -7.4784, -7.4782, -7.4779, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778,
        -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9626e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9626e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4778, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779, -7.4779], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 Li 	 Li 	 4.0879366597734785e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6238, -109.5191, -109.4913, -109.4770, -109.4679, -109.4618,
        -109.4575, -109.4545, -109.4524, -109.4510, -109.4500, -109.4492,
        -109.4487, -109.4484, -109.4481, -109.4480, -109.4478, -109.4478,
        -109.4477, -109.4477, -109.4476, -109.4476, -109.4476, -109.4476,
        -109.4476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4970e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7608, -37.7971, -37.8089, -37.8154, -37.8196, -37.8225, -37.8246,
        -37.8261, -37.8271, -37.8278, -37.8283, -37.8287, -37.8290, -37.8291,
        -37.8293, -37.8293, -37.8294, -37.8294, -37.8295, -37.8295, -37.8295,
        -37.8295, -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.6568e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6568e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8293, -37.8294, -37.8294, -37.8295, -37.8295, -37.8295, -37.8295,
        -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 6 	 C 	 C 	 2.8115827345045705e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4697, -920.4046, -920.3858, -920.3759, -920.3696, -920.3653,
        -920.3623, -920.3602, -920.3587, -920.3577, -920.3570, -920.3565,
        -920.3561, -920.3559, -920.3557, -920.3556, -920.3555, -920.3554,
        -920.3554, -920.3553, -920.3553, -920.3553, -920.3553, -920.3553,
        -920.3553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0696e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1009, -460.1281, -460.1368, -460.1416, -460.1447, -460.1469,
        -460.1485, -460.1496, -460.1503, -460.1509, -460.1513, -460.1515,
        -460.1517, -460.1519, -460.1519, -460.1520, -460.1521, -460.1521,
        -460.1521, -460.1521, -460.1521, -460.1521, -460.1522, -460.1522,
        -460.1522], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7891e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3556, -920.3555, -920.3554, -920.3554, -920.3553, -920.3553,
        -920.3553, -920.3553, -920.3553, -920.3553], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1520, -460.1521, -460.1521, -460.1521, -460.1521, -460.1521,
        -460.1521, -460.1522, -460.1522, -460.1522], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 Cl2 	 Cl2 	 0.00044336298644757444

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2504, -107.3270, -107.3536, -107.3689, -107.3785, -107.3851,
        -107.3897, -107.3928, -107.3951, -107.3967, -107.3978, -107.3985,
        -107.3991, -107.3994, -107.3997, -107.3999, -107.4000, -107.4001,
        -107.4002, -107.4002, -107.4003, -107.4003, -107.4003, -107.4003,
        -107.4003], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3734e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 5, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 5, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 5, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 5, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 5, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 5, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 5, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e05/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 6.066153', ' ae : 8.608791', ' E : 1.498758'] ,|| total loss 20.807781 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9618, -1.0862, -1.1181, -1.1344, -1.1447, -1.1516, -1.1564, -1.1598,
        -1.1621, -1.1638, -1.1649, -1.1657, -1.1663, -1.1667, -1.1670, -1.1671,
        -1.1673, -1.1674, -1.1674, -1.1675, -1.1675, -1.1675, -1.1676, -1.1676,
        -1.1676], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3385, -0.4641, -0.4788, -0.4859, -0.4903, -0.4932, -0.4952, -0.4966,
        -0.4976, -0.4983, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2139e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1671, -1.1673, -1.1674, -1.1674, -1.1675, -1.1675, -1.1675, -1.1676,
        -1.1676, -1.1676], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 9.633320339866098e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4926, -920.4175, -920.3952, -920.3835, -920.3760, -920.3709,
        -920.3673, -920.3647, -920.3630, -920.3617, -920.3609, -920.3603,
        -920.3598, -920.3595, -920.3593, -920.3592, -920.3591, -920.3590,
        -920.3590, -920.3589, -920.3589, -920.3589, -920.3589, -920.3589,
        -920.3589], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0682e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0978, -460.1269, -460.1367, -460.1420, -460.1455, -460.1480,
        -460.1497, -460.1510, -460.1518, -460.1525, -460.1529, -460.1532,
        -460.1534, -460.1536, -460.1537, -460.1538, -460.1538, -460.1538,
        -460.1539, -460.1539, -460.1539, -460.1539, -460.1539, -460.1539,
        -460.1539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6412e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3592, -920.3591, -920.3590, -920.3590, -920.3589, -920.3589,
        -920.3589, -920.3589, -920.3589, -920.3589], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1538, -460.1538, -460.1538, -460.1539, -460.1539, -460.1539,
        -460.1539, -460.1539, -460.1539, -460.1539], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 Cl2 	 Cl2 	 0.0004420534281026488

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4624, -7.4692, -7.4726, -7.4746, -7.4758, -7.4767, -7.4776, -7.4784,
        -7.4788, -7.4787, -7.4784, -7.4783, -7.4782, -7.4782, -7.4782, -7.4783,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784, -7.4784,
        -7.4784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0664e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0664e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 Li 	 Li 	 2.1326956513775446e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6312, -109.5236, -109.4950, -109.4803, -109.4710, -109.4647,
        -109.4603, -109.4572, -109.4551, -109.4536, -109.4525, -109.4518,
        -109.4513, -109.4509, -109.4507, -109.4505, -109.4504, -109.4503,
        -109.4502, -109.4502, -109.4501, -109.4501, -109.4501, -109.4501,
        -109.4501], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5022e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9198, -188.6311, -188.5692, -188.5399, -188.5213, -188.5086,
        -188.4999, -188.4938, -188.4895, -188.4865, -188.4844, -188.4829,
        -188.4819, -188.4812, -188.4807, -188.4803, -188.4801, -188.4799,
        -188.4798, -188.4797, -188.4796, -188.4796, -188.4796, -188.4795,
        -188.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1894e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7489, -37.7888, -37.8036, -37.8119, -37.8174, -37.8213, -37.8240,
        -37.8259, -37.8273, -37.8283, -37.8290, -37.8294, -37.8298, -37.8300,
        -37.8302, -37.8303, -37.8304, -37.8304, -37.8305, -37.8305, -37.8305,
        -37.8305, -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2013e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0969, -460.1268, -460.1371, -460.1427, -460.1464, -460.1490,
        -460.1509, -460.1522, -460.1531, -460.1538, -460.1543, -460.1546,
        -460.1548, -460.1550, -460.1551, -460.1552, -460.1552, -460.1553,
        -460.1553, -460.1553, -460.1553, -460.1553, -460.1553, -460.1553,
        -460.1553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6177e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6177e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1552, -460.1552, -460.1553, -460.1553, -460.1553, -460.1553,
        -460.1553, -460.1553, -460.1553, -460.1553], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 Cl 	 Cl 	 1.2577604110962565e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7425, -37.7826, -37.7991, -37.8087, -37.8151, -37.8196, -37.8228,
        -37.8251, -37.8267, -37.8278, -37.8286, -37.8292, -37.8296, -37.8298,
        -37.8300, -37.8302, -37.8303, -37.8303, -37.8304, -37.8304, -37.8304,
        -37.8305, -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3204e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3204e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8302, -37.8303, -37.8303, -37.8304, -37.8304, -37.8304, -37.8305,
        -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 6 	 C 	 C 	 2.3484430420004845e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2198, -107.3134, -107.3454, -107.3637, -107.3753, -107.3832,
        -107.3886, -107.3924, -107.3951, -107.3970, -107.3983, -107.3992,
        -107.3999, -107.4003, -107.4006, -107.4009, -107.4010, -107.4011,
        -107.4012, -107.4013, -107.4013, -107.4013, -107.4013, -107.4014,
        -107.4014], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3739e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2343, -0.4348, -0.4623, -0.4753, -0.4831, -0.4883, -0.4918, -0.4943,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9723e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9723e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 H 	 H 	 7.69052370508332e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4632, -93.4006, -93.3838, -93.3770, -93.3732, -93.3708, -93.3690,
        -93.3678, -93.3670, -93.3664, -93.3660, -93.3657, -93.3655, -93.3654,
        -93.3653, -93.3652, -93.3652, -93.3651, -93.3651, -93.3651, -93.3651,
        -93.3651, -93.3651, -93.3651, -93.3650], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0538e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7526, -37.7918, -37.8057, -37.8134, -37.8185, -37.8220, -37.8245,
        -37.8263, -37.8276, -37.8284, -37.8291, -37.8295, -37.8298, -37.8300,
        -37.8302, -37.8303, -37.8304, -37.8304, -37.8304, -37.8305, -37.8305,
        -37.8305, -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2140e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2981, -0.4534, -0.4727, -0.4820, -0.4876, -0.4914, -0.4940, -0.4957,
        -0.4970, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7508e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 6, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 6, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 6, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 6, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 6, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 6, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 6, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 6.065937', ' ae : 8.662721', ' E : 1.545788'] ,|| total loss 20.812264 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0121, -1.1060, -1.1302, -1.1426, -1.1504, -1.1556, -1.1593, -1.1618,
        -1.1636, -1.1649, -1.1657, -1.1663, -1.1668, -1.1671, -1.1673, -1.1674,
        -1.1675, -1.1676, -1.1676, -1.1677, -1.1677, -1.1677, -1.1677, -1.1677,
        -1.1677], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2439, -0.4378, -0.4640, -0.4763, -0.4838, -0.4888, -0.4922, -0.4945,
        -0.4961, -0.4972, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7599e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1674, -1.1675, -1.1676, -1.1676, -1.1677, -1.1677, -1.1677, -1.1677,
        -1.1677, -1.1677], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 9.148251887167704e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8392, -188.6070, -188.5553, -188.5304, -188.5146, -188.5039,
        -188.4964, -188.4912, -188.4876, -188.4850, -188.4833, -188.4820,
        -188.4811, -188.4805, -188.4801, -188.4798, -188.4796, -188.4794,
        -188.4793, -188.4793, -188.4792, -188.4792, -188.4792, -188.4791,
        -188.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1903e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7532, -37.7922, -37.8060, -37.8136, -37.8186, -37.8222, -37.8246,
        -37.8264, -37.8276, -37.8285, -37.8291, -37.8296, -37.8299, -37.8301,
        -37.8302, -37.8303, -37.8304, -37.8305, -37.8305, -37.8305, -37.8305,
        -37.8306, -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1433e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7231, -109.5617, -109.5184, -109.4961, -109.4819, -109.4722,
        -109.4655, -109.4608, -109.4576, -109.4553, -109.4537, -109.4526,
        -109.4518, -109.4512, -109.4508, -109.4506, -109.4504, -109.4502,
        -109.4502, -109.4501, -109.4500, -109.4500, -109.4500, -109.4500,
        -109.4500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5009e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2265, -107.3165, -107.3473, -107.3650, -107.3762, -107.3838,
        -107.3891, -107.3927, -107.3953, -107.3971, -107.3984, -107.3993,
        -107.3999, -107.4004, -107.4007, -107.4009, -107.4010, -107.4011,
        -107.4012, -107.4013, -107.4013, -107.4013, -107.4013, -107.4013,
        -107.4014], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3727e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4628, -93.4005, -93.3838, -93.3770, -93.3733, -93.3708, -93.3691,
        -93.3679, -93.3671, -93.3665, -93.3661, -93.3658, -93.3656, -93.3654,
        -93.3653, -93.3653, -93.3652, -93.3652, -93.3652, -93.3652, -93.3651,
        -93.3651, -93.3651, -93.3651, -93.3651], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0539e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7409, -37.7804, -37.7976, -37.8076, -37.8143, -37.8191, -37.8224,
        -37.8248, -37.8265, -37.8277, -37.8286, -37.8292, -37.8296, -37.8299,
        -37.8301, -37.8302, -37.8303, -37.8304, -37.8305, -37.8305, -37.8305,
        -37.8305, -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2154e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3343, -0.4630, -0.4782, -0.4855, -0.4900, -0.4930, -0.4951, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2372e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0915, -460.1227, -460.1337, -460.1397, -460.1437, -460.1465,
        -460.1485, -460.1499, -460.1510, -460.1517, -460.1522, -460.1525,
        -460.1528, -460.1529, -460.1531, -460.1532, -460.1532, -460.1533,
        -460.1533, -460.1533, -460.1533, -460.1533, -460.1533, -460.1533,
        -460.1533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9561e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9561e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1532, -460.1532, -460.1533, -460.1533, -460.1533, -460.1533,
        -460.1533, -460.1533, -460.1533, -460.1533], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 Cl 	 Cl 	 6.6685330034797545e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2197, -0.4303, -0.4598, -0.4737, -0.4821, -0.4876, -0.4913, -0.4939,
        -0.4957, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3309e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3309e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 H 	 H 	 8.095971084203811e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4404, -920.3898, -920.3756, -920.3683, -920.3636, -920.3604,
        -920.3582, -920.3566, -920.3555, -920.3547, -920.3542, -920.3538,
        -920.3536, -920.3534, -920.3533, -920.3532, -920.3531, -920.3531,
        -920.3530, -920.3530, -920.3530, -920.3530, -920.3530, -920.3530,
        -920.3530], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0565e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0941, -460.1235, -460.1333, -460.1387, -460.1423, -460.1448,
        -460.1466, -460.1478, -460.1487, -460.1494, -460.1498, -460.1501,
        -460.1503, -460.1505, -460.1506, -460.1507, -460.1507, -460.1508,
        -460.1508, -460.1508, -460.1508, -460.1508, -460.1508, -460.1508,
        -460.1509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3007e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3532, -920.3531, -920.3531, -920.3530, -920.3530, -920.3530,
        -920.3530, -920.3530, -920.3530, -920.3530], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1507, -460.1507, -460.1508, -460.1508, -460.1508, -460.1508,
        -460.1508, -460.1508, -460.1508, -460.1509], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 Cl2 	 Cl2 	 0.0004375902578895984

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7564, -37.7945, -37.8074, -37.8145, -37.8192, -37.8225, -37.8248,
        -37.8264, -37.8276, -37.8284, -37.8289, -37.8293, -37.8296, -37.8298,
        -37.8300, -37.8300, -37.8301, -37.8302, -37.8302, -37.8302, -37.8302,
        -37.8302, -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5697e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5697e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8300, -37.8301, -37.8302, -37.8302, -37.8302, -37.8302, -37.8302,
        -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 6 	 C 	 C 	 2.4505408446088715e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4648, -7.4722, -7.4748, -7.4761, -7.4770, -7.4779, -7.4787, -7.4790,
        -7.4788, -7.4786, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1792e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1792e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 Li 	 Li 	 5.060033322005976e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 7, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 7, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 7, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 7, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 7, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 7, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 7, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e07)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e07/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e07/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 6.064082', ' ae : 8.575198', ' E : 1.409027'] ,|| total loss 20.783778 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4627, -93.3998, -93.3828, -93.3760, -93.3723, -93.3698, -93.3680,
        -93.3668, -93.3660, -93.3654, -93.3650, -93.3647, -93.3645, -93.3644,
        -93.3643, -93.3642, -93.3642, -93.3641, -93.3641, -93.3641, -93.3641,
        -93.3641, -93.3641, -93.3640, -93.3640], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0517e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7440, -37.7842, -37.8002, -37.8094, -37.8155, -37.8198, -37.8229,
        -37.8251, -37.8266, -37.8277, -37.8284, -37.8290, -37.8294, -37.8296,
        -37.8298, -37.8299, -37.8300, -37.8301, -37.8301, -37.8302, -37.8302,
        -37.8302, -37.8302, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6909e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3187, -0.4589, -0.4758, -0.4840, -0.4890, -0.4923, -0.4946, -0.4962,
        -0.4973, -0.4980, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4856e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7399, -109.5681, -109.5218, -109.4980, -109.4828, -109.4725,
        -109.4654, -109.4604, -109.4569, -109.4544, -109.4527, -109.4515,
        -109.4507, -109.4501, -109.4497, -109.4494, -109.4492, -109.4491,
        -109.4490, -109.4489, -109.4488, -109.4488, -109.4488, -109.4488,
        -109.4488], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4966e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4791, -920.4053, -920.3835, -920.3721, -920.3647, -920.3597,
        -920.3562, -920.3537, -920.3520, -920.3508, -920.3499, -920.3493,
        -920.3489, -920.3486, -920.3484, -920.3483, -920.3482, -920.3481,
        -920.3481, -920.3480, -920.3480, -920.3480, -920.3480, -920.3480,
        -920.3480], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0512e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1050, -460.1287, -460.1359, -460.1398, -460.1424, -460.1441,
        -460.1454, -460.1462, -460.1469, -460.1473, -460.1476, -460.1478,
        -460.1480, -460.1481, -460.1481, -460.1482, -460.1482, -460.1482,
        -460.1483, -460.1483, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1419e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3483, -920.3482, -920.3481, -920.3481, -920.3480, -920.3480,
        -920.3480, -920.3480, -920.3480, -920.3480], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1482, -460.1482, -460.1482, -460.1483, -460.1483, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 Cl2 	 Cl2 	 0.000435752793152327

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1079, -460.1300, -460.1365, -460.1400, -460.1423, -460.1439,
        -460.1450, -460.1458, -460.1463, -460.1467, -460.1470, -460.1472,
        -460.1473, -460.1474, -460.1475, -460.1475, -460.1476, -460.1476,
        -460.1476, -460.1476, -460.1476, -460.1476, -460.1476, -460.1476,
        -460.1476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1474e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1474e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1475, -460.1476, -460.1476, -460.1476, -460.1476, -460.1476,
        -460.1476, -460.1476, -460.1476, -460.1476], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 Cl 	 Cl 	 3.134894491602166e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9694, -188.6427, -188.5744, -188.5424, -188.5221, -188.5083,
        -188.4987, -188.4920, -188.4873, -188.4840, -188.4818, -188.4802,
        -188.4790, -188.4782, -188.4777, -188.4773, -188.4770, -188.4769,
        -188.4767, -188.4766, -188.4766, -188.4765, -188.4765, -188.4765,
        -188.4765], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1910e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7380, -37.7760, -37.7942, -37.8050, -37.8123, -37.8175, -37.8212,
        -37.8238, -37.8257, -37.8270, -37.8280, -37.8286, -37.8291, -37.8294,
        -37.8296, -37.8298, -37.8299, -37.8300, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8306e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2582, -107.3304, -107.3555, -107.3700, -107.3791, -107.3853,
        -107.3897, -107.3927, -107.3948, -107.3963, -107.3973, -107.3981,
        -107.3986, -107.3989, -107.3992, -107.3993, -107.3995, -107.3996,
        -107.3996, -107.3997, -107.3997, -107.3997, -107.3997, -107.3997,
        -107.3997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3648e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3363, -0.4635, -0.4784, -0.4857, -0.4901, -0.4931, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4996, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2612e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2612e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 H 	 H 	 8.068044794674025e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7502, -37.7899, -37.8042, -37.8122, -37.8175, -37.8212, -37.8239,
        -37.8257, -37.8271, -37.8280, -37.8286, -37.8291, -37.8294, -37.8296,
        -37.8298, -37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7669e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7669e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 6 	 C 	 C 	 2.5076688730886553e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9734, -1.0909, -1.1210, -1.1364, -1.1462, -1.1527, -1.1573, -1.1605,
        -1.1627, -1.1642, -1.1653, -1.1661, -1.1666, -1.1670, -1.1672, -1.1674,
        -1.1675, -1.1676, -1.1677, -1.1677, -1.1678, -1.1678, -1.1678, -1.1678,
        -1.1678], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2592, -0.4423, -0.4665, -0.4780, -0.4849, -0.4895, -0.4927, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5010e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1674, -1.1675, -1.1676, -1.1677, -1.1677, -1.1678, -1.1678, -1.1678,
        -1.1678, -1.1678], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 8.876962523274093e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4665, -7.4734, -7.4756, -7.4767, -7.4776, -7.4785, -7.4791, -7.4791,
        -7.4788, -7.4786, -7.4786, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6545e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6545e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 Li 	 Li 	 8.368983464660524e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 8, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 8, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 8, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 8, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 8, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 8, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 8, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e08/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 6.061871', ' ae : 8.501851', ' E : 1.341938'] ,|| total loss 20.760787 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2468, -107.3252, -107.3522, -107.3679, -107.3778, -107.3845,
        -107.3891, -107.3924, -107.3947, -107.3963, -107.3974, -107.3982,
        -107.3987, -107.3991, -107.3994, -107.3996, -107.3997, -107.3998,
        -107.3999, -107.3999, -107.3999, -107.4000, -107.4000, -107.4000,
        -107.4000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3634e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9664, -1.0882, -1.1194, -1.1353, -1.1454, -1.1523, -1.1570, -1.1603,
        -1.1625, -1.1641, -1.1653, -1.1661, -1.1666, -1.1670, -1.1673, -1.1674,
        -1.1676, -1.1677, -1.1677, -1.1678, -1.1678, -1.1678, -1.1678, -1.1679,
        -1.1679], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3098, -0.4565, -0.4745, -0.4831, -0.4884, -0.4919, -0.4943, -0.4960,
        -0.4971, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6158e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1674, -1.1676, -1.1677, -1.1677, -1.1678, -1.1678, -1.1678, -1.1678,
        -1.1679, -1.1679], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 8.753797930335122e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7421, -37.7820, -37.7987, -37.8084, -37.8148, -37.8194, -37.8227,
        -37.8250, -37.8266, -37.8278, -37.8286, -37.8292, -37.8296, -37.8298,
        -37.8300, -37.8302, -37.8303, -37.8303, -37.8304, -37.8304, -37.8304,
        -37.8305, -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3249e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3249e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8302, -37.8303, -37.8303, -37.8304, -37.8304, -37.8304, -37.8305,
        -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 6 	 C 	 C 	 2.3488356039641216e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4579, -93.3988, -93.3829, -93.3764, -93.3728, -93.3704, -93.3687,
        -93.3675, -93.3667, -93.3662, -93.3658, -93.3655, -93.3653, -93.3651,
        -93.3650, -93.3650, -93.3649, -93.3649, -93.3649, -93.3649, -93.3648,
        -93.3648, -93.3648, -93.3648, -93.3648], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0527e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7382, -37.7758, -37.7943, -37.8051, -37.8126, -37.8178, -37.8216,
        -37.8242, -37.8261, -37.8275, -37.8284, -37.8291, -37.8296, -37.8299,
        -37.8301, -37.8303, -37.8304, -37.8305, -37.8305, -37.8306, -37.8306,
        -37.8306, -37.8306, -37.8306, -37.8307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1190e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2328, -0.4344, -0.4621, -0.4751, -0.4830, -0.4882, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0389e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9074, -188.6264, -188.5659, -188.5371, -188.5188, -188.5064,
        -188.4978, -188.4918, -188.4876, -188.4847, -188.4826, -188.4812,
        -188.4802, -188.4795, -188.4790, -188.4786, -188.4784, -188.4782,
        -188.4781, -188.4780, -188.4780, -188.4779, -188.4779, -188.4779,
        -188.4779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1933e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7559, -37.7943, -37.8074, -37.8146, -37.8194, -37.8227, -37.8251,
        -37.8267, -37.8279, -37.8287, -37.8293, -37.8297, -37.8300, -37.8302,
        -37.8303, -37.8304, -37.8305, -37.8306, -37.8306, -37.8306, -37.8306,
        -37.8306, -37.8307, -37.8307, -37.8307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0045e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4458, -920.3881, -920.3717, -920.3632, -920.3578, -920.3540,
        -920.3514, -920.3496, -920.3483, -920.3474, -920.3468, -920.3464,
        -920.3461, -920.3459, -920.3457, -920.3456, -920.3455, -920.3455,
        -920.3454, -920.3454, -920.3454, -920.3454, -920.3454, -920.3454,
        -920.3454], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0405e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1020, -460.1265, -460.1340, -460.1380, -460.1407, -460.1425,
        -460.1438, -460.1447, -460.1454, -460.1458, -460.1462, -460.1464,
        -460.1465, -460.1466, -460.1467, -460.1468, -460.1468, -460.1468,
        -460.1469, -460.1469, -460.1469, -460.1469, -460.1469, -460.1469,
        -460.1469], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4606e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3456, -920.3455, -920.3455, -920.3454, -920.3454, -920.3454,
        -920.3454, -920.3454, -920.3454, -920.3454], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1468, -460.1468, -460.1468, -460.1469, -460.1469, -460.1469,
        -460.1469, -460.1469, -460.1469, -460.1469], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 Cl2 	 Cl2 	 0.00043135671528233275

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2616, -0.4430, -0.4669, -0.4782, -0.4851, -0.4897, -0.4928, -0.4949,
        -0.4964, -0.4974, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4173e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4173e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 H 	 H 	 7.934900004725502e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4638, -7.4712, -7.4742, -7.4759, -7.4770, -7.4778, -7.4787, -7.4794,
        -7.4795, -7.4792, -7.4790, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9260e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9260e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 Li 	 Li 	 2.02156941607294e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7305, -109.5651, -109.5206, -109.4977, -109.4831, -109.4732,
        -109.4664, -109.4616, -109.4582, -109.4559, -109.4542, -109.4531,
        -109.4523, -109.4517, -109.4513, -109.4510, -109.4508, -109.4507,
        -109.4506, -109.4505, -109.4505, -109.4504, -109.4504, -109.4504,
        -109.4504], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.4982e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0914, -460.1205, -460.1303, -460.1357, -460.1392, -460.1417,
        -460.1435, -460.1447, -460.1456, -460.1462, -460.1467, -460.1470,
        -460.1472, -460.1473, -460.1474, -460.1475, -460.1476, -460.1476,
        -460.1476, -460.1476, -460.1477, -460.1477, -460.1477, -460.1477,
        -460.1477], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5752e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5752e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1475, -460.1476, -460.1476, -460.1476, -460.1476, -460.1477,
        -460.1477, -460.1477, -460.1477, -460.1477], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 Cl 	 Cl 	 2.4267466600205265e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 9, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 9, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 9, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 9, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 9, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 9, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 9, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e09/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 6.061093', ' ae : 8.447423', ' E : 1.294371'] ,|| total loss 20.743838 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9216, -188.6317, -188.5696, -188.5402, -188.5215, -188.5088,
        -188.5000, -188.4939, -188.4896, -188.4866, -188.4845, -188.4830,
        -188.4820, -188.4812, -188.4807, -188.4804, -188.4801, -188.4800,
        -188.4798, -188.4798, -188.4797, -188.4797, -188.4796, -188.4796,
        -188.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1953e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7530, -37.7923, -37.8062, -37.8139, -37.8190, -37.8226, -37.8251,
        -37.8269, -37.8282, -37.8291, -37.8297, -37.8301, -37.8304, -37.8307,
        -37.8308, -37.8309, -37.8310, -37.8310, -37.8311, -37.8311, -37.8311,
        -37.8311, -37.8311, -37.8312, -37.8312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3379e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7549, -37.7937, -37.8071, -37.8146, -37.8195, -37.8230, -37.8254,
        -37.8271, -37.8283, -37.8292, -37.8298, -37.8302, -37.8305, -37.8307,
        -37.8308, -37.8309, -37.8310, -37.8310, -37.8311, -37.8311, -37.8311,
        -37.8311, -37.8311, -37.8312, -37.8312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3304e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3304e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8309, -37.8310, -37.8310, -37.8311, -37.8311, -37.8311, -37.8311,
        -37.8311, -37.8312, -37.8312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 6 	 C 	 C 	 2.0429732204832668e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9809, -1.0940, -1.1231, -1.1379, -1.1473, -1.1536, -1.1580, -1.1610,
        -1.1632, -1.1647, -1.1657, -1.1664, -1.1670, -1.1673, -1.1676, -1.1677,
        -1.1679, -1.1679, -1.1680, -1.1680, -1.1681, -1.1681, -1.1681, -1.1681,
        -1.1681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2459, -0.4384, -0.4643, -0.4766, -0.4840, -0.4889, -0.4922, -0.4945,
        -0.4961, -0.4973, -0.4980, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7025e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1677, -1.1679, -1.1679, -1.1680, -1.1680, -1.1681, -1.1681, -1.1681,
        -1.1681, -1.1681], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 8.068734992954089e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2351, -0.4351, -0.4625, -0.4754, -0.4832, -0.4884, -0.4919, -0.4943,
        -0.4960, -0.4971, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9258e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9258e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 H 	 H 	 7.142424281857114e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4719, -93.4046, -93.3865, -93.3794, -93.3756, -93.3730, -93.3712,
        -93.3700, -93.3691, -93.3685, -93.3681, -93.3678, -93.3676, -93.3675,
        -93.3674, -93.3673, -93.3672, -93.3672, -93.3672, -93.3672, -93.3672,
        -93.3672, -93.3671, -93.3671, -93.3671], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0563e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7540, -37.7931, -37.8069, -37.8146, -37.8197, -37.8232, -37.8257,
        -37.8275, -37.8288, -37.8296, -37.8303, -37.8307, -37.8310, -37.8312,
        -37.8314, -37.8315, -37.8315, -37.8316, -37.8316, -37.8317, -37.8317,
        -37.8317, -37.8317, -37.8317, -37.8317], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6178e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2323, -0.4342, -0.4620, -0.4751, -0.4830, -0.4882, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9766e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4435, -920.3901, -920.3752, -920.3674, -920.3624, -920.3590,
        -920.3566, -920.3550, -920.3538, -920.3530, -920.3524, -920.3520,
        -920.3517, -920.3515, -920.3514, -920.3513, -920.3512, -920.3512,
        -920.3512, -920.3511, -920.3511, -920.3511, -920.3511, -920.3511,
        -920.3511], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0338e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1057, -460.1297, -460.1371, -460.1410, -460.1436, -460.1454,
        -460.1467, -460.1476, -460.1482, -460.1486, -460.1490, -460.1492,
        -460.1493, -460.1494, -460.1495, -460.1496, -460.1496, -460.1496,
        -460.1496, -460.1497, -460.1497, -460.1497, -460.1497, -460.1497,
        -460.1497], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8756e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3513, -920.3512, -920.3512, -920.3512, -920.3511, -920.3511,
        -920.3511, -920.3511, -920.3511, -920.3511], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1496, -460.1496, -460.1496, -460.1496, -460.1497, -460.1497,
        -460.1497, -460.1497, -460.1497, -460.1497], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 Cl2 	 Cl2 	 0.0004282460886367046

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7221, -109.5626, -109.5198, -109.4978, -109.4838, -109.4743,
        -109.4677, -109.4630, -109.4598, -109.4576, -109.4560, -109.4549,
        -109.4541, -109.4535, -109.4532, -109.4529, -109.4527, -109.4526,
        -109.4525, -109.4524, -109.4524, -109.4523, -109.4523, -109.4523,
        -109.4523], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5017e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2243, -107.3164, -107.3479, -107.3660, -107.3774, -107.3851,
        -107.3905, -107.3942, -107.3969, -107.3987, -107.4000, -107.4009,
        -107.4016, -107.4020, -107.4023, -107.4025, -107.4027, -107.4028,
        -107.4029, -107.4029, -107.4030, -107.4030, -107.4030, -107.4030,
        -107.4030], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3657e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0998, -460.1266, -460.1351, -460.1398, -460.1429, -460.1450,
        -460.1465, -460.1476, -460.1483, -460.1489, -460.1492, -460.1495,
        -460.1497, -460.1498, -460.1499, -460.1500, -460.1500, -460.1501,
        -460.1501, -460.1501, -460.1501, -460.1501, -460.1501, -460.1501,
        -460.1501], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5825e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5825e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1500, -460.1500, -460.1501, -460.1501, -460.1501, -460.1501,
        -460.1501, -460.1501, -460.1501, -460.1501], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 Cl 	 Cl 	 1.0497204383580644e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4661, -7.4734, -7.4759, -7.4772, -7.4781, -7.4789, -7.4797, -7.4800,
        -7.4798, -7.4795, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0685e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0685e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4794, -7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 Li 	 Li 	 4.630663481961208e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 10, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 10, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 10, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 10, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 10, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 10, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 10, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e10/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 6.060082', ' ae : 8.396561', ' E : 1.219229'] ,|| total loss 20.723304 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4571, -93.4005, -93.3853, -93.3790, -93.3754, -93.3731, -93.3715,
        -93.3703, -93.3695, -93.3690, -93.3686, -93.3683, -93.3681, -93.3680,
        -93.3679, -93.3678, -93.3678, -93.3677, -93.3677, -93.3677, -93.3677,
        -93.3677, -93.3677, -93.3677, -93.3677], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0571e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7398, -37.7777, -37.7960, -37.8067, -37.8141, -37.8193, -37.8230,
        -37.8256, -37.8275, -37.8288, -37.8298, -37.8304, -37.8309, -37.8312,
        -37.8314, -37.8316, -37.8317, -37.8318, -37.8318, -37.8319, -37.8319,
        -37.8319, -37.8319, -37.8319, -37.8320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3942e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3109, -0.4569, -0.4747, -0.4832, -0.4885, -0.4920, -0.4944, -0.4960,
        -0.4972, -0.4980, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5078e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6633, -109.5383, -109.5049, -109.4878, -109.4770, -109.4696,
        -109.4644, -109.4608, -109.4583, -109.4566, -109.4553, -109.4545,
        -109.4539, -109.4535, -109.4532, -109.4530, -109.4528, -109.4527,
        -109.4526, -109.4526, -109.4526, -109.4525, -109.4525, -109.4525,
        -109.4525], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5018e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1091, -460.1317, -460.1384, -460.1420, -460.1444, -460.1460,
        -460.1472, -460.1480, -460.1486, -460.1490, -460.1493, -460.1495,
        -460.1496, -460.1497, -460.1498, -460.1498, -460.1498, -460.1499,
        -460.1499, -460.1499, -460.1499, -460.1499, -460.1499, -460.1499,
        -460.1499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7464e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7464e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1498, -460.1498, -460.1499, -460.1499, -460.1499, -460.1499,
        -460.1499, -460.1499, -460.1499, -460.1499], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 Cl 	 Cl 	 8.541729256749058e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2923, -107.3484, -107.3682, -107.3796, -107.3868, -107.3917,
        -107.3951, -107.3975, -107.3992, -107.4003, -107.4012, -107.4017,
        -107.4021, -107.4024, -107.4026, -107.4028, -107.4029, -107.4029,
        -107.4030, -107.4030, -107.4030, -107.4031, -107.4031, -107.4031,
        -107.4031], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3646e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7391, -37.7761, -37.7948, -37.8059, -37.8134, -37.8188, -37.8226,
        -37.8254, -37.8273, -37.8287, -37.8297, -37.8303, -37.8308, -37.8312,
        -37.8314, -37.8316, -37.8317, -37.8318, -37.8318, -37.8319, -37.8319,
        -37.8319, -37.8319, -37.8319, -37.8319], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.4294e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4294e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8316, -37.8317, -37.8318, -37.8318, -37.8319, -37.8319, -37.8319,
        -37.8319, -37.8319, -37.8319], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 6 	 C 	 C 	 1.7193428030129925e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9254, -188.6348, -188.5726, -188.5431, -188.5244, -188.5116,
        -188.5028, -188.4967, -188.4924, -188.4894, -188.4872, -188.4858,
        -188.4847, -188.4840, -188.4835, -188.4832, -188.4829, -188.4827,
        -188.4826, -188.4825, -188.4825, -188.4824, -188.4824, -188.4824,
        -188.4824], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1987e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7399, -37.7779, -37.7961, -37.8069, -37.8142, -37.8193, -37.8230,
        -37.8257, -37.8276, -37.8289, -37.8298, -37.8305, -37.8309, -37.8312,
        -37.8315, -37.8316, -37.8317, -37.8318, -37.8319, -37.8319, -37.8319,
        -37.8320, -37.8320, -37.8320, -37.8320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3531e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4636, -7.4702, -7.4737, -7.4757, -7.4770, -7.4779, -7.4787, -7.4796,
        -7.4800, -7.4799, -7.4797, -7.4795, -7.4794, -7.4794, -7.4794, -7.4795,
        -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4796], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3067e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3067e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4796], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 Li 	 Li 	 5.170276976260949e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2718, -0.4460, -0.4686, -0.4793, -0.4858, -0.4902, -0.4931, -0.4952,
        -0.4966, -0.4976, -0.4983, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1523e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1523e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 H 	 H 	 6.391887527149367e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4767, -920.4048, -920.3837, -920.3727, -920.3656, -920.3607,
        -920.3573, -920.3549, -920.3533, -920.3521, -920.3513, -920.3507,
        -920.3503, -920.3500, -920.3498, -920.3497, -920.3496, -920.3495,
        -920.3495, -920.3495, -920.3494, -920.3494, -920.3494, -920.3494,
        -920.3494], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0260e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0972, -460.1244, -460.1333, -460.1381, -460.1412, -460.1434,
        -460.1450, -460.1461, -460.1469, -460.1475, -460.1478, -460.1481,
        -460.1483, -460.1484, -460.1485, -460.1486, -460.1486, -460.1487,
        -460.1487, -460.1487, -460.1487, -460.1487, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6926e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3497, -920.3496, -920.3495, -920.3495, -920.3495, -920.3494,
        -920.3494, -920.3494, -920.3494, -920.3494], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1486, -460.1486, -460.1487, -460.1487, -460.1487, -460.1487,
        -460.1487, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 Cl2 	 Cl2 	 0.0004246620988981705

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0277, -1.1125, -1.1344, -1.1456, -1.1527, -1.1574, -1.1607, -1.1630,
        -1.1646, -1.1658, -1.1666, -1.1671, -1.1675, -1.1678, -1.1679, -1.1681,
        -1.1682, -1.1682, -1.1683, -1.1683, -1.1683, -1.1683, -1.1684, -1.1684,
        -1.1684], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3461, -0.4660, -0.4799, -0.4866, -0.4908, -0.4936, -0.4955, -0.4968,
        -0.4977, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0531e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1681, -1.1682, -1.1682, -1.1683, -1.1683, -1.1683, -1.1683, -1.1684,
        -1.1684, -1.1684], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 7.4833268395841584e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 11, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 11, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 11, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 11, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 11, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 11, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 11, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e11/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 6.058416', ' ae : 8.327124', ' E : 1.139705'] ,|| total loss 20.698334 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7650, -37.8006, -37.8121, -37.8184, -37.8225, -37.8254, -37.8274,
        -37.8288, -37.8298, -37.8305, -37.8310, -37.8313, -37.8316, -37.8318,
        -37.8319, -37.8320, -37.8320, -37.8321, -37.8321, -37.8321, -37.8321,
        -37.8321, -37.8321, -37.8321, -37.8321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0509e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0509e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8320, -37.8320, -37.8321, -37.8321, -37.8321, -37.8321, -37.8321,
        -37.8321, -37.8321, -37.8321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 6 	 C 	 C 	 1.6331085779191452e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2911, -107.3480, -107.3681, -107.3797, -107.3870, -107.3920,
        -107.3954, -107.3979, -107.3996, -107.4007, -107.4016, -107.4022,
        -107.4026, -107.4029, -107.4031, -107.4032, -107.4033, -107.4034,
        -107.4034, -107.4034, -107.4035, -107.4035, -107.4035, -107.4035,
        -107.4035], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3630e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7045, -109.5557, -109.5158, -109.4953, -109.4823, -109.4735,
        -109.4673, -109.4630, -109.4600, -109.4579, -109.4564, -109.4554,
        -109.4547, -109.4542, -109.4538, -109.4536, -109.4534, -109.4533,
        -109.4532, -109.4531, -109.4531, -109.4531, -109.4530, -109.4530,
        -109.4530], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5018e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2132, -0.4282, -0.4587, -0.4730, -0.4816, -0.4873, -0.4911, -0.4938,
        -0.4956, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4111e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4111e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 H 	 H 	 6.657985010615838e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9833, -188.6516, -188.5824, -188.5501, -188.5295, -188.5156,
        -188.5059, -188.4991, -188.4944, -188.4911, -188.4888, -188.4872,
        -188.4860, -188.4853, -188.4847, -188.4843, -188.4840, -188.4838,
        -188.4837, -188.4836, -188.4836, -188.4835, -188.4835, -188.4835,
        -188.4834], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2008e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7519, -37.7917, -37.8062, -37.8142, -37.8196, -37.8234, -37.8260,
        -37.8279, -37.8292, -37.8302, -37.8308, -37.8313, -37.8316, -37.8318,
        -37.8320, -37.8321, -37.8322, -37.8323, -37.8323, -37.8323, -37.8323,
        -37.8324, -37.8324, -37.8324, -37.8324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8232e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4614, -920.3976, -920.3792, -920.3697, -920.3635, -920.3593,
        -920.3564, -920.3544, -920.3529, -920.3519, -920.3512, -920.3507,
        -920.3504, -920.3502, -920.3500, -920.3499, -920.3498, -920.3497,
        -920.3497, -920.3497, -920.3496, -920.3496, -920.3496, -920.3496,
        -920.3496], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0218e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1041, -460.1285, -460.1359, -460.1399, -460.1426, -460.1444,
        -460.1457, -460.1466, -460.1473, -460.1477, -460.1481, -460.1483,
        -460.1484, -460.1485, -460.1486, -460.1487, -460.1487, -460.1487,
        -460.1488, -460.1488, -460.1488, -460.1488, -460.1488, -460.1488,
        -460.1488], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4417e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3499, -920.3498, -920.3497, -920.3497, -920.3497, -920.3496,
        -920.3496, -920.3496, -920.3496, -920.3496], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1487, -460.1487, -460.1487, -460.1488, -460.1488, -460.1488,
        -460.1488, -460.1488, -460.1488, -460.1488], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 Cl2 	 Cl2 	 0.00042248622205642747

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4648, -7.4722, -7.4752, -7.4769, -7.4779, -7.4787, -7.4796, -7.4802,
        -7.4803, -7.4801, -7.4799, -7.4798, -7.4797, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2752e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2752e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 Li 	 Li 	 7.308164449452503e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4359, -93.3941, -93.3829, -93.3780, -93.3751, -93.3732, -93.3718,
        -93.3709, -93.3703, -93.3698, -93.3695, -93.3693, -93.3691, -93.3690,
        -93.3689, -93.3689, -93.3688, -93.3688, -93.3688, -93.3688, -93.3688,
        -93.3687, -93.3687, -93.3687, -93.3687], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0588e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7592, -37.7971, -37.8099, -37.8169, -37.8216, -37.8248, -37.8271,
        -37.8287, -37.8298, -37.8306, -37.8312, -37.8316, -37.8319, -37.8321,
        -37.8322, -37.8323, -37.8324, -37.8324, -37.8324, -37.8325, -37.8325,
        -37.8325, -37.8325, -37.8325, -37.8325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6328e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3057, -0.4555, -0.4739, -0.4827, -0.4882, -0.4918, -0.4942, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5660e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0910, -460.1207, -460.1309, -460.1365, -460.1401, -460.1427,
        -460.1446, -460.1459, -460.1468, -460.1475, -460.1479, -460.1482,
        -460.1485, -460.1486, -460.1487, -460.1488, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1490, -460.1490, -460.1490, -460.1490,
        -460.1490], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.7921e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7921e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1488, -460.1489, -460.1489, -460.1489, -460.1489, -460.1490,
        -460.1490, -460.1490, -460.1490, -460.1490], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 Cl 	 Cl 	 2.24311201789882e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9984, -1.1011, -1.1275, -1.1410, -1.1496, -1.1553, -1.1593, -1.1621,
        -1.1640, -1.1654, -1.1663, -1.1670, -1.1674, -1.1678, -1.1680, -1.1681,
        -1.1683, -1.1683, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685, -1.1685,
        -1.1685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2310, -0.4338, -0.4618, -0.4750, -0.4829, -0.4882, -0.4917, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9703e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1681, -1.1683, -1.1683, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685,
        -1.1685, -1.1685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 7.121044687810431e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 12, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 12, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 12, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 12, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 12, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 12, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 12, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e12/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 6.057464', ' ae : 8.291795', ' E : 1.076898'] ,|| total loss 20.684915 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2713, -107.3389, -107.3625, -107.3761, -107.3847, -107.3906,
        -107.3946, -107.3975, -107.3995, -107.4009, -107.4018, -107.4025,
        -107.4030, -107.4033, -107.4036, -107.4037, -107.4039, -107.4039,
        -107.4040, -107.4040, -107.4041, -107.4041, -107.4041, -107.4041,
        -107.4041], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3627e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6572, -109.5365, -109.5043, -109.4878, -109.4773, -109.4702,
        -109.4652, -109.4618, -109.4594, -109.4577, -109.4565, -109.4557,
        -109.4551, -109.4547, -109.4544, -109.4542, -109.4541, -109.4540,
        -109.4539, -109.4538, -109.4538, -109.4538, -109.4538, -109.4538,
        -109.4537], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5027e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7460, -37.7862, -37.8023, -37.8116, -37.8177, -37.8221, -37.8252,
        -37.8274, -37.8289, -37.8300, -37.8308, -37.8313, -37.8317, -37.8320,
        -37.8322, -37.8323, -37.8324, -37.8325, -37.8325, -37.8325, -37.8326,
        -37.8326, -37.8326, -37.8326, -37.8326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5907e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5907e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8323, -37.8324, -37.8325, -37.8325, -37.8325, -37.8326, -37.8326,
        -37.8326, -37.8326, -37.8326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 6 	 C 	 C 	 1.4628226229054803e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4643, -7.4714, -7.4747, -7.4765, -7.4777, -7.4786, -7.4794, -7.4802,
        -7.4805, -7.4803, -7.4801, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9003e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9003e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4799, -7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800,
        -7.4800, -7.4800], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 Li 	 Li 	 8.693982457334506e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4617, -93.4031, -93.3873, -93.3809, -93.3773, -93.3749, -93.3732,
        -93.3721, -93.3713, -93.3707, -93.3703, -93.3700, -93.3698, -93.3697,
        -93.3696, -93.3695, -93.3695, -93.3695, -93.3694, -93.3694, -93.3694,
        -93.3694, -93.3694, -93.3694, -93.3694], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0598e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7634, -37.7999, -37.8119, -37.8184, -37.8227, -37.8257, -37.8278,
        -37.8293, -37.8304, -37.8311, -37.8316, -37.8320, -37.8322, -37.8324,
        -37.8325, -37.8326, -37.8327, -37.8327, -37.8328, -37.8328, -37.8328,
        -37.8328, -37.8328, -37.8328, -37.8328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2688e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2429, -0.4375, -0.4638, -0.4763, -0.4838, -0.4888, -0.4922, -0.4945,
        -0.4961, -0.4972, -0.4980, -0.4986, -0.4990, -0.4992, -0.4994, -0.4996,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6900e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8985, -188.6289, -188.5703, -188.5424, -188.5247, -188.5127,
        -188.5043, -188.4985, -188.4944, -188.4916, -188.4896, -188.4882,
        -188.4872, -188.4865, -188.4860, -188.4857, -188.4855, -188.4853,
        -188.4852, -188.4851, -188.4850, -188.4850, -188.4850, -188.4850,
        -188.4849], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2032e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7472, -37.7874, -37.8033, -37.8123, -37.8183, -37.8226, -37.8256,
        -37.8277, -37.8293, -37.8303, -37.8311, -37.8316, -37.8320, -37.8322,
        -37.8324, -37.8325, -37.8326, -37.8327, -37.8327, -37.8328, -37.8328,
        -37.8328, -37.8328, -37.8328, -37.8328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3260e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9998, -1.1017, -1.1279, -1.1413, -1.1498, -1.1555, -1.1595, -1.1622,
        -1.1641, -1.1655, -1.1664, -1.1671, -1.1675, -1.1679, -1.1681, -1.1682,
        -1.1683, -1.1684, -1.1685, -1.1685, -1.1685, -1.1686, -1.1686, -1.1686,
        -1.1686], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2589, -0.4423, -0.4665, -0.4780, -0.4849, -0.4896, -0.4927, -0.4949,
        -0.4964, -0.4974, -0.4982, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3592e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1682, -1.1683, -1.1684, -1.1685, -1.1685, -1.1685, -1.1686, -1.1686,
        -1.1686, -1.1686], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 6.931528806219232e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1086, -460.1312, -460.1379, -460.1416, -460.1439, -460.1456,
        -460.1467, -460.1475, -460.1481, -460.1485, -460.1488, -460.1490,
        -460.1491, -460.1492, -460.1493, -460.1494, -460.1494, -460.1494,
        -460.1494, -460.1494, -460.1494, -460.1495, -460.1495, -460.1495,
        -460.1495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1572e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1572e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1494, -460.1494, -460.1494, -460.1494, -460.1494, -460.1494,
        -460.1495, -460.1495, -460.1495, -460.1495], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 Cl 	 Cl 	 4.952693468731092e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4668, -920.4008, -920.3817, -920.3718, -920.3654, -920.3610,
        -920.3580, -920.3559, -920.3544, -920.3533, -920.3526, -920.3521,
        -920.3517, -920.3515, -920.3513, -920.3512, -920.3511, -920.3510,
        -920.3510, -920.3509, -920.3509, -920.3509, -920.3509, -920.3509,
        -920.3509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0140e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1049, -460.1291, -460.1365, -460.1405, -460.1432, -460.1450,
        -460.1463, -460.1472, -460.1478, -460.1483, -460.1486, -460.1488,
        -460.1490, -460.1491, -460.1492, -460.1492, -460.1492, -460.1493,
        -460.1493, -460.1493, -460.1493, -460.1493, -460.1493, -460.1493,
        -460.1493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7695e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3512, -920.3511, -920.3510, -920.3510, -920.3509, -920.3509,
        -920.3509, -920.3509, -920.3509, -920.3509], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1492, -460.1492, -460.1493, -460.1493, -460.1493, -460.1493,
        -460.1493, -460.1493, -460.1493, -460.1493], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 Cl2 	 Cl2 	 0.0004179444519565621

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2862, -0.4501, -0.4709, -0.4808, -0.4868, -0.4909, -0.4936, -0.4955,
        -0.4968, -0.4977, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8535e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8535e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 H 	 H 	 5.376521139157525e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 13, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 13, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 13, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 13, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 13, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 13, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 13, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e13/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 6.056736', ' ae : 8.235703', ' E : 1.039127'] ,|| total loss 20.667915 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4688, -7.4754, -7.4775, -7.4785, -7.4794, -7.4802, -7.4807, -7.4807,
        -7.4804, -7.4802, -7.4802, -7.4801, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4802], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9613e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9613e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4802, -7.4802], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 Li 	 Li 	 1.1018065136493977e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2747, -0.4469, -0.4690, -0.4796, -0.4860, -0.4903, -0.4932, -0.4952,
        -0.4966, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0527e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0527e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 9 	 H 	 H 	 5.449910452704142e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1090, -460.1310, -460.1375, -460.1410, -460.1433, -460.1449,
        -460.1460, -460.1468, -460.1474, -460.1477, -460.1480, -460.1482,
        -460.1483, -460.1484, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3380e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3380e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 7 	 Cl 	 Cl 	 9.986053033850626e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0565, -1.1241, -1.1416, -1.1506, -1.1562, -1.1600, -1.1626, -1.1645,
        -1.1657, -1.1666, -1.1673, -1.1677, -1.1680, -1.1682, -1.1684, -1.1685,
        -1.1686, -1.1686, -1.1687, -1.1687, -1.1687, -1.1687, -1.1687, -1.1687,
        -1.1687], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3360, -0.4634, -0.4784, -0.4857, -0.4902, -0.4931, -0.4952, -0.4966,
        -0.4976, -0.4983, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1355e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1685, -1.1686, -1.1686, -1.1687, -1.1687, -1.1687, -1.1687, -1.1687,
        -1.1687, -1.1687], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 0 	 H2 	 H2 	 6.625906392979718e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8867, -188.6260, -188.5691, -188.5418, -188.5246, -188.5128,
        -188.5047, -188.4990, -188.4950, -188.4922, -188.4903, -188.4889,
        -188.4880, -188.4873, -188.4868, -188.4865, -188.4863, -188.4861,
        -188.4860, -188.4859, -188.4859, -188.4858, -188.4858, -188.4858,
        -188.4858], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2054e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7433, -37.7827, -37.8000, -37.8100, -37.8168, -37.8216, -37.8250,
        -37.8274, -37.8291, -37.8303, -37.8312, -37.8318, -37.8322, -37.8325,
        -37.8327, -37.8329, -37.8330, -37.8330, -37.8331, -37.8331, -37.8331,
        -37.8332, -37.8332, -37.8332, -37.8332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2622, -107.3351, -107.3604, -107.3750, -107.3842, -107.3905,
        -107.3949, -107.3979, -107.4001, -107.4016, -107.4026, -107.4033,
        -107.4039, -107.4042, -107.4045, -107.4046, -107.4048, -107.4049,
        -107.4049, -107.4050, -107.4050, -107.4050, -107.4050, -107.4050,
        -107.4050], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3613e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7403, -37.7771, -37.7959, -37.8070, -37.8146, -37.8200, -37.8238,
        -37.8266, -37.8285, -37.8299, -37.8309, -37.8316, -37.8321, -37.8324,
        -37.8326, -37.8328, -37.8329, -37.8330, -37.8331, -37.8331, -37.8331,
        -37.8332, -37.8332, -37.8332, -37.8332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9936e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9936e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8328, -37.8329, -37.8330, -37.8331, -37.8331, -37.8331, -37.8332,
        -37.8332, -37.8332, -37.8332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 6 	 C 	 C 	 1.2541778755175906e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4422, -93.3972, -93.3852, -93.3800, -93.3770, -93.3749, -93.3735,
        -93.3725, -93.3719, -93.3714, -93.3710, -93.3708, -93.3706, -93.3705,
        -93.3704, -93.3704, -93.3703, -93.3703, -93.3703, -93.3703, -93.3703,
        -93.3703, -93.3703, -93.3703, -93.3703], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0609e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7528, -37.7926, -37.8071, -37.8151, -37.8205, -37.8243, -37.8269,
        -37.8288, -37.8302, -37.8311, -37.8318, -37.8322, -37.8325, -37.8328,
        -37.8329, -37.8330, -37.8331, -37.8332, -37.8332, -37.8332, -37.8333,
        -37.8333, -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8087e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2686, -0.4451, -0.4681, -0.4790, -0.4856, -0.4900, -0.4930, -0.4951,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1616e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6476, -109.5333, -109.5029, -109.4873, -109.4774, -109.4707,
        -109.4660, -109.4627, -109.4604, -109.4588, -109.4577, -109.4569,
        -109.4564, -109.4560, -109.4557, -109.4556, -109.4554, -109.4553,
        -109.4553, -109.4552, -109.4552, -109.4552, -109.4552, -109.4551,
        -109.4551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5039e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4549, -920.3942, -920.3769, -920.3679, -920.3621, -920.3582,
        -920.3554, -920.3535, -920.3521, -920.3512, -920.3505, -920.3501,
        -920.3497, -920.3495, -920.3493, -920.3492, -920.3492, -920.3491,
        -920.3491, -920.3490, -920.3490, -920.3490, -920.3490, -920.3490,
        -920.3490], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0076e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0931, -460.1218, -460.1314, -460.1366, -460.1400, -460.1424,
        -460.1442, -460.1454, -460.1462, -460.1468, -460.1473, -460.1476,
        -460.1478, -460.1479, -460.1480, -460.1481, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3401e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3492, -920.3492, -920.3491, -920.3491, -920.3490, -920.3490,
        -920.3490, -920.3490, -920.3490, -920.3490], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1481, -460.1482, -460.1482, -460.1482, -460.1482, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 5 	 Cl2 	 Cl2 	 0.000413961318538888

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 14, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 14, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 14, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 14, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 14, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 14, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 14, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e14)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e14/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e14/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 14 || ,[' rho : 6.055540', ' ae : 8.174408', ' E : 0.975522'] ,|| total loss 20.647519 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2251, -0.4320, -0.4608, -0.4743, -0.4825, -0.4879, -0.4915, -0.4941,
        -0.4958, -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0755e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0755e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 9 	 H 	 H 	 5.690670514040892e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7618, -37.7991, -37.8116, -37.8184, -37.8229, -37.8260, -37.8282,
        -37.8298, -37.8309, -37.8316, -37.8322, -37.8325, -37.8328, -37.8330,
        -37.8331, -37.8332, -37.8333, -37.8333, -37.8334, -37.8334, -37.8334,
        -37.8334, -37.8334, -37.8334, -37.8334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6430e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6430e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8332, -37.8333, -37.8333, -37.8334, -37.8334, -37.8334, -37.8334,
        -37.8334, -37.8334, -37.8334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 6 	 C 	 C 	 1.1702398435658045e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4602, -920.3972, -920.3791, -920.3697, -920.3637, -920.3595,
        -920.3566, -920.3546, -920.3532, -920.3522, -920.3515, -920.3511,
        -920.3507, -920.3505, -920.3503, -920.3502, -920.3501, -920.3501,
        -920.3500, -920.3500, -920.3500, -920.3500, -920.3499, -920.3499,
        -920.3499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0049e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0869, -460.1180, -460.1289, -460.1350, -460.1390, -460.1418,
        -460.1438, -460.1453, -460.1463, -460.1470, -460.1475, -460.1479,
        -460.1481, -460.1483, -460.1484, -460.1485, -460.1486, -460.1486,
        -460.1486, -460.1487, -460.1487, -460.1487, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2400e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3502, -920.3501, -920.3501, -920.3500, -920.3500, -920.3500,
        -920.3500, -920.3499, -920.3499, -920.3499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1485, -460.1486, -460.1486, -460.1486, -460.1487, -460.1487,
        -460.1487, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 5 	 Cl2 	 Cl2 	 0.0004118508070894113

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4884, -93.4120, -93.3914, -93.3837, -93.3797, -93.3771, -93.3753,
        -93.3740, -93.3731, -93.3725, -93.3720, -93.3717, -93.3715, -93.3714,
        -93.3713, -93.3712, -93.3711, -93.3711, -93.3711, -93.3711, -93.3711,
        -93.3710, -93.3710, -93.3710, -93.3710], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0623e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7444, -37.7841, -37.8011, -37.8110, -37.8176, -37.8223, -37.8256,
        -37.8280, -37.8297, -37.8309, -37.8317, -37.8323, -37.8327, -37.8330,
        -37.8332, -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4912e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3150, -0.4580, -0.4753, -0.4837, -0.4888, -0.4922, -0.4945, -0.4961,
        -0.4973, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3906e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0941, -460.1226, -460.1321, -460.1373, -460.1407, -460.1431,
        -460.1449, -460.1461, -460.1469, -460.1475, -460.1479, -460.1482,
        -460.1484, -460.1486, -460.1487, -460.1488, -460.1488, -460.1489,
        -460.1489, -460.1489, -460.1489, -460.1489, -460.1489, -460.1489,
        -460.1489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7634e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.7634e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1488, -460.1488, -460.1489, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1489, -460.1489], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 7 	 Cl 	 Cl 	 2.0101214254660242e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2391, -107.3248, -107.3543, -107.3712, -107.3819, -107.3892,
        -107.3942, -107.3978, -107.4002, -107.4020, -107.4032, -107.4040,
        -107.4046, -107.4051, -107.4053, -107.4056, -107.4057, -107.4058,
        -107.4059, -107.4059, -107.4060, -107.4060, -107.4060, -107.4060,
        -107.4060], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3617e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7301, -109.5682, -109.5247, -109.5023, -109.4881, -109.4784,
        -109.4717, -109.4670, -109.4637, -109.4614, -109.4598, -109.4587,
        -109.4579, -109.4573, -109.4569, -109.4567, -109.4565, -109.4563,
        -109.4563, -109.4562, -109.4561, -109.4561, -109.4561, -109.4561,
        -109.4561], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5052e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9836, -1.0955, -1.1243, -1.1390, -1.1483, -1.1545, -1.1589, -1.1619,
        -1.1640, -1.1655, -1.1665, -1.1672, -1.1677, -1.1681, -1.1683, -1.1685,
        -1.1686, -1.1687, -1.1688, -1.1688, -1.1688, -1.1689, -1.1689, -1.1689,
        -1.1689], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2357, -0.4353, -0.4626, -0.4755, -0.4833, -0.4884, -0.4919, -0.4943,
        -0.4960, -0.4972, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8127e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1685, -1.1686, -1.1687, -1.1688, -1.1688, -1.1688, -1.1689, -1.1689,
        -1.1689, -1.1689], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 0 	 H2 	 H2 	 6.246330144485073e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4653, -7.4726, -7.4757, -7.4775, -7.4786, -7.4794, -7.4803, -7.4810,
        -7.4812, -7.4810, -7.4807, -7.4806, -7.4806, -7.4805, -7.4806, -7.4806,
        -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0275e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0275e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4806, -7.4806], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 10 	 Li 	 Li 	 1.5592937822081816e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0046, -188.6607, -188.5895, -188.5563, -188.5353, -188.5210,
        -188.5110, -188.5041, -188.4993, -188.4959, -188.4935, -188.4918,
        -188.4907, -188.4899, -188.4893, -188.4889, -188.4886, -188.4884,
        -188.4883, -188.4882, -188.4881, -188.4881, -188.4880, -188.4880,
        -188.4880], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2087e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7831, -37.8005, -37.8105, -37.8173, -37.8222, -37.8256,
        -37.8280, -37.8297, -37.8310, -37.8318, -37.8324, -37.8329, -37.8332,
        -37.8334, -37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3074e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 15, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 15, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 15, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 15, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 15, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 15, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 15, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e15)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e15/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e15/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 15 || ,[' rho : 6.054764', ' ae : 8.148294', ' E : 0.934686'] ,|| total loss 20.635389 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2206, -0.4306, -0.4600, -0.4738, -0.4822, -0.4877, -0.4914, -0.4940,
        -0.4958, -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1575e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1575e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 9 	 H 	 H 	 5.282998484776167e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4721, -7.4754, -7.4773, -7.4785, -7.4793, -7.4802, -7.4810,
        -7.4813, -7.4811, -7.4809, -7.4807, -7.4806, -7.4806, -7.4806, -7.4806,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4447e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.4447e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4806, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 10 	 Li 	 Li 	 1.651484492145916e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2273, -107.3197, -107.3512, -107.3693, -107.3807, -107.3885,
        -107.3939, -107.3977, -107.4003, -107.4021, -107.4034, -107.4044,
        -107.4050, -107.4054, -107.4058, -107.4060, -107.4061, -107.4062,
        -107.4063, -107.4064, -107.4064, -107.4064, -107.4064, -107.4065,
        -107.4065], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3618e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4529, -93.4017, -93.3881, -93.3823, -93.3790, -93.3767, -93.3752,
        -93.3741, -93.3734, -93.3729, -93.3725, -93.3722, -93.3721, -93.3719,
        -93.3718, -93.3718, -93.3717, -93.3717, -93.3717, -93.3717, -93.3717,
        -93.3717, -93.3717, -93.3716, -93.3716], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0634e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7468, -37.7869, -37.8032, -37.8126, -37.8189, -37.8233, -37.8264,
        -37.8286, -37.8302, -37.8313, -37.8321, -37.8327, -37.8330, -37.8333,
        -37.8335, -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1929e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2720, -0.4461, -0.4686, -0.4793, -0.4859, -0.4902, -0.4931, -0.4952,
        -0.4966, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0711e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6757, -109.5458, -109.5112, -109.4934, -109.4820, -109.4743,
        -109.4690, -109.4653, -109.4627, -109.4608, -109.4596, -109.4587,
        -109.4580, -109.4576, -109.4573, -109.4571, -109.4569, -109.4568,
        -109.4567, -109.4567, -109.4567, -109.4566, -109.4566, -109.4566,
        -109.4566], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5058e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8048, -188.6026, -188.5566, -188.5343, -188.5201, -188.5105,
        -188.5038, -188.4992, -188.4959, -188.4936, -188.4920, -188.4909,
        -188.4901, -188.4896, -188.4892, -188.4889, -188.4887, -188.4886,
        -188.4885, -188.4884, -188.4884, -188.4884, -188.4883, -188.4883,
        -188.4883], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2093e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7506, -37.7907, -37.8060, -37.8145, -37.8203, -37.8243, -37.8271,
        -37.8291, -37.8306, -37.8316, -37.8323, -37.8328, -37.8331, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1759e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1028, -460.1278, -460.1356, -460.1397, -460.1425, -460.1444,
        -460.1458, -460.1467, -460.1474, -460.1479, -460.1482, -460.1484,
        -460.1486, -460.1487, -460.1488, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1490, -460.1490, -460.1490, -460.1490, -460.1490,
        -460.1490], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.6502e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6502e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1489, -460.1489, -460.1489, -460.1489, -460.1490, -460.1490,
        -460.1490, -460.1490, -460.1490, -460.1490], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 7 	 Cl 	 Cl 	 2.233073773537977e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7434, -37.7826, -37.8001, -37.8103, -37.8172, -37.8221, -37.8256,
        -37.8280, -37.8298, -37.8310, -37.8319, -37.8325, -37.8329, -37.8332,
        -37.8335, -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2150e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2150e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 6 	 C 	 C 	 1.0097836847725842e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0003, -1.1022, -1.1284, -1.1418, -1.1502, -1.1559, -1.1599, -1.1626,
        -1.1645, -1.1659, -1.1668, -1.1675, -1.1679, -1.1683, -1.1685, -1.1686,
        -1.1687, -1.1688, -1.1689, -1.1689, -1.1689, -1.1690, -1.1690, -1.1690,
        -1.1690], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3362, -0.4635, -0.4785, -0.4857, -0.4902, -0.4932, -0.4952, -0.4966,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1040e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1686, -1.1687, -1.1688, -1.1689, -1.1689, -1.1689, -1.1690, -1.1690,
        -1.1690, -1.1690], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 0 	 H2 	 H2 	 6.04086881766383e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4631, -920.3988, -920.3803, -920.3707, -920.3645, -920.3603,
        -920.3573, -920.3552, -920.3538, -920.3528, -920.3521, -920.3516,
        -920.3512, -920.3510, -920.3508, -920.3507, -920.3506, -920.3506,
        -920.3505, -920.3505, -920.3505, -920.3505, -920.3504, -920.3504,
        -920.3504], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.9723e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0988, -460.1254, -460.1339, -460.1385, -460.1416, -460.1437,
        -460.1452, -460.1463, -460.1470, -460.1476, -460.1479, -460.1482,
        -460.1484, -460.1485, -460.1486, -460.1487, -460.1487, -460.1487,
        -460.1488, -460.1488, -460.1488, -460.1488, -460.1488, -460.1488,
        -460.1488], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5013e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3507, -920.3506, -920.3506, -920.3505, -920.3505, -920.3505,
        -920.3505, -920.3504, -920.3504, -920.3504], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1487, -460.1487, -460.1487, -460.1488, -460.1488, -460.1488,
        -460.1488, -460.1488, -460.1488, -460.1488], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 5 	 Cl2 	 Cl2 	 0.0004062425177779131

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 16, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 16, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 16, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 16, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 16, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 16, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 16, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e16)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e16/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e16/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 16 || ,[' rho : 6.053636', ' ae : 8.079045', ' E : 0.900988'] ,|| total loss 20.614300 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3384, -0.4641, -0.4788, -0.4859, -0.4903, -0.4933, -0.4953, -0.4967,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0719e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0719e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 9 	 H 	 H 	 4.3377539208360765e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0512, -188.6738, -188.5974, -188.5620, -188.5396, -188.5243,
        -188.5137, -188.5064, -188.5012, -188.4976, -188.4951, -188.4933,
        -188.4920, -188.4912, -188.4906, -188.4901, -188.4898, -188.4896,
        -188.4895, -188.4894, -188.4893, -188.4893, -188.4892, -188.4892,
        -188.4892], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2109e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7658, -37.8019, -37.8137, -37.8201, -37.8244, -37.8273, -37.8293,
        -37.8308, -37.8318, -37.8325, -37.8331, -37.8334, -37.8337, -37.8338,
        -37.8340, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8654e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7464, -37.7865, -37.8030, -37.8125, -37.8189, -37.8234, -37.8266,
        -37.8288, -37.8304, -37.8316, -37.8324, -37.8329, -37.8333, -37.8336,
        -37.8338, -37.8339, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9266e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9266e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8339, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342,
        -37.8342, -37.8342, -37.8342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 6 	 C 	 C 	 9.213860120699455e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7101, -109.5606, -109.5206, -109.5000, -109.4869, -109.4780,
        -109.4718, -109.4675, -109.4645, -109.4624, -109.4609, -109.4599,
        -109.4591, -109.4586, -109.4583, -109.4580, -109.4579, -109.4577,
        -109.4577, -109.4576, -109.4576, -109.4575, -109.4575, -109.4575,
        -109.4575], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5069e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4788, -93.4103, -93.3919, -93.3848, -93.3809, -93.3784, -93.3766,
        -93.3754, -93.3745, -93.3739, -93.3735, -93.3732, -93.3730, -93.3728,
        -93.3727, -93.3727, -93.3726, -93.3726, -93.3725, -93.3725, -93.3725,
        -93.3725, -93.3725, -93.3725, -93.3725], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0647e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7415, -37.7783, -37.7971, -37.8082, -37.8158, -37.8211, -37.8250,
        -37.8278, -37.8297, -37.8311, -37.8321, -37.8327, -37.8332, -37.8336,
        -37.8338, -37.8340, -37.8341, -37.8342, -37.8342, -37.8343, -37.8343,
        -37.8343, -37.8343, -37.8343, -37.8343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8588e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3200, -0.4593, -0.4761, -0.4842, -0.4891, -0.4924, -0.4947, -0.4963,
        -0.4974, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2974e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1064, -460.1299, -460.1370, -460.1408, -460.1433, -460.1451,
        -460.1463, -460.1471, -460.1478, -460.1482, -460.1485, -460.1487,
        -460.1488, -460.1490, -460.1490, -460.1491, -460.1491, -460.1491,
        -460.1492, -460.1492, -460.1492, -460.1492, -460.1492, -460.1492,
        -460.1492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4310e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4310e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1491, -460.1491, -460.1491, -460.1492, -460.1492, -460.1492,
        -460.1492, -460.1492, -460.1492, -460.1492], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 7 	 Cl 	 Cl 	 3.304409821661155e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9796, -1.0941, -1.1235, -1.1385, -1.1480, -1.1544, -1.1589, -1.1620,
        -1.1641, -1.1656, -1.1667, -1.1674, -1.1679, -1.1683, -1.1685, -1.1687,
        -1.1688, -1.1689, -1.1690, -1.1690, -1.1691, -1.1691, -1.1691, -1.1691,
        -1.1691], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3061, -0.4556, -0.4740, -0.4828, -0.4882, -0.4918, -0.4943, -0.4960,
        -0.4971, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4929e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1687, -1.1688, -1.1689, -1.1690, -1.1690, -1.1691, -1.1691, -1.1691,
        -1.1691, -1.1691], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 0 	 H2 	 H2 	 5.769144277554023e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4288, -920.3836, -920.3712, -920.3647, -920.3606, -920.3578,
        -920.3558, -920.3545, -920.3535, -920.3528, -920.3524, -920.3520,
        -920.3518, -920.3516, -920.3515, -920.3514, -920.3514, -920.3513,
        -920.3513, -920.3513, -920.3513, -920.3513, -920.3513, -920.3513,
        -920.3513], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.9296e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0944, -460.1229, -460.1324, -460.1375, -460.1410, -460.1434,
        -460.1451, -460.1463, -460.1471, -460.1477, -460.1481, -460.1484,
        -460.1487, -460.1488, -460.1489, -460.1490, -460.1490, -460.1491,
        -460.1491, -460.1491, -460.1491, -460.1491, -460.1491, -460.1491,
        -460.1491], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2989e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3514, -920.3514, -920.3513, -920.3513, -920.3513, -920.3513,
        -920.3513, -920.3513, -920.3513, -920.3513], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1490, -460.1490, -460.1491, -460.1491, -460.1491, -460.1491,
        -460.1491, -460.1491, -460.1491, -460.1491], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 5 	 Cl2 	 Cl2 	 0.0004033369601712012

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4677, -7.4751, -7.4776, -7.4789, -7.4798, -7.4806, -7.4814, -7.4817,
        -7.4815, -7.4813, -7.4811, -7.4811, -7.4810, -7.4810, -7.4811, -7.4811,
        -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.9385e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9385e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 10 	 Li 	 Li 	 2.199678247674841e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2517, -107.3315, -107.3591, -107.3750, -107.3850, -107.3918,
        -107.3966, -107.3999, -107.4022, -107.4038, -107.4050, -107.4058,
        -107.4063, -107.4067, -107.4070, -107.4072, -107.4073, -107.4074,
        -107.4075, -107.4075, -107.4076, -107.4076, -107.4076, -107.4076,
        -107.4076], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3614e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 17, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 17, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 17, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 17, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 17, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 17, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 17, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e17)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e17/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e17/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 17 || ,[' rho : 6.052846', ' ae : 8.046542', ' E : 0.875141'] ,|| total loss 20.601923 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2499, -0.4396, -0.4650, -0.4770, -0.4843, -0.4891, -0.4924, -0.4947,
        -0.4962, -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4736e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4736e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 9 	 H 	 H 	 4.563733263924115e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7611, -37.7991, -37.8119, -37.8190, -37.8237, -37.8269, -37.8292,
        -37.8308, -37.8320, -37.8328, -37.8333, -37.8337, -37.8340, -37.8342,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5170e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5170e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 6 	 C 	 C 	 8.023936804673068e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1005, -460.1265, -460.1348, -460.1393, -460.1422, -460.1443,
        -460.1457, -460.1468, -460.1475, -460.1480, -460.1484, -460.1486,
        -460.1488, -460.1489, -460.1490, -460.1491, -460.1491, -460.1491,
        -460.1491, -460.1492, -460.1492, -460.1492, -460.1492, -460.1492,
        -460.1492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4246e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4246e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1491, -460.1491, -460.1491, -460.1491, -460.1492, -460.1492,
        -460.1492, -460.1492, -460.1492, -460.1492], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 7 	 Cl 	 Cl 	 3.2971531360236474e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0099, -1.1061, -1.1309, -1.1435, -1.1515, -1.1569, -1.1606, -1.1632,
        -1.1650, -1.1663, -1.1672, -1.1678, -1.1682, -1.1685, -1.1688, -1.1689,
        -1.1690, -1.1691, -1.1691, -1.1692, -1.1692, -1.1692, -1.1692, -1.1692,
        -1.1692], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2696, -0.4454, -0.4682, -0.4791, -0.4857, -0.4901, -0.4931, -0.4951,
        -0.4966, -0.4976, -0.4983, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0851e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1689, -1.1690, -1.1691, -1.1691, -1.1692, -1.1692, -1.1692, -1.1692,
        -1.1692, -1.1692], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 0 	 H2 	 H2 	 5.473856272283911e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6715, -109.5452, -109.5115, -109.4942, -109.4832, -109.4757,
        -109.4705, -109.4669, -109.4644, -109.4626, -109.4614, -109.4605,
        -109.4599, -109.4595, -109.4592, -109.4590, -109.4588, -109.4587,
        -109.4586, -109.4586, -109.4586, -109.4585, -109.4585, -109.4585,
        -109.4585], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5079e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4682, -7.4755, -7.4779, -7.4792, -7.4800, -7.4809, -7.4816, -7.4819,
        -7.4817, -7.4815, -7.4813, -7.4812, -7.4812, -7.4812, -7.4812, -7.4813,
        -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1198e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1198e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 10 	 Li 	 Li 	 2.4768772322286264e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4621, -920.3985, -920.3803, -920.3708, -920.3648, -920.3606,
        -920.3577, -920.3557, -920.3542, -920.3532, -920.3525, -920.3521,
        -920.3517, -920.3515, -920.3513, -920.3512, -920.3511, -920.3511,
        -920.3510, -920.3510, -920.3510, -920.3509, -920.3509, -920.3509,
        -920.3509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.8704e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0929, -460.1218, -460.1316, -460.1369, -460.1404, -460.1429,
        -460.1447, -460.1459, -460.1468, -460.1474, -460.1478, -460.1481,
        -460.1484, -460.1485, -460.1486, -460.1487, -460.1487, -460.1488,
        -460.1488, -460.1488, -460.1488, -460.1488, -460.1489, -460.1489,
        -460.1489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4734e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3512, -920.3511, -920.3511, -920.3510, -920.3510, -920.3510,
        -920.3509, -920.3509, -920.3509, -920.3509], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1487, -460.1487, -460.1488, -460.1488, -460.1488, -460.1488,
        -460.1488, -460.1489, -460.1489, -460.1489], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 5 	 Cl2 	 Cl2 	 0.0003988397340737306

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4648, -93.4069, -93.3914, -93.3850, -93.3815, -93.3791, -93.3774,
        -93.3763, -93.3755, -93.3749, -93.3745, -93.3743, -93.3741, -93.3739,
        -93.3739, -93.3738, -93.3737, -93.3737, -93.3737, -93.3737, -93.3737,
        -93.3737, -93.3736, -93.3736, -93.3736], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0667e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7512, -37.7913, -37.8067, -37.8153, -37.8211, -37.8252, -37.8280,
        -37.8301, -37.8315, -37.8325, -37.8333, -37.8338, -37.8341, -37.8344,
        -37.8345, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3120e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3026, -0.4546, -0.4734, -0.4825, -0.4880, -0.4916, -0.4941, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5318e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0178, -188.6666, -188.5943, -188.5606, -188.5393, -188.5247,
        -188.5147, -188.5076, -188.5027, -188.4993, -188.4969, -188.4952,
        -188.4940, -188.4932, -188.4926, -188.4922, -188.4919, -188.4917,
        -188.4916, -188.4915, -188.4914, -188.4914, -188.4913, -188.4913,
        -188.4913], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2145e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7432, -37.7815, -37.7996, -37.8102, -37.8174, -37.8225, -37.8261,
        -37.8287, -37.8306, -37.8319, -37.8328, -37.8334, -37.8339, -37.8342,
        -37.8344, -37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2758, -107.3431, -107.3667, -107.3802, -107.3888, -107.3946,
        -107.3987, -107.4015, -107.4035, -107.4049, -107.4059, -107.4066,
        -107.4070, -107.4074, -107.4076, -107.4078, -107.4079, -107.4080,
        -107.4080, -107.4081, -107.4081, -107.4081, -107.4081, -107.4081,
        -107.4081], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3609e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 18, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 18, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 18, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 18, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 18, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 18, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 18, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e18)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e18/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e18/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 18 || ,[' rho : 6.051988', ' ae : 7.991810', ' E : 0.812399'] ,|| total loss 20.583943 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7417, -37.7779, -37.7969, -37.8082, -37.8159, -37.8214, -37.8254,
        -37.8282, -37.8302, -37.8316, -37.8326, -37.8333, -37.8338, -37.8341,
        -37.8344, -37.8345, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3699e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3699e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8345, -37.8347, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 6 	 C 	 C 	 7.2966187612488036e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0921, -460.1213, -460.1312, -460.1366, -460.1402, -460.1427,
        -460.1445, -460.1458, -460.1467, -460.1473, -460.1478, -460.1481,
        -460.1483, -460.1485, -460.1486, -460.1487, -460.1487, -460.1488,
        -460.1488, -460.1488, -460.1488, -460.1488, -460.1488, -460.1488,
        -460.1488], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1136e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1136e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1487, -460.1487, -460.1488, -460.1488, -460.1488, -460.1488,
        -460.1488, -460.1488, -460.1488, -460.1488], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 7 	 Cl 	 Cl 	 1.6087873430267654e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2219, -107.3182, -107.3510, -107.3698, -107.3817, -107.3897,
        -107.3953, -107.3992, -107.4019, -107.4039, -107.4052, -107.4062,
        -107.4068, -107.4073, -107.4076, -107.4078, -107.4080, -107.4081,
        -107.4082, -107.4082, -107.4083, -107.4083, -107.4083, -107.4083,
        -107.4083], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3608e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3394, -0.4643, -0.4789, -0.4860, -0.4904, -0.4933, -0.4953, -0.4967,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0363e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0363e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 9 	 H 	 H 	 3.829629000274526e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7674, -109.5856, -109.5365, -109.5112, -109.4951, -109.4842,
        -109.4766, -109.4713, -109.4676, -109.4650, -109.4632, -109.4619,
        -109.4610, -109.4604, -109.4600, -109.4597, -109.4594, -109.4593,
        -109.4592, -109.4591, -109.4591, -109.4590, -109.4590, -109.4590,
        -109.4590], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5082e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4671, -93.4078, -93.3919, -93.3855, -93.3818, -93.3795, -93.3778,
        -93.3766, -93.3758, -93.3753, -93.3749, -93.3746, -93.3744, -93.3743,
        -93.3742, -93.3741, -93.3740, -93.3740, -93.3740, -93.3740, -93.3740,
        -93.3740, -93.3740, -93.3739, -93.3739], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0672e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7436, -37.7821, -37.8001, -37.8106, -37.8177, -37.8228, -37.8264,
        -37.8289, -37.8308, -37.8321, -37.8330, -37.8336, -37.8340, -37.8344,
        -37.8346, -37.8347, -37.8348, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8350, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2286e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2534, -0.4406, -0.4656, -0.4774, -0.4846, -0.4893, -0.4925, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3908e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9628, -1.0877, -1.1197, -1.1361, -1.1464, -1.1534, -1.1582, -1.1616,
        -1.1639, -1.1656, -1.1667, -1.1675, -1.1681, -1.1685, -1.1687, -1.1689,
        -1.1691, -1.1691, -1.1692, -1.1693, -1.1693, -1.1693, -1.1693, -1.1693,
        -1.1693], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2807, -0.4486, -0.4700, -0.4802, -0.4865, -0.4906, -0.4934, -0.4954,
        -0.4967, -0.4977, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8810e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1689, -1.1691, -1.1691, -1.1692, -1.1693, -1.1693, -1.1693, -1.1693,
        -1.1693, -1.1693], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 0 	 H2 	 H2 	 5.248263826494017e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4655, -920.3999, -920.3810, -920.3711, -920.3648, -920.3605,
        -920.3575, -920.3554, -920.3539, -920.3528, -920.3521, -920.3516,
        -920.3513, -920.3510, -920.3508, -920.3507, -920.3506, -920.3506,
        -920.3505, -920.3505, -920.3505, -920.3505, -920.3504, -920.3504,
        -920.3504], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.8284e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1046, -460.1286, -460.1359, -460.1399, -460.1425, -460.1443,
        -460.1455, -460.1464, -460.1470, -460.1475, -460.1478, -460.1480,
        -460.1482, -460.1483, -460.1484, -460.1484, -460.1484, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8874e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3507, -920.3506, -920.3506, -920.3505, -920.3505, -920.3505,
        -920.3505, -920.3504, -920.3504, -920.3504], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1484, -460.1484, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 5 	 Cl2 	 Cl2 	 0.0003956389169641591

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4689, -7.4760, -7.4784, -7.4796, -7.4804, -7.4812, -7.4820, -7.4822,
        -7.4819, -7.4817, -7.4815, -7.4815, -7.4815, -7.4815, -7.4815, -7.4815,
        -7.4815, -7.4815, -7.4815, -7.4815, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2939e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2939e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4815, -7.4815, -7.4815, -7.4815, -7.4815, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 10 	 Li 	 Li 	 2.8599150351595094e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9631, -188.6524, -188.5868, -188.5558, -188.5362, -188.5229,
        -188.5136, -188.5071, -188.5026, -188.4995, -188.4973, -188.4957,
        -188.4946, -188.4939, -188.4933, -188.4930, -188.4927, -188.4925,
        -188.4924, -188.4923, -188.4922, -188.4922, -188.4922, -188.4921,
        -188.4921], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2165e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7603, -37.7987, -37.8118, -37.8191, -37.8239, -37.8272, -37.8296,
        -37.8313, -37.8325, -37.8333, -37.8339, -37.8343, -37.8346, -37.8348,
        -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0593e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 19, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 19, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 19, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 19, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 19, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 19, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 19, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e19)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e19/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e19/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 19 || ,[' rho : 6.051068', ' ae : 7.953794', ' E : 0.789589'] ,|| total loss 20.570177 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3055, -107.3577, -107.3761, -107.3867, -107.3935, -107.3980,
        -107.4012, -107.4034, -107.4050, -107.4061, -107.4068, -107.4074,
        -107.4077, -107.4080, -107.4082, -107.4083, -107.4084, -107.4085,
        -107.4085, -107.4085, -107.4086, -107.4086, -107.4086, -107.4086,
        -107.4086], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3606e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2485, -0.4392, -0.4648, -0.4769, -0.4842, -0.4891, -0.4924, -0.4946,
        -0.4962, -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4885e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4885e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 9 	 H 	 H 	 4.302059101894149e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7432, -37.7812, -37.7994, -37.8102, -37.8174, -37.8226, -37.8263,
        -37.8289, -37.8308, -37.8321, -37.8331, -37.8337, -37.8342, -37.8345,
        -37.8347, -37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1097e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1097e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8352, -37.8352, -37.8352,
        -37.8352, -37.8352, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 6 	 C 	 C 	 6.50112042244202e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6356, -109.5309, -109.5031, -109.4889, -109.4798, -109.4737,
        -109.4694, -109.4664, -109.4643, -109.4628, -109.4618, -109.4611,
        -109.4606, -109.4603, -109.4600, -109.4598, -109.4597, -109.4596,
        -109.4596, -109.4595, -109.4595, -109.4595, -109.4595, -109.4595,
        -109.4595], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5086e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4673, -7.4748, -7.4776, -7.4791, -7.4800, -7.4808, -7.4817, -7.4822,
        -7.4822, -7.4819, -7.4817, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3539e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3539e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 10 	 Li 	 Li 	 2.9924479763723166e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4454, -920.3906, -920.3753, -920.3673, -920.3622, -920.3587,
        -920.3562, -920.3545, -920.3534, -920.3525, -920.3519, -920.3515,
        -920.3512, -920.3510, -920.3509, -920.3508, -920.3507, -920.3507,
        -920.3506, -920.3506, -920.3506, -920.3506, -920.3506, -920.3506,
        -920.3506], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7929e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1002, -460.1260, -460.1342, -460.1387, -460.1416, -460.1436,
        -460.1451, -460.1461, -460.1468, -460.1473, -460.1477, -460.1479,
        -460.1481, -460.1482, -460.1483, -460.1484, -460.1484, -460.1484,
        -460.1485, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6507e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3508, -920.3507, -920.3507, -920.3506, -920.3506, -920.3506,
        -920.3506, -920.3506, -920.3506, -920.3506], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1484, -460.1484, -460.1484, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 5 	 Cl2 	 Cl2 	 0.00039176682618949387

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0068, -1.1050, -1.1303, -1.1432, -1.1513, -1.1568, -1.1606, -1.1633,
        -1.1652, -1.1665, -1.1674, -1.1680, -1.1684, -1.1687, -1.1690, -1.1691,
        -1.1692, -1.1693, -1.1693, -1.1694, -1.1694, -1.1694, -1.1694, -1.1694,
        -1.1695], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2927, -0.4519, -0.4719, -0.4815, -0.4873, -0.4912, -0.4938, -0.4957,
        -0.4969, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6742e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1691, -1.1692, -1.1693, -1.1693, -1.1694, -1.1694, -1.1694, -1.1694,
        -1.1694, -1.1695], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 0 	 H2 	 H2 	 5.031356391696046e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4947, -93.4163, -93.3951, -93.3874, -93.3834, -93.3808, -93.3790,
        -93.3777, -93.3768, -93.3762, -93.3758, -93.3755, -93.3752, -93.3751,
        -93.3750, -93.3749, -93.3749, -93.3748, -93.3748, -93.3748, -93.3748,
        -93.3748, -93.3748, -93.3748, -93.3748], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0688e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7566, -37.7960, -37.8101, -37.8179, -37.8231, -37.8268, -37.8293,
        -37.8312, -37.8324, -37.8333, -37.8340, -37.8344, -37.8347, -37.8350,
        -37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354, -37.8354,
        -37.8354, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8891e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3300, -0.4619, -0.4776, -0.4851, -0.4898, -0.4929, -0.4950, -0.4965,
        -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1421e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0212, -188.6688, -188.5963, -188.5625, -188.5411, -188.5266,
        -188.5165, -188.5094, -188.5045, -188.5010, -188.4986, -188.4969,
        -188.4957, -188.4949, -188.4943, -188.4939, -188.4936, -188.4934,
        -188.4933, -188.4932, -188.4931, -188.4931, -188.4931, -188.4930,
        -188.4930], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2182e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7425, -37.7792, -37.7980, -37.8091, -37.8168, -37.8222, -37.8261,
        -37.8288, -37.8308, -37.8322, -37.8332, -37.8338, -37.8343, -37.8347,
        -37.8349, -37.8351, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9538e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1054, -460.1291, -460.1363, -460.1401, -460.1427, -460.1445,
        -460.1457, -460.1466, -460.1472, -460.1476, -460.1479, -460.1482,
        -460.1483, -460.1484, -460.1485, -460.1485, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3869e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3869e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1485, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 7 	 Cl 	 Cl 	 1.0038068823563415e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 20, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 20, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 20, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 20, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 20, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 20, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 20, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e20)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e20/2022-11-03_10:00:47.012723_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e20/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 20 || ,[' rho : 6.050176', ' ae : 7.907119', ' E : 0.755994'] ,|| total loss 20.554651 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2946, -107.3526, -107.3731, -107.3849, -107.3923, -107.3974,
        -107.4009, -107.4034, -107.4051, -107.4063, -107.4072, -107.4078,
        -107.4082, -107.4085, -107.4087, -107.4088, -107.4089, -107.4090,
        -107.4090, -107.4091, -107.4091, -107.4091, -107.4091, -107.4091,
        -107.4091], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3610e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0979, -460.1247, -460.1334, -460.1381, -460.1412, -460.1434,
        -460.1449, -460.1460, -460.1468, -460.1473, -460.1477, -460.1479,
        -460.1481, -460.1483, -460.1484, -460.1484, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3881e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3881e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1484, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 7 	 Cl 	 Cl 	 7.360464542016233e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7736, -109.5887, -109.5388, -109.5131, -109.4967, -109.4856,
        -109.4778, -109.4724, -109.4686, -109.4660, -109.4642, -109.4629,
        -109.4619, -109.4613, -109.4609, -109.4606, -109.4603, -109.4602,
        -109.4601, -109.4600, -109.4600, -109.4599, -109.4599, -109.4599,
        -109.4599], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5088e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8802, -188.6292, -188.5740, -188.5475, -188.5307, -188.5193,
        -188.5114, -188.5059, -188.5020, -188.4993, -188.4974, -188.4961,
        -188.4952, -188.4945, -188.4941, -188.4938, -188.4935, -188.4934,
        -188.4933, -188.4932, -188.4931, -188.4931, -188.4931, -188.4931,
        -188.4930], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2187e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7553, -37.7950, -37.8094, -37.8175, -37.8228, -37.8265, -37.8292,
        -37.8311, -37.8324, -37.8333, -37.8340, -37.8344, -37.8347, -37.8350,
        -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8717e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2914, -0.4516, -0.4717, -0.4813, -0.4872, -0.4911, -0.4938, -0.4956,
        -0.4969, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6948e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6948e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 9 	 H 	 H 	 3.943422574665521e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7666, -37.8029, -37.8148, -37.8213, -37.8255, -37.8285, -37.8306,
        -37.8320, -37.8331, -37.8338, -37.8343, -37.8347, -37.8349, -37.8351,
        -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8472e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8472e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8353, -37.8354, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 6 	 C 	 C 	 5.875745425133582e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4870, -93.4143, -93.3947, -93.3873, -93.3834, -93.3808, -93.3790,
        -93.3778, -93.3769, -93.3763, -93.3759, -93.3756, -93.3754, -93.3752,
        -93.3751, -93.3751, -93.3750, -93.3750, -93.3749, -93.3749, -93.3749,
        -93.3749, -93.3749, -93.3749, -93.3749], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0690e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7432, -37.7809, -37.7993, -37.8101, -37.8175, -37.8227, -37.8265,
        -37.8292, -37.8310, -37.8324, -37.8333, -37.8340, -37.8345, -37.8348,
        -37.8350, -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8849e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2947, -0.4525, -0.4722, -0.4817, -0.4874, -0.4913, -0.4939, -0.4957,
        -0.4970, -0.4978, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6423e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4696, -7.4766, -7.4788, -7.4800, -7.4808, -7.4816, -7.4823, -7.4824,
        -7.4822, -7.4819, -7.4818, -7.4817, -7.4817, -7.4817, -7.4817, -7.4818,
        -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4858e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4858e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 10 	 Li 	 Li 	 3.2821106316838135e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4586, -920.3964, -920.3786, -920.3693, -920.3634, -920.3593,
        -920.3565, -920.3545, -920.3531, -920.3522, -920.3515, -920.3510,
        -920.3507, -920.3504, -920.3503, -920.3502, -920.3501, -920.3500,
        -920.3500, -920.3500, -920.3499, -920.3499, -920.3499, -920.3499,
        -920.3499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7455e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1093, -460.1308, -460.1372, -460.1406, -460.1428, -460.1444,
        -460.1455, -460.1462, -460.1468, -460.1471, -460.1474, -460.1476,
        -460.1477, -460.1478, -460.1479, -460.1479, -460.1480, -460.1480,
        -460.1480, -460.1480, -460.1480, -460.1480, -460.1480, -460.1480,
        -460.1480], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5351e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3502, -920.3501, -920.3500, -920.3500, -920.3500, -920.3499,
        -920.3499, -920.3499, -920.3499, -920.3499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1479, -460.1480, -460.1480, -460.1480, -460.1480, -460.1480,
        -460.1480, -460.1480, -460.1480, -460.1480], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 5 	 Cl2 	 Cl2 	 0.0003865538302717167

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9677, -1.0897, -1.1210, -1.1370, -1.1471, -1.1539, -1.1586, -1.1619,
        -1.1642, -1.1658, -1.1669, -1.1677, -1.1683, -1.1686, -1.1689, -1.1691,
        -1.1692, -1.1693, -1.1694, -1.1694, -1.1695, -1.1695, -1.1695, -1.1695,
        -1.1695], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2573, -0.4418, -0.4662, -0.4778, -0.4848, -0.4895, -0.4927, -0.4949,
        -0.4964, -0.4974, -0.4982, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3053e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1691, -1.1692, -1.1693, -1.1694, -1.1694, -1.1695, -1.1695, -1.1695,
        -1.1695, -1.1695], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 0 	 H2 	 H2 	 4.870518372956155e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 21, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 21, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 21, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 21, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 21, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 21, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 21, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e21)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e21/2022-11-03_10:00:47.012723_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e21/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 21 || ,[' rho : 6.049186', ' ae : 7.851112', ' E : 0.743358'] ,|| total loss 20.537519 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7612, -37.7994, -37.8125, -37.8197, -37.8244, -37.8277, -37.8301,
        -37.8317, -37.8329, -37.8337, -37.8343, -37.8347, -37.8350, -37.8352,
        -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7540e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7540e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 6 	 C 	 C 	 5.542362472656082e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1021, -460.1270, -460.1348, -460.1390, -460.1417, -460.1437,
        -460.1450, -460.1460, -460.1466, -460.1471, -460.1475, -460.1477,
        -460.1479, -460.1480, -460.1481, -460.1481, -460.1481, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9194e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9194e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1481, -460.1481, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 7 	 Cl 	 Cl 	 1.2474856919961188e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0378, -1.1173, -1.1378, -1.1483, -1.1549, -1.1594, -1.1624, -1.1646,
        -1.1661, -1.1672, -1.1679, -1.1684, -1.1688, -1.1690, -1.1692, -1.1693,
        -1.1694, -1.1695, -1.1695, -1.1695, -1.1696, -1.1696, -1.1696, -1.1696,
        -1.1696], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 6, 6])
mo_energy   ---   torch.Size([2, 6])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 592])
ao_eval   ---   torch.Size([1, 10, 592, 6])
grid_weights   ---   torch.Size([1, 592])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 6])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 6])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0002, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3105, -0.4568, -0.4746, -0.4832, -0.4885, -0.4920, -0.4944, -0.4961,
        -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3973e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0049, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1693, -1.1694, -1.1695, -1.1695, -1.1695, -1.1696, -1.1696, -1.1696,
        -1.1696, -1.1696], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 0 	 H2 	 H2 	 4.746624166228142e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7108, -109.5629, -109.5233, -109.5029, -109.4900, -109.4812,
        -109.4750, -109.4708, -109.4678, -109.4657, -109.4642, -109.4632,
        -109.4625, -109.4620, -109.4616, -109.4614, -109.4612, -109.4611,
        -109.4610, -109.4610, -109.4609, -109.4609, -109.4609, -109.4609,
        -109.4608], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1786])
ao_eval   ---   torch.Size([1, 10, 1786, 26])
grid_weights   ---   torch.Size([1, 1786])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.5101e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2390, -0.4363, -0.4632, -0.4759, -0.4835, -0.4886, -0.4920, -0.4944,
        -0.4961, -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6680e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6680e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 9 	 H 	 H 	 3.993503936427672e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4423, -93.4010, -93.3900, -93.3851, -93.3823, -93.3804, -93.3790,
        -93.3781, -93.3775, -93.3770, -93.3767, -93.3765, -93.3763, -93.3762,
        -93.3761, -93.3761, -93.3760, -93.3760, -93.3760, -93.3760, -93.3760,
        -93.3760, -93.3760, -93.3760, -93.3760], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 29, 29])
mo_energy   ---   torch.Size([2, 29])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 956])
ao_eval   ---   torch.Size([1, 10, 956, 29])
grid_weights   ---   torch.Size([1, 956])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 29])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 29])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.0710e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7600, -37.7988, -37.8121, -37.8196, -37.8245, -37.8279, -37.8303,
        -37.8320, -37.8332, -37.8340, -37.8346, -37.8351, -37.8354, -37.8356,
        -37.8357, -37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4874e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2814, -0.4488, -0.4701, -0.4803, -0.4865, -0.4907, -0.4935, -0.4954,
        -0.4968, -0.4977, -0.4984, -0.4988, -0.4991, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 3, 3])
mo_energy   ---   torch.Size([2, 3])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 3])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 3])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 3])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8433e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2613, -107.3374, -107.3637, -107.3789, -107.3885, -107.3951,
        -107.3996, -107.4027, -107.4050, -107.4065, -107.4076, -107.4084,
        -107.4089, -107.4093, -107.4095, -107.4097, -107.4099, -107.4099,
        -107.4100, -107.4101, -107.4101, -107.4101, -107.4101, -107.4101,
        -107.4101], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1893])
ao_eval   ---   torch.Size([1, 10, 1893, 26])
grid_weights   ---   torch.Size([1, 1893])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3617e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4657, -920.4007, -920.3821, -920.3723, -920.3661, -920.3618,
        -920.3588, -920.3568, -920.3553, -920.3543, -920.3536, -920.3530,
        -920.3527, -920.3525, -920.3523, -920.3522, -920.3521, -920.3520,
        -920.3520, -920.3519, -920.3519, -920.3519, -920.3519, -920.3519,
        -920.3519], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 42, 42])
mo_energy   ---   torch.Size([2, 42])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2634])
ao_eval   ---   torch.Size([1, 10, 2634, 42])
grid_weights   ---   torch.Size([1, 2634])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 42])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 42])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7086e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0949, -460.1231, -460.1324, -460.1375, -460.1409, -460.1432,
        -460.1449, -460.1461, -460.1469, -460.1475, -460.1479, -460.1482,
        -460.1484, -460.1486, -460.1487, -460.1487, -460.1488, -460.1488,
        -460.1489, -460.1489, -460.1489, -460.1489, -460.1489, -460.1489,
        -460.1489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 21, 21])
mo_energy   ---   torch.Size([2, 21])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 21])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 21])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 21])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2378e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3522, -920.3521, -920.3520, -920.3520, -920.3519, -920.3519,
        -920.3519, -920.3519, -920.3519, -920.3519], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1487, -460.1488, -460.1488, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1489, -460.1489], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 5 	 Cl2 	 Cl2 	 0.0003822554990048282

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4689, -7.4762, -7.4787, -7.4800, -7.4808, -7.4816, -7.4824, -7.4827,
        -7.4826, -7.4823, -7.4821, -7.4821, -7.4820, -7.4821, -7.4821, -7.4821,
        -7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821,
        -7.4821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 13])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7460e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7460e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821, -7.4821,
        -7.4821, -7.4821], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 10 	 Li 	 Li 	 3.854850510449054e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0241, -188.6713, -188.5987, -188.5649, -188.5435, -188.5289,
        -188.5188, -188.5118, -188.5068, -188.5034, -188.5010, -188.4993,
        -188.4981, -188.4972, -188.4967, -188.4963, -188.4960, -188.4958,
        -188.4956, -188.4955, -188.4955, -188.4954, -188.4954, -188.4954,
        -188.4954], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3570])
ao_eval   ---   torch.Size([1, 10, 3570, 39])
grid_weights   ---   torch.Size([1, 3570])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.2222e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7649, -37.8021, -37.8145, -37.8212, -37.8257, -37.8288, -37.8310,
        -37.8325, -37.8336, -37.8344, -37.8349, -37.8353, -37.8355, -37.8357,
        -37.8359, -37.8359, -37.8360, -37.8361, -37.8361, -37.8361, -37.8361,
        -37.8361, -37.8361, -37.8361, -37.8362], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 13])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4060e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0012, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 22, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 22, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'N'}
{'Epoch': 22, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 22, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 22, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 22, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 22, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e22)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e22/2022-11-03_10:00:47.012723_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/08/MODEL_MGGA_e22/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 22 || ,[' rho : 6.048978', ' ae : 7.809420', ' E : 0.709490'] ,|| total loss 20.525587 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
Max checkpoint number reached -- aborting training process.

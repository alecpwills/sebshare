{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/09",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/06/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": false,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "chkptmax": 20
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3], '  4COO': [4], '  5ClCl': [5]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [6], 'Cl': [7], 'F': [8], 'H': [9], 'Li': [10], 'N': [11], 'O': [12]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{}
MOLECULES TO TRAIN ON
{'  0HH': [0, 9, 9], '  1NN': [1, 11, 11], '  2LiF': [2, 10, 8], '  3CNH': [3, 6, 11, 9], '  4COO': [4, 6, 12, 12], '  5ClCl': [5, 7, 7], 'C': [6], 'Cl': [7], 'F': [8], 'H': [9], 'Li': [10], 'N': [11], 'O': [12]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 3, 7: 2, 8: 2, 9: 3, 10: 2, 11: 3, 12: 2}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4623, -7.4687, -7.4723, -7.4743, -7.4756, -7.4765, -7.4773, -7.4781,
        -7.4785, -7.4783, -7.4780, -7.4779, -7.4779, -7.4779, -7.4779, -7.4780,
        -7.4780, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781, -7.4781, -7.4781,
        -7.4781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2286e-10, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2286e-12, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781, -7.4781,
        -7.4781, -7.4781], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 Li 	 Li 	 5.6837309476359626e-11

PASSTHROUGH -- Li DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2409, -0.4372, -0.4629, -0.4751, -0.4825, -0.4873, -0.4907, -0.4930,
        -0.4945, -0.4956, -0.4964, -0.4970, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8580e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8580e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 H 	 H 	 7.70816787426596e-07

PASSTHROUGH -- H DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2380, -107.3008, -107.3226, -107.3354, -107.3435, -107.3490,
        -107.3528, -107.3555, -107.3573, -107.3586, -107.3595, -107.3602,
        -107.3606, -107.3609, -107.3611, -107.3613, -107.3614, -107.3615,
        -107.3615, -107.3616, -107.3616, -107.3616, -107.3616, -107.3616,
        -107.3616], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1558e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1168, -460.1341, -460.1400, -460.1433, -460.1455, -460.1470,
        -460.1481, -460.1489, -460.1495, -460.1498, -460.1501, -460.1503,
        -460.1504, -460.1505, -460.1506, -460.1506, -460.1507, -460.1507,
        -460.1507, -460.1507, -460.1507, -460.1507, -460.1507, -460.1508,
        -460.1508], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8215e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8215e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1506, -460.1507, -460.1507, -460.1507, -460.1507, -460.1507,
        -460.1507, -460.1507, -460.1508, -460.1508], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 Cl 	 Cl 	 1.7662058034339169e-06

PASSTHROUGH -- Cl DONE.
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4906, -920.4102, -920.3878, -920.3761, -920.3686, -920.3635,
        -920.3599, -920.3574, -920.3557, -920.3545, -920.3536, -920.3530,
        -920.3526, -920.3523, -920.3521, -920.3520, -920.3519, -920.3518,
        -920.3517, -920.3517, -920.3517, -920.3517, -920.3517, -920.3516,
        -920.3516], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3853e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1178, -460.1348, -460.1405, -460.1437, -460.1458, -460.1472,
        -460.1483, -460.1490, -460.1495, -460.1499, -460.1501, -460.1503,
        -460.1505, -460.1505, -460.1506, -460.1507, -460.1507, -460.1507,
        -460.1507, -460.1507, -460.1507, -460.1507, -460.1507, -460.1508,
        -460.1508], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8322e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3520, -920.3519, -920.3518, -920.3517, -920.3517, -920.3517,
        -920.3517, -920.3517, -920.3516, -920.3516], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1507, -460.1507, -460.1507, -460.1507, -460.1507, -460.1507,
        -460.1507, -460.1507, -460.1508, -460.1508], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 Cl2 	 Cl2 	 0.0004605084214217992

PASSTHROUGH -- Cl2 DONE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0224, -188.6381, -188.5549, -188.5149, -188.4896, -188.4723,
        -188.4603, -188.4520, -188.4461, -188.4420, -188.4392, -188.4372,
        -188.4358, -188.4348, -188.4341, -188.4336, -188.4333, -188.4330,
        -188.4329, -188.4327, -188.4327, -188.4326, -188.4326, -188.4325,
        -188.4325], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3837e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9682, -1.0882, -1.1189, -1.1346, -1.1445, -1.1512, -1.1559, -1.1591,
        -1.1614, -1.1629, -1.1640, -1.1648, -1.1654, -1.1657, -1.1660, -1.1662,
        -1.1663, -1.1664, -1.1665, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2241, -0.4321, -0.4601, -0.4733, -0.4813, -0.4865, -0.4901, -0.4926,
        -0.4943, -0.4955, -0.4963, -0.4969, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9181e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1662, -1.1663, -1.1664, -1.1665, -1.1665, -1.1665, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 3.956405012904702e-06

PASSTHROUGH -- H2 DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4872, -93.3995, -93.3761, -93.3652, -93.3585, -93.3541, -93.3510,
        -93.3488, -93.3473, -93.3462, -93.3455, -93.3450, -93.3446, -93.3444,
        -93.3442, -93.3441, -93.3440, -93.3439, -93.3439, -93.3438, -93.3438,
        -93.3438, -93.3438, -93.3438, -93.3438], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6367e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6145, -109.5020, -109.4718, -109.4562, -109.4463, -109.4396,
        -109.4349, -109.4316, -109.4293, -109.4277, -109.4266, -109.4258,
        -109.4253, -109.4249, -109.4246, -109.4244, -109.4243, -109.4242,
        -109.4242, -109.4241, -109.4241, -109.4241, -109.4240, -109.4240,
        -109.4240], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6218e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 0, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 0, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 0, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 0, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 0, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 0, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 0, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 0, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e00/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 6.346369', ' ae : 8.476228', ' E : 0.406070'] ,|| total loss 21.446353 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9498, -1.0811, -1.1146, -1.1317, -1.1425, -1.1498, -1.1549, -1.1584,
        -1.1609, -1.1626, -1.1638, -1.1647, -1.1652, -1.1657, -1.1659, -1.1661,
        -1.1663, -1.1664, -1.1665, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2663, -0.4445, -0.4670, -0.4777, -0.4842, -0.4885, -0.4915, -0.4935,
        -0.4949, -0.4959, -0.4966, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7739e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1661, -1.1663, -1.1664, -1.1665, -1.1665, -1.1665, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 3.975946058799871e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4656, -7.4727, -7.4751, -7.4764, -7.4772, -7.4781, -7.4787, -7.4788,
        -7.4786, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5898e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.5898e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 Li 	 Li 	 3.791083310337402e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4824, -93.4003, -93.3783, -93.3681, -93.3618, -93.3576, -93.3547,
        -93.3526, -93.3512, -93.3502, -93.3495, -93.3490, -93.3487, -93.3484,
        -93.3483, -93.3481, -93.3481, -93.3480, -93.3480, -93.3479, -93.3479,
        -93.3479, -93.3479, -93.3479, -93.3479], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6374e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3317, -0.4619, -0.4768, -0.4841, -0.4886, -0.4915, -0.4936, -0.4950,
        -0.4960, -0.4967, -0.4971, -0.4975, -0.4977, -0.4979, -0.4980, -0.4981,
        -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4710e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4710e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 H 	 H 	 7.267897922078862e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5084, -920.4321, -920.4108, -920.3998, -920.3927, -920.3879,
        -920.3846, -920.3822, -920.3806, -920.3794, -920.3786, -920.3781,
        -920.3777, -920.3774, -920.3772, -920.3771, -920.3770, -920.3769,
        -920.3768, -920.3768, -920.3768, -920.3768, -920.3768, -920.3768,
        -920.3767], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3867e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1268, -460.1447, -460.1513, -460.1550, -460.1574, -460.1592,
        -460.1604, -460.1613, -460.1619, -460.1623, -460.1626, -460.1629,
        -460.1630, -460.1631, -460.1632, -460.1632, -460.1633, -460.1633,
        -460.1633, -460.1633, -460.1633, -460.1634, -460.1634, -460.1634,
        -460.1634], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4923e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3771, -920.3770, -920.3769, -920.3768, -920.3768, -920.3768,
        -920.3768, -920.3768, -920.3768, -920.3767], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1632, -460.1633, -460.1633, -460.1633, -460.1633, -460.1633,
        -460.1634, -460.1634, -460.1634, -460.1634], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 Cl2 	 Cl2 	 0.0004628774258824345

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1716, -107.2741, -107.3083, -107.3280, -107.3403, -107.3487,
        -107.3545, -107.3585, -107.3613, -107.3633, -107.3647, -107.3656,
        -107.3663, -107.3668, -107.3671, -107.3674, -107.3675, -107.3676,
        -107.3677, -107.3678, -107.3678, -107.3678, -107.3679, -107.3679,
        -107.3679], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1578e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6004, -109.4998, -109.4728, -109.4590, -109.4502, -109.4442,
        -109.4400, -109.4371, -109.4350, -109.4336, -109.4326, -109.4319,
        -109.4314, -109.4311, -109.4309, -109.4307, -109.4306, -109.4305,
        -109.4304, -109.4304, -109.4304, -109.4303, -109.4303, -109.4303,
        -109.4303], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6266e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8555, -188.5931, -188.5331, -188.5036, -188.4850, -188.4723,
        -188.4635, -188.4573, -188.4530, -188.4500, -188.4479, -188.4464,
        -188.4454, -188.4447, -188.4442, -188.4438, -188.4436, -188.4434,
        -188.4433, -188.4432, -188.4431, -188.4431, -188.4431, -188.4430,
        -188.4430], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3833e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1278, -460.1460, -460.1528, -460.1566, -460.1592, -460.1609,
        -460.1622, -460.1631, -460.1638, -460.1642, -460.1646, -460.1648,
        -460.1650, -460.1651, -460.1651, -460.1652, -460.1652, -460.1653,
        -460.1653, -460.1653, -460.1653, -460.1653, -460.1653, -460.1653,
        -460.1653], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1693e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1693e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1652, -460.1652, -460.1653, -460.1653, -460.1653, -460.1653,
        -460.1653, -460.1653, -460.1653, -460.1653], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 Cl 	 Cl 	 7.00868245777726e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 1, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 1, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 1, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 1, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 1, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 1, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 1, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 1, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 6.346882', ' ae : 9.095264', ' E : 2.096804'] ,|| total loss 21.574242 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0477, -1.1196, -1.1381, -1.1476, -1.1536, -1.1576, -1.1604, -1.1624,
        -1.1637, -1.1647, -1.1654, -1.1658, -1.1662, -1.1664, -1.1665, -1.1667,
        -1.1667, -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1669, -1.1669,
        -1.1669], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2346, -0.4353, -0.4619, -0.4745, -0.4821, -0.4871, -0.4905, -0.4929,
        -0.4945, -0.4956, -0.4964, -0.4970, -0.4974, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7486e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1667, -1.1667, -1.1668, -1.1668, -1.1669, -1.1669, -1.1669, -1.1669,
        -1.1669, -1.1669], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 3.5661233039053613e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1303, -460.1451, -460.1497, -460.1522, -460.1538, -460.1549,
        -460.1557, -460.1563, -460.1567, -460.1570, -460.1572, -460.1573,
        -460.1574, -460.1575, -460.1575, -460.1575, -460.1576, -460.1576,
        -460.1576, -460.1576, -460.1576, -460.1576, -460.1576, -460.1576,
        -460.1576], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.7653e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7653e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1575, -460.1576, -460.1576, -460.1576, -460.1576, -460.1576,
        -460.1576, -460.1576, -460.1576, -460.1576], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 Cl 	 Cl 	 2.1606956247691886e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5014, -93.4057, -93.3800, -93.3682, -93.3610, -93.3562, -93.3529,
        -93.3505, -93.3489, -93.3478, -93.3470, -93.3464, -93.3460, -93.3458,
        -93.3456, -93.3454, -93.3453, -93.3453, -93.3452, -93.3452, -93.3452,
        -93.3452, -93.3451, -93.3451, -93.3451], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6374e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3453, -0.4652, -0.4787, -0.4853, -0.4894, -0.4921, -0.4940, -0.4952,
        -0.4961, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980, -0.4981,
        -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4929e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4929e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 H 	 H 	 7.431975371611129e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4677, -920.3981, -920.3789, -920.3689, -920.3625, -920.3582,
        -920.3552, -920.3530, -920.3516, -920.3505, -920.3498, -920.3493,
        -920.3489, -920.3487, -920.3485, -920.3484, -920.3483, -920.3482,
        -920.3482, -920.3482, -920.3481, -920.3481, -920.3481, -920.3481,
        -920.3481], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3849e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1168, -460.1335, -460.1390, -460.1421, -460.1441, -460.1455,
        -460.1465, -460.1472, -460.1477, -460.1481, -460.1483, -460.1485,
        -460.1486, -460.1487, -460.1488, -460.1488, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1489, -460.1489, -460.1489, -460.1489,
        -460.1489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.6920e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3484, -920.3483, -920.3482, -920.3482, -920.3482, -920.3481,
        -920.3481, -920.3481, -920.3481, -920.3481], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1488, -460.1489, -460.1489, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1489, -460.1489], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 Cl2 	 Cl2 	 0.0004583590319610415

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0894, -188.6558, -188.5639, -188.5201, -188.4923, -188.4733,
        -188.4602, -188.4510, -188.4446, -188.4401, -188.4370, -188.4348,
        -188.4333, -188.4322, -188.4314, -188.4309, -188.4305, -188.4303,
        -188.4301, -188.4300, -188.4299, -188.4298, -188.4298, -188.4297,
        -188.4297], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3862e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2072, -107.2856, -107.3125, -107.3281, -107.3380, -107.3447,
        -107.3493, -107.3525, -107.3548, -107.3564, -107.3575, -107.3583,
        -107.3588, -107.3592, -107.3595, -107.3597, -107.3598, -107.3599,
        -107.3599, -107.3600, -107.3600, -107.3600, -107.3601, -107.3601,
        -107.3601], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1530e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4623, -7.4689, -7.4724, -7.4744, -7.4756, -7.4765, -7.4774, -7.4782,
        -7.4785, -7.4782, -7.4780, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4781,
        -7.4781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7462e-10, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7462e-12, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4779, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780, -7.4780,
        -7.4781, -7.4781], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 Li 	 Li 	 2.558749151739264e-11

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6845, -109.5301, -109.4880, -109.4663, -109.4524, -109.4430,
        -109.4364, -109.4318, -109.4286, -109.4264, -109.4248, -109.4237,
        -109.4229, -109.4224, -109.4220, -109.4218, -109.4216, -109.4215,
        -109.4214, -109.4213, -109.4213, -109.4212, -109.4212, -109.4212,
        -109.4212], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6191e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 2, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 2, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 2, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 2, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 2, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 2, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 2, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 2, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 6.344825', ' ae : 8.631564', ' E : 0.893440'] ,|| total loss 21.469134 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4640, -7.4714, -7.4740, -7.4754, -7.4764, -7.4772, -7.4780, -7.4783,
        -7.4781, -7.4779, -7.4777, -7.4777, -7.4777, -7.4778, -7.4778, -7.4778,
        -7.4778, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3961e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3961e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4778, -7.4778, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779, -7.4779], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 Li 	 Li 	 5.340109289976995e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4822, -920.3940, -920.3691, -920.3561, -920.3477, -920.3420,
        -920.3381, -920.3353, -920.3333, -920.3320, -920.3310, -920.3304,
        -920.3299, -920.3296, -920.3293, -920.3292, -920.3291, -920.3290,
        -920.3289, -920.3289, -920.3289, -920.3288, -920.3288, -920.3288,
        -920.3288], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3836e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1062, -460.1232, -460.1289, -460.1321, -460.1342, -460.1357,
        -460.1367, -460.1375, -460.1380, -460.1384, -460.1386, -460.1388,
        -460.1389, -460.1390, -460.1391, -460.1391, -460.1392, -460.1392,
        -460.1392, -460.1392, -460.1392, -460.1392, -460.1392, -460.1392,
        -460.1392], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2746e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3292, -920.3291, -920.3290, -920.3289, -920.3289, -920.3289,
        -920.3288, -920.3288, -920.3288, -920.3288], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1391, -460.1392, -460.1392, -460.1392, -460.1392, -460.1392,
        -460.1392, -460.1392, -460.1392, -460.1392], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 Cl2 	 Cl2 	 0.0004557005390149948

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9788, -188.6190, -188.5402, -188.5022, -188.4780, -188.4616,
        -188.4502, -188.4423, -188.4367, -188.4328, -188.4301, -188.4282,
        -188.4269, -188.4259, -188.4253, -188.4248, -188.4245, -188.4243,
        -188.4241, -188.4240, -188.4239, -188.4239, -188.4238, -188.4238,
        -188.4238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3876e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5294, -93.4121, -93.3804, -93.3662, -93.3578, -93.3521, -93.3482,
        -93.3455, -93.3435, -93.3422, -93.3413, -93.3406, -93.3401, -93.3398,
        -93.3396, -93.3394, -93.3393, -93.3392, -93.3392, -93.3391, -93.3391,
        -93.3391, -93.3391, -93.3391, -93.3391], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6381e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2212, -107.2902, -107.3141, -107.3281, -107.3369, -107.3428,
        -107.3470, -107.3498, -107.3519, -107.3533, -107.3543, -107.3550,
        -107.3555, -107.3558, -107.3560, -107.3562, -107.3563, -107.3564,
        -107.3565, -107.3565, -107.3565, -107.3565, -107.3566, -107.3566,
        -107.3566], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1511e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.5812, -109.4851, -109.4595, -109.4462, -109.4378, -109.4321,
        -109.4282, -109.4254, -109.4234, -109.4221, -109.4211, -109.4205,
        -109.4200, -109.4197, -109.4195, -109.4193, -109.4192, -109.4191,
        -109.4190, -109.4190, -109.4190, -109.4190, -109.4190, -109.4189,
        -109.4189], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6173e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0338, -1.1137, -1.1344, -1.1449, -1.1515, -1.1560, -1.1591, -1.1613,
        -1.1628, -1.1639, -1.1646, -1.1651, -1.1655, -1.1658, -1.1659, -1.1661,
        -1.1662, -1.1662, -1.1663, -1.1663, -1.1663, -1.1663, -1.1663, -1.1663,
        -1.1663], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2857, -0.4498, -0.4699, -0.4796, -0.4855, -0.4894, -0.4921, -0.4939,
        -0.4952, -0.4961, -0.4967, -0.4972, -0.4975, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7933e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1661, -1.1662, -1.1662, -1.1663, -1.1663, -1.1663, -1.1663, -1.1663,
        -1.1663, -1.1663], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 4.37071881990504e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2977, -0.4530, -0.4718, -0.4808, -0.4863, -0.4899, -0.4925, -0.4942,
        -0.4954, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7786e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7786e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 H 	 H 	 7.977272946923323e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1016, -460.1178, -460.1230, -460.1259, -460.1278, -460.1292,
        -460.1301, -460.1308, -460.1313, -460.1316, -460.1318, -460.1320,
        -460.1321, -460.1322, -460.1323, -460.1323, -460.1323, -460.1323,
        -460.1324, -460.1324, -460.1324, -460.1324, -460.1324, -460.1324,
        -460.1324], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6053e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6053e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1323, -460.1323, -460.1323, -460.1324, -460.1324, -460.1324,
        -460.1324, -460.1324, -460.1324, -460.1324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 Cl 	 Cl 	 5.7016191331130875e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 3, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 3, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 3, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 3, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 3, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 3, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 3, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 3, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 6.345694', ' ae : 8.926111', ' E : 1.638206'] ,|| total loss 21.535424 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4692, -93.3891, -93.3677, -93.3576, -93.3515, -93.3474, -93.3445,
        -93.3425, -93.3411, -93.3401, -93.3394, -93.3390, -93.3386, -93.3384,
        -93.3382, -93.3381, -93.3380, -93.3380, -93.3379, -93.3379, -93.3379,
        -93.3379, -93.3379, -93.3378, -93.3378], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6378e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1740, -107.2681, -107.2997, -107.3181, -107.3296, -107.3373,
        -107.3427, -107.3465, -107.3491, -107.3510, -107.3523, -107.3532,
        -107.3538, -107.3542, -107.3546, -107.3548, -107.3549, -107.3550,
        -107.3551, -107.3552, -107.3552, -107.3552, -107.3552, -107.3553,
        -107.3553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1503e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9626, -1.0858, -1.1173, -1.1334, -1.1436, -1.1505, -1.1553, -1.1586,
        -1.1609, -1.1625, -1.1636, -1.1644, -1.1650, -1.1654, -1.1656, -1.1658,
        -1.1660, -1.1661, -1.1661, -1.1662, -1.1662, -1.1662, -1.1662, -1.1663,
        -1.1663], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2141, -0.4291, -0.4584, -0.4722, -0.4805, -0.4860, -0.4897, -0.4923,
        -0.4941, -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4978,
        -0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4981,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0674e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1658, -1.1660, -1.1661, -1.1661, -1.1662, -1.1662, -1.1662, -1.1662,
        -1.1663, -1.1663], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4978, -0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981,
        -0.4981, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 4.478340407653893e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9704, -188.6154, -188.5374, -188.4998, -188.4759, -188.4597,
        -188.4484, -188.4405, -188.4350, -188.4312, -188.4285, -188.4266,
        -188.4253, -188.4243, -188.4237, -188.4232, -188.4229, -188.4227,
        -188.4225, -188.4224, -188.4224, -188.4223, -188.4223, -188.4222,
        -188.4222], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3883e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1061, -460.1213, -460.1260, -460.1286, -460.1303, -460.1315,
        -460.1323, -460.1329, -460.1333, -460.1336, -460.1338, -460.1339,
        -460.1340, -460.1341, -460.1342, -460.1342, -460.1342, -460.1342,
        -460.1342, -460.1342, -460.1343, -460.1343, -460.1343, -460.1343,
        -460.1343], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0157e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0157e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1342, -460.1342, -460.1342, -460.1342, -460.1342, -460.1343,
        -460.1343, -460.1343, -460.1343, -460.1343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 Cl 	 Cl 	 4.411318806616872e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2728, -0.4463, -0.4680, -0.4783, -0.4846, -0.4888, -0.4917, -0.4936,
        -0.4950, -0.4960, -0.4966, -0.4971, -0.4974, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8310e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8310e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 H 	 H 	 7.926671894142023e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6726, -109.5244, -109.4840, -109.4632, -109.4499, -109.4409,
        -109.4346, -109.4303, -109.4272, -109.4250, -109.4235, -109.4225,
        -109.4217, -109.4212, -109.4209, -109.4206, -109.4204, -109.4203,
        -109.4202, -109.4202, -109.4201, -109.4201, -109.4201, -109.4201,
        -109.4201], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6176e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4414, -920.3759, -920.3579, -920.3486, -920.3426, -920.3386,
        -920.3357, -920.3337, -920.3324, -920.3314, -920.3307, -920.3302,
        -920.3299, -920.3297, -920.3295, -920.3294, -920.3293, -920.3293,
        -920.3292, -920.3292, -920.3292, -920.3292, -920.3291, -920.3291,
        -920.3291], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3837e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1110, -460.1262, -460.1309, -460.1335, -460.1352, -460.1364,
        -460.1373, -460.1378, -460.1383, -460.1386, -460.1388, -460.1389,
        -460.1390, -460.1391, -460.1391, -460.1392, -460.1392, -460.1392,
        -460.1392, -460.1392, -460.1392, -460.1392, -460.1392, -460.1392,
        -460.1392], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2136e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3294, -920.3293, -920.3293, -920.3292, -920.3292, -920.3292,
        -920.3292, -920.3291, -920.3291, -920.3291], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1392, -460.1392, -460.1392, -460.1392, -460.1392, -460.1392,
        -460.1392, -460.1392, -460.1392, -460.1392], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 Cl2 	 Cl2 	 0.00045000823655240083

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4642, -7.4716, -7.4742, -7.4755, -7.4765, -7.4773, -7.4781, -7.4784,
        -7.4781, -7.4779, -7.4778, -7.4778, -7.4778, -7.4778, -7.4778, -7.4779,
        -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3980e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3980e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779, -7.4779,
        -7.4779, -7.4779], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 Li 	 Li 	 3.518663243077936e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 4, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 4, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 4, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 4, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 4, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 4, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 4, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 4, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 6.345725', ' ae : 8.765281', ' E : 1.492616'] ,|| total loss 21.502470 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9836, -188.6236, -188.5448, -188.5067, -188.4826, -188.4662,
        -188.4548, -188.4469, -188.4413, -188.4374, -188.4347, -188.4328,
        -188.4315, -188.4305, -188.4299, -188.4294, -188.4291, -188.4289,
        -188.4287, -188.4286, -188.4285, -188.4285, -188.4284, -188.4284,
        -188.4284], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3873e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1134, -460.1293, -460.1344, -460.1372, -460.1390, -460.1403,
        -460.1412, -460.1418, -460.1423, -460.1426, -460.1428, -460.1430,
        -460.1431, -460.1432, -460.1432, -460.1433, -460.1433, -460.1433,
        -460.1433, -460.1433, -460.1433, -460.1434, -460.1434, -460.1434,
        -460.1434], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3305e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3305e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1433, -460.1433, -460.1433, -460.1433, -460.1433, -460.1433,
        -460.1434, -460.1434, -460.1434, -460.1434], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 Cl 	 Cl 	 5.042955141740323e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.7045, -109.5395, -109.4944, -109.4710, -109.4562, -109.4460,
        -109.4390, -109.4341, -109.4306, -109.4282, -109.4265, -109.4254,
        -109.4245, -109.4239, -109.4235, -109.4233, -109.4231, -109.4229,
        -109.4228, -109.4228, -109.4227, -109.4227, -109.4227, -109.4226,
        -109.4226], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6193e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2038, -107.2842, -107.3116, -107.3276, -107.3377, -107.3445,
        -107.3492, -107.3525, -107.3549, -107.3565, -107.3576, -107.3584,
        -107.3590, -107.3593, -107.3596, -107.3598, -107.3599, -107.3600,
        -107.3601, -107.3601, -107.3602, -107.3602, -107.3602, -107.3602,
        -107.3602], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1530e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4865, -920.4033, -920.3799, -920.3678, -920.3600, -920.3546,
        -920.3509, -920.3484, -920.3465, -920.3453, -920.3444, -920.3438,
        -920.3433, -920.3430, -920.3428, -920.3426, -920.3425, -920.3425,
        -920.3424, -920.3424, -920.3424, -920.3423, -920.3423, -920.3423,
        -920.3423], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3846e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1078, -460.1260, -460.1330, -460.1368, -460.1394, -460.1413,
        -460.1426, -460.1435, -460.1442, -460.1447, -460.1450, -460.1452,
        -460.1454, -460.1455, -460.1456, -460.1456, -460.1457, -460.1457,
        -460.1457, -460.1457, -460.1457, -460.1457, -460.1458, -460.1458,
        -460.1458], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6556e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3426, -920.3425, -920.3425, -920.3424, -920.3424, -920.3424,
        -920.3423, -920.3423, -920.3423, -920.3423], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1456, -460.1457, -460.1457, -460.1457, -460.1457, -460.1457,
        -460.1457, -460.1458, -460.1458, -460.1458], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 Cl2 	 Cl2 	 0.0004470399903922697

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3473, -0.4657, -0.4790, -0.4855, -0.4895, -0.4922, -0.4940, -0.4953,
        -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980, -0.4980,
        -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5354e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5354e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 H 	 H 	 7.581438680496722e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4728, -7.4751, -7.4763, -7.4772, -7.4780, -7.4787, -7.4787,
        -7.4784, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4783,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0348e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0348e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4783], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 Li 	 Li 	 1.710535546420805e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0283, -1.1118, -1.1333, -1.1443, -1.1512, -1.1559, -1.1592, -1.1614,
        -1.1630, -1.1641, -1.1649, -1.1654, -1.1658, -1.1661, -1.1663, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2400, -0.4369, -0.4628, -0.4750, -0.4824, -0.4873, -0.4907, -0.4929,
        -0.4945, -0.4957, -0.4964, -0.4970, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8148e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 3.880267089483949e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4874, -93.4004, -93.3772, -93.3663, -93.3598, -93.3553, -93.3523,
        -93.3501, -93.3486, -93.3476, -93.3468, -93.3463, -93.3460, -93.3457,
        -93.3455, -93.3454, -93.3453, -93.3453, -93.3452, -93.3452, -93.3452,
        -93.3452, -93.3451, -93.3451, -93.3451], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6334e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 5, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 5, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 5, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 5, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 5, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 5, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 5, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 5, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e05/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 6.344298', ' ae : 8.382569', ' E : 0.514265'] ,|| total loss 21.417461 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1168, -460.1348, -460.1414, -460.1451, -460.1475, -460.1492,
        -460.1505, -460.1514, -460.1520, -460.1524, -460.1527, -460.1529,
        -460.1531, -460.1532, -460.1533, -460.1533, -460.1534, -460.1534,
        -460.1534, -460.1534, -460.1534, -460.1534, -460.1535, -460.1535,
        -460.1535], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1078e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1078e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1533, -460.1534, -460.1534, -460.1534, -460.1534, -460.1534,
        -460.1534, -460.1535, -460.1535, -460.1535], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 Cl 	 Cl 	 6.9466314993470494e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2974, -0.4530, -0.4718, -0.4808, -0.4863, -0.4900, -0.4925, -0.4942,
        -0.4954, -0.4963, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6151e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6151e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 H 	 H 	 7.46024875237671e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5131, -920.4255, -920.4007, -920.3879, -920.3796, -920.3739,
        -920.3700, -920.3673, -920.3653, -920.3640, -920.3630, -920.3624,
        -920.3619, -920.3616, -920.3614, -920.3612, -920.3611, -920.3610,
        -920.3610, -920.3609, -920.3609, -920.3609, -920.3609, -920.3608,
        -920.3608], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3858e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1204, -460.1378, -460.1439, -460.1473, -460.1495, -460.1511,
        -460.1522, -460.1530, -460.1536, -460.1540, -460.1542, -460.1544,
        -460.1546, -460.1547, -460.1547, -460.1548, -460.1548, -460.1548,
        -460.1549, -460.1549, -460.1549, -460.1549, -460.1549, -460.1549,
        -460.1549], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9818e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3612, -920.3611, -920.3610, -920.3610, -920.3609, -920.3609,
        -920.3609, -920.3609, -920.3608, -920.3608], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1548, -460.1548, -460.1548, -460.1549, -460.1549, -460.1549,
        -460.1549, -460.1549, -460.1549, -460.1549], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 Cl2 	 Cl2 	 0.0004415412636864574

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6408, -109.5145, -109.4804, -109.4628, -109.4516, -109.4440,
        -109.4387, -109.4350, -109.4324, -109.4306, -109.4293, -109.4284,
        -109.4278, -109.4274, -109.4271, -109.4269, -109.4267, -109.4266,
        -109.4265, -109.4265, -109.4264, -109.4264, -109.4264, -109.4264,
        -109.4264], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6215e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0172, -188.6392, -188.5572, -188.5177, -188.4927, -188.4756,
        -188.4638, -188.4556, -188.4498, -188.4458, -188.4429, -188.4410,
        -188.4396, -188.4386, -188.4379, -188.4375, -188.4371, -188.4369,
        -188.4367, -188.4366, -188.4365, -188.4365, -188.4364, -188.4364,
        -188.4364], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3863e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4554, -93.3887, -93.3710, -93.3626, -93.3574, -93.3539, -93.3515,
        -93.3498, -93.3486, -93.3478, -93.3472, -93.3468, -93.3465, -93.3463,
        -93.3462, -93.3461, -93.3460, -93.3460, -93.3459, -93.3459, -93.3459,
        -93.3459, -93.3459, -93.3459, -93.3458], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6326e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9838, -1.0944, -1.1228, -1.1372, -1.1464, -1.1526, -1.1569, -1.1598,
        -1.1619, -1.1634, -1.1644, -1.1651, -1.1656, -1.1660, -1.1662, -1.1664,
        -1.1665, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667, -1.1667, -1.1667,
        -1.1668], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2796, -0.4482, -0.4691, -0.4790, -0.4851, -0.4892, -0.4919, -0.4938,
        -0.4952, -0.4961, -0.4967, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6572e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667, -1.1667,
        -1.1667, -1.1668], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 3.791261164535364e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1922, -107.2812, -107.3113, -107.3287, -107.3397, -107.3471,
        -107.3523, -107.3559, -107.3584, -107.3602, -107.3614, -107.3622,
        -107.3629, -107.3633, -107.3636, -107.3638, -107.3639, -107.3640,
        -107.3641, -107.3641, -107.3642, -107.3642, -107.3642, -107.3642,
        -107.3642], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1555e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4652, -7.4725, -7.4751, -7.4764, -7.4773, -7.4781, -7.4789, -7.4791,
        -7.4788, -7.4786, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3969e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3969e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 Li 	 Li 	 7.887845938082752e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 6, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 6, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 6, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 6, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 6, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 6, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 6, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 6, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e06)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e06/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e06/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 6.344169', ' ae : 8.349151', ' E : 0.815752'] ,|| total loss 21.409223 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6002, -109.4977, -109.4702, -109.4561, -109.4471, -109.4410,
        -109.4367, -109.4338, -109.4317, -109.4302, -109.4292, -109.4285,
        -109.4280, -109.4277, -109.4274, -109.4272, -109.4271, -109.4270,
        -109.4270, -109.4269, -109.4269, -109.4269, -109.4269, -109.4269,
        -109.4269], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6217e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1170, -460.1355, -460.1429, -460.1471, -460.1499, -460.1519,
        -460.1533, -460.1543, -460.1550, -460.1555, -460.1559, -460.1561,
        -460.1563, -460.1564, -460.1565, -460.1566, -460.1566, -460.1566,
        -460.1567, -460.1567, -460.1567, -460.1567, -460.1567, -460.1567,
        -460.1567], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9600e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9600e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1566, -460.1566, -460.1566, -460.1567, -460.1567, -460.1567,
        -460.1567, -460.1567, -460.1567, -460.1567], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 Cl 	 Cl 	 1.7717666920330362e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5010, -920.4212, -920.3989, -920.3873, -920.3799, -920.3749,
        -920.3713, -920.3689, -920.3671, -920.3659, -920.3651, -920.3645,
        -920.3641, -920.3638, -920.3636, -920.3634, -920.3633, -920.3633,
        -920.3632, -920.3632, -920.3632, -920.3631, -920.3631, -920.3631,
        -920.3631], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3860e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1186, -460.1367, -460.1435, -460.1473, -460.1498, -460.1516,
        -460.1529, -460.1538, -460.1544, -460.1549, -460.1552, -460.1554,
        -460.1556, -460.1557, -460.1558, -460.1558, -460.1559, -460.1559,
        -460.1559, -460.1559, -460.1559, -460.1559, -460.1559, -460.1559,
        -460.1559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6117e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3634, -920.3633, -920.3633, -920.3632, -920.3632, -920.3632,
        -920.3631, -920.3631, -920.3631, -920.3631], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1558, -460.1559, -460.1559, -460.1559, -460.1559, -460.1559,
        -460.1559, -460.1559, -460.1559, -460.1559], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 Cl2 	 Cl2 	 0.00043798521039566747

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4894, -93.4015, -93.3780, -93.3671, -93.3605, -93.3560, -93.3529,
        -93.3508, -93.3492, -93.3482, -93.3474, -93.3469, -93.3466, -93.3463,
        -93.3461, -93.3460, -93.3459, -93.3459, -93.3458, -93.3458, -93.3458,
        -93.3458, -93.3457, -93.3457, -93.3457], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6317e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2610, -107.3130, -107.3312, -107.3419, -107.3487, -107.3533,
        -107.3565, -107.3587, -107.3603, -107.3613, -107.3621, -107.3626,
        -107.3630, -107.3633, -107.3635, -107.3636, -107.3637, -107.3637,
        -107.3638, -107.3638, -107.3638, -107.3639, -107.3639, -107.3639,
        -107.3639], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1553e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3398, -0.4639, -0.4780, -0.4848, -0.4890, -0.4919, -0.4938, -0.4951,
        -0.4961, -0.4967, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980, -0.4981,
        -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4990e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4990e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 H 	 H 	 7.413594524055805e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9770, -1.0917, -1.1211, -1.1361, -1.1456, -1.1520, -1.1565, -1.1596,
        -1.1617, -1.1632, -1.1643, -1.1650, -1.1655, -1.1659, -1.1662, -1.1663,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2868, -0.4501, -0.4702, -0.4798, -0.4856, -0.4895, -0.4922, -0.4940,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6462e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1665, -1.1665, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 3.8325754611803225e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4630, -7.4700, -7.4733, -7.4752, -7.4764, -7.4772, -7.4781, -7.4788,
        -7.4790, -7.4788, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5868e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5868e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 Li 	 Li 	 6.063960660683265e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0586, -188.6506, -188.5631, -188.5213, -188.4948, -188.4767,
        -188.4642, -188.4554, -188.4493, -188.4450, -188.4420, -188.4399,
        -188.4385, -188.4374, -188.4367, -188.4362, -188.4359, -188.4356,
        -188.4355, -188.4353, -188.4352, -188.4352, -188.4351, -188.4351,
        -188.4351], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3872e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 7, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 7, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 7, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 7, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 7, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 7, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 7, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 7, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 6.344001', ' ae : 8.415530', ' E : 1.078179'] ,|| total loss 21.421359 || CHKPT: NOUPDATE
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4814, -93.3981, -93.3759, -93.3655, -93.3592, -93.3549, -93.3520,
        -93.3499, -93.3485, -93.3475, -93.3468, -93.3463, -93.3459, -93.3457,
        -93.3455, -93.3454, -93.3453, -93.3452, -93.3452, -93.3452, -93.3452,
        -93.3451, -93.3451, -93.3451, -93.3451], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6312e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4641, -7.4715, -7.4743, -7.4759, -7.4768, -7.4777, -7.4785, -7.4790,
        -7.4789, -7.4786, -7.4785, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4887e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4887e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786,
        -7.4786, -7.4786], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 Li 	 Li 	 5.8270197173341373e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6189, -109.5047, -109.4740, -109.4582, -109.4481, -109.4412,
        -109.4365, -109.4332, -109.4308, -109.4292, -109.4281, -109.4273,
        -109.4267, -109.4263, -109.4261, -109.4259, -109.4257, -109.4256,
        -109.4256, -109.4255, -109.4255, -109.4255, -109.4255, -109.4254,
        -109.4254], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6200e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2916, -0.4514, -0.4709, -0.4802, -0.4859, -0.4897, -0.4923, -0.4941,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6447e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6447e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 H 	 H 	 7.50581003216806e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0372, -188.6439, -188.5591, -188.5184, -188.4926, -188.4750,
        -188.4628, -188.4543, -188.4484, -188.4442, -188.4413, -188.4393,
        -188.4378, -188.4368, -188.4361, -188.4357, -188.4353, -188.4351,
        -188.4349, -188.4348, -188.4347, -188.4346, -188.4346, -188.4346,
        -188.4346], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3874e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1244, -460.1397, -460.1444, -460.1470, -460.1487, -460.1499,
        -460.1508, -460.1514, -460.1518, -460.1521, -460.1523, -460.1524,
        -460.1525, -460.1526, -460.1526, -460.1527, -460.1527, -460.1527,
        -460.1527, -460.1527, -460.1528, -460.1528, -460.1528, -460.1528,
        -460.1528], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3769e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3769e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1527, -460.1527, -460.1527, -460.1527, -460.1527, -460.1528,
        -460.1528, -460.1528, -460.1528, -460.1528], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 Cl 	 Cl 	 5.293657519548547e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5101, -920.4209, -920.3956, -920.3824, -920.3740, -920.3682,
        -920.3642, -920.3614, -920.3594, -920.3580, -920.3571, -920.3564,
        -920.3559, -920.3556, -920.3554, -920.3552, -920.3551, -920.3550,
        -920.3549, -920.3549, -920.3549, -920.3549, -920.3548, -920.3548,
        -920.3548], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3856e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1239, -460.1389, -460.1436, -460.1461, -460.1477, -460.1489,
        -460.1497, -460.1503, -460.1507, -460.1510, -460.1512, -460.1513,
        -460.1514, -460.1515, -460.1515, -460.1516, -460.1516, -460.1516,
        -460.1516, -460.1516, -460.1516, -460.1517, -460.1517, -460.1517,
        -460.1517], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3969e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3552, -920.3551, -920.3550, -920.3549, -920.3549, -920.3549,
        -920.3549, -920.3548, -920.3548, -920.3548], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1516, -460.1516, -460.1516, -460.1516, -460.1516, -460.1516,
        -460.1517, -460.1517, -460.1517, -460.1517], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 Cl2 	 Cl2 	 0.0004323627142639509

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1570, -107.2645, -107.3001, -107.3206, -107.3334, -107.3421,
        -107.3481, -107.3523, -107.3552, -107.3573, -107.3587, -107.3597,
        -107.3604, -107.3609, -107.3613, -107.3615, -107.3617, -107.3618,
        -107.3619, -107.3619, -107.3620, -107.3620, -107.3620, -107.3621,
        -107.3621], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1542e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0544, -1.1221, -1.1396, -1.1485, -1.1541, -1.1579, -1.1605, -1.1624,
        -1.1637, -1.1646, -1.1652, -1.1656, -1.1659, -1.1662, -1.1663, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2710, -0.4458, -0.4677, -0.4782, -0.4846, -0.4888, -0.4917, -0.4936,
        -0.4950, -0.4960, -0.4967, -0.4971, -0.4975, -0.4977, -0.4978, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7286e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 3.922290860687713e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 8, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 8, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 8, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 8, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 8, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 8, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 8, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 8, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e08/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 6.343731', ' ae : 8.249825', ' E : 0.577525'] ,|| total loss 21.388377 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9455, -188.6148, -188.5414, -188.5058, -188.4832, -188.4679,
        -188.4573, -188.4498, -188.4446, -188.4410, -188.4385, -188.4367,
        -188.4354, -188.4346, -188.4339, -188.4335, -188.4332, -188.4330,
        -188.4329, -188.4328, -188.4327, -188.4326, -188.4326, -188.4326,
        -188.4326], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3880e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2987, -0.4533, -0.4720, -0.4809, -0.4864, -0.4900, -0.4925, -0.4942,
        -0.4954, -0.4963, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6540e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6540e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 H 	 H 	 7.593839522364572e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0353, -1.1145, -1.1349, -1.1454, -1.1519, -1.1564, -1.1595, -1.1616,
        -1.1631, -1.1642, -1.1649, -1.1654, -1.1658, -1.1660, -1.1662, -1.1663,
        -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2715, -0.4459, -0.4678, -0.4782, -0.4846, -0.4888, -0.4917, -0.4937,
        -0.4950, -0.4960, -0.4967, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7411e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 3.970106231856657e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4944, -920.4102, -920.3866, -920.3743, -920.3664, -920.3610,
        -920.3573, -920.3546, -920.3528, -920.3515, -920.3506, -920.3500,
        -920.3495, -920.3492, -920.3490, -920.3488, -920.3487, -920.3487,
        -920.3486, -920.3486, -920.3486, -920.3485, -920.3485, -920.3485,
        -920.3485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3852e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1167, -460.1333, -460.1387, -460.1417, -460.1437, -460.1451,
        -460.1461, -460.1468, -460.1473, -460.1476, -460.1478, -460.1480,
        -460.1481, -460.1482, -460.1483, -460.1483, -460.1484, -460.1484,
        -460.1484, -460.1484, -460.1484, -460.1484, -460.1484, -460.1484,
        -460.1484], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7882e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3488, -920.3487, -920.3487, -920.3486, -920.3486, -920.3486,
        -920.3485, -920.3485, -920.3485, -920.3485], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1483, -460.1484, -460.1484, -460.1484, -460.1484, -460.1484,
        -460.1484, -460.1484, -460.1484, -460.1484], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 Cl2 	 Cl2 	 0.00042908905468125845

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1075, -460.1262, -460.1337, -460.1380, -460.1408, -460.1429,
        -460.1443, -460.1454, -460.1461, -460.1466, -460.1470, -460.1472,
        -460.1474, -460.1476, -460.1476, -460.1477, -460.1478, -460.1478,
        -460.1478, -460.1478, -460.1478, -460.1478, -460.1478, -460.1478,
        -460.1478], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1460e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1460e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1477, -460.1478, -460.1478, -460.1478, -460.1478, -460.1478,
        -460.1478, -460.1478, -460.1478, -460.1478], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 Cl 	 Cl 	 5.699819133115134e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4636, -7.4710, -7.4739, -7.4755, -7.4766, -7.4774, -7.4782, -7.4788,
        -7.4787, -7.4785, -7.4783, -7.4782, -7.4782, -7.4782, -7.4783, -7.4783,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784, -7.4784,
        -7.4784], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7115e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.7115e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 Li 	 Li 	 2.0873651721117096e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4721, -93.3932, -93.3721, -93.3622, -93.3562, -93.3521, -93.3493,
        -93.3473, -93.3459, -93.3450, -93.3443, -93.3438, -93.3435, -93.3432,
        -93.3431, -93.3430, -93.3429, -93.3428, -93.3428, -93.3428, -93.3427,
        -93.3427, -93.3427, -93.3427, -93.3427], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6300e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2591, -107.3104, -107.3283, -107.3390, -107.3457, -107.3502,
        -107.3534, -107.3556, -107.3571, -107.3582, -107.3589, -107.3595,
        -107.3598, -107.3601, -107.3603, -107.3604, -107.3605, -107.3605,
        -107.3606, -107.3606, -107.3606, -107.3607, -107.3607, -107.3607,
        -107.3607], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1532e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6003, -109.4955, -109.4674, -109.4529, -109.4437, -109.4375,
        -109.4331, -109.4301, -109.4280, -109.4265, -109.4254, -109.4247,
        -109.4242, -109.4238, -109.4236, -109.4234, -109.4233, -109.4232,
        -109.4231, -109.4231, -109.4231, -109.4231, -109.4230, -109.4230,
        -109.4230], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6174e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 9, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 9, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 9, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 9, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 9, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 9, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 9, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 9, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e09/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 6.343428', ' ae : 8.169786', ' E : 0.210780'] ,|| total loss 21.372668 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5160, -93.4094, -93.3808, -93.3678, -93.3600, -93.3548, -93.3511,
        -93.3486, -93.3468, -93.3456, -93.3447, -93.3441, -93.3437, -93.3434,
        -93.3432, -93.3430, -93.3429, -93.3429, -93.3428, -93.3428, -93.3428,
        -93.3427, -93.3427, -93.3427, -93.3427], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6300e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4566, -920.3918, -920.3741, -920.3648, -920.3590, -920.3549,
        -920.3522, -920.3502, -920.3488, -920.3479, -920.3472, -920.3467,
        -920.3464, -920.3462, -920.3460, -920.3459, -920.3458, -920.3458,
        -920.3457, -920.3457, -920.3457, -920.3457, -920.3457, -920.3457,
        -920.3456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3850e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1107, -460.1286, -460.1351, -460.1387, -460.1411, -460.1428,
        -460.1440, -460.1449, -460.1455, -460.1459, -460.1462, -460.1464,
        -460.1466, -460.1467, -460.1467, -460.1468, -460.1468, -460.1469,
        -460.1469, -460.1469, -460.1469, -460.1469, -460.1469, -460.1469,
        -460.1469], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4183e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3459, -920.3458, -920.3458, -920.3457, -920.3457, -920.3457,
        -920.3457, -920.3457, -920.3457, -920.3456], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1468, -460.1468, -460.1469, -460.1469, -460.1469, -460.1469,
        -460.1469, -460.1469, -460.1469, -460.1469], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 Cl2 	 Cl2 	 0.0004262425028431757

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0593, -188.6475, -188.5594, -188.5173, -188.4905, -188.4723,
        -188.4597, -188.4509, -188.4447, -188.4404, -188.4374, -188.4353,
        -188.4338, -188.4328, -188.4321, -188.4315, -188.4312, -188.4309,
        -188.4308, -188.4306, -188.4306, -188.4305, -188.4305, -188.4304,
        -188.4304], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3890e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.5820, -109.4877, -109.4626, -109.4496, -109.4414, -109.4358,
        -109.4319, -109.4291, -109.4272, -109.4259, -109.4250, -109.4243,
        -109.4239, -109.4236, -109.4233, -109.4232, -109.4231, -109.4230,
        -109.4229, -109.4229, -109.4229, -109.4229, -109.4228, -109.4228,
        -109.4228], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6171e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1162, -460.1322, -460.1374, -460.1402, -460.1421, -460.1434,
        -460.1443, -460.1450, -460.1454, -460.1457, -460.1460, -460.1461,
        -460.1463, -460.1463, -460.1464, -460.1464, -460.1465, -460.1465,
        -460.1465, -460.1465, -460.1465, -460.1465, -460.1465, -460.1465,
        -460.1465], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5042e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5042e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1464, -460.1465, -460.1465, -460.1465, -460.1465, -460.1465,
        -460.1465, -460.1465, -460.1465, -460.1465], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 Cl 	 Cl 	 5.197915711979088e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2209, -0.4312, -0.4596, -0.4730, -0.4810, -0.4864, -0.4900, -0.4925,
        -0.4942, -0.4954, -0.4963, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9397e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9397e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 H 	 H 	 7.754188305102502e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0323, -1.1133, -1.1342, -1.1448, -1.1516, -1.1561, -1.1593, -1.1615,
        -1.1630, -1.1641, -1.1648, -1.1653, -1.1657, -1.1660, -1.1661, -1.1663,
        -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665,
        -1.1665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3360, -0.4629, -0.4774, -0.4844, -0.4888, -0.4917, -0.4937, -0.4950,
        -0.4960, -0.4967, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5900e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665,
        -1.1665, -1.1665], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 4.076538378389999e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4692, -7.4727, -7.4746, -7.4759, -7.4768, -7.4776, -7.4784,
        -7.4788, -7.4786, -7.4784, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0498e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0498e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4782, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4783], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 Li 	 Li 	 1.6710020507806663e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2095, -107.2869, -107.3134, -107.3288, -107.3386, -107.3452,
        -107.3498, -107.3529, -107.3552, -107.3567, -107.3578, -107.3586,
        -107.3591, -107.3595, -107.3598, -107.3600, -107.3601, -107.3602,
        -107.3602, -107.3603, -107.3603, -107.3603, -107.3604, -107.3604,
        -107.3604], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1531e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 10, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 10, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 10, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 10, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 10, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 10, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 10, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 10, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e10/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 6.343247', ' ae : 8.148912', ' E : 0.270650'] ,|| total loss 21.367389 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6380, -109.5112, -109.4769, -109.4593, -109.4480, -109.4404,
        -109.4351, -109.4313, -109.4288, -109.4269, -109.4257, -109.4248,
        -109.4241, -109.4237, -109.4234, -109.4232, -109.4230, -109.4229,
        -109.4229, -109.4228, -109.4228, -109.4228, -109.4227, -109.4227,
        -109.4227], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6166e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4656, -7.4727, -7.4751, -7.4763, -7.4771, -7.4780, -7.4787, -7.4788,
        -7.4785, -7.4783, -7.4782, -7.4782, -7.4782, -7.4782, -7.4783, -7.4783,
        -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7788e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7788e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4783], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 Li 	 Li 	 1.864734726390405e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5479, -93.4207, -93.3862, -93.3711, -93.3622, -93.3562, -93.3520,
        -93.3492, -93.3471, -93.3457, -93.3447, -93.3440, -93.3435, -93.3432,
        -93.3430, -93.3428, -93.3427, -93.3426, -93.3425, -93.3425, -93.3425,
        -93.3424, -93.3424, -93.3424, -93.3424], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6286e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5243, -920.4221, -920.3926, -920.3772, -920.3672, -920.3605,
        -920.3557, -920.3524, -920.3501, -920.3485, -920.3473, -920.3465,
        -920.3460, -920.3456, -920.3453, -920.3451, -920.3450, -920.3449,
        -920.3448, -920.3448, -920.3447, -920.3447, -920.3447, -920.3447,
        -920.3447], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3850e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1095, -460.1275, -460.1341, -460.1378, -460.1403, -460.1420,
        -460.1433, -460.1442, -460.1448, -460.1452, -460.1455, -460.1458,
        -460.1459, -460.1460, -460.1461, -460.1462, -460.1462, -460.1462,
        -460.1462, -460.1462, -460.1463, -460.1463, -460.1463, -460.1463,
        -460.1463], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4145e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3451, -920.3450, -920.3449, -920.3448, -920.3448, -920.3447,
        -920.3447, -920.3447, -920.3447, -920.3447], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1462, -460.1462, -460.1462, -460.1462, -460.1462, -460.1463,
        -460.1463, -460.1463, -460.1463, -460.1463], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 Cl2 	 Cl2 	 0.00042006594470450387

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1854, -107.2759, -107.3066, -107.3243, -107.3354, -107.3430,
        -107.3482, -107.3519, -107.3544, -107.3562, -107.3574, -107.3583,
        -107.3589, -107.3594, -107.3597, -107.3599, -107.3600, -107.3601,
        -107.3602, -107.3603, -107.3603, -107.3603, -107.3603, -107.3603,
        -107.3604], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1531e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2907, -0.4512, -0.4707, -0.4801, -0.4859, -0.4897, -0.4923, -0.4941,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7140e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7140e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 H 	 H 	 7.715688331047652e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1103, -460.1281, -460.1345, -460.1381, -460.1405, -460.1422,
        -460.1434, -460.1442, -460.1448, -460.1453, -460.1456, -460.1458,
        -460.1459, -460.1460, -460.1461, -460.1461, -460.1462, -460.1462,
        -460.1462, -460.1462, -460.1462, -460.1462, -460.1463, -460.1463,
        -460.1463], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4564e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4564e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1461, -460.1462, -460.1462, -460.1462, -460.1462, -460.1462,
        -460.1462, -460.1463, -460.1463, -460.1463], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 Cl 	 Cl 	 7.114677471052209e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8154, -188.5714, -188.5151, -188.4874, -188.4698, -188.4579,
        -188.4496, -188.4438, -188.4397, -188.4369, -188.4349, -188.4335,
        -188.4326, -188.4319, -188.4314, -188.4311, -188.4308, -188.4307,
        -188.4306, -188.4305, -188.4304, -188.4304, -188.4304, -188.4303,
        -188.4303], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3897e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0330, -1.1136, -1.1343, -1.1449, -1.1516, -1.1562, -1.1593, -1.1615,
        -1.1630, -1.1641, -1.1648, -1.1653, -1.1657, -1.1660, -1.1661, -1.1663,
        -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665,
        -1.1665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2240, -0.4321, -0.4601, -0.4733, -0.4813, -0.4865, -0.4901, -0.4926,
        -0.4943, -0.4955, -0.4963, -0.4969, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9322e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1665,
        -1.1665, -1.1665], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 4.033010068728029e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 11, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 11, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 11, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 11, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 11, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 11, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 11, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 11, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e11/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 6.342893', ' ae : 8.091787', ' E : 0.311262'] ,|| total loss 21.354862 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5034, -93.4047, -93.3782, -93.3661, -93.3588, -93.3539, -93.3505,
        -93.3481, -93.3465, -93.3453, -93.3445, -93.3439, -93.3435, -93.3432,
        -93.3430, -93.3429, -93.3428, -93.3427, -93.3427, -93.3426, -93.3426,
        -93.3426, -93.3426, -93.3426, -93.3426], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6276e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0501, -1.1203, -1.1385, -1.1477, -1.1535, -1.1575, -1.1602, -1.1621,
        -1.1635, -1.1644, -1.1651, -1.1655, -1.1658, -1.1661, -1.1662, -1.1663,
        -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3314, -0.4617, -0.4767, -0.4840, -0.4885, -0.4915, -0.4935, -0.4949,
        -0.4959, -0.4966, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6004e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1664, -1.1665, -1.1665, -1.1665, -1.1665, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 4.043986079195273e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3066, -0.4554, -0.4731, -0.4817, -0.4869, -0.4904, -0.4928, -0.4944,
        -0.4956, -0.4964, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6612e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6612e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 H 	 H 	 7.679815691491266e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5290, -920.4261, -920.3963, -920.3807, -920.3707, -920.3638,
        -920.3591, -920.3557, -920.3534, -920.3517, -920.3506, -920.3498,
        -920.3492, -920.3488, -920.3485, -920.3483, -920.3482, -920.3481,
        -920.3480, -920.3480, -920.3480, -920.3479, -920.3479, -920.3479,
        -920.3479], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3853e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1084, -460.1269, -460.1342, -460.1383, -460.1410, -460.1430,
        -460.1444, -460.1454, -460.1461, -460.1466, -460.1469, -460.1472,
        -460.1473, -460.1475, -460.1476, -460.1476, -460.1477, -460.1477,
        -460.1477, -460.1477, -460.1477, -460.1477, -460.1477, -460.1477,
        -460.1478], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6070e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3483, -920.3482, -920.3481, -920.3480, -920.3480, -920.3480,
        -920.3479, -920.3479, -920.3479, -920.3479], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1476, -460.1477, -460.1477, -460.1477, -460.1477, -460.1477,
        -460.1477, -460.1477, -460.1477, -460.1478], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 Cl2 	 Cl2 	 0.00041471639705823284

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4633, -7.4706, -7.4737, -7.4754, -7.4765, -7.4773, -7.4782, -7.4788,
        -7.4789, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0048e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0048e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4784, -7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 Li 	 Li 	 4.680038218505236e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2459, -107.3044, -107.3247, -107.3367, -107.3443, -107.3494,
        -107.3530, -107.3555, -107.3572, -107.3585, -107.3593, -107.3599,
        -107.3603, -107.3606, -107.3608, -107.3610, -107.3611, -107.3611,
        -107.3612, -107.3612, -107.3612, -107.3613, -107.3613, -107.3613,
        -107.3613], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1536e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9677, -188.6210, -188.5447, -188.5078, -188.4843, -188.4684,
        -188.4574, -188.4497, -188.4443, -188.4405, -188.4379, -188.4360,
        -188.4347, -188.4338, -188.4332, -188.4327, -188.4324, -188.4322,
        -188.4320, -188.4319, -188.4319, -188.4318, -188.4318, -188.4318,
        -188.4317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3900e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6901, -109.5339, -109.4913, -109.4693, -109.4552, -109.4457,
        -109.4390, -109.4344, -109.4312, -109.4289, -109.4273, -109.4262,
        -109.4254, -109.4249, -109.4245, -109.4242, -109.4240, -109.4239,
        -109.4238, -109.4237, -109.4237, -109.4237, -109.4236, -109.4236,
        -109.4236], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6165e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1206, -460.1356, -460.1403, -460.1428, -460.1445, -460.1456,
        -460.1465, -460.1470, -460.1475, -460.1477, -460.1479, -460.1481,
        -460.1482, -460.1483, -460.1483, -460.1483, -460.1484, -460.1484,
        -460.1484, -460.1484, -460.1484, -460.1484, -460.1484, -460.1484,
        -460.1484], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7678e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7678e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1483, -460.1484, -460.1484, -460.1484, -460.1484, -460.1484,
        -460.1484, -460.1484, -460.1484, -460.1484], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 Cl 	 Cl 	 4.033444206746151e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 12, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 12, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 12, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 12, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 12, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 12, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 12, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 12, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e12/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 6.342794', ' ae : 8.034689', ' E : 0.211216'] ,|| total loss 21.343670 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4645, -7.4719, -7.4746, -7.4760, -7.4770, -7.4778, -7.4786, -7.4790,
        -7.4789, -7.4786, -7.4785, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786, -7.4786,
        -7.4786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4405e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4405e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4786,
        -7.4786, -7.4786], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 Li 	 Li 	 5.6652774428191254e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5055, -93.4059, -93.3792, -93.3670, -93.3597, -93.3547, -93.3513,
        -93.3489, -93.3472, -93.3461, -93.3453, -93.3447, -93.3443, -93.3440,
        -93.3438, -93.3437, -93.3436, -93.3435, -93.3434, -93.3434, -93.3434,
        -93.3434, -93.3434, -93.3434, -93.3434], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6262e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6927, -109.5351, -109.4921, -109.4699, -109.4557, -109.4461,
        -109.4394, -109.4347, -109.4314, -109.4291, -109.4275, -109.4264,
        -109.4256, -109.4250, -109.4247, -109.4244, -109.4242, -109.4241,
        -109.4240, -109.4239, -109.4239, -109.4238, -109.4238, -109.4238,
        -109.4238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6164e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2086, -107.2870, -107.3138, -107.3295, -107.3394, -107.3461,
        -107.3507, -107.3539, -107.3562, -107.3578, -107.3589, -107.3596,
        -107.3602, -107.3606, -107.3608, -107.3610, -107.3612, -107.3612,
        -107.3613, -107.3614, -107.3614, -107.3614, -107.3614, -107.3614,
        -107.3614], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1537e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9873, -188.6272, -188.5483, -188.5103, -188.4862, -188.4698,
        -188.4584, -188.4505, -188.4449, -188.4410, -188.4383, -188.4364,
        -188.4351, -188.4341, -188.4335, -188.4330, -188.4327, -188.4325,
        -188.4323, -188.4322, -188.4321, -188.4321, -188.4320, -188.4320,
        -188.4320], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3901e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2606, -0.4428, -0.4661, -0.4771, -0.4838, -0.4883, -0.4913, -0.4934,
        -0.4949, -0.4959, -0.4966, -0.4971, -0.4974, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7876e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7876e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 H 	 H 	 7.678989652968423e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1143, -460.1318, -460.1379, -460.1413, -460.1435, -460.1451,
        -460.1463, -460.1471, -460.1476, -460.1480, -460.1483, -460.1485,
        -460.1486, -460.1487, -460.1488, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1489, -460.1490, -460.1490, -460.1490, -460.1490,
        -460.1490], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3881e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3881e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1489, -460.1489, -460.1489, -460.1489, -460.1489, -460.1490,
        -460.1490, -460.1490, -460.1490, -460.1490], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 Cl 	 Cl 	 2.173141615979912e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9877, -1.0958, -1.1236, -1.1377, -1.1467, -1.1528, -1.1569, -1.1599,
        -1.1619, -1.1633, -1.1643, -1.1650, -1.1655, -1.1659, -1.1661, -1.1663,
        -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2906, -0.4511, -0.4707, -0.4801, -0.4859, -0.4897, -0.4923, -0.4941,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6951e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 3.924411686854484e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4732, -920.4019, -920.3822, -920.3720, -920.3654, -920.3610,
        -920.3579, -920.3557, -920.3542, -920.3531, -920.3524, -920.3518,
        -920.3515, -920.3512, -920.3510, -920.3509, -920.3508, -920.3508,
        -920.3507, -920.3507, -920.3507, -920.3506, -920.3506, -920.3506,
        -920.3506], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3855e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1135, -460.1312, -460.1375, -460.1410, -460.1433, -460.1450,
        -460.1462, -460.1470, -460.1476, -460.1480, -460.1483, -460.1485,
        -460.1486, -460.1487, -460.1488, -460.1489, -460.1489, -460.1489,
        -460.1489, -460.1490, -460.1490, -460.1490, -460.1490, -460.1490,
        -460.1490], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.5525e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3509, -920.3508, -920.3508, -920.3507, -920.3507, -920.3507,
        -920.3506, -920.3506, -920.3506, -920.3506], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1489, -460.1489, -460.1489, -460.1489, -460.1490, -460.1490,
        -460.1490, -460.1490, -460.1490, -460.1490], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 Cl2 	 Cl2 	 0.000409407528166033

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 13, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 13, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 13, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 13, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 13, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 13, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 13, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 13, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e13/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 6.342157', ' ae : 7.984348', ' E : 0.242118'] ,|| total loss 21.330859 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0222, -188.6378, -188.5546, -188.5146, -188.4892, -188.4720,
        -188.4600, -188.4517, -188.4458, -188.4417, -188.4389, -188.4368,
        -188.4354, -188.4345, -188.4338, -188.4333, -188.4330, -188.4327,
        -188.4326, -188.4324, -188.4324, -188.4323, -188.4323, -188.4322,
        -188.4322], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3903e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0314, -1.1130, -1.1340, -1.1448, -1.1515, -1.1561, -1.1593, -1.1615,
        -1.1631, -1.1641, -1.1649, -1.1654, -1.1658, -1.1661, -1.1662, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2826, -0.4490, -0.4695, -0.4793, -0.4853, -0.4893, -0.4920, -0.4939,
        -0.4952, -0.4961, -0.4967, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7180e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 0 	 H2 	 H2 	 3.8871640547690475e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4795, -920.4049, -920.3843, -920.3735, -920.3666, -920.3620,
        -920.3587, -920.3564, -920.3548, -920.3537, -920.3529, -920.3523,
        -920.3520, -920.3517, -920.3515, -920.3514, -920.3513, -920.3512,
        -920.3512, -920.3511, -920.3511, -920.3511, -920.3511, -920.3511,
        -920.3511], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3855e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1219, -460.1367, -460.1412, -460.1437, -460.1453, -460.1465,
        -460.1473, -460.1478, -460.1482, -460.1485, -460.1487, -460.1488,
        -460.1489, -460.1490, -460.1490, -460.1491, -460.1491, -460.1491,
        -460.1491, -460.1491, -460.1491, -460.1492, -460.1492, -460.1492,
        -460.1492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3624e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3514, -920.3513, -920.3512, -920.3512, -920.3511, -920.3511,
        -920.3511, -920.3511, -920.3511, -920.3511], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1491, -460.1491, -460.1491, -460.1491, -460.1491, -460.1491,
        -460.1492, -460.1492, -460.1492, -460.1492], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 5 	 Cl2 	 Cl2 	 0.0004076523861687918

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6968, -109.5370, -109.4934, -109.4708, -109.4564, -109.4467,
        -109.4399, -109.4351, -109.4318, -109.4294, -109.4278, -109.4267,
        -109.4259, -109.4253, -109.4249, -109.4247, -109.4245, -109.4243,
        -109.4242, -109.4242, -109.4241, -109.4241, -109.4241, -109.4241,
        -109.4240], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6161e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1188, -460.1349, -460.1401, -460.1429, -460.1448, -460.1461,
        -460.1471, -460.1477, -460.1482, -460.1485, -460.1487, -460.1489,
        -460.1490, -460.1491, -460.1492, -460.1492, -460.1492, -460.1492,
        -460.1492, -460.1493, -460.1493, -460.1493, -460.1493, -460.1493,
        -460.1493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6577e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6577e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1492, -460.1492, -460.1492, -460.1492, -460.1493, -460.1493,
        -460.1493, -460.1493, -460.1493, -460.1493], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 7 	 Cl 	 Cl 	 3.799327046441341e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4639, -7.4713, -7.4743, -7.4758, -7.4769, -7.4777, -7.4785, -7.4791,
        -7.4791, -7.4788, -7.4786, -7.4786, -7.4785, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7555e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7555e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 Li 	 Li 	 8.628159075779669e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2525, -0.4405, -0.4648, -0.4763, -0.4833, -0.4879, -0.4910, -0.4932,
        -0.4947, -0.4958, -0.4965, -0.4970, -0.4974, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8156e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8156e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 9 	 H 	 H 	 7.690444894216095e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2017, -107.2839, -107.3119, -107.3283, -107.3386, -107.3455,
        -107.3503, -107.3537, -107.3560, -107.3577, -107.3589, -107.3597,
        -107.3602, -107.3606, -107.3609, -107.3611, -107.3612, -107.3613,
        -107.3614, -107.3614, -107.3615, -107.3615, -107.3615, -107.3615,
        -107.3615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1536e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4906, -93.4004, -93.3763, -93.3652, -93.3584, -93.3539, -93.3507,
        -93.3485, -93.3470, -93.3459, -93.3451, -93.3446, -93.3443, -93.3440,
        -93.3438, -93.3437, -93.3436, -93.3435, -93.3435, -93.3435, -93.3434,
        -93.3434, -93.3434, -93.3434, -93.3434], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6244e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 14, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 14, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 14, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 14, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 14, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 14, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 14, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 14, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e14)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e14/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e14/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 14 || ,[' rho : 6.341913', ' ae : 7.968928', ' E : 0.262082'] ,|| total loss 21.327236 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2374, -0.4361, -0.4623, -0.4747, -0.4822, -0.4872, -0.4905, -0.4929,
        -0.4945, -0.4956, -0.4964, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8692e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8692e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 9 	 H 	 H 	 7.70766832788396e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2621, -107.3123, -107.3298, -107.3402, -107.3468, -107.3512,
        -107.3543, -107.3565, -107.3580, -107.3590, -107.3598, -107.3603,
        -107.3607, -107.3609, -107.3611, -107.3612, -107.3613, -107.3614,
        -107.3614, -107.3614, -107.3615, -107.3615, -107.3615, -107.3615,
        -107.3615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1536e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4856, -920.4074, -920.3855, -920.3742, -920.3669, -920.3620,
        -920.3585, -920.3561, -920.3544, -920.3533, -920.3524, -920.3518,
        -920.3514, -920.3511, -920.3510, -920.3508, -920.3507, -920.3506,
        -920.3506, -920.3506, -920.3505, -920.3505, -920.3505, -920.3505,
        -920.3505], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3856e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1148, -460.1321, -460.1380, -460.1413, -460.1435, -460.1450,
        -460.1461, -460.1469, -460.1474, -460.1478, -460.1481, -460.1483,
        -460.1484, -460.1485, -460.1486, -460.1486, -460.1487, -460.1487,
        -460.1487, -460.1487, -460.1487, -460.1487, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3662e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3508, -920.3507, -920.3506, -920.3506, -920.3506, -920.3505,
        -920.3505, -920.3505, -920.3505, -920.3505], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1486, -460.1487, -460.1487, -460.1487, -460.1487, -460.1487,
        -460.1487, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 5 	 Cl2 	 Cl2 	 0.00040233194668721475

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0109, -1.1049, -1.1291, -1.1415, -1.1493, -1.1545, -1.1582, -1.1607,
        -1.1625, -1.1638, -1.1646, -1.1652, -1.1657, -1.1660, -1.1662, -1.1663,
        -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2765, -0.4473, -0.4686, -0.4787, -0.4849, -0.4890, -0.4918, -0.4938,
        -0.4951, -0.4960, -0.4967, -0.4971, -0.4975, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7453e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 0 	 H2 	 H2 	 3.887533001013455e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4592, -93.3886, -93.3698, -93.3609, -93.3554, -93.3517, -93.3492,
        -93.3474, -93.3462, -93.3453, -93.3447, -93.3442, -93.3440, -93.3437,
        -93.3436, -93.3435, -93.3434, -93.3434, -93.3433, -93.3433, -93.3433,
        -93.3433, -93.3433, -93.3433, -93.3433], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6236e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1119, -460.1299, -460.1365, -460.1402, -460.1427, -460.1444,
        -460.1456, -460.1465, -460.1472, -460.1476, -460.1479, -460.1481,
        -460.1483, -460.1484, -460.1485, -460.1485, -460.1485, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9840e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9840e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1485, -460.1485, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 7 	 Cl 	 Cl 	 9.087446955068386e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0356, -188.6415, -188.5565, -188.5158, -188.4899, -188.4724,
        -188.4602, -188.4517, -188.4457, -188.4415, -188.4386, -188.4366,
        -188.4351, -188.4341, -188.4334, -188.4330, -188.4326, -188.4324,
        -188.4322, -188.4321, -188.4320, -188.4319, -188.4319, -188.4319,
        -188.4319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3914e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6295, -109.5081, -109.4754, -109.4585, -109.4478, -109.4405,
        -109.4355, -109.4319, -109.4294, -109.4277, -109.4265, -109.4256,
        -109.4250, -109.4246, -109.4243, -109.4241, -109.4240, -109.4239,
        -109.4238, -109.4238, -109.4237, -109.4237, -109.4237, -109.4237,
        -109.4237], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6150e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4632, -7.4704, -7.4736, -7.4754, -7.4765, -7.4774, -7.4782, -7.4789,
        -7.4791, -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8708e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8708e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 10 	 Li 	 Li 	 8.873016678720045e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 15, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 15, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 15, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 15, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 15, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 15, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 15, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 15, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e15)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e15/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e15/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 15 || ,[' rho : 6.341522', ' ae : 7.914639', ' E : 0.230995'] ,|| total loss 21.315077 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2337, -107.2986, -107.3211, -107.3343, -107.3426, -107.3483,
        -107.3522, -107.3549, -107.3569, -107.3582, -107.3591, -107.3598,
        -107.3603, -107.3606, -107.3608, -107.3610, -107.3611, -107.3612,
        -107.3612, -107.3612, -107.3613, -107.3613, -107.3613, -107.3613,
        -107.3613], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5156, -93.4095, -93.3809, -93.3680, -93.3603, -93.3551, -93.3515,
        -93.3490, -93.3473, -93.3460, -93.3452, -93.3446, -93.3441, -93.3438,
        -93.3436, -93.3435, -93.3434, -93.3433, -93.3433, -93.3432, -93.3432,
        -93.3432, -93.3432, -93.3432, -93.3432], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6232e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0582, -1.1236, -1.1405, -1.1491, -1.1545, -1.1582, -1.1607, -1.1625,
        -1.1638, -1.1646, -1.1652, -1.1657, -1.1660, -1.1662, -1.1663, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2887, -0.4506, -0.4704, -0.4799, -0.4857, -0.4896, -0.4922, -0.4940,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7130e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 0 	 H2 	 H2 	 3.8743538834751815e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5081, -920.4173, -920.3916, -920.3782, -920.3695, -920.3637,
        -920.3596, -920.3567, -920.3547, -920.3533, -920.3523, -920.3516,
        -920.3511, -920.3508, -920.3505, -920.3504, -920.3502, -920.3502,
        -920.3501, -920.3501, -920.3500, -920.3500, -920.3500, -920.3500,
        -920.3500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3856e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1133, -460.1309, -460.1371, -460.1405, -460.1428, -460.1444,
        -460.1456, -460.1464, -460.1470, -460.1474, -460.1477, -460.1479,
        -460.1480, -460.1481, -460.1482, -460.1482, -460.1483, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3316e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3504, -920.3502, -920.3502, -920.3501, -920.3501, -920.3500,
        -920.3500, -920.3500, -920.3500, -920.3500], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1482, -460.1483, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 5 	 Cl2 	 Cl2 	 0.0003972225928783487

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0508, -188.6459, -188.5591, -188.5175, -188.4911, -188.4732,
        -188.4607, -188.4520, -188.4459, -188.4417, -188.4387, -188.4366,
        -188.4352, -188.4341, -188.4334, -188.4329, -188.4326, -188.4323,
        -188.4321, -188.4320, -188.4319, -188.4319, -188.4318, -188.4318,
        -188.4318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3917e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2216, -0.4314, -0.4597, -0.4730, -0.4811, -0.4864, -0.4900, -0.4925,
        -0.4942, -0.4954, -0.4963, -0.4968, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9359e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9359e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 9 	 H 	 H 	 7.749546208463178e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1204, -460.1355, -460.1401, -460.1427, -460.1444, -460.1455,
        -460.1464, -460.1469, -460.1473, -460.1476, -460.1478, -460.1480,
        -460.1481, -460.1482, -460.1482, -460.1482, -460.1483, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0448e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0448e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1482, -460.1483, -460.1483, -460.1483, -460.1483, -460.1483,
        -460.1483, -460.1483, -460.1483, -460.1483], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 7 	 Cl 	 Cl 	 2.2899837472092203e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4671, -7.4738, -7.4759, -7.4770, -7.4778, -7.4787, -7.4792, -7.4791,
        -7.4789, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5698e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5698e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 10 	 Li 	 Li 	 1.0396175767828954e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6881, -109.5330, -109.4907, -109.4689, -109.4549, -109.4455,
        -109.4389, -109.4343, -109.4311, -109.4288, -109.4272, -109.4261,
        -109.4253, -109.4248, -109.4244, -109.4242, -109.4240, -109.4238,
        -109.4238, -109.4237, -109.4236, -109.4236, -109.4236, -109.4236,
        -109.4236], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6144e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 16, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 16, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 16, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 16, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 16, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 16, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 16, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 16, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e16)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e16/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e16/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 16 || ,[' rho : 6.341327', ' ae : 7.864220', ' E : 0.220899'] ,|| total loss 21.304874 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0250, -188.6382, -188.5546, -188.5144, -188.4889, -188.4716,
        -188.4596, -188.4512, -188.4453, -188.4412, -188.4383, -188.4363,
        -188.4349, -188.4339, -188.4332, -188.4328, -188.4324, -188.4322,
        -188.4320, -188.4319, -188.4318, -188.4318, -188.4317, -188.4317,
        -188.4317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3920e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.5759, -109.4856, -109.4615, -109.4491, -109.4413, -109.4359,
        -109.4322, -109.4296, -109.4278, -109.4265, -109.4256, -109.4250,
        -109.4246, -109.4243, -109.4240, -109.4239, -109.4238, -109.4237,
        -109.4237, -109.4236, -109.4236, -109.4236, -109.4236, -109.4236,
        -109.4236], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6144e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4657, -7.4729, -7.4753, -7.4766, -7.4775, -7.4783, -7.4790, -7.4792,
        -7.4790, -7.4788, -7.4787, -7.4786, -7.4786, -7.4786, -7.4787, -7.4787,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5912e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5912e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 10 	 Li 	 Li 	 1.0458194446662748e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0491, -1.1200, -1.1383, -1.1476, -1.1535, -1.1575, -1.1603, -1.1622,
        -1.1635, -1.1645, -1.1651, -1.1656, -1.1659, -1.1661, -1.1663, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2217, -0.4314, -0.4597, -0.4730, -0.4811, -0.4864, -0.4900, -0.4925,
        -0.4942, -0.4954, -0.4963, -0.4968, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9408e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 0 	 H2 	 H2 	 3.834819008064868e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3339, -0.4624, -0.4771, -0.4842, -0.4886, -0.4916, -0.4936, -0.4950,
        -0.4960, -0.4966, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5968e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5968e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 9 	 H 	 H 	 7.681869498498835e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1759, -107.2723, -107.3047, -107.3234, -107.3351, -107.3430,
        -107.3485, -107.3524, -107.3551, -107.3569, -107.3583, -107.3592,
        -107.3598, -107.3603, -107.3606, -107.3608, -107.3610, -107.3611,
        -107.3612, -107.3612, -107.3612, -107.3613, -107.3613, -107.3613,
        -107.3613], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1534e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5115, -920.4188, -920.3925, -920.3787, -920.3699, -920.3639,
        -920.3597, -920.3567, -920.3547, -920.3532, -920.3522, -920.3515,
        -920.3510, -920.3507, -920.3504, -920.3502, -920.3501, -920.3500,
        -920.3500, -920.3499, -920.3499, -920.3499, -920.3499, -920.3499,
        -920.3499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3856e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1155, -460.1324, -460.1380, -460.1411, -460.1432, -460.1446,
        -460.1457, -460.1464, -460.1469, -460.1473, -460.1475, -460.1477,
        -460.1478, -460.1479, -460.1480, -460.1480, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1481], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8844e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3502, -920.3501, -920.3500, -920.3500, -920.3499, -920.3499,
        -920.3499, -920.3499, -920.3499, -920.3499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1480, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1481], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 5 	 Cl2 	 Cl2 	 0.00039101495158600256

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1130, -460.1306, -460.1368, -460.1403, -460.1426, -460.1442,
        -460.1454, -460.1462, -460.1468, -460.1472, -460.1475, -460.1477,
        -460.1478, -460.1479, -460.1480, -460.1480, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1481], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1541e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1541e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1480, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1481], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 7 	 Cl 	 Cl 	 4.987874861896432e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4960, -93.4022, -93.3771, -93.3656, -93.3586, -93.3539, -93.3507,
        -93.3484, -93.3468, -93.3457, -93.3449, -93.3444, -93.3440, -93.3437,
        -93.3435, -93.3434, -93.3433, -93.3432, -93.3432, -93.3432, -93.3431,
        -93.3431, -93.3431, -93.3431, -93.3431], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6212e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 17, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 17, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 17, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 17, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 17, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 17, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 17, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 17, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e17)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e17/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e17/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 17 || ,[' rho : 6.340915', ' ae : 7.802638', ' E : 0.216387'] ,|| total loss 21.291744 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5461, -93.4203, -93.3862, -93.3714, -93.3626, -93.3567, -93.3526,
        -93.3498, -93.3478, -93.3464, -93.3454, -93.3447, -93.3442, -93.3439,
        -93.3436, -93.3435, -93.3434, -93.3433, -93.3432, -93.3432, -93.3432,
        -93.3431, -93.3431, -93.3431, -93.3431], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6213e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9593, -1.0848, -1.1169, -1.1332, -1.1436, -1.1506, -1.1555, -1.1588,
        -1.1612, -1.1628, -1.1640, -1.1648, -1.1654, -1.1658, -1.1660, -1.1662,
        -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2375, -0.4361, -0.4623, -0.4747, -0.4822, -0.4872, -0.4905, -0.4929,
        -0.4945, -0.4956, -0.4964, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8846e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1662, -1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 0 	 H2 	 H2 	 3.833063529379148e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1560, -107.2636, -107.2994, -107.3199, -107.3327, -107.3414,
        -107.3474, -107.3516, -107.3545, -107.3566, -107.3580, -107.3590,
        -107.3597, -107.3602, -107.3606, -107.3608, -107.3610, -107.3611,
        -107.3612, -107.3612, -107.3613, -107.3613, -107.3613, -107.3614,
        -107.3614], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1534e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1210, -460.1358, -460.1403, -460.1428, -460.1444, -460.1455,
        -460.1463, -460.1469, -460.1473, -460.1476, -460.1478, -460.1479,
        -460.1480, -460.1481, -460.1481, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1251e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1251e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 7 	 Cl 	 Cl 	 1.235140017981709e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9691, -188.6215, -188.5450, -188.5080, -188.4846, -188.4686,
        -188.4576, -188.4498, -188.4444, -188.4407, -188.4380, -188.4362,
        -188.4349, -188.4340, -188.4333, -188.4329, -188.4326, -188.4323,
        -188.4322, -188.4321, -188.4320, -188.4320, -188.4319, -188.4319,
        -188.4319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3927e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4854, -920.4072, -920.3854, -920.3740, -920.3668, -920.3618,
        -920.3584, -920.3560, -920.3543, -920.3531, -920.3523, -920.3517,
        -920.3513, -920.3510, -920.3508, -920.3506, -920.3505, -920.3505,
        -920.3504, -920.3504, -920.3504, -920.3504, -920.3503, -920.3503,
        -920.3503], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3857e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1097, -460.1281, -460.1352, -460.1391, -460.1418, -460.1437,
        -460.1450, -460.1460, -460.1466, -460.1471, -460.1475, -460.1477,
        -460.1479, -460.1480, -460.1481, -460.1481, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1483, -460.1483,
        -460.1483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.9146e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3506, -920.3505, -920.3505, -920.3504, -920.3504, -920.3504,
        -920.3504, -920.3503, -920.3503, -920.3503], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1481, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1483, -460.1483, -460.1483], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 5 	 Cl2 	 Cl2 	 0.00038741642991443003

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2389, -0.4366, -0.4626, -0.4749, -0.4823, -0.4872, -0.4906, -0.4929,
        -0.4945, -0.4956, -0.4964, -0.4969, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8792e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8792e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 9 	 H 	 H 	 7.75435651340018e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4637, -7.4711, -7.4742, -7.4758, -7.4769, -7.4777, -7.4786, -7.4792,
        -7.4793, -7.4791, -7.4789, -7.4788, -7.4787, -7.4787, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2622e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2622e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 10 	 Li 	 Li 	 1.4190851930897714e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6799, -109.5295, -109.4886, -109.4675, -109.4540, -109.4449,
        -109.4385, -109.4340, -109.4309, -109.4288, -109.4272, -109.4262,
        -109.4254, -109.4249, -109.4245, -109.4243, -109.4241, -109.4240,
        -109.4239, -109.4238, -109.4238, -109.4237, -109.4237, -109.4237,
        -109.4237], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6136e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 18, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 18, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 18, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 18, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 18, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 18, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 18, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 18, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e18)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e18/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e18/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 18 || ,[' rho : 6.340687', ' ae : 7.767577', ' E : 0.224473'] ,|| total loss 21.284018 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9810, -1.0932, -1.1220, -1.1367, -1.1460, -1.1523, -1.1566, -1.1597,
        -1.1618, -1.1633, -1.1643, -1.1650, -1.1655, -1.1659, -1.1661, -1.1663,
        -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2128, -0.4287, -0.4582, -0.4721, -0.4805, -0.4860, -0.4897, -0.4923,
        -0.4941, -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9765e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 0 	 H2 	 H2 	 3.785962346880255e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4702, -7.4736, -7.4754, -7.4766, -7.4775, -7.4783, -7.4791,
        -7.4794, -7.4792, -7.4790, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7329e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7329e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 10 	 Li 	 Li 	 1.523798449117387e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5084, -920.4181, -920.3925, -920.3791, -920.3706, -920.3647,
        -920.3607, -920.3578, -920.3558, -920.3544, -920.3534, -920.3528,
        -920.3523, -920.3519, -920.3517, -920.3515, -920.3514, -920.3513,
        -920.3513, -920.3512, -920.3512, -920.3512, -920.3512, -920.3512,
        -920.3512], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3858e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1154, -460.1324, -460.1382, -460.1414, -460.1435, -460.1450,
        -460.1460, -460.1468, -460.1473, -460.1477, -460.1479, -460.1481,
        -460.1483, -460.1483, -460.1484, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485, -460.1485, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0951e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3515, -920.3514, -920.3513, -920.3513, -920.3512, -920.3512,
        -920.3512, -920.3512, -920.3512, -920.3512], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1485, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 5 	 Cl2 	 Cl2 	 0.00038259470415048016

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1118, -460.1299, -460.1365, -460.1402, -460.1427, -460.1444,
        -460.1456, -460.1465, -460.1472, -460.1476, -460.1479, -460.1481,
        -460.1483, -460.1484, -460.1485, -460.1485, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2204e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2204e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1485, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 7 	 Cl 	 Cl 	 9.6460255436747e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2918, -0.4515, -0.4709, -0.4802, -0.4859, -0.4897, -0.4923, -0.4941,
        -0.4953, -0.4962, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7131e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7131e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 9 	 H 	 H 	 7.722294815625448e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6854, -109.5319, -109.4901, -109.4685, -109.4548, -109.4454,
        -109.4389, -109.4343, -109.4312, -109.4289, -109.4274, -109.4263,
        -109.4255, -109.4250, -109.4246, -109.4243, -109.4242, -109.4240,
        -109.4239, -109.4239, -109.4238, -109.4238, -109.4238, -109.4238,
        -109.4238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6131e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5061, -93.4060, -93.3791, -93.3669, -93.3595, -93.3546, -93.3512,
        -93.3488, -93.3471, -93.3459, -93.3451, -93.3445, -93.3441, -93.3439,
        -93.3437, -93.3435, -93.3434, -93.3434, -93.3433, -93.3433, -93.3433,
        -93.3432, -93.3432, -93.3432, -93.3432], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6191e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9982, -188.6304, -188.5502, -188.5116, -188.4871, -188.4704,
        -188.4588, -188.4508, -188.4451, -188.4412, -188.4384, -188.4365,
        -188.4351, -188.4342, -188.4335, -188.4330, -188.4327, -188.4325,
        -188.4323, -188.4322, -188.4321, -188.4321, -188.4320, -188.4320,
        -188.4320], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3935e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2331, -107.2983, -107.3210, -107.3343, -107.3427, -107.3484,
        -107.3523, -107.3551, -107.3570, -107.3583, -107.3593, -107.3599,
        -107.3604, -107.3607, -107.3610, -107.3611, -107.3612, -107.3613,
        -107.3614, -107.3614, -107.3614, -107.3614, -107.3615, -107.3615,
        -107.3615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 19, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 19, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 19, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 19, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 19, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 19, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 19, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 19, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e19)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e19/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e19/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 19 || ,[' rho : 6.340309', ' ae : 7.720121', ' E : 0.233607'] ,|| total loss 21.273766 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5435, -93.4194, -93.3858, -93.3711, -93.3625, -93.3566, -93.3526,
        -93.3498, -93.3478, -93.3464, -93.3455, -93.3448, -93.3443, -93.3440,
        -93.3437, -93.3436, -93.3435, -93.3434, -93.3433, -93.3433, -93.3433,
        -93.3432, -93.3432, -93.3432, -93.3432], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6191e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0095, -1.1044, -1.1288, -1.1413, -1.1492, -1.1545, -1.1582, -1.1607,
        -1.1625, -1.1638, -1.1647, -1.1653, -1.1657, -1.1660, -1.1662, -1.1664,
        -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3034, -0.4546, -0.4726, -0.4814, -0.4867, -0.4902, -0.4927, -0.4943,
        -0.4955, -0.4963, -0.4969, -0.4973, -0.4976, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6817e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1665, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 0 	 H2 	 H2 	 3.784050047232625e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4730, -7.4755, -7.4768, -7.4776, -7.4785, -7.4792, -7.4794,
        -7.4792, -7.4790, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6810e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6810e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 10 	 Li 	 Li 	 1.731641286715064e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5005, -920.4146, -920.3905, -920.3779, -920.3698, -920.3643,
        -920.3605, -920.3578, -920.3559, -920.3546, -920.3536, -920.3530,
        -920.3525, -920.3522, -920.3520, -920.3519, -920.3517, -920.3517,
        -920.3516, -920.3516, -920.3515, -920.3515, -920.3515, -920.3515,
        -920.3515], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3858e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1138, -460.1313, -460.1375, -460.1409, -460.1431, -460.1447,
        -460.1459, -460.1467, -460.1472, -460.1476, -460.1479, -460.1481,
        -460.1483, -460.1484, -460.1484, -460.1485, -460.1485, -460.1485,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5308e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3519, -920.3517, -920.3517, -920.3516, -920.3516, -920.3515,
        -920.3515, -920.3515, -920.3515, -920.3515], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1485, -460.1485, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 5 	 Cl2 	 Cl2 	 0.0003777567456290249

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6353, -109.5106, -109.4770, -109.4597, -109.4487, -109.4411,
        -109.4359, -109.4323, -109.4297, -109.4280, -109.4267, -109.4258,
        -109.4252, -109.4248, -109.4245, -109.4243, -109.4241, -109.4240,
        -109.4240, -109.4239, -109.4239, -109.4239, -109.4238, -109.4238,
        -109.4238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6129e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2287, -107.2963, -107.3197, -107.3335, -107.3422, -107.3480,
        -107.3521, -107.3549, -107.3569, -107.3583, -107.3593, -107.3600,
        -107.3605, -107.3608, -107.3610, -107.3612, -107.3613, -107.3614,
        -107.3614, -107.3615, -107.3615, -107.3615, -107.3615, -107.3615,
        -107.3616], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2250, -0.4324, -0.4603, -0.4734, -0.4813, -0.4866, -0.4901, -0.4926,
        -0.4943, -0.4955, -0.4963, -0.4969, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9338e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9338e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 9 	 H 	 H 	 7.779243212278985e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.8848, -188.5952, -188.5298, -188.4979, -188.4776, -188.4638,
        -188.4543, -188.4476, -188.4429, -188.4397, -188.4374, -188.4358,
        -188.4347, -188.4339, -188.4333, -188.4330, -188.4327, -188.4325,
        -188.4324, -188.4323, -188.4322, -188.4322, -188.4321, -188.4321,
        -188.4321], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3939e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1207, -460.1358, -460.1405, -460.1430, -460.1447, -460.1459,
        -460.1467, -460.1473, -460.1477, -460.1480, -460.1482, -460.1483,
        -460.1484, -460.1485, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1487, -460.1487, -460.1487,
        -460.1487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3668e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3668e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1487, -460.1487, -460.1487, -460.1487], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 7 	 Cl 	 Cl 	 1.0106398298065819e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 20, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 20, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 20, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 20, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 20, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 20, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 20, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 20, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e20)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e20/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e20/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 20 || ,[' rho : 6.340066', ' ae : 7.672057', ' E : 0.234904'] ,|| total loss 21.263551 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4812, -920.4059, -920.3850, -920.3742, -920.3673, -920.3625,
        -920.3592, -920.3569, -920.3553, -920.3542, -920.3534, -920.3528,
        -920.3524, -920.3522, -920.3520, -920.3518, -920.3517, -920.3517,
        -920.3516, -920.3516, -920.3516, -920.3516, -920.3516, -920.3515,
        -920.3515], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3859e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1143, -460.1317, -460.1377, -460.1410, -460.1432, -460.1448,
        -460.1459, -460.1467, -460.1472, -460.1476, -460.1479, -460.1481,
        -460.1482, -460.1483, -460.1484, -460.1484, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7858e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3518, -920.3517, -920.3517, -920.3516, -920.3516, -920.3516,
        -920.3516, -920.3516, -920.3515, -920.3515], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1484, -460.1485, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1485, -460.1485, -460.1485], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 5 	 Cl2 	 Cl2 	 0.0003745541951749291

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9343, -188.6107, -188.5387, -188.5038, -188.4816, -188.4665,
        -188.4561, -188.4488, -188.4437, -188.4401, -188.4376, -188.4359,
        -188.4346, -188.4338, -188.4332, -188.4328, -188.4325, -188.4323,
        -188.4321, -188.4320, -188.4320, -188.4319, -188.4319, -188.4318,
        -188.4318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3941e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3050, -0.4549, -0.4729, -0.4815, -0.4868, -0.4903, -0.4927, -0.4944,
        -0.4955, -0.4963, -0.4969, -0.4973, -0.4976, -0.4977, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6847e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6847e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 9 	 H 	 H 	 7.740583493685969e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1593, -107.2650, -107.3002, -107.3204, -107.3331, -107.3416,
        -107.3475, -107.3517, -107.3546, -107.3566, -107.3580, -107.3590,
        -107.3597, -107.3602, -107.3605, -107.3608, -107.3609, -107.3610,
        -107.3611, -107.3612, -107.3612, -107.3612, -107.3613, -107.3613,
        -107.3613], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4617, -93.3893, -93.3700, -93.3609, -93.3554, -93.3516, -93.3490,
        -93.3472, -93.3459, -93.3450, -93.3444, -93.3440, -93.3437, -93.3435,
        -93.3433, -93.3432, -93.3431, -93.3431, -93.3431, -93.3430, -93.3430,
        -93.3430, -93.3430, -93.3430, -93.3430], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6173e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6569, -109.5196, -109.4825, -109.4633, -109.4511, -109.4427,
        -109.4370, -109.4329, -109.4301, -109.4281, -109.4267, -109.4258,
        -109.4251, -109.4246, -109.4243, -109.4241, -109.4239, -109.4238,
        -109.4237, -109.4236, -109.4236, -109.4236, -109.4236, -109.4235,
        -109.4235], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6122e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4630, -7.4698, -7.4733, -7.4752, -7.4765, -7.4774, -7.4782, -7.4790,
        -7.4794, -7.4793, -7.4791, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5508e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5508e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 10 	 Li 	 Li 	 1.7016070395781196e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1078, -460.1265, -460.1340, -460.1383, -460.1412, -460.1432,
        -460.1447, -460.1457, -460.1464, -460.1470, -460.1473, -460.1476,
        -460.1478, -460.1479, -460.1480, -460.1481, -460.1481, -460.1481,
        -460.1481, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4759e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4759e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1481, -460.1481, -460.1481, -460.1481, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 7 	 Cl 	 Cl 	 8.416918751843377e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0238, -1.1100, -1.1322, -1.1436, -1.1507, -1.1555, -1.1589, -1.1612,
        -1.1629, -1.1640, -1.1648, -1.1654, -1.1658, -1.1660, -1.1662, -1.1664,
        -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2764, -0.4473, -0.4685, -0.4787, -0.4849, -0.4890, -0.4918, -0.4937,
        -0.4951, -0.4960, -0.4967, -0.4971, -0.4974, -0.4977, -0.4978, -0.4979,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7768e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 0 	 H2 	 H2 	 3.828228649630227e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 21, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 21, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 21, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 21, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 21, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 21, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 21, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 21, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e21)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e21/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e21/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 21 || ,[' rho : 6.339669', ' ae : 7.639322', ' E : 0.224977'] ,|| total loss 21.256058 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4629, -7.4695, -7.4731, -7.4751, -7.4764, -7.4773, -7.4781, -7.4789,
        -7.4794, -7.4793, -7.4791, -7.4789, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2238e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.2238e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4788, -7.4788, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 10 	 Li 	 Li 	 1.6272636071146787e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6759, -109.5276, -109.4873, -109.4665, -109.4532, -109.4442,
        -109.4379, -109.4335, -109.4305, -109.4283, -109.4268, -109.4258,
        -109.4250, -109.4245, -109.4241, -109.4239, -109.4237, -109.4236,
        -109.4235, -109.4234, -109.4234, -109.4234, -109.4233, -109.4233,
        -109.4233], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6117e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9502, -1.0812, -1.1147, -1.1318, -1.1426, -1.1499, -1.1550, -1.1585,
        -1.1609, -1.1627, -1.1639, -1.1647, -1.1653, -1.1657, -1.1660, -1.1662,
        -1.1663, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2877, -0.4504, -0.4703, -0.4798, -0.4856, -0.4895, -0.4922, -0.4940,
        -0.4953, -0.4961, -0.4968, -0.4972, -0.4975, -0.4977, -0.4978, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7445e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1662, -1.1663, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1666, -1.1666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 0 	 H2 	 H2 	 3.845235315030285e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2223, -0.4316, -0.4598, -0.4731, -0.4811, -0.4864, -0.4900, -0.4925,
        -0.4942, -0.4954, -0.4963, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9602e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9602e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 9 	 H 	 H 	 7.83224433118664e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1080, -460.1267, -460.1342, -460.1384, -460.1412, -460.1432,
        -460.1447, -460.1457, -460.1464, -460.1469, -460.1473, -460.1476,
        -460.1477, -460.1479, -460.1480, -460.1480, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6366e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6366e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1480, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 7 	 Cl 	 Cl 	 6.176425510384925e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4837, -93.3975, -93.3745, -93.3638, -93.3573, -93.3530, -93.3500,
        -93.3478, -93.3464, -93.3453, -93.3446, -93.3441, -93.3438, -93.3435,
        -93.3433, -93.3432, -93.3431, -93.3431, -93.3430, -93.3430, -93.3430,
        -93.3430, -93.3430, -93.3429, -93.3429], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6161e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5122, -920.4199, -920.3937, -920.3800, -920.3713, -920.3653,
        -920.3611, -920.3582, -920.3561, -920.3547, -920.3537, -920.3530,
        -920.3525, -920.3521, -920.3519, -920.3517, -920.3516, -920.3515,
        -920.3515, -920.3514, -920.3514, -920.3514, -920.3514, -920.3513,
        -920.3513], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3859e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1191, -460.1347, -460.1396, -460.1423, -460.1440, -460.1453,
        -460.1461, -460.1467, -460.1472, -460.1475, -460.1477, -460.1478,
        -460.1480, -460.1480, -460.1481, -460.1481, -460.1481, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0450e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3517, -920.3516, -920.3515, -920.3515, -920.3514, -920.3514,
        -920.3514, -920.3514, -920.3513, -920.3513], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1481, -460.1481, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 5 	 Cl2 	 Cl2 	 0.00036616372312578643

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.0812, -188.6546, -188.5640, -188.5208, -188.4933, -188.4747,
        -188.4617, -188.4527, -188.4464, -188.4419, -188.4388, -188.4367,
        -188.4352, -188.4341, -188.4334, -188.4328, -188.4325, -188.4322,
        -188.4320, -188.4319, -188.4318, -188.4318, -188.4317, -188.4317,
        -188.4317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3951e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2604, -107.3113, -107.3291, -107.3397, -107.3464, -107.3509,
        -107.3540, -107.3562, -107.3577, -107.3588, -107.3596, -107.3601,
        -107.3604, -107.3607, -107.3609, -107.3610, -107.3611, -107.3612,
        -107.3612, -107.3612, -107.3613, -107.3613, -107.3613, -107.3613,
        -107.3613], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1534e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 22, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 22, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 22, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 22, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 22, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 22, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 22, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 22, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e22)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e22/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e22/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 22 || ,[' rho : 6.339531', ' ae : 7.554531', ' E : 0.224532'] ,|| total loss 21.240399 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-188.9067, -188.6019, -188.5335, -188.5002, -188.4791, -188.4647,
        -188.4548, -188.4478, -188.4430, -188.4396, -188.4372, -188.4355,
        -188.4343, -188.4335, -188.4330, -188.4326, -188.4323, -188.4321,
        -188.4319, -188.4318, -188.4318, -188.4317, -188.4317, -188.4317,
        -188.4317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3950e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1076, -460.1263, -460.1340, -460.1382, -460.1411, -460.1432,
        -460.1447, -460.1457, -460.1465, -460.1470, -460.1474, -460.1476,
        -460.1478, -460.1479, -460.1480, -460.1481, -460.1481, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.6207e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6207e-11, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1481, -460.1481, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 7 	 Cl 	 Cl 	 1.158278163641277e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4700, -7.4734, -7.4754, -7.4766, -7.4775, -7.4783, -7.4791,
        -7.4795, -7.4794, -7.4791, -7.4790, -7.4789, -7.4789, -7.4789, -7.4789,
        -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9313e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9313e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4789, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 10 	 Li 	 Li 	 2.005442913420977e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5067, -920.4174, -920.3922, -920.3790, -920.3706, -920.3648,
        -920.3608, -920.3580, -920.3560, -920.3546, -920.3537, -920.3530,
        -920.3525, -920.3522, -920.3519, -920.3518, -920.3517, -920.3516,
        -920.3515, -920.3515, -920.3515, -920.3514, -920.3514, -920.3514,
        -920.3514], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3860e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1183, -460.1342, -460.1392, -460.1420, -460.1438, -460.1451,
        -460.1460, -460.1467, -460.1471, -460.1474, -460.1476, -460.1478,
        -460.1479, -460.1480, -460.1480, -460.1481, -460.1481, -460.1481,
        -460.1481, -460.1481, -460.1481, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0814e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3518, -920.3517, -920.3516, -920.3515, -920.3515, -920.3515,
        -920.3514, -920.3514, -920.3514, -920.3514], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1481, -460.1481, -460.1481, -460.1481, -460.1481, -460.1481,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 5 	 Cl2 	 Cl2 	 0.0003633916733005204

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3201, -0.4589, -0.4751, -0.4829, -0.4878, -0.4910, -0.4932, -0.4947,
        -0.4957, -0.4965, -0.4970, -0.4974, -0.4976, -0.4978, -0.4979, -0.4980,
        -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6574e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6574e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 9 	 H 	 H 	 7.772507479384869e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0147, -1.1064, -1.1300, -1.1421, -1.1497, -1.1549, -1.1584, -1.1609,
        -1.1626, -1.1639, -1.1647, -1.1653, -1.1657, -1.1660, -1.1662, -1.1663,
        -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2243, -0.4322, -0.4602, -0.4733, -0.4813, -0.4865, -0.4901, -0.4926,
        -0.4943, -0.4954, -0.4963, -0.4968, -0.4973, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9591e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 0 	 H2 	 H2 	 3.7789649165488184e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6042, -109.4973, -109.4686, -109.4539, -109.4445, -109.4381,
        -109.4337, -109.4306, -109.4284, -109.4269, -109.4258, -109.4251,
        -109.4246, -109.4242, -109.4239, -109.4238, -109.4236, -109.4235,
        -109.4235, -109.4234, -109.4234, -109.4234, -109.4234, -109.4234,
        -109.4234], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6110e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5262, -93.4129, -93.3824, -93.3688, -93.3607, -93.3553, -93.3515,
        -93.3489, -93.3470, -93.3458, -93.3449, -93.3442, -93.3438, -93.3435,
        -93.3433, -93.3431, -93.3430, -93.3429, -93.3429, -93.3428, -93.3428,
        -93.3428, -93.3428, -93.3428, -93.3428], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6147e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.1616, -107.2659, -107.3007, -107.3207, -107.3332, -107.3417,
        -107.3476, -107.3516, -107.3545, -107.3565, -107.3579, -107.3589,
        -107.3596, -107.3601, -107.3604, -107.3606, -107.3608, -107.3609,
        -107.3610, -107.3611, -107.3611, -107.3611, -107.3611, -107.3612,
        -107.3612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 23, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 23, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 23, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 23, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 23, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 23, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 23, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 23, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e23)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e23/2022-11-03_10:00:47.012959_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e23/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 23 || ,[' rho : 6.339056', ' ae : 7.525955', ' E : 0.226116'] ,|| total loss 21.233256 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.4569, -93.3873, -93.3688, -93.3601, -93.3547, -93.3511, -93.3486,
        -93.3468, -93.3456, -93.3448, -93.3442, -93.3437, -93.3434, -93.3432,
        -93.3431, -93.3430, -93.3429, -93.3429, -93.3428, -93.3428, -93.3428,
        -93.3428, -93.3428, -93.3428, -93.3428], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6147e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2558, -107.3090, -107.3276, -107.3387, -107.3456, -107.3503,
        -107.3536, -107.3559, -107.3575, -107.3586, -107.3594, -107.3599,
        -107.3603, -107.3606, -107.3607, -107.3609, -107.3610, -107.3610,
        -107.3611, -107.3611, -107.3611, -107.3611, -107.3612, -107.3612,
        -107.3612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9962, -1.0992, -1.1256, -1.1391, -1.1477, -1.1534, -1.1574, -1.1602,
        -1.1622, -1.1635, -1.1645, -1.1651, -1.1656, -1.1659, -1.1661, -1.1663,
        -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3298, -0.4613, -0.4765, -0.4838, -0.4884, -0.4914, -0.4935, -0.4949,
        -0.4959, -0.4966, -0.4971, -0.4974, -0.4976, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6347e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1663, -1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1666,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 0 	 H2 	 H2 	 3.8105620313643965e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2457, -0.4385, -0.4637, -0.4756, -0.4828, -0.4876, -0.4908, -0.4930,
        -0.4946, -0.4957, -0.4964, -0.4970, -0.4973, -0.4976, -0.4978, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8813e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8813e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 9 	 H 	 H 	 7.827820582844772e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1197, -460.1352, -460.1401, -460.1427, -460.1445, -460.1457,
        -460.1465, -460.1471, -460.1476, -460.1479, -460.1481, -460.1482,
        -460.1483, -460.1484, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3786e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3786e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1485, -460.1485, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 7 	 Cl 	 Cl 	 7.811565558980837e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6312, -109.5088, -109.4758, -109.4588, -109.4480, -109.4406,
        -109.4355, -109.4319, -109.4294, -109.4277, -109.4265, -109.4256,
        -109.4250, -109.4246, -109.4243, -109.4241, -109.4239, -109.4238,
        -109.4238, -109.4237, -109.4237, -109.4237, -109.4237, -109.4236,
        -109.4236], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6110e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4824, -920.4070, -920.3861, -920.3753, -920.3683, -920.3636,
        -920.3603, -920.3580, -920.3563, -920.3552, -920.3544, -920.3539,
        -920.3535, -920.3532, -920.3530, -920.3529, -920.3528, -920.3527,
        -920.3527, -920.3526, -920.3526, -920.3526, -920.3526, -920.3526,
        -920.3526], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3861e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1197, -460.1352, -460.1400, -460.1427, -460.1445, -460.1457,
        -460.1465, -460.1471, -460.1476, -460.1479, -460.1481, -460.1482,
        -460.1483, -460.1484, -460.1485, -460.1485, -460.1485, -460.1485,
        -460.1486, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4203e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3529, -920.3528, -920.3527, -920.3527, -920.3526, -920.3526,
        -920.3526, -920.3526, -920.3526, -920.3526], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1485, -460.1485, -460.1485, -460.1486, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 5 	 Cl2 	 Cl2 	 0.0003577830678083285

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.1453, -188.6730, -188.5746, -188.5280, -188.4984, -188.4783,
        -188.4643, -188.4546, -188.4478, -188.4430, -188.4396, -188.4373,
        -188.4357, -188.4345, -188.4337, -188.4331, -188.4328, -188.4325,
        -188.4323, -188.4322, -188.4321, -188.4320, -188.4319, -188.4319,
        -188.4319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3960e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4633, -7.4704, -7.4737, -7.4756, -7.4768, -7.4777, -7.4785, -7.4793,
        -7.4796, -7.4794, -7.4792, -7.4791, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0883e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0883e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4790, -7.4790, -7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 10 	 Li 	 Li 	 2.4353392881518797e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 24, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 24, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 24, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 24, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 24, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 24, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 24, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 24, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e24)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e24/2022-11-03_10:00:47.012959_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e24/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 24 || ,[' rho : 6.339063', ' ae : 7.469920', ' E : 0.236712'] ,|| total loss 21.223076 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------12----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for O
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 10, 8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2554, -107.3089, -107.3277, -107.3388, -107.3458, -107.3505,
        -107.3538, -107.3561, -107.3577, -107.3588, -107.3596, -107.3601,
        -107.3605, -107.3608, -107.3610, -107.3611, -107.3612, -107.3613,
        -107.3613, -107.3614, -107.3614, -107.3614, -107.3614, -107.3614,
        -107.3614], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1873])
ao_eval   ---   torch.Size([1, 10, 1873, 18])
grid_weights   ---   torch.Size([1, 1873])
-107.30594220504784
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1535e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   2LiF
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [6]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for C
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2229, -0.4318, -0.4599, -0.4732, -0.4812, -0.4865, -0.4901, -0.4925,
        -0.4942, -0.4954, -0.4963, -0.4968, -0.4972, -0.4975, -0.4977, -0.4979,
        -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9624e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9624e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4979, -0.4980, -0.4980, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 9 	 H 	 H 	 7.845607742349691e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [10]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4662, -7.4734, -7.4758, -7.4770, -7.4779, -7.4787, -7.4794, -7.4796,
        -7.4794, -7.4792, -7.4791, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 9, 9])
mo_energy   ---   torch.Size([2, 9])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 9])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 9])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 9])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1163e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1163e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 10 	 Li 	 Li 	 2.496407115805909e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 6, 12, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.1226, -188.6665, -188.5708, -188.5255, -188.4966, -188.4770,
        -188.4634, -188.4539, -188.4473, -188.4426, -188.4394, -188.4371,
        -188.4355, -188.4344, -188.4336, -188.4330, -188.4327, -188.4324,
        -188.4322, -188.4321, -188.4320, -188.4319, -188.4319, -188.4318,
        -188.4318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 27, 27])
mo_energy   ---   torch.Size([2, 27])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3538])
ao_eval   ---   torch.Size([1, 10, 3538, 27])
grid_weights   ---   torch.Size([1, 3538])
-188.40175875056596
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 27])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 27])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.3963e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0013, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   4COO
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1177, -460.1340, -460.1392, -460.1421, -460.1440, -460.1454,
        -460.1463, -460.1470, -460.1475, -460.1478, -460.1480, -460.1482,
        -460.1483, -460.1484, -460.1484, -460.1485, -460.1485, -460.1485,
        -460.1485, -460.1486, -460.1486, -460.1486, -460.1486, -460.1486,
        -460.1486], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3510e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3510e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1485, -460.1485, -460.1485, -460.1485, -460.1486, -460.1486,
        -460.1486, -460.1486, -460.1486, -460.1486], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 7 	 Cl 	 Cl 	 7.72736804390645e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 7, 7]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4621, -920.3980, -920.3805, -920.3714, -920.3656, -920.3616,
        -920.3589, -920.3570, -920.3556, -920.3547, -920.3540, -920.3535,
        -920.3532, -920.3530, -920.3528, -920.3527, -920.3526, -920.3526,
        -920.3525, -920.3525, -920.3525, -920.3525, -920.3525, -920.3525,
        -920.3525], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 26, 26])
mo_energy   ---   torch.Size([2, 26])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2588])
ao_eval   ---   torch.Size([1, 10, 2588, 26])
grid_weights   ---   torch.Size([1, 2588])
-919.5958911885615
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 26])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 26])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3861e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1120, -460.1300, -460.1365, -460.1401, -460.1425, -460.1443,
        -460.1455, -460.1463, -460.1469, -460.1474, -460.1477, -460.1479,
        -460.1481, -460.1482, -460.1482, -460.1483, -460.1483, -460.1483,
        -460.1484, -460.1484, -460.1484, -460.1484, -460.1484, -460.1484,
        -460.1484], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 13, 13])
mo_energy   ---   torch.Size([2, 13])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 43048])
ao_eval   ---   torch.Size([1, 10, 43048, 13])
grid_weights   ---   torch.Size([1, 43048])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 13])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 13])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7694e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3527, -920.3526, -920.3526, -920.3525, -920.3525, -920.3525,
        -920.3525, -920.3525, -920.3525, -920.3525], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1483, -460.1483, -460.1483, -460.1484, -460.1484, -460.1484,
        -460.1484, -460.1484, -460.1484, -460.1484], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 5 	 Cl2 	 Cl2 	 0.0003530203220536422

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [11]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for N
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 9, 9]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0317, -1.1131, -1.1341, -1.1449, -1.1516, -1.1562, -1.1594, -1.1616,
        -1.1631, -1.1642, -1.1649, -1.1655, -1.1658, -1.1661, -1.1663, -1.1664,
        -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667, -1.1667,
        -1.1667], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 4, 4])
mo_energy   ---   torch.Size([2, 4])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 572])
ao_eval   ---   torch.Size([1, 10, 572, 4])
grid_weights   ---   torch.Size([1, 572])
-1.1723488865668197
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 4])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 4])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0003, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3405, -0.4640, -0.4780, -0.4848, -0.4890, -0.4919, -0.4938, -0.4951,
        -0.4960, -0.4967, -0.4971, -0.4975, -0.4977, -0.4978, -0.4979, -0.4980,
        -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982, -0.4982,
        -0.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 2, 2])
mo_energy   ---   torch.Size([2, 2])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 2])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 2])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 2])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6142e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0052, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1664, -1.1665, -1.1666, -1.1666, -1.1666, -1.1666, -1.1667, -1.1667,
        -1.1667, -1.1667], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4980, -0.4981, -0.4981, -0.4981, -0.4981, -0.4982, -0.4982, -0.4982,
        -0.4982, -0.4982], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 0 	 H2 	 H2 	 3.7617728130313877e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 6, 11, 9]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.5262, -93.4128, -93.3823, -93.3687, -93.3606, -93.3552, -93.3515,
        -93.3488, -93.3470, -93.3457, -93.3448, -93.3442, -93.3437, -93.3434,
        -93.3432, -93.3431, -93.3430, -93.3429, -93.3428, -93.3428, -93.3428,
        -93.3428, -93.3427, -93.3427, -93.3427], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 20, 20])
mo_energy   ---   torch.Size([2, 20])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 942])
ao_eval   ---   torch.Size([1, 10, 942, 20])
grid_weights   ---   torch.Size([1, 942])
-93.32175404633891
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 20])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 20])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.6127e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   3CNH
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 11, 11]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-109.6047, -109.4975, -109.4688, -109.4540, -109.4445, -109.4381,
        -109.4337, -109.4306, -109.4284, -109.4269, -109.4258, -109.4251,
        -109.4245, -109.4242, -109.4239, -109.4237, -109.4236, -109.4235,
        -109.4235, -109.4234, -109.4234, -109.4234, -109.4234, -109.4234,
        -109.4233], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 18, 18])
mo_energy   ---   torch.Size([2, 18])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1776])
ao_eval   ---   torch.Size([1, 10, 1776, 18])
grid_weights   ---   torch.Size([1, 1776])
-109.41916243018889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 18])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 18])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6101e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0017, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for   1NN
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [8]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
========================================================
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
SCF CALCULATION FAILED
SCF Calculation failed for F
Function 'MulBackward0' returned nan values in its 0th output.
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE
========================================================
++++++++++++++++++++++++++++++++++
FAILS:
{'Epoch': 25, 'Training Label': 'O', 'Molecules': ['O'], 'Current Sub-Molecule': 'O'}
{'Epoch': 25, 'Training Label': '  2LiF', 'Molecules': ['FLi', 'Li', 'F'], 'Current Sub-Molecule': 'F'}
{'Epoch': 25, 'Training Label': 'C', 'Molecules': ['C'], 'Current Sub-Molecule': 'C'}
{'Epoch': 25, 'Training Label': '  4COO', 'Molecules': ['CO2', 'C', 'O', 'O'], 'Current Sub-Molecule': 'C'}
{'Epoch': 25, 'Training Label': 'N', 'Molecules': ['N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 25, 'Training Label': '  3CNH', 'Molecules': ['CHN', 'C', 'N', 'H'], 'Current Sub-Molecule': 'C'}
{'Epoch': 25, 'Training Label': '  1NN', 'Molecules': ['N2', 'N', 'N'], 'Current Sub-Molecule': 'N'}
{'Epoch': 25, 'Training Label': 'F', 'Molecules': ['F'], 'Current Sub-Molecule': 'F'}
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e25)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e25/2022-11-03_10:00:47.012959_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/09/MODEL_MGGA_e25/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 25 || ,[' rho : 6.338494', ' ae : 7.420280', ' E : 0.235420'] ,|| total loss 21.211865 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
Max checkpoint number reached -- aborting training process.

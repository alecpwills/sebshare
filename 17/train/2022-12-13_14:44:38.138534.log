{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/14",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/11/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": true,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "subset": true,
    "chkptmax": 999999999
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{' 11HONN': [11, 9, 10], ' 14CHHHHO': [14, 12, 13], ' 17HFF': [17, 15, 16]}
MOLECULES TO TRAIN ON
{'  0HH': [0, 6, 6], '  1NN': [1, 8, 8], '  2LiF': [2, 7, 5], '  3CNH': [3, 4, 8, 6], 'C': [4], 'F': [5], 'H': [6], 'Li': [7], 'N': [8], ' 11HONN': [11, 9, 10], ' 14CHHHHO': [14, 12, 13], ' 17HFF': [17, 15, 16]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 2, 5: 2, 6: 3, 7: 2, 8: 3, 9: 1, 10: 1, 11: 1, 12: 1, 13: 1, 14: 1, 15: 1, 16: 1, 17: 1}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7409, -37.7801, -37.7987, -37.8097, -37.8173, -37.8226, -37.8265,
        -37.8292, -37.8312, -37.8326, -37.8336, -37.8343, -37.8347, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4799e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4799e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 4 	 C 	 C 	 5.008318476459877e-06

PASSTHROUGH -- C DONE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4077, -54.4716, -54.5079, -54.5302, -54.5456, -54.5568, -54.5648,
        -54.5705, -54.5746, -54.5775, -54.5795, -54.5810, -54.5820, -54.5827,
        -54.5832, -54.5835, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842,
        -54.5842, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0729e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0729e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5835, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 8 	 N 	 N 	 5.634368719397754e-06

PASSTHROUGH -- N DONE.
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6789, -99.7036, -99.7138, -99.7197, -99.7238, -99.7268, -99.7289,
        -99.7304, -99.7315, -99.7323, -99.7329, -99.7333, -99.7335, -99.7337,
        -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8067e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8067e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 F 	 F 	 1.655750836411603e-08

PASSTHROUGH -- F DONE.
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5404, -109.9047, -109.7533, -109.6731, -109.6216, -109.5864,
        -109.5618, -109.5447, -109.5327, -109.5243, -109.5184, -109.5142,
        -109.5114, -109.5093, -109.5079, -109.5069, -109.5062, -109.5057,
        -109.5054, -109.5052, -109.5050, -109.5049, -109.5048, -109.5047,
        -109.5047], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4210, -54.4939, -54.5247, -54.5426, -54.5548, -54.5634, -54.5696,
        -54.5739, -54.5770, -54.5792, -54.5807, -54.5818, -54.5826, -54.5831,
        -54.5835, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9463e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4365, -54.5080, -54.5348, -54.5500, -54.5601, -54.5673, -54.5723,
        -54.5759, -54.5784, -54.5802, -54.5814, -54.5823, -54.5829, -54.5833,
        -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8820e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5069, -109.5062, -109.5057, -109.5054, -109.5052, -109.5050,
        -109.5049, -109.5048, -109.5047, -109.5047], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 1 	 N2 	 N2 	 0.00018215978392936076

PASSTHROUGH -- N2 DONE.
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4635, -7.4708, -7.4738, -7.4755, -7.4765, -7.4773, -7.4782, -7.4789,
        -7.4789, -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0716e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3393e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1432e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 Li 	 Li 	 5.4705428147573974e-08

PASSTHROUGH -- Li DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8982, -93.4871, -93.3834, -93.3341, -93.3004, -93.2776, -93.2612,
        -93.2494, -93.2408, -93.2344, -93.2298, -93.2263, -93.2238, -93.2218,
        -93.2204, -93.2193, -93.2185, -93.2179, -93.2174, -93.2170, -93.2167,
        -93.2165, -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6281e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7403, -37.7789, -37.7978, -37.8091, -37.8168, -37.8223, -37.8262,
        -37.8290, -37.8311, -37.8325, -37.8335, -37.8342, -37.8347, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4877e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4104, -54.4790, -54.5136, -54.5344, -54.5488, -54.5591, -54.5664,
        -54.5717, -54.5754, -54.5781, -54.5799, -54.5813, -54.5822, -54.5828,
        -54.5833, -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0268e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2506, -0.4396, -0.4650, -0.4771, -0.4844, -0.4892, -0.4925, -0.4948,
        -0.4963, -0.4974, -0.4982, -0.4987, -0.4991, -0.4994, -0.4995, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.2237e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2193, -93.2185, -93.2179, -93.2174, -93.2170, -93.2167, -93.2165,
        -93.2164, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 3 	 CHN 	 CNH 	 0.009645035940698867

PASSTHROUGH -- CHN DONE.
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4536], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7326], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0451], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4536], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7326], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 11 	 HF2 	 HF2 	 0.000790309829934319

PASSTHROUGH -- HF2 DONE.
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8340], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8340], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 CH4O 	 CH4O 	 5.829788731959843e-05

PASSTHROUGH -- CH4O DONE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3411, -0.4647, -0.4792, -0.4862, -0.4905, -0.4934, -0.4954, -0.4968,
        -0.4977, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997, -0.4998,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4008e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9439e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 6 	 H 	 H 	 5.282226117006679e-10

PASSTHROUGH -- H DONE.
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0506, -1.1233, -1.1420, -1.1516, -1.1576, -1.1617, -1.1646, -1.1665,
        -1.1679, -1.1689, -1.1695, -1.1700, -1.1704, -1.1706, -1.1707, -1.1709,
        -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9059e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2973, -0.4531, -0.4726, -0.4819, -0.4876, -0.4914, -0.4940, -0.4958,
        -0.4971, -0.4979, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4088e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8497e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2172, -0.4291, -0.4593, -0.4734, -0.4819, -0.4875, -0.4913, -0.4939,
        -0.4958, -0.4970, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9718e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9603e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1709, -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711, -1.1711], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 2.2765993764096724e-06

PASSTHROUGH -- H2 DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1519], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5176], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1519], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5176], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 HN2O 	 HON2 	 0.0008339246722998092

PASSTHROUGH -- HN2O DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3029, -107.2963, -107.2601, -107.2481, -107.2404, -107.2360,
        -107.2338, -107.2328, -107.2322, -107.2319, -107.2317, -107.2317,
        -107.2317, -107.2318, -107.2320, -107.2321, -107.2323, -107.2325,
        -107.2326, -107.2327, -107.2328, -107.2329, -107.2330, -107.2331,
        -107.2331], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3967e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4627, -7.4697, -7.4731, -7.4750, -7.4761, -7.4770, -7.4779, -7.4787,
        -7.4790, -7.4788, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0728e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3244e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6763, -99.6995, -99.7108, -99.7175, -99.7222, -99.7256, -99.7280,
        -99.7298, -99.7311, -99.7320, -99.7326, -99.7331, -99.7334, -99.7336,
        -99.7338, -99.7339, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7342, -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2786e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2321, -107.2323, -107.2325, -107.2326, -107.2327, -107.2328,
        -107.2329, -107.2330, -107.2331, -107.2331], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7339, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341, -99.7342,
        -99.7342, -99.7342, -99.7342], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 2 	 FLi 	 LiF 	 0.009544486819069645

PASSTHROUGH -- FLi DONE.
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e00/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 3.147353', ' ae : 58.072300', ' E : 1.043127'] ,|| total loss 42.601867 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3251, -0.4606, -0.4768, -0.4847, -0.4895, -0.4927, -0.4949, -0.4964,
        -0.4975, -0.4982, -0.4988, -0.4991, -0.4994, -0.4996, -0.4997, -0.4998,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9719e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0275e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9439e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 6 	 H 	 H 	 5.622950526932735e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7914, -109.8537, -109.7317, -109.6585, -109.6107, -109.5780,
        -109.5553, -109.5395, -109.5285, -109.5208, -109.5154, -109.5117,
        -109.5090, -109.5072, -109.5059, -109.5050, -109.5044, -109.5040,
        -109.5037, -109.5034, -109.5033, -109.5032, -109.5031, -109.5031,
        -109.5030], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4628e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4307, -54.5031, -54.5311, -54.5471, -54.5578, -54.5654, -54.5707,
        -54.5745, -54.5772, -54.5791, -54.5804, -54.5813, -54.5820, -54.5824,
        -54.5828, -54.5830, -54.5831, -54.5833, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5456e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4321, -54.5043, -54.5319, -54.5477, -54.5582, -54.5657, -54.5709,
        -54.5746, -54.5773, -54.5791, -54.5804, -54.5814, -54.5820, -54.5825,
        -54.5828, -54.5830, -54.5832, -54.5833, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5401e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5050, -109.5044, -109.5040, -109.5037, -109.5034, -109.5033,
        -109.5032, -109.5031, -109.5031, -109.5030], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5832, -54.5833, -54.5833, -54.5834, -54.5834, -54.5835,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 1 	 N2 	 N2 	 0.00018240762797807486

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4659, -7.4729, -7.4751, -7.4762, -7.4771, -7.4780, -7.4786, -7.4787,
        -7.4784, -7.4782, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782, -7.4782,
        -7.4782, -7.4782, -7.4782, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0270e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2316e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0540e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4782, -7.4782, -7.4782, -7.4782, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4783], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 Li 	 Li 	 1.0320649536222425e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6810, -99.7057, -99.7144, -99.7193, -99.7227, -99.7251, -99.7268,
        -99.7280, -99.7289, -99.7295, -99.7299, -99.7302, -99.7305, -99.7306,
        -99.7307, -99.7308, -99.7308, -99.7309, -99.7309, -99.7309, -99.7309,
        -99.7309, -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.7270e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7270e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7308, -99.7308, -99.7309, -99.7309, -99.7309, -99.7309, -99.7309,
        -99.7310, -99.7310, -99.7310], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 F 	 F 	 2.022706988022562e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0410, -93.5456, -93.4147, -93.3568, -93.3153, -93.2876, -93.2677,
        -93.2534, -93.2430, -93.2355, -93.2299, -93.2258, -93.2228, -93.2205,
        -93.2188, -93.2176, -93.2166, -93.2159, -93.2153, -93.2149, -93.2146,
        -93.2144, -93.2142, -93.2141, -93.2139], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6124e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7413, -37.7814, -37.7994, -37.8099, -37.8171, -37.8222, -37.8258,
        -37.8284, -37.8303, -37.8316, -37.8325, -37.8332, -37.8337, -37.8340,
        -37.8342, -37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7739e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4353, -54.5067, -54.5334, -54.5486, -54.5587, -54.5658, -54.5708,
        -54.5743, -54.5769, -54.5786, -54.5799, -54.5807, -54.5814, -54.5818,
        -54.5821, -54.5823, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827,
        -54.5827, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1646e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3402, -0.4644, -0.4790, -0.4861, -0.4904, -0.4934, -0.4953, -0.4967,
        -0.4977, -0.4984, -0.4988, -0.4992, -0.4994, -0.4995, -0.4997, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9524e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5244e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0008, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2176, -93.2166, -93.2159, -93.2153, -93.2149, -93.2146, -93.2144,
        -93.2142, -93.2141, -93.2139], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5823, -54.5825, -54.5826, -54.5826, -54.5827, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 3 	 CHN 	 CNH 	 0.009593082571393189

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7629, -37.8005, -37.8128, -37.8196, -37.8241, -37.8272, -37.8294,
        -37.8309, -37.8320, -37.8328, -37.8333, -37.8337, -37.8340, -37.8342,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8043e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8043e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 4 	 C 	 C 	 8.095986720427038e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2938, -107.2918, -107.2555, -107.2440, -107.2365, -107.2323,
        -107.2302, -107.2293, -107.2288, -107.2285, -107.2284, -107.2284,
        -107.2285, -107.2286, -107.2288, -107.2289, -107.2291, -107.2293,
        -107.2294, -107.2296, -107.2297, -107.2298, -107.2298, -107.2299,
        -107.2299], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3645e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4665, -7.4732, -7.4753, -7.4763, -7.4772, -7.4781, -7.4786, -7.4785,
        -7.4783, -7.4781, -7.4780, -7.4780, -7.4780, -7.4781, -7.4781, -7.4781,
        -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782, -7.4782,
        -7.4782], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9933e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6636e-10, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6723, -99.6920, -99.7043, -99.7119, -99.7172, -99.7212, -99.7240,
        -99.7261, -99.7276, -99.7287, -99.7295, -99.7300, -99.7304, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7312, -99.7312, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.0635e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2289, -107.2291, -107.2293, -107.2294, -107.2296, -107.2297,
        -107.2298, -107.2298, -107.2299, -107.2299], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4781, -7.4782, -7.4782,
        -7.4782, -7.4782], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7312, -99.7312, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 2 	 FLi 	 LiF 	 0.009538326399503836

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0226, -1.1121, -1.1352, -1.1470, -1.1544, -1.1595, -1.1630, -1.1654,
        -1.1671, -1.1683, -1.1691, -1.1697, -1.1701, -1.1704, -1.1706, -1.1707,
        -1.1708, -1.1709, -1.1709, -1.1710, -1.1710, -1.1710, -1.1710, -1.1710,
        -1.1710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9027e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8055e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2315, -0.4337, -0.4617, -0.4749, -0.4829, -0.4882, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4980, -0.4985, -0.4990, -0.4992, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9473e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8253e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7001e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2161, -0.4288, -0.4590, -0.4732, -0.4818, -0.4874, -0.4912, -0.4939,
        -0.4957, -0.4970, -0.4978, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9473e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1926e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1707, -1.1708, -1.1709, -1.1709, -1.1710, -1.1710, -1.1710, -1.1710,
        -1.1710, -1.1710], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 2.223472872853407e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5633], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7358], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8327], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5633], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7358], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8327], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 CH4O 	 CH4O 	 5.9274126924001286e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0403], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4510], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7300], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0403], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4510], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7300], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 11 	 HF2 	 HF2 	 0.0008077001682586857

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1478], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5152], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1478], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7360], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5152], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 HN2O 	 HON2 	 0.0008537427819153636

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4097, -54.4785, -54.5128, -54.5334, -54.5476, -54.5578, -54.5651,
        -54.5703, -54.5740, -54.5766, -54.5784, -54.5797, -54.5806, -54.5813,
        -54.5817, -54.5820, -54.5822, -54.5824, -54.5825, -54.5826, -54.5826,
        -54.5827, -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3646e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3646e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5820, -54.5822, -54.5824, -54.5825, -54.5826, -54.5826, -54.5827,
        -54.5827, -54.5827, -54.5827], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 8 	 N 	 N 	 9.838378567477574e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e01)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e01/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e01/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 3.137653', ' ae : 58.030122', ' E : 1.324677'] ,|| total loss 42.540367 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9834, -1.0969, -1.1260, -1.1408, -1.1502, -1.1566, -1.1610, -1.1640,
        -1.1662, -1.1677, -1.1687, -1.1695, -1.1700, -1.1703, -1.1706, -1.1708,
        -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1712], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9080e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8160e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2908, -0.4512, -0.4715, -0.4812, -0.4871, -0.4911, -0.4938, -0.4956,
        -0.4969, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9437e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7044e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7035e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2540, -0.4406, -0.4656, -0.4774, -0.4846, -0.4893, -0.4925, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9437e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3750e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1708, -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711, -1.1712], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 2.019008582170111e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3228, -107.2997, -107.2640, -107.2501, -107.2417, -107.2368,
        -107.2341, -107.2325, -107.2316, -107.2310, -107.2306, -107.2304,
        -107.2304, -107.2304, -107.2305, -107.2307, -107.2308, -107.2309,
        -107.2311, -107.2312, -107.2313, -107.2314, -107.2314, -107.2315,
        -107.2315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3712e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4694, -7.4728, -7.4747, -7.4759, -7.4768, -7.4776, -7.4785,
        -7.4788, -7.4786, -7.4783, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0017e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4907e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7059, -99.7149, -99.7200, -99.7235, -99.7260, -99.7278,
        -99.7291, -99.7300, -99.7306, -99.7311, -99.7314, -99.7316, -99.7318,
        -99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6622e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2307, -107.2308, -107.2309, -107.2311, -107.2312, -107.2313,
        -107.2314, -107.2314, -107.2315, -107.2315], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4782, -7.4782, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783, -7.4783,
        -7.4783, -7.4783], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7320, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 2 	 FLi 	 LiF 	 0.009482344655466936

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4088, -54.4761, -54.5111, -54.5322, -54.5469, -54.5573, -54.5649,
        -54.5702, -54.5741, -54.5768, -54.5787, -54.5800, -54.5810, -54.5816,
        -54.5821, -54.5824, -54.5827, -54.5828, -54.5829, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831, -54.5832], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9837e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9837e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5824, -54.5827, -54.5828, -54.5829, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5831, -54.5832], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 8 	 N 	 N 	 8.582574792579488e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1505], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5169], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1505], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7371], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5169], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 HN2O 	 HON2 	 0.0008516393025858952

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4729, -7.4752, -7.4764, -7.4772, -7.4781, -7.4788, -7.4789,
        -7.4786, -7.4784, -7.4783, -7.4783, -7.4783, -7.4783, -7.4784, -7.4784,
        -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0131e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5428e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0261e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 Li 	 Li 	 3.627087099780815e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8340], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5665], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8340], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 CH4O 	 CH4O 	 5.9095117409676866e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9585, -109.3376, -109.4766, -109.4933, -109.4968, -109.4984,
        -109.4996, -109.5007, -109.5017, -109.5026, -109.5032, -109.5037,
        -109.5041, -109.5044, -109.5046, -109.5048, -109.5049, -109.5050,
        -109.5051, -109.5051, -109.5051, -109.5052, -109.5052, -109.5052,
        -109.5052], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4454e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4078, -54.4702, -54.5067, -54.5291, -54.5448, -54.5561, -54.5642,
        -54.5700, -54.5742, -54.5771, -54.5792, -54.5806, -54.5816, -54.5824,
        -54.5829, -54.5832, -54.5835, -54.5836, -54.5838, -54.5839, -54.5839,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3068e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4117, -54.4810, -54.5150, -54.5354, -54.5494, -54.5594, -54.5666,
        -54.5717, -54.5754, -54.5780, -54.5798, -54.5810, -54.5819, -54.5826,
        -54.5830, -54.5833, -54.5835, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2379e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5048, -109.5049, -109.5050, -109.5051, -109.5051, -109.5051,
        -109.5052, -109.5052, -109.5052, -109.5052], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5833, -54.5835, -54.5837, -54.5838, -54.5839, -54.5839, -54.5840,
        -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 1 	 N2 	 N2 	 0.0001688535931805317

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8839, -93.4815, -93.3806, -93.3325, -93.2997, -93.2775, -93.2616,
        -93.2502, -93.2419, -93.2358, -93.2313, -93.2280, -93.2255, -93.2237,
        -93.2223, -93.2212, -93.2205, -93.2199, -93.2194, -93.2191, -93.2188,
        -93.2186, -93.2184, -93.2183, -93.2182], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5389e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7446, -37.7853, -37.8025, -37.8125, -37.8193, -37.8241, -37.8275,
        -37.8299, -37.8317, -37.8329, -37.8337, -37.8344, -37.8348, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8358, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5424e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4155, -54.4869, -54.5195, -54.5387, -54.5519, -54.5613, -54.5680,
        -54.5728, -54.5761, -54.5785, -54.5802, -54.5814, -54.5822, -54.5828,
        -54.5832, -54.5835, -54.5837, -54.5839, -54.5840, -54.5840, -54.5841,
        -54.5841, -54.5841, -54.5842, -54.5842], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0962e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2943, -0.4522, -0.4721, -0.4816, -0.4874, -0.4912, -0.4939, -0.4957,
        -0.4970, -0.4978, -0.4985, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9459e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6305e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2212, -93.2205, -93.2199, -93.2194, -93.2191, -93.2188, -93.2186,
        -93.2184, -93.2183, -93.2182], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357, -37.8358,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5835, -54.5837, -54.5839, -54.5840, -54.5840, -54.5841, -54.5841,
        -54.5841, -54.5842, -54.5842], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 3 	 CHN 	 CNH 	 0.00941995533086969

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3339, -0.4628, -0.4781, -0.4855, -0.4900, -0.4930, -0.4951, -0.4966,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9443e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0872e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8887e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 6 	 H 	 H 	 3.421745971974899e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7564, -37.7964, -37.8104, -37.8182, -37.8233, -37.8270, -37.8296,
        -37.8314, -37.8327, -37.8336, -37.8342, -37.8347, -37.8350, -37.8352,
        -37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5444e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 4 	 C 	 C 	 5.322411116868346e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6796, -99.7041, -99.7141, -99.7200, -99.7240, -99.7269, -99.7290,
        -99.7304, -99.7315, -99.7323, -99.7328, -99.7332, -99.7335, -99.7336,
        -99.7338, -99.7339, -99.7339, -99.7340, -99.7340, -99.7340, -99.7340,
        -99.7341, -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4704e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4704e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7339, -99.7339, -99.7340, -99.7340, -99.7340, -99.7340, -99.7341,
        -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 F 	 F 	 6.7412681328107535e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4538], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7325], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0456], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4538], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7325], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 11 	 HF2 	 HF2 	 0.0008093892844911919

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e02)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e02/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e02/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 3.125913', ' ae : 57.671175', ' E : 1.124804'] ,|| total loss 42.278439 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0553, -1.1253, -1.1435, -1.1527, -1.1585, -1.1624, -1.1652, -1.1671,
        -1.1684, -1.1693, -1.1700, -1.1705, -1.1708, -1.1710, -1.1712, -1.1713,
        -1.1713, -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9291e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8583e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2779, -0.4475, -0.4694, -0.4799, -0.4862, -0.4904, -0.4933, -0.4953,
        -0.4967, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9398e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9594e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7380e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2361, -0.4351, -0.4625, -0.4754, -0.4832, -0.4884, -0.4919, -0.4943,
        -0.4960, -0.4972, -0.4980, -0.4986, -0.4990, -0.4992, -0.4994, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9398e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7977e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1713, -1.1713, -1.1714, -1.1714, -1.1715, -1.1715, -1.1715, -1.1715,
        -1.1715, -1.1715], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 1.5295314585546362e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0455], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4538], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7325], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0455], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4538], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7325], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 11 	 HF2 	 HF2 	 0.0008109208940685824

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1531], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5185], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1531], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5185], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 HN2O 	 HON2 	 0.000850976673961257

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2654, -0.4439, -0.4674, -0.4786, -0.4853, -0.4898, -0.4929, -0.4950,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9370e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.2162e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8740e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 6 	 H 	 H 	 5.046501670800145e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7542, -37.7947, -37.8092, -37.8173, -37.8227, -37.8265, -37.8292,
        -37.8312, -37.8325, -37.8335, -37.8342, -37.8346, -37.8350, -37.8352,
        -37.8354, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5364e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5364e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 4 	 C 	 C 	 5.288726908514466e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5367, -109.9046, -109.7536, -109.6737, -109.6223, -109.5872,
        -109.5628, -109.5457, -109.5337, -109.5253, -109.5194, -109.5153,
        -109.5124, -109.5104, -109.5090, -109.5080, -109.5073, -109.5068,
        -109.5065, -109.5062, -109.5061, -109.5060, -109.5059, -109.5058,
        -109.5058], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4397e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4137, -54.4840, -54.5173, -54.5371, -54.5507, -54.5603, -54.5673,
        -54.5722, -54.5757, -54.5782, -54.5799, -54.5811, -54.5820, -54.5826,
        -54.5830, -54.5833, -54.5835, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2322e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4252, -54.4978, -54.5274, -54.5445, -54.5561, -54.5643, -54.5701,
        -54.5742, -54.5771, -54.5792, -54.5806, -54.5816, -54.5824, -54.5829,
        -54.5832, -54.5835, -54.5836, -54.5838, -54.5838, -54.5839, -54.5839,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1592e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5080, -109.5073, -109.5068, -109.5065, -109.5062, -109.5061,
        -109.5060, -109.5059, -109.5058, -109.5058], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5835, -54.5836, -54.5838, -54.5838, -54.5839, -54.5839, -54.5840,
        -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 1 	 N2 	 N2 	 0.00016035657020219786

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0098, -93.5351, -93.4107, -93.3550, -93.3156, -93.2892, -93.2703,
        -93.2568, -93.2469, -93.2398, -93.2345, -93.2307, -93.2278, -93.2257,
        -93.2241, -93.2229, -93.2221, -93.2214, -93.2209, -93.2205, -93.2202,
        -93.2200, -93.2198, -93.2197, -93.2196], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5023e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7841, -37.8016, -37.8118, -37.8188, -37.8237, -37.8272,
        -37.8297, -37.8315, -37.8328, -37.8337, -37.8343, -37.8348, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8358,
        -37.8358, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5298e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4170, -54.4886, -54.5207, -54.5396, -54.5525, -54.5617, -54.5682,
        -54.5729, -54.5762, -54.5785, -54.5802, -54.5813, -54.5821, -54.5827,
        -54.5831, -54.5834, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5840, -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1892e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2557, -0.4410, -0.4658, -0.4775, -0.4846, -0.4894, -0.4926, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4987, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9353e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4257e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2229, -93.2221, -93.2214, -93.2209, -93.2205, -93.2202, -93.2200,
        -93.2198, -93.2197, -93.2196], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5834, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839, -54.5840,
        -54.5840, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 3 	 CHN 	 CNH 	 0.0092776356177291

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6829, -99.7075, -99.7165, -99.7216, -99.7251, -99.7276, -99.7294,
        -99.7307, -99.7316, -99.7322, -99.7327, -99.7330, -99.7332, -99.7334,
        -99.7335, -99.7336, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337,
        -99.7338, -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4731e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4731e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7336, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337, -99.7338,
        -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 F 	 F 	 4.303029571224051e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4647, -7.4721, -7.4748, -7.4762, -7.4771, -7.4780, -7.4788, -7.4792,
        -7.4790, -7.4788, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0153e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2448e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0306e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 Li 	 Li 	 9.781131273436598e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2204, -107.2717, -107.2378, -107.2339, -107.2302, -107.2282,
        -107.2276, -107.2282, -107.2290, -107.2298, -107.2304, -107.2310,
        -107.2314, -107.2318, -107.2322, -107.2325, -107.2328, -107.2331,
        -107.2333, -107.2335, -107.2337, -107.2338, -107.2339, -107.2340,
        -107.2341], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3782e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4670, -7.4738, -7.4759, -7.4769, -7.4778, -7.4787, -7.4792, -7.4791,
        -7.4788, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0137e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2443e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6860, -99.7099, -99.7180, -99.7226, -99.7257, -99.7279, -99.7295,
        -99.7306, -99.7314, -99.7320, -99.7324, -99.7326, -99.7328, -99.7330,
        -99.7331, -99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6946e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2325, -107.2328, -107.2331, -107.2333, -107.2335, -107.2337,
        -107.2338, -107.2339, -107.2340, -107.2341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 2 	 FLi 	 LiF 	 0.009389066079986613

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8343], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5665], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8343], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 CH4O 	 CH4O 	 5.891251306137675e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4133, -54.4836, -54.5168, -54.5366, -54.5502, -54.5599, -54.5668,
        -54.5717, -54.5752, -54.5777, -54.5794, -54.5807, -54.5815, -54.5821,
        -54.5826, -54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6126e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6126e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834, -54.5835,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 8 	 N 	 N 	 7.544950819678987e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e03)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e03/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e03/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 3.121317', ' ae : 57.315701', ' E : 1.099617'] ,|| total loss 42.028870 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4639, -7.4713, -7.4743, -7.4759, -7.4769, -7.4777, -7.4786, -7.4792,
        -7.4791, -7.4788, -7.4787, -7.4786, -7.4786, -7.4786, -7.4786, -7.4786,
        -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0122e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.4799e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0245e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4786, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4787, -7.4787], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 Li 	 Li 	 1.0332595861838138e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2619, -0.4428, -0.4668, -0.4782, -0.4851, -0.4896, -0.4927, -0.4949,
        -0.4964, -0.4974, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9254e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4103e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8508e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 6 	 H 	 H 	 7.522983452468665e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5668], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8344], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5668], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8344], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 CH4O 	 CH4O 	 5.8928570473153826e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0157, -1.1099, -1.1342, -1.1465, -1.1544, -1.1597, -1.1633, -1.1659,
        -1.1677, -1.1689, -1.1698, -1.1704, -1.1708, -1.1711, -1.1713, -1.1715,
        -1.1716, -1.1717, -1.1717, -1.1717, -1.1718, -1.1718, -1.1718, -1.1718,
        -1.1718], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9315e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8629e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2805, -0.4483, -0.4698, -0.4801, -0.4864, -0.4905, -0.4934, -0.4953,
        -0.4967, -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9241e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0749e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7111e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2184, -0.4294, -0.4594, -0.4734, -0.4819, -0.4874, -0.4912, -0.4938,
        -0.4957, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9240e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4033e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1715, -1.1716, -1.1717, -1.1717, -1.1717, -1.1718, -1.1718, -1.1718,
        -1.1718, -1.1718], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 1.1025548390295682e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1527], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5184], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1527], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5184], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 HN2O 	 HON2 	 0.0008545516985535533

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7482, -37.7892, -37.8053, -37.8145, -37.8206, -37.8250, -37.8281,
        -37.8303, -37.8319, -37.8330, -37.8338, -37.8343, -37.8347, -37.8350,
        -37.8352, -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6962e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6962e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 4 	 C 	 C 	 5.577212267857665e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0779, -93.5635, -93.4262, -93.3668, -93.3238, -93.2954, -93.2750,
        -93.2604, -93.2498, -93.2421, -93.2365, -93.2324, -93.2294, -93.2271,
        -93.2255, -93.2242, -93.2233, -93.2226, -93.2221, -93.2217, -93.2214,
        -93.2212, -93.2210, -93.2209, -93.2208], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4558e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7404, -37.7780, -37.7971, -37.8084, -37.8162, -37.8218, -37.8258,
        -37.8287, -37.8308, -37.8322, -37.8332, -37.8340, -37.8345, -37.8348,
        -37.8351, -37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356,
        -37.8356, -37.8356, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7179e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4086, -54.4726, -54.5085, -54.5304, -54.5457, -54.5566, -54.5645,
        -54.5701, -54.5742, -54.5770, -54.5790, -54.5804, -54.5814, -54.5821,
        -54.5826, -54.5829, -54.5832, -54.5833, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5366e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2213, -0.4303, -0.4599, -0.4737, -0.4821, -0.4876, -0.4913, -0.4939,
        -0.4957, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9222e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3555e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2242, -93.2233, -93.2226, -93.2221, -93.2217, -93.2214, -93.2212,
        -93.2210, -93.2209, -93.2208], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8353, -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356,
        -37.8356, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5829, -54.5832, -54.5833, -54.5835, -54.5835, -54.5836, -54.5836,
        -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 3 	 CHN 	 CNH 	 0.00912215796973723

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6749, -99.6939, -99.7062, -99.7138, -99.7192, -99.7231, -99.7260,
        -99.7281, -99.7297, -99.7307, -99.7315, -99.7321, -99.7324, -99.7327,
        -99.7329, -99.7331, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6838e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6838e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 F 	 F 	 7.093737483697515e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2951, -107.2954, -107.2589, -107.2477, -107.2405, -107.2364,
        -107.2345, -107.2335, -107.2331, -107.2329, -107.2329, -107.2329,
        -107.2330, -107.2332, -107.2334, -107.2336, -107.2338, -107.2340,
        -107.2342, -107.2343, -107.2344, -107.2346, -107.2346, -107.2347,
        -107.2348], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3738e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4666, -7.4736, -7.4758, -7.4769, -7.4777, -7.4786, -7.4793, -7.4792,
        -7.4789, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787, -7.4787,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0084e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7516e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6773, -99.7011, -99.7117, -99.7179, -99.7222, -99.7253, -99.7276,
        -99.7292, -99.7304, -99.7312, -99.7318, -99.7322, -99.7325, -99.7327,
        -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7332,
        -99.7332, -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.6641e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2336, -107.2338, -107.2340, -107.2342, -107.2343, -107.2344,
        -107.2346, -107.2346, -107.2347, -107.2348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4787, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788,
        -7.4788, -7.4788], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 2 	 FLi 	 LiF 	 0.009322752789883346

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0443], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4531], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0443], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4531], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7317], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 11 	 HF2 	 HF2 	 0.0008272746128510702

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8113, -109.8318, -109.7216, -109.6526, -109.6074, -109.5764,
        -109.5549, -109.5400, -109.5296, -109.5223, -109.5173, -109.5137,
        -109.5113, -109.5095, -109.5083, -109.5075, -109.5069, -109.5065,
        -109.5062, -109.5060, -109.5059, -109.5058, -109.5057, -109.5056,
        -109.5056], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4283e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4134, -54.4834, -54.5167, -54.5365, -54.5501, -54.5598, -54.5667,
        -54.5717, -54.5752, -54.5776, -54.5794, -54.5806, -54.5815, -54.5821,
        -54.5825, -54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5834, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6472e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4142, -54.4845, -54.5175, -54.5371, -54.5506, -54.5601, -54.5670,
        -54.5718, -54.5753, -54.5777, -54.5795, -54.5807, -54.5815, -54.5821,
        -54.5825, -54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5834, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6404e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5075, -109.5069, -109.5065, -109.5062, -109.5060, -109.5059,
        -109.5058, -109.5057, -109.5056, -109.5056], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 1 	 N2 	 N2 	 0.00015017096511407666

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4235, -54.4959, -54.5259, -54.5433, -54.5551, -54.5634, -54.5693,
        -54.5735, -54.5764, -54.5785, -54.5800, -54.5811, -54.5818, -54.5823,
        -54.5827, -54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5834, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5880e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5880e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5829, -54.5831, -54.5832, -54.5833, -54.5834, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 8 	 N 	 N 	 7.667508488856833e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e04)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e04/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e04/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 3.112176', ' ae : 56.992239', ' E : 1.162059'] ,|| total loss 41.784900 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2759, -107.2889, -107.2533, -107.2441, -107.2379, -107.2345,
        -107.2330, -107.2326, -107.2325, -107.2326, -107.2328, -107.2330,
        -107.2332, -107.2334, -107.2337, -107.2340, -107.2342, -107.2344,
        -107.2346, -107.2348, -107.2349, -107.2351, -107.2352, -107.2352,
        -107.2353], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3750e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4643, -7.4717, -7.4746, -7.4761, -7.4771, -7.4779, -7.4788, -7.4793,
        -7.4792, -7.4790, -7.4788, -7.4787, -7.4787, -7.4787, -7.4787, -7.4788,
        -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789, -7.4789,
        -7.4789], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0096e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4936e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6803, -99.7048, -99.7144, -99.7200, -99.7238, -99.7265, -99.7285,
        -99.7299, -99.7309, -99.7316, -99.7321, -99.7325, -99.7328, -99.7329,
        -99.7331, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5832e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2340, -107.2342, -107.2344, -107.2346, -107.2348, -107.2349,
        -107.2351, -107.2352, -107.2352, -107.2353], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4788, -7.4789, -7.4789,
        -7.4789, -7.4789], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 2 	 FLi 	 LiF 	 0.009293892039193683

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5674], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8348], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5674], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8348], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 CH4O 	 CH4O 	 5.890064906908019e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5192], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1539], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5192], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 HN2O 	 HON2 	 0.0008562396713788358

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0463], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4541], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7326], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0463], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4541], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7326], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 11 	 HF2 	 HF2 	 0.000828770357065999

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6779, -99.7011, -99.7120, -99.7184, -99.7229, -99.7261, -99.7285,
        -99.7302, -99.7314, -99.7322, -99.7328, -99.7333, -99.7336, -99.7338,
        -99.7339, -99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7343,
        -99.7343, -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7166e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7166e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7341, -99.7341, -99.7342, -99.7342, -99.7342, -99.7343, -99.7343,
        -99.7343, -99.7343, -99.7343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 F 	 F 	 3.55755037426457e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4419, -54.5117, -54.5374, -54.5518, -54.5614, -54.5681, -54.5728,
        -54.5762, -54.5785, -54.5802, -54.5814, -54.5822, -54.5828, -54.5832,
        -54.5835, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841,
        -54.5841, -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0034e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0034e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841, -54.5841,
        -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 8 	 N 	 N 	 6.014443494539222e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0111, -93.5370, -93.4126, -93.3573, -93.3179, -93.2918, -93.2730,
        -93.2596, -93.2500, -93.2429, -93.2378, -93.2340, -93.2312, -93.2292,
        -93.2276, -93.2265, -93.2256, -93.2250, -93.2245, -93.2241, -93.2239,
        -93.2237, -93.2235, -93.2234, -93.2233], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3961e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7430, -37.7825, -37.8005, -37.8111, -37.8183, -37.8234, -37.8271,
        -37.8297, -37.8316, -37.8329, -37.8339, -37.8345, -37.8350, -37.8353,
        -37.8356, -37.8357, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8361, -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2672e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4265, -54.4988, -54.5282, -54.5452, -54.5567, -54.5647, -54.5705,
        -54.5746, -54.5775, -54.5795, -54.5809, -54.5819, -54.5826, -54.5831,
        -54.5835, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5842, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9486e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2928, -0.4517, -0.4717, -0.4813, -0.4872, -0.4911, -0.4937, -0.4956,
        -0.4968, -0.4977, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9138e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9877e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2265, -93.2256, -93.2250, -93.2245, -93.2241, -93.2239, -93.2237,
        -93.2235, -93.2234, -93.2233], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8357, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360, -37.8361,
        -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 3 	 CHN 	 CNH 	 0.008981430553665124

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7405, -37.7769, -37.7962, -37.8079, -37.8160, -37.8217, -37.8259,
        -37.8289, -37.8310, -37.8325, -37.8336, -37.8343, -37.8348, -37.8352,
        -37.8355, -37.8357, -37.8358, -37.8359, -37.8359, -37.8360, -37.8360,
        -37.8360, -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3136e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3136e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8357, -37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8361, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 4 	 C 	 C 	 4.609226190437461e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4641, -7.4713, -7.4744, -7.4761, -7.4771, -7.4779, -7.4788, -7.4795,
        -7.4795, -7.4792, -7.4790, -7.4789, -7.4789, -7.4789, -7.4789, -7.4790,
        -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0282e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8438e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0564e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4790], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 Li 	 Li 	 2.2467091853432176e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9328, -109.4892, -109.5509, -109.5416, -109.5309, -109.5230,
        -109.5178, -109.5143, -109.5120, -109.5105, -109.5095, -109.5089,
        -109.5085, -109.5082, -109.5080, -109.5079, -109.5078, -109.5078,
        -109.5077, -109.5077, -109.5077, -109.5077, -109.5077, -109.5076,
        -109.5076], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4196e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4120, -54.4797, -54.5140, -54.5347, -54.5490, -54.5592, -54.5665,
        -54.5717, -54.5754, -54.5781, -54.5799, -54.5812, -54.5821, -54.5828,
        -54.5832, -54.5835, -54.5838, -54.5839, -54.5840, -54.5841, -54.5842,
        -54.5842, -54.5842, -54.5842, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0670e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4540, -54.5204, -54.5434, -54.5561, -54.5645, -54.5703, -54.5745,
        -54.5774, -54.5794, -54.5809, -54.5819, -54.5826, -54.5831, -54.5835,
        -54.5837, -54.5839, -54.5840, -54.5841, -54.5841, -54.5842, -54.5842,
        -54.5842, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8759e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5079, -109.5078, -109.5078, -109.5077, -109.5077, -109.5077,
        -109.5077, -109.5077, -109.5076, -109.5076], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5839, -54.5840, -54.5841, -54.5841, -54.5842, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 1 	 N2 	 N2 	 0.00014515171473856173

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2189, -0.4295, -0.4594, -0.4734, -0.4819, -0.4874, -0.4912, -0.4938,
        -0.4956, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9091e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6050e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8183e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 6 	 H 	 H 	 1.2455808719380373e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0555, -1.1259, -1.1441, -1.1534, -1.1592, -1.1632, -1.1660, -1.1679,
        -1.1692, -1.1701, -1.1708, -1.1713, -1.1716, -1.1718, -1.1720, -1.1721,
        -1.1722, -1.1722, -1.1722, -1.1723, -1.1723, -1.1723, -1.1723, -1.1723,
        -1.1723], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9506e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9012e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2801, -0.4481, -0.4697, -0.4800, -0.4863, -0.4905, -0.4933, -0.4953,
        -0.4966, -0.4976, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9081e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.2844e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7175e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3252, -0.4604, -0.4767, -0.4845, -0.4893, -0.4926, -0.4948, -0.4963,
        -0.4973, -0.4981, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9082e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5620e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1721, -1.1722, -1.1722, -1.1722, -1.1723, -1.1723, -1.1723, -1.1723,
        -1.1723, -1.1723], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 5.843609159109772e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e05/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 3.102886', ' ae : 56.734219', ' E : 1.033457'] ,|| total loss 41.593488 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6797, -99.7036, -99.7138, -99.7199, -99.7241, -99.7271, -99.7292,
        -99.7308, -99.7319, -99.7327, -99.7333, -99.7337, -99.7339, -99.7341,
        -99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7346,
        -99.7346, -99.7346, -99.7346, -99.7346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2812e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2812e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7346, -99.7346,
        -99.7346, -99.7346, -99.7346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 F 	 F 	 1.0920359015785195e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7499, -37.7908, -37.8065, -37.8155, -37.8215, -37.8257, -37.8287,
        -37.8309, -37.8324, -37.8335, -37.8343, -37.8348, -37.8352, -37.8354,
        -37.8356, -37.8358, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2587e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2587e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8358, -37.8358, -37.8359, -37.8360, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 4 	 C 	 C 	 4.651149062855816e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5689], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8355], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5689], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8355], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 CH4O 	 CH4O 	 5.8817183693116934e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4641, -7.4712, -7.4744, -7.4761, -7.4772, -7.4780, -7.4789, -7.4795,
        -7.4796, -7.4793, -7.4790, -7.4789, -7.4789, -7.4790, -7.4790, -7.4790,
        -7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0271e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1335e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0543e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4790, -7.4790, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 Li 	 Li 	 2.582330753597386e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4921, -109.8944, -109.7476, -109.6702, -109.6205, -109.5865,
        -109.5629, -109.5463, -109.5347, -109.5266, -109.5209, -109.5170,
        -109.5142, -109.5122, -109.5109, -109.5099, -109.5092, -109.5088,
        -109.5084, -109.5082, -109.5080, -109.5079, -109.5078, -109.5078,
        -109.5077], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4156e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4158, -54.4862, -54.5189, -54.5383, -54.5516, -54.5610, -54.5678,
        -54.5726, -54.5760, -54.5784, -54.5801, -54.5813, -54.5822, -54.5828,
        -54.5832, -54.5835, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840,
        -54.5841, -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1378e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4150, -54.4850, -54.5180, -54.5377, -54.5511, -54.5607, -54.5675,
        -54.5724, -54.5759, -54.5783, -54.5801, -54.5813, -54.5821, -54.5827,
        -54.5832, -54.5835, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840,
        -54.5841, -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1445e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5099, -109.5092, -109.5088, -109.5084, -109.5082, -109.5080,
        -109.5079, -109.5078, -109.5078, -109.5077], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5835, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5841,
        -54.5841, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 1 	 N2 	 N2 	 0.00013955370969248614

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1557], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5204], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1557], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5204], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 HN2O 	 HON2 	 0.0008584906065419236

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4399, -54.5101, -54.5362, -54.5509, -54.5607, -54.5676, -54.5724,
        -54.5759, -54.5783, -54.5800, -54.5812, -54.5821, -54.5827, -54.5831,
        -54.5834, -54.5836, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840,
        -54.5840, -54.5840, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0676e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0676e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5836, -54.5837, -54.5838, -54.5839, -54.5840, -54.5840, -54.5840,
        -54.5840, -54.5841, -54.5841], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 8 	 N 	 N 	 6.1994432858180954e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0475], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4547], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7330], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0475], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4547], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7330], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 11 	 HF2 	 HF2 	 0.0008380608480653914

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2326, -107.2776, -107.2431, -107.2384, -107.2345, -107.2324,
        -107.2317, -107.2322, -107.2329, -107.2336, -107.2342, -107.2347,
        -107.2352, -107.2356, -107.2360, -107.2363, -107.2367, -107.2369,
        -107.2372, -107.2374, -107.2376, -107.2377, -107.2379, -107.2379,
        -107.2380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3866e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4662, -7.4734, -7.4759, -7.4771, -7.4779, -7.4788, -7.4795, -7.4796,
        -7.4793, -7.4791, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0235e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2127e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6798, -99.7037, -99.7139, -99.7199, -99.7241, -99.7271, -99.7292,
        -99.7308, -99.7319, -99.7327, -99.7333, -99.7337, -99.7339, -99.7341,
        -99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7346,
        -99.7346, -99.7346, -99.7346, -99.7346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2459e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2363, -107.2367, -107.2369, -107.2372, -107.2374, -107.2376,
        -107.2377, -107.2379, -107.2379, -107.2380], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7346, -99.7346,
        -99.7346, -99.7346, -99.7346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 2 	 FLi 	 LiF 	 0.009183863377640397

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2339, -0.4343, -0.4620, -0.4751, -0.4830, -0.4882, -0.4917, -0.4942,
        -0.4959, -0.4970, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9018e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3476e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8037e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 6 	 H 	 H 	 1.4726685627671515e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9622, -93.5172, -93.4023, -93.3500, -93.3134, -93.2890, -93.2716,
        -93.2591, -93.2501, -93.2435, -93.2388, -93.2352, -93.2327, -93.2307,
        -93.2293, -93.2283, -93.2275, -93.2269, -93.2264, -93.2261, -93.2258,
        -93.2256, -93.2255, -93.2254, -93.2253], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3387e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7600, -37.7989, -37.8123, -37.8197, -37.8246, -37.8280, -37.8304,
        -37.8322, -37.8334, -37.8342, -37.8348, -37.8353, -37.8356, -37.8358,
        -37.8359, -37.8360, -37.8361, -37.8361, -37.8362, -37.8362, -37.8362,
        -37.8362, -37.8362, -37.8362, -37.8363], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0283e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4129, -54.4810, -54.5150, -54.5355, -54.5496, -54.5597, -54.5669,
        -54.5720, -54.5757, -54.5783, -54.5801, -54.5814, -54.5823, -54.5829,
        -54.5834, -54.5837, -54.5839, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5844, -54.5844, -54.5844], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9671e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3009, -0.4539, -0.4730, -0.4821, -0.4877, -0.4914, -0.4940, -0.4957,
        -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9020e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0123e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2283, -93.2275, -93.2269, -93.2264, -93.2261, -93.2258, -93.2256,
        -93.2255, -93.2254, -93.2253], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8360, -37.8361, -37.8361, -37.8362, -37.8362, -37.8362, -37.8362,
        -37.8362, -37.8362, -37.8363], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5837, -54.5839, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5844, -54.5844, -54.5844], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 3 	 CHN 	 CNH 	 0.008820596151411236

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9703, -1.0924, -1.1238, -1.1398, -1.1499, -1.1568, -1.1615, -1.1648,
        -1.1671, -1.1688, -1.1699, -1.1707, -1.1712, -1.1716, -1.1719, -1.1721,
        -1.1722, -1.1723, -1.1724, -1.1724, -1.1724, -1.1725, -1.1725, -1.1725,
        -1.1725], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9529e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9058e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2742, -0.4464, -0.4687, -0.4794, -0.4859, -0.4902, -0.4931, -0.4951,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9002e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.5100e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7063e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2853, -0.4496, -0.4705, -0.4805, -0.4866, -0.4907, -0.4935, -0.4954,
        -0.4967, -0.4976, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9002e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3039e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1721, -1.1722, -1.1723, -1.1724, -1.1724, -1.1724, -1.1725, -1.1725,
        -1.1725, -1.1725], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 4.2682803458334337e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e06)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e06/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e06/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 3.095912', ' ae : 56.335504', ' E : 1.042652'] ,|| total loss 41.305446 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3285, -107.3059, -107.2698, -107.2563, -107.2481, -107.2432,
        -107.2406, -107.2390, -107.2381, -107.2375, -107.2372, -107.2371,
        -107.2371, -107.2372, -107.2374, -107.2376, -107.2377, -107.2379,
        -107.2381, -107.2382, -107.2383, -107.2384, -107.2385, -107.2386,
        -107.2386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3873e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4638, -7.4707, -7.4740, -7.4759, -7.4770, -7.4779, -7.4787, -7.4795,
        -7.4797, -7.4794, -7.4791, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0256e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2573e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6767, -99.6957, -99.7079, -99.7154, -99.7207, -99.7246, -99.7275,
        -99.7296, -99.7311, -99.7322, -99.7329, -99.7335, -99.7339, -99.7341,
        -99.7343, -99.7345, -99.7346, -99.7346, -99.7347, -99.7347, -99.7347,
        -99.7347, -99.7348, -99.7348, -99.7348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.5069e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2376, -107.2377, -107.2379, -107.2381, -107.2382, -107.2383,
        -107.2384, -107.2385, -107.2386, -107.2386], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792,
        -7.4792, -7.4792], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7345, -99.7346, -99.7346, -99.7347, -99.7347, -99.7347, -99.7347,
        -99.7348, -99.7348, -99.7348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 2 	 FLi 	 LiF 	 0.009143055076994998

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4140, -54.4831, -54.5166, -54.5366, -54.5504, -54.5602, -54.5672,
        -54.5722, -54.5758, -54.5783, -54.5800, -54.5813, -54.5822, -54.5828,
        -54.5832, -54.5835, -54.5837, -54.5839, -54.5840, -54.5841, -54.5841,
        -54.5842, -54.5842, -54.5842, -54.5842], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0857e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0857e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5835, -54.5837, -54.5839, -54.5840, -54.5841, -54.5841, -54.5842,
        -54.5842, -54.5842, -54.5842], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 8 	 N 	 N 	 5.871444475421084e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0727, -93.5633, -93.4273, -93.3688, -93.3263, -93.2984, -93.2784,
        -93.2641, -93.2538, -93.2463, -93.2409, -93.2369, -93.2340, -93.2318,
        -93.2302, -93.2290, -93.2282, -93.2275, -93.2270, -93.2266, -93.2264,
        -93.2261, -93.2260, -93.2259, -93.2258], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3214e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7632, -37.8011, -37.8137, -37.8207, -37.8253, -37.8285, -37.8307,
        -37.8323, -37.8335, -37.8343, -37.8349, -37.8352, -37.8355, -37.8357,
        -37.8359, -37.8360, -37.8360, -37.8361, -37.8361, -37.8361, -37.8361,
        -37.8362, -37.8362, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0928e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4353, -54.5064, -54.5337, -54.5491, -54.5595, -54.5668, -54.5719,
        -54.5756, -54.5782, -54.5800, -54.5813, -54.5822, -54.5828, -54.5833,
        -54.5836, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842,
        -54.5842, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9216e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2132, -0.4276, -0.4583, -0.4727, -0.4814, -0.4871, -0.4910, -0.4936,
        -0.4955, -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8962e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9634e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2290, -93.2282, -93.2275, -93.2270, -93.2266, -93.2264, -93.2261,
        -93.2260, -93.2259, -93.2258], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8360, -37.8360, -37.8361, -37.8361, -37.8361, -37.8361, -37.8362,
        -37.8362, -37.8362, -37.8362], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 3 	 CHN 	 CNH 	 0.008757690259296347

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2437, -0.4373, -0.4637, -0.4761, -0.4837, -0.4886, -0.4920, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8940e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2459e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7880e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 6 	 H 	 H 	 1.7436869206219734e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9819, -1.0970, -1.1266, -1.1418, -1.1513, -1.1578, -1.1623, -1.1654,
        -1.1676, -1.1691, -1.1702, -1.1709, -1.1714, -1.1718, -1.1721, -1.1722,
        -1.1724, -1.1725, -1.1725, -1.1726, -1.1726, -1.1726, -1.1726, -1.1726,
        -1.1726], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9519e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9038e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2908, -0.4511, -0.4714, -0.4811, -0.4870, -0.4909, -0.4936, -0.4955,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8919e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3302e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6876e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2434, -0.4372, -0.4636, -0.4761, -0.4836, -0.4886, -0.4920, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8918e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2876e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1722, -1.1724, -1.1725, -1.1725, -1.1726, -1.1726, -1.1726, -1.1726,
        -1.1726, -1.1726], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 3.115892340084024e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7245, -109.9068, -109.7609, -109.6796, -109.6270, -109.5911,
        -109.5661, -109.5486, -109.5364, -109.5279, -109.5219, -109.5178,
        -109.5148, -109.5128, -109.5114, -109.5104, -109.5097, -109.5092,
        -109.5088, -109.5086, -109.5084, -109.5083, -109.5082, -109.5082,
        -109.5081], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4048e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4323, -54.5038, -54.5317, -54.5476, -54.5583, -54.5658, -54.5712,
        -54.5750, -54.5776, -54.5795, -54.5809, -54.5818, -54.5824, -54.5829,
        -54.5832, -54.5835, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5839, -54.5839, -54.5840, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1699e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4149, -54.4845, -54.5176, -54.5373, -54.5508, -54.5604, -54.5673,
        -54.5722, -54.5757, -54.5781, -54.5799, -54.5811, -54.5820, -54.5826,
        -54.5830, -54.5833, -54.5835, -54.5836, -54.5837, -54.5838, -54.5839,
        -54.5839, -54.5839, -54.5839, -54.5840], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2693e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5104, -109.5097, -109.5092, -109.5088, -109.5086, -109.5084,
        -109.5083, -109.5082, -109.5082, -109.5081], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5833, -54.5835, -54.5836, -54.5837, -54.5838, -54.5839, -54.5839,
        -54.5839, -54.5839, -54.5840], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 1 	 N2 	 N2 	 0.00013178377971372236

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7385], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5205], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1559], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7385], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5205], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 HN2O 	 HON2 	 0.0008644854171585163

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7469, -37.7875, -37.8041, -37.8137, -37.8201, -37.8247, -37.8279,
        -37.8302, -37.8319, -37.8331, -37.8339, -37.8345, -37.8349, -37.8352,
        -37.8354, -37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4973e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4973e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 4 	 C 	 C 	 5.129678757955991e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0469], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4544], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7325], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0469], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4544], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7325], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 11 	 HF2 	 HF2 	 0.0008500645590823318

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4647, -7.4720, -7.4750, -7.4765, -7.4775, -7.4783, -7.4792, -7.4797,
        -7.4796, -7.4792, -7.4791, -7.4790, -7.4790, -7.4790, -7.4791, -7.4791,
        -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0174e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2936e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0350e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4791, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792, -7.4792], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 Li 	 Li 	 2.942359085873964e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6761, -99.6950, -99.7071, -99.7146, -99.7199, -99.7238, -99.7267,
        -99.7287, -99.7302, -99.7313, -99.7321, -99.7326, -99.7330, -99.7333,
        -99.7335, -99.7336, -99.7337, -99.7338, -99.7338, -99.7338, -99.7339,
        -99.7339, -99.7339, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9707e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9707e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7336, -99.7337, -99.7338, -99.7338, -99.7338, -99.7339, -99.7339,
        -99.7339, -99.7339, -99.7339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 F 	 F 	 1.0178527583110579e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5684], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8355], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5684], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8355], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 CH4O 	 CH4O 	 5.911593159509724e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e07)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e07/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e07/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 3.091709', ' ae : 56.184006', ' E : 1.062022'] ,|| total loss 41.186674 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1589, -93.5979, -93.4453, -93.3824, -93.3355, -93.3051, -93.2832,
        -93.2676, -93.2564, -93.2483, -93.2424, -93.2381, -93.2349, -93.2326,
        -93.2309, -93.2297, -93.2287, -93.2281, -93.2275, -93.2271, -93.2269,
        -93.2266, -93.2265, -93.2263, -93.2262], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2720e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7634, -37.8010, -37.8135, -37.8204, -37.8249, -37.8281, -37.8303,
        -37.8319, -37.8330, -37.8338, -37.8344, -37.8348, -37.8351, -37.8352,
        -37.8354, -37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8357,
        -37.8357, -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5676e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4272, -54.4990, -54.5282, -54.5450, -54.5563, -54.5642, -54.5699,
        -54.5739, -54.5768, -54.5788, -54.5802, -54.5812, -54.5819, -54.5824,
        -54.5827, -54.5830, -54.5831, -54.5833, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5506e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2752, -0.4466, -0.4689, -0.4794, -0.4859, -0.4901, -0.4931, -0.4951,
        -0.4965, -0.4974, -0.4981, -0.4986, -0.4989, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8796e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8192e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2297, -93.2287, -93.2281, -93.2275, -93.2271, -93.2269, -93.2266,
        -93.2265, -93.2263, -93.2262], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8355, -37.8356, -37.8356, -37.8356, -37.8357, -37.8357,
        -37.8357, -37.8357, -37.8357], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5831, -54.5833, -54.5833, -54.5834, -54.5834, -54.5835,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 3 	 CHN 	 CNH 	 0.008598146966556733

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4105, -54.4760, -54.5109, -54.5321, -54.5468, -54.5573, -54.5649,
        -54.5703, -54.5741, -54.5769, -54.5788, -54.5801, -54.5811, -54.5818,
        -54.5822, -54.5826, -54.5828, -54.5830, -54.5831, -54.5831, -54.5832,
        -54.5832, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8634e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8634e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5826, -54.5828, -54.5830, -54.5831, -54.5831, -54.5832, -54.5832,
        -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 8 	 N 	 N 	 8.194345428198682e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9810, -1.0968, -1.1265, -1.1418, -1.1514, -1.1579, -1.1624, -1.1656,
        -1.1678, -1.1693, -1.1704, -1.1711, -1.1716, -1.1720, -1.1723, -1.1724,
        -1.1726, -1.1727, -1.1727, -1.1728, -1.1728, -1.1728, -1.1728, -1.1728,
        -1.1729], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9464e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8929e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2131, -0.4275, -0.4583, -0.4726, -0.4813, -0.4870, -0.4909, -0.4936,
        -0.4954, -0.4967, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8752e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3497e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6433e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3079, -0.4558, -0.4740, -0.4827, -0.4881, -0.4917, -0.4941, -0.4958,
        -0.4970, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8753e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3106e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1724, -1.1726, -1.1727, -1.1727, -1.1728, -1.1728, -1.1728, -1.1728,
        -1.1728, -1.1729], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 1.713157230026381e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6759, -99.6972, -99.7086, -99.7156, -99.7204, -99.7240, -99.7265,
        -99.7284, -99.7298, -99.7307, -99.7314, -99.7319, -99.7322, -99.7325,
        -99.7326, -99.7328, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2690e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2690e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7328, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 F 	 F 	 1.8238967158502004e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1536], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5193], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1536], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5193], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 HN2O 	 HON2 	 0.0008693599249148457

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7622, -37.8001, -37.8128, -37.8198, -37.8244, -37.8276, -37.8299,
        -37.8315, -37.8327, -37.8335, -37.8340, -37.8344, -37.8347, -37.8349,
        -37.8351, -37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9203e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9203e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8351, -37.8352, -37.8353, -37.8353, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 4 	 C 	 C 	 6.1705181456300245e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2912, -107.2965, -107.2594, -107.2488, -107.2420, -107.2382,
        -107.2363, -107.2356, -107.2353, -107.2352, -107.2352, -107.2353,
        -107.2355, -107.2358, -107.2360, -107.2363, -107.2366, -107.2368,
        -107.2370, -107.2372, -107.2373, -107.2374, -107.2376, -107.2376,
        -107.2377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3618e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4642, -7.4713, -7.4745, -7.4763, -7.4773, -7.4781, -7.4790, -7.4797,
        -7.4797, -7.4794, -7.4791, -7.4791, -7.4790, -7.4791, -7.4791, -7.4791,
        -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0085e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3980e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6792, -99.7031, -99.7130, -99.7188, -99.7228, -99.7256, -99.7277,
        -99.7291, -99.7302, -99.7309, -99.7315, -99.7319, -99.7321, -99.7323,
        -99.7324, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8112e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2363, -107.2366, -107.2368, -107.2370, -107.2372, -107.2373,
        -107.2374, -107.2376, -107.2376, -107.2377], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4791, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792,
        -7.4792, -7.4792], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 2 	 FLi 	 LiF 	 0.00904869838523805

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0447], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4532], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7314], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0447], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4532], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7314], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 11 	 HF2 	 HF2 	 0.0008624976175848968

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2448, -0.4376, -0.4638, -0.4762, -0.4837, -0.4886, -0.4920, -0.4943,
        -0.4959, -0.4971, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8684e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6816e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7368e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 6 	 H 	 H 	 2.8384717616683143e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8322, -109.7992, -109.7054, -109.6423, -109.6007, -109.5721,
        -109.5524, -109.5386, -109.5291, -109.5224, -109.5178, -109.5146,
        -109.5123, -109.5107, -109.5097, -109.5089, -109.5084, -109.5080,
        -109.5077, -109.5075, -109.5074, -109.5073, -109.5072, -109.5072,
        -109.5072], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3936e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4372, -54.5076, -54.5342, -54.5492, -54.5592, -54.5662, -54.5712,
        -54.5747, -54.5772, -54.5790, -54.5802, -54.5811, -54.5817, -54.5821,
        -54.5824, -54.5826, -54.5828, -54.5829, -54.5830, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8640e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4256, -54.4974, -54.5268, -54.5439, -54.5554, -54.5635, -54.5692,
        -54.5733, -54.5762, -54.5783, -54.5797, -54.5807, -54.5815, -54.5820,
        -54.5823, -54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9161e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5089, -109.5084, -109.5080, -109.5077, -109.5075, -109.5074,
        -109.5073, -109.5072, -109.5072, -109.5072], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 1 	 N2 	 N2 	 0.00012363110753200118

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4645, -7.4716, -7.4748, -7.4765, -7.4775, -7.4783, -7.4792, -7.4798,
        -7.4798, -7.4794, -7.4792, -7.4791, -7.4791, -7.4791, -7.4792, -7.4792,
        -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0146e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5611e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0293e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 Li 	 Li 	 3.544761647975015e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5679], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8355], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5679], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8355], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 CH4O 	 CH4O 	 5.902594308229393e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e08/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 3.078711', ' ae : 55.812146', ' E : 1.204765'] ,|| total loss 40.904861 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8722, -93.4788, -93.3811, -93.3346, -93.3032, -93.2821, -93.2670,
        -93.2562, -93.2485, -93.2429, -93.2388, -93.2358, -93.2335, -93.2319,
        -93.2307, -93.2298, -93.2291, -93.2286, -93.2282, -93.2279, -93.2277,
        -93.2276, -93.2274, -93.2273, -93.2273], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2124e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7632, -37.8008, -37.8133, -37.8202, -37.8247, -37.8279, -37.8301,
        -37.8317, -37.8329, -37.8336, -37.8342, -37.8346, -37.8349, -37.8351,
        -37.8352, -37.8353, -37.8354, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7570e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4434, -54.5124, -54.5375, -54.5516, -54.5609, -54.5675, -54.5721,
        -54.5754, -54.5777, -54.5793, -54.5805, -54.5813, -54.5818, -54.5822,
        -54.5825, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8185e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3074, -0.4556, -0.4739, -0.4827, -0.4880, -0.4916, -0.4941, -0.4958,
        -0.4969, -0.4978, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8658e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4928e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2298, -93.2291, -93.2286, -93.2282, -93.2279, -93.2277, -93.2276,
        -93.2274, -93.2273, -93.2273], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8353, -37.8354, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 3 	 CHN 	 CNH 	 0.008457558835816024

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1540], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5196], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1540], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5196], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 HN2O 	 HON2 	 0.0008712611723007917

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4640, -7.4707, -7.4741, -7.4760, -7.4772, -7.4780, -7.4788, -7.4796,
        -7.4798, -7.4795, -7.4792, -7.4791, -7.4791, -7.4791, -7.4791, -7.4792,
        -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0078e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4915e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0158e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 Li 	 Li 	 3.39416606227389e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5669], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8351], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5669], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8351], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 CH4O 	 CH4O 	 5.9131091649821365e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0245, -1.1141, -1.1372, -1.1490, -1.1565, -1.1616, -1.1651, -1.1675,
        -1.1692, -1.1704, -1.1712, -1.1718, -1.1722, -1.1725, -1.1727, -1.1728,
        -1.1729, -1.1730, -1.1731, -1.1731, -1.1731, -1.1731, -1.1731, -1.1731,
        -1.1732], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9471e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8942e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3424, -0.4648, -0.4791, -0.4860, -0.4903, -0.4932, -0.4951, -0.4965,
        -0.4974, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8576e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1221e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6095e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3185, -0.4586, -0.4756, -0.4837, -0.4888, -0.4921, -0.4944, -0.4960,
        -0.4971, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8576e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4719e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1728, -1.1729, -1.1730, -1.1731, -1.1731, -1.1731, -1.1731, -1.1731,
        -1.1731, -1.1732], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 4.629274179501902e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6104, -109.9167, -109.7625, -109.6799, -109.6267, -109.5903,
        -109.5650, -109.5473, -109.5349, -109.5262, -109.5202, -109.5159,
        -109.5129, -109.5108, -109.5094, -109.5084, -109.5076, -109.5071,
        -109.5068, -109.5065, -109.5064, -109.5062, -109.5062, -109.5061,
        -109.5061], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3870e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4379, -54.5079, -54.5341, -54.5489, -54.5588, -54.5657, -54.5706,
        -54.5741, -54.5766, -54.5783, -54.5795, -54.5804, -54.5810, -54.5814,
        -54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5744e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4129, -54.4814, -54.5148, -54.5348, -54.5485, -54.5583, -54.5653,
        -54.5703, -54.5739, -54.5764, -54.5782, -54.5794, -54.5803, -54.5809,
        -54.5814, -54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5822,
        -54.5823, -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7321e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5084, -109.5076, -109.5071, -109.5068, -109.5065, -109.5064,
        -109.5062, -109.5062, -109.5061, -109.5061], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5823], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 1 	 N2 	 N2 	 0.0001189799510752674

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3393, -0.4640, -0.4786, -0.4857, -0.4901, -0.4930, -0.4950, -0.4964,
        -0.4974, -0.4981, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8539e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.2364e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7079e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 6 	 H 	 H 	 3.454198406011775e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0421], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4518], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7299], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0421], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4518], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7299], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 11 	 HF2 	 HF2 	 0.0008751161312353016

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2278, -107.2752, -107.2401, -107.2358, -107.2322, -107.2303,
        -107.2298, -107.2303, -107.2311, -107.2318, -107.2325, -107.2330,
        -107.2336, -107.2340, -107.2344, -107.2348, -107.2352, -107.2355,
        -107.2358, -107.2360, -107.2362, -107.2364, -107.2365, -107.2366,
        -107.2367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3458e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4723, -7.4752, -7.4767, -7.4776, -7.4784, -7.4793, -7.4797,
        -7.4795, -7.4792, -7.4790, -7.4790, -7.4790, -7.4790, -7.4790, -7.4791,
        -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9813e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1940e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6779, -99.7016, -99.7115, -99.7173, -99.7212, -99.7241, -99.7261,
        -99.7276, -99.7286, -99.7294, -99.7299, -99.7303, -99.7306, -99.7308,
        -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7312,
        -99.7312, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4958e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2348, -107.2352, -107.2355, -107.2358, -107.2360, -107.2362,
        -107.2364, -107.2365, -107.2366, -107.2367], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791, -7.4791,
        -7.4791, -7.4791], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 2 	 FLi 	 LiF 	 0.008992299011580943

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6844, -99.7078, -99.7159, -99.7205, -99.7236, -99.7258, -99.7273,
        -99.7284, -99.7292, -99.7298, -99.7302, -99.7305, -99.7307, -99.7308,
        -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.6032e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6032e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 F 	 F 	 1.792699535544381e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7403, -37.7772, -37.7961, -37.8075, -37.8152, -37.8208, -37.8248,
        -37.8277, -37.8297, -37.8312, -37.8322, -37.8329, -37.8334, -37.8338,
        -37.8341, -37.8342, -37.8344, -37.8344, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9298e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9298e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8344, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 4 	 C 	 C 	 8.075942766510126e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4156, -54.4857, -54.5179, -54.5370, -54.5501, -54.5593, -54.5659,
        -54.5707, -54.5740, -54.5764, -54.5780, -54.5792, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5815, -54.5817, -54.5818, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0997e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0997e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5813, -54.5815, -54.5817, -54.5818, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 8 	 N 	 N 	 1.231933456519313e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e09/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 3.066255', ' ae : 55.532615', ' E : 1.383931'] ,|| total loss 40.688032 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6749, -99.6962, -99.7075, -99.7144, -99.7192, -99.7227, -99.7253,
        -99.7271, -99.7285, -99.7294, -99.7301, -99.7306, -99.7309, -99.7311,
        -99.7313, -99.7314, -99.7315, -99.7316, -99.7316, -99.7316, -99.7317,
        -99.7317, -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9733e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9733e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7314, -99.7315, -99.7316, -99.7316, -99.7316, -99.7317, -99.7317,
        -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 F 	 F 	 1.1510964017545237e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5666], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8350], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5666], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7368], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8350], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 CH4O 	 CH4O 	 5.9415655760751364e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1251, -93.5846, -93.4383, -93.3774, -93.3324, -93.3031, -93.2821,
        -93.2672, -93.2565, -93.2488, -93.2432, -93.2391, -93.2361, -93.2339,
        -93.2323, -93.2312, -93.2303, -93.2296, -93.2291, -93.2288, -93.2285,
        -93.2283, -93.2282, -93.2280, -93.2280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1717e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7645, -37.8014, -37.8136, -37.8203, -37.8247, -37.8278, -37.8300,
        -37.8315, -37.8326, -37.8333, -37.8339, -37.8343, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1622e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4197, -54.4907, -54.5218, -54.5401, -54.5525, -54.5612, -54.5675,
        -54.5719, -54.5751, -54.5773, -54.5789, -54.5800, -54.5808, -54.5813,
        -54.5817, -54.5820, -54.5822, -54.5823, -54.5824, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4443e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3486, -0.4663, -0.4800, -0.4866, -0.4907, -0.4934, -0.4953, -0.4966,
        -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8505e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1837e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2312, -93.2303, -93.2296, -93.2291, -93.2288, -93.2285, -93.2283,
        -93.2282, -93.2280, -93.2280], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5820, -54.5822, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 3 	 CHN 	 CNH 	 0.008307631522130153

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0274, -1.1153, -1.1381, -1.1497, -1.1570, -1.1620, -1.1654, -1.1678,
        -1.1695, -1.1706, -1.1715, -1.1720, -1.1724, -1.1727, -1.1729, -1.1730,
        -1.1731, -1.1732, -1.1733, -1.1733, -1.1733, -1.1733, -1.1733, -1.1733,
        -1.1734], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9500e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9001e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2265, -0.4318, -0.4606, -0.4741, -0.4823, -0.4876, -0.4913, -0.4938,
        -0.4956, -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8494e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.5582e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5989e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3357, -0.4631, -0.4781, -0.4854, -0.4899, -0.4929, -0.4949, -0.4963,
        -0.4973, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8495e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3832e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1730, -1.1731, -1.1732, -1.1733, -1.1733, -1.1733, -1.1733, -1.1733,
        -1.1733, -1.1734], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 9.382533531314005e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1535], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5194], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1535], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7371], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5194], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 HN2O 	 HON2 	 0.000877358581854441

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4658, -7.4731, -7.4758, -7.4772, -7.4780, -7.4788, -7.4797, -7.4799,
        -7.4796, -7.4793, -7.4792, -7.4791, -7.4792, -7.4792, -7.4792, -7.4793,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0006e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6959e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0013e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793,
        -7.4793, -7.4793], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 Li 	 Li 	 3.839676803340229e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2395, -0.4359, -0.4628, -0.4755, -0.4832, -0.4883, -0.4917, -0.4941,
        -0.4958, -0.4969, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8460e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3075e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6921e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 6 	 H 	 H 	 4.0965622850272434e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2750, -107.2912, -107.2545, -107.2459, -107.2401, -107.2368,
        -107.2352, -107.2349, -107.2350, -107.2352, -107.2355, -107.2358,
        -107.2361, -107.2365, -107.2368, -107.2371, -107.2374, -107.2377,
        -107.2379, -107.2381, -107.2383, -107.2385, -107.2386, -107.2387,
        -107.2388], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3581e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4644, -7.4713, -7.4746, -7.4764, -7.4775, -7.4782, -7.4791, -7.4798,
        -7.4799, -7.4795, -7.4793, -7.4792, -7.4792, -7.4792, -7.4792, -7.4793,
        -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0011e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7282e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6750, -99.6939, -99.7059, -99.7132, -99.7185, -99.7223, -99.7251,
        -99.7272, -99.7287, -99.7297, -99.7305, -99.7310, -99.7314, -99.7316,
        -99.7318, -99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322,
        -99.7322, -99.7322, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5872e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2371, -107.2374, -107.2377, -107.2379, -107.2381, -107.2383,
        -107.2385, -107.2386, -107.2387, -107.2388], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4793, -7.4794,
        -7.4794, -7.4794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7320, -99.7321, -99.7321, -99.7322, -99.7322, -99.7322, -99.7322,
        -99.7322, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 2 	 FLi 	 LiF 	 0.00892182900124577

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0442], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4529], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7309], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0442], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4529], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7309], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 11 	 HF2 	 HF2 	 0.0008803112652553907

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8610, -109.7346, -109.6723, -109.6204, -109.5853, -109.5612,
        -109.5446, -109.5331, -109.5251, -109.5196, -109.5158, -109.5131,
        -109.5113, -109.5100, -109.5091, -109.5085, -109.5080, -109.5077,
        -109.5075, -109.5074, -109.5073, -109.5072, -109.5071, -109.5071,
        -109.5071], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3778e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4486, -54.5158, -54.5397, -54.5529, -54.5617, -54.5679, -54.5722,
        -54.5753, -54.5774, -54.5790, -54.5800, -54.5808, -54.5813, -54.5817,
        -54.5819, -54.5821, -54.5823, -54.5823, -54.5824, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3599e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4487, -54.5159, -54.5397, -54.5530, -54.5618, -54.5679, -54.5722,
        -54.5753, -54.5774, -54.5790, -54.5800, -54.5808, -54.5813, -54.5817,
        -54.5819, -54.5821, -54.5823, -54.5823, -54.5824, -54.5824, -54.5825,
        -54.5825, -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3593e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5085, -109.5080, -109.5077, -109.5075, -109.5074, -109.5073,
        -109.5072, -109.5071, -109.5071, -109.5071], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5821, -54.5823, -54.5823, -54.5824, -54.5824, -54.5825, -54.5825,
        -54.5825, -54.5825, -54.5825], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 1 	 N2 	 N2 	 0.00011296615386533408

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7644, -37.8014, -37.8136, -37.8203, -37.8247, -37.8278, -37.8299,
        -37.8315, -37.8326, -37.8333, -37.8339, -37.8343, -37.8345, -37.8347,
        -37.8349, -37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1571e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1571e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8349, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8352], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 4 	 C 	 C 	 6.6961004880375145e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4281, -54.4994, -54.5281, -54.5447, -54.5558, -54.5636, -54.5692,
        -54.5732, -54.5760, -54.5779, -54.5793, -54.5803, -54.5810, -54.5815,
        -54.5818, -54.5821, -54.5822, -54.5823, -54.5824, -54.5825, -54.5825,
        -54.5826, -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3774e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3774e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5821, -54.5822, -54.5823, -54.5824, -54.5825, -54.5825, -54.5826,
        -54.5826, -54.5826, -54.5826], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 8 	 N 	 N 	 1.0245535431624865e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e10/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 3.060819', ' ae : 55.194477', ' E : 1.332074'] ,|| total loss 40.443174 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9940, -1.1022, -1.1301, -1.1444, -1.1535, -1.1596, -1.1638, -1.1667,
        -1.1688, -1.1702, -1.1712, -1.1719, -1.1724, -1.1728, -1.1730, -1.1732,
        -1.1733, -1.1734, -1.1734, -1.1735, -1.1735, -1.1735, -1.1735, -1.1736,
        -1.1736], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9575e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9150e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2694, -0.4448, -0.4678, -0.4787, -0.4854, -0.4898, -0.4928, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8424e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7153e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5997e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2940, -0.4519, -0.4717, -0.4813, -0.4871, -0.4909, -0.4936, -0.4954,
        -0.4967, -0.4975, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8424e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2265e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1732, -1.1733, -1.1734, -1.1734, -1.1735, -1.1735, -1.1735, -1.1735,
        -1.1736, -1.1736], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 9.131367199747884e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5204], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1551], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5204], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 HN2O 	 HON2 	 0.0008783692601423316

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8359], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8359], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 CH4O 	 CH4O 	 5.9299863042088935e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0712, -93.5639, -93.4281, -93.3702, -93.3281, -93.3007, -93.2810,
        -93.2670, -93.2569, -93.2497, -93.2445, -93.2406, -93.2379, -93.2358,
        -93.2343, -93.2332, -93.2324, -93.2318, -93.2313, -93.2310, -93.2307,
        -93.2305, -93.2304, -93.2303, -93.2302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1271e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7555, -37.7952, -37.8095, -37.8175, -37.8228, -37.8265, -37.8292,
        -37.8311, -37.8324, -37.8333, -37.8340, -37.8345, -37.8348, -37.8350,
        -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7384e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4216, -54.4927, -54.5234, -54.5414, -54.5535, -54.5622, -54.5683,
        -54.5727, -54.5758, -54.5779, -54.5795, -54.5806, -54.5813, -54.5819,
        -54.5822, -54.5825, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9537e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3435, -0.4650, -0.4792, -0.4861, -0.4904, -0.4932, -0.4951, -0.4965,
        -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8426e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4261e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2332, -93.2324, -93.2318, -93.2313, -93.2310, -93.2307, -93.2305,
        -93.2304, -93.2303, -93.2302], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5825, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 3 	 CHN 	 CNH 	 0.008188638502468575

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2226, -107.2759, -107.2410, -107.2376, -107.2345, -107.2330,
        -107.2329, -107.2334, -107.2343, -107.2352, -107.2359, -107.2365,
        -107.2371, -107.2376, -107.2381, -107.2385, -107.2389, -107.2392,
        -107.2395, -107.2398, -107.2400, -107.2402, -107.2403, -107.2404,
        -107.2405], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3715e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4667, -7.4739, -7.4764, -7.4776, -7.4784, -7.4793, -7.4800, -7.4801,
        -7.4797, -7.4794, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794, -7.4794,
        -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0141e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1415e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6778, -99.7002, -99.7110, -99.7174, -99.7219, -99.7251, -99.7275,
        -99.7291, -99.7304, -99.7312, -99.7318, -99.7323, -99.7326, -99.7328,
        -99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0490e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2385, -107.2389, -107.2392, -107.2395, -107.2398, -107.2400,
        -107.2402, -107.2403, -107.2404, -107.2405], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7331, -99.7331, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 2 	 FLi 	 LiF 	 0.008870403706943126

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4644, -7.4710, -7.4744, -7.4764, -7.4775, -7.4783, -7.4791, -7.4799,
        -7.4801, -7.4797, -7.4794, -7.4793, -7.4793, -7.4793, -7.4794, -7.4794,
        -7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0167e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1278e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0336e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4794, -7.4794, -7.4794, -7.4795, -7.4795, -7.4795, -7.4795, -7.4795,
        -7.4795, -7.4795], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 Li 	 Li 	 4.825061139024376e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2510, -0.4394, -0.4648, -0.4768, -0.4840, -0.4888, -0.4921, -0.4944,
        -0.4959, -0.4970, -0.4978, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8379e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2348e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6758e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 6 	 H 	 H 	 4.6013898657787064e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0462], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7317], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0462], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4539], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7317], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 11 	 HF2 	 HF2 	 0.0008839117395998179

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6639, -109.9195, -109.7664, -109.6832, -109.6297, -109.5930,
        -109.5676, -109.5497, -109.5373, -109.5285, -109.5224, -109.5181,
        -109.5151, -109.5131, -109.5116, -109.5106, -109.5098, -109.5093,
        -109.5090, -109.5087, -109.5086, -109.5084, -109.5084, -109.5083,
        -109.5083], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3709e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4204, -54.4913, -54.5223, -54.5405, -54.5528, -54.5616, -54.5678,
        -54.5722, -54.5754, -54.5776, -54.5792, -54.5803, -54.5811, -54.5816,
        -54.5820, -54.5822, -54.5824, -54.5826, -54.5827, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1786e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4134, -54.4811, -54.5147, -54.5348, -54.5487, -54.5586, -54.5657,
        -54.5707, -54.5743, -54.5768, -54.5786, -54.5799, -54.5808, -54.5814,
        -54.5818, -54.5822, -54.5824, -54.5825, -54.5826, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2429e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5106, -109.5098, -109.5093, -109.5090, -109.5087, -109.5086,
        -109.5084, -109.5084, -109.5083, -109.5083], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5822, -54.5824, -54.5825, -54.5826, -54.5827, -54.5828, -54.5828,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 1 	 N2 	 N2 	 0.00010685939342311189

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4274, -54.4987, -54.5277, -54.5444, -54.5557, -54.5636, -54.5692,
        -54.5732, -54.5761, -54.5781, -54.5795, -54.5805, -54.5812, -54.5817,
        -54.5820, -54.5823, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827,
        -54.5828, -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1877e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1877e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5823, -54.5824, -54.5825, -54.5826, -54.5827, -54.5827, -54.5828,
        -54.5828, -54.5828, -54.5828], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 8 	 N 	 N 	 9.625089464117048e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6798, -99.7033, -99.7132, -99.7191, -99.7231, -99.7260, -99.7280,
        -99.7295, -99.7306, -99.7314, -99.7319, -99.7323, -99.7326, -99.7328,
        -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7332,
        -99.7332, -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2680e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2680e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7332], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 F 	 F 	 1.2047845753824253e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7792, -37.7978, -37.8089, -37.8165, -37.8219, -37.8258,
        -37.8286, -37.8306, -37.8321, -37.8331, -37.8338, -37.8343, -37.8346,
        -37.8349, -37.8350, -37.8352, -37.8352, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9741e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9741e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8352, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 4 	 C 	 C 	 6.050352747795435e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e11/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 3.055704', ' ae : 54.927415', ' E : 1.258027'] ,|| total loss 40.250871 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0470], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4543], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7321], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0470], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4543], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7321], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 11 	 HF2 	 HF2 	 0.0008858076339692746

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4322, -54.5031, -54.5310, -54.5469, -54.5575, -54.5650, -54.5704,
        -54.5741, -54.5768, -54.5787, -54.5800, -54.5810, -54.5816, -54.5821,
        -54.5824, -54.5826, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831,
        -54.5831, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8568e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.8568e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5826, -54.5828, -54.5829, -54.5830, -54.5830, -54.5831, -54.5831,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 8 	 N 	 N 	 8.631961390478297e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1573], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7385], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5218], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1573], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7385], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5218], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 HN2O 	 HON2 	 0.0008798061197170563

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0541, -1.1262, -1.1449, -1.1545, -1.1605, -1.1646, -1.1674, -1.1694,
        -1.1708, -1.1717, -1.1724, -1.1729, -1.1732, -1.1734, -1.1736, -1.1737,
        -1.1738, -1.1738, -1.1739, -1.1739, -1.1739, -1.1739, -1.1739, -1.1739,
        -1.1739], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9780e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9561e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2144, -0.4278, -0.4584, -0.4727, -0.4813, -0.4870, -0.4908, -0.4935,
        -0.4953, -0.4966, -0.4975, -0.4981, -0.4985, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8345e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.2832e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6251e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2660, -0.4438, -0.4672, -0.4783, -0.4851, -0.4896, -0.4926, -0.4947,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8346e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9900e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1737, -1.1738, -1.1738, -1.1739, -1.1739, -1.1739, -1.1739, -1.1739,
        -1.1739, -1.1739], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 5.982373952623482e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0984, -93.5760, -93.4352, -93.3761, -93.3327, -93.3046, -93.2843,
        -93.2700, -93.2597, -93.2523, -93.2470, -93.2431, -93.2403, -93.2382,
        -93.2367, -93.2355, -93.2347, -93.2341, -93.2336, -93.2333, -93.2330,
        -93.2329, -93.2327, -93.2326, -93.2325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0860e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7574, -37.7967, -37.8106, -37.8184, -37.8236, -37.8272, -37.8298,
        -37.8316, -37.8329, -37.8338, -37.8345, -37.8349, -37.8352, -37.8355,
        -37.8356, -37.8357, -37.8358, -37.8359, -37.8359, -37.8359, -37.8360,
        -37.8360, -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2924e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4161, -54.4850, -54.5178, -54.5373, -54.5507, -54.5603, -54.5671,
        -54.5720, -54.5754, -54.5779, -54.5796, -54.5808, -54.5817, -54.5823,
        -54.5827, -54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5835,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5281e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3115, -0.4566, -0.4744, -0.4830, -0.4882, -0.4917, -0.4941, -0.4958,
        -0.4969, -0.4977, -0.4983, -0.4987, -0.4989, -0.4991, -0.4993, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8349e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1021e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2355, -93.2347, -93.2341, -93.2336, -93.2333, -93.2330, -93.2329,
        -93.2327, -93.2326, -93.2325], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8357, -37.8358, -37.8359, -37.8359, -37.8359, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8360], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5830, -54.5832, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 3 	 CHN 	 CNH 	 0.008068916703520966

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4719, -7.4751, -7.4769, -7.4779, -7.4787, -7.4796, -7.4803,
        -7.4802, -7.4799, -7.4796, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796,
        -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0363e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8622e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0729e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 Li 	 Li 	 6.463652252894108e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6526, -109.9220, -109.7682, -109.6850, -109.6314, -109.5948,
        -109.5693, -109.5514, -109.5390, -109.5302, -109.5241, -109.5198,
        -109.5168, -109.5147, -109.5133, -109.5122, -109.5115, -109.5110,
        -109.5107, -109.5104, -109.5102, -109.5101, -109.5100, -109.5100,
        -109.5099], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3678e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4292, -54.5004, -54.5291, -54.5456, -54.5567, -54.5646, -54.5701,
        -54.5741, -54.5769, -54.5789, -54.5802, -54.5812, -54.5819, -54.5824,
        -54.5827, -54.5830, -54.5831, -54.5833, -54.5833, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5566e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4167, -54.4860, -54.5185, -54.5378, -54.5511, -54.5605, -54.5672,
        -54.5720, -54.5754, -54.5778, -54.5795, -54.5807, -54.5816, -54.5821,
        -54.5826, -54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834,
        -54.5834, -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6355e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5122, -109.5115, -109.5110, -109.5107, -109.5104, -109.5102,
        -109.5101, -109.5100, -109.5100, -109.5099], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5828, -54.5830, -54.5832, -54.5833, -54.5834, -54.5834, -54.5834,
        -54.5835, -54.5835, -54.5835], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 1 	 N2 	 N2 	 0.00010311510828809432

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7550, -37.7948, -37.8093, -37.8174, -37.8228, -37.8266, -37.8293,
        -37.8313, -37.8326, -37.8336, -37.8343, -37.8347, -37.8351, -37.8353,
        -37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4197e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4197e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 4 	 C 	 C 	 5.036002632269585e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2368, -0.4350, -0.4623, -0.4752, -0.4830, -0.4881, -0.4916, -0.4940,
        -0.4957, -0.4968, -0.4977, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8295e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8163e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6589e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 6 	 H 	 H 	 5.234851448502295e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2548, -107.2875, -107.2511, -107.2449, -107.2403, -107.2379,
        -107.2369, -107.2370, -107.2374, -107.2379, -107.2384, -107.2389,
        -107.2394, -107.2398, -107.2403, -107.2407, -107.2410, -107.2413,
        -107.2416, -107.2419, -107.2421, -107.2422, -107.2424, -107.2425,
        -107.2426], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3805e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4689, -7.4755, -7.4775, -7.4784, -7.4792, -7.4801, -7.4804, -7.4801,
        -7.4797, -7.4796, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0320e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0218e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6774, -99.6976, -99.7091, -99.7161, -99.7211, -99.7247, -99.7274,
        -99.7293, -99.7307, -99.7317, -99.7324, -99.7329, -99.7332, -99.7335,
        -99.7336, -99.7338, -99.7339, -99.7339, -99.7340, -99.7340, -99.7340,
        -99.7340, -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3622e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2407, -107.2410, -107.2413, -107.2416, -107.2419, -107.2421,
        -107.2422, -107.2424, -107.2425, -107.2426], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7338, -99.7339, -99.7339, -99.7340, -99.7340, -99.7340, -99.7340,
        -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 2 	 FLi 	 LiF 	 0.008776994339474578

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6874, -99.7106, -99.7187, -99.7234, -99.7265, -99.7287, -99.7303,
        -99.7314, -99.7322, -99.7328, -99.7332, -99.7335, -99.7337, -99.7338,
        -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7341, -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0445e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0445e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 F 	 F 	 1.127656987121109e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5703], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7387], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5703], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7387], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8368], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 CH4O 	 CH4O 	 5.920774411233882e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e12/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 3.051261', ' ae : 54.597007', ' E : 1.157707'] ,|| total loss 40.016997 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5703], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7387], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5703], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7387], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8369], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 CH4O 	 CH4O 	 5.922715770396569e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7597, -37.7984, -37.8118, -37.8192, -37.8241, -37.8276, -37.8300,
        -37.8318, -37.8330, -37.8339, -37.8345, -37.8349, -37.8352, -37.8354,
        -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3685e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3685e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8357, -37.8357, -37.8358, -37.8358, -37.8359, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 4 	 C 	 C 	 4.958713673365268e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1585], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7389], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5226], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1585], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7389], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5226], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 HN2O 	 HON2 	 0.0008807740033571509

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6886, -99.7115, -99.7195, -99.7241, -99.7271, -99.7293, -99.7308,
        -99.7319, -99.7327, -99.7332, -99.7336, -99.7339, -99.7341, -99.7342,
        -99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0898e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0898e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7344, -99.7344, -99.7345, -99.7345, -99.7345, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 F 	 F 	 9.06680541875365e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6523, -109.9227, -109.7688, -109.6856, -109.6320, -109.5954,
        -109.5699, -109.5521, -109.5396, -109.5309, -109.5247, -109.5205,
        -109.5175, -109.5154, -109.5139, -109.5129, -109.5121, -109.5116,
        -109.5113, -109.5110, -109.5109, -109.5107, -109.5107, -109.5106,
        -109.5106], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3627e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4359, -54.5062, -54.5333, -54.5487, -54.5590, -54.5662, -54.5713,
        -54.5750, -54.5776, -54.5794, -54.5806, -54.5815, -54.5822, -54.5826,
        -54.5829, -54.5831, -54.5833, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4307e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4282, -54.4993, -54.5283, -54.5451, -54.5564, -54.5644, -54.5700,
        -54.5740, -54.5769, -54.5789, -54.5803, -54.5813, -54.5820, -54.5825,
        -54.5828, -54.5831, -54.5832, -54.5834, -54.5834, -54.5835, -54.5835,
        -54.5836, -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4642e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5129, -109.5121, -109.5116, -109.5113, -109.5110, -109.5109,
        -109.5107, -109.5107, -109.5106, -109.5106], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5831, -54.5832, -54.5834, -54.5834, -54.5835, -54.5835, -54.5836,
        -54.5836, -54.5836, -54.5836], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 1 	 N2 	 N2 	 9.946071659658147e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0380, -1.1200, -1.1413, -1.1521, -1.1590, -1.1636, -1.1668, -1.1691,
        -1.1706, -1.1717, -1.1725, -1.1730, -1.1734, -1.1737, -1.1738, -1.1740,
        -1.1741, -1.1741, -1.1742, -1.1742, -1.1742, -1.1742, -1.1743, -1.1743,
        -1.1743], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9927e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9855e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3482, -0.4662, -0.4798, -0.4865, -0.4906, -0.4933, -0.4952, -0.4965,
        -0.4974, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8247e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7927e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6350e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2543, -0.4403, -0.4653, -0.4771, -0.4842, -0.4890, -0.4922, -0.4944,
        -0.4960, -0.4970, -0.4978, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8246e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.5248e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1740, -1.1741, -1.1741, -1.1742, -1.1742, -1.1742, -1.1742, -1.1743,
        -1.1743, -1.1743], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 1.8469596851745753e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0496], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4557], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7332], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0496], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4557], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7332], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 11 	 HF2 	 HF2 	 0.0008921787157331595

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2951, -107.3024, -107.2645, -107.2541, -107.2474, -107.2436,
        -107.2417, -107.2410, -107.2407, -107.2407, -107.2407, -107.2409,
        -107.2412, -107.2415, -107.2419, -107.2422, -107.2425, -107.2428,
        -107.2430, -107.2432, -107.2434, -107.2436, -107.2437, -107.2438,
        -107.2438], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3884e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4655, -7.4726, -7.4757, -7.4773, -7.4783, -7.4790, -7.4799, -7.4804,
        -7.4803, -7.4799, -7.4797, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0342e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2382e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6802, -99.7029, -99.7133, -99.7195, -99.7238, -99.7269, -99.7291,
        -99.7307, -99.7319, -99.7327, -99.7333, -99.7337, -99.7340, -99.7342,
        -99.7343, -99.7344, -99.7345, -99.7346, -99.7346, -99.7346, -99.7346,
        -99.7346, -99.7346, -99.7347, -99.7347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2531e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2422, -107.2425, -107.2428, -107.2430, -107.2432, -107.2434,
        -107.2436, -107.2437, -107.2438, -107.2438], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7344, -99.7345, -99.7346, -99.7346, -99.7346, -99.7346, -99.7346,
        -99.7346, -99.7347, -99.7347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 2 	 FLi 	 LiF 	 0.008720248264123518

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2581, -0.4415, -0.4659, -0.4775, -0.4845, -0.4891, -0.4923, -0.4945,
        -0.4960, -0.4971, -0.4978, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8231e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.4749e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6463e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 6 	 H 	 H 	 5.656704726851193e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9543, -93.5167, -93.4039, -93.3531, -93.3176, -93.2941, -93.2773,
        -93.2654, -93.2569, -93.2507, -93.2463, -93.2430, -93.2407, -93.2389,
        -93.2377, -93.2367, -93.2360, -93.2355, -93.2351, -93.2348, -93.2346,
        -93.2344, -93.2343, -93.2342, -93.2342], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0323e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7546, -37.7944, -37.8091, -37.8173, -37.8228, -37.8267, -37.8294,
        -37.8314, -37.8328, -37.8337, -37.8344, -37.8349, -37.8353, -37.8355,
        -37.8357, -37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8360, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2311e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4258, -54.4968, -54.5266, -54.5438, -54.5555, -54.5637, -54.5696,
        -54.5738, -54.5767, -54.5788, -54.5803, -54.5813, -54.5820, -54.5825,
        -54.5829, -54.5831, -54.5833, -54.5834, -54.5835, -54.5836, -54.5836,
        -54.5837, -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4024e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3245, -0.4601, -0.4764, -0.4842, -0.4891, -0.4923, -0.4945, -0.4960,
        -0.4971, -0.4978, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8228e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1946e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2367, -93.2360, -93.2355, -93.2351, -93.2348, -93.2346, -93.2344,
        -93.2343, -93.2342, -93.2342], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8358, -37.8359, -37.8359, -37.8360, -37.8360, -37.8360, -37.8360,
        -37.8360, -37.8361, -37.8361], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5831, -54.5833, -54.5834, -54.5835, -54.5836, -54.5836, -54.5837,
        -54.5837, -54.5837, -54.5837], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 3 	 CHN 	 CNH 	 0.007938806281529787

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4664, -7.4737, -7.4764, -7.4777, -7.4786, -7.4794, -7.4802, -7.4804,
        -7.4800, -7.4797, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797,
        -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0281e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1136e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0565e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4797, -7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 Li 	 Li 	 7.011469747780405e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4448, -54.5131, -54.5381, -54.5521, -54.5614, -54.5679, -54.5724,
        -54.5757, -54.5780, -54.5796, -54.5808, -54.5816, -54.5821, -54.5825,
        -54.5828, -54.5830, -54.5831, -54.5832, -54.5833, -54.5833, -54.5834,
        -54.5834, -54.5834, -54.5834, -54.5834], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5762e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5762e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5830, -54.5831, -54.5832, -54.5833, -54.5833, -54.5834, -54.5834,
        -54.5834, -54.5834, -54.5834], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 8 	 N 	 N 	 7.866579233997064e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e13/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 3.043907', ' ae : 54.310258', ' E : 1.131429'] ,|| total loss 39.806341 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3118, -0.4567, -0.4744, -0.4830, -0.4882, -0.4917, -0.4941, -0.4957,
        -0.4969, -0.4977, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8173e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5512e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6346e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 6 	 H 	 H 	 5.981079492969142e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7478, -37.7879, -37.8043, -37.8138, -37.8202, -37.8247, -37.8279,
        -37.8302, -37.8319, -37.8330, -37.8338, -37.8344, -37.8348, -37.8351,
        -37.8353, -37.8354, -37.8355, -37.8356, -37.8357, -37.8357, -37.8357,
        -37.8357, -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5572e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5572e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8354, -37.8355, -37.8356, -37.8357, -37.8357, -37.8357, -37.8357,
        -37.8358, -37.8358, -37.8358], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 4 	 C 	 C 	 5.260547396750443e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1586], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7388], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5226], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1586], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7388], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5226], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 9 	 HN2O 	 HON2 	 0.000886844895099773

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5912, -109.9186, -109.7649, -109.6829, -109.6301, -109.5941,
        -109.5689, -109.5514, -109.5391, -109.5304, -109.5244, -109.5202,
        -109.5172, -109.5152, -109.5137, -109.5127, -109.5120, -109.5115,
        -109.5111, -109.5109, -109.5107, -109.5106, -109.5105, -109.5105,
        -109.5104], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3552e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4543, -54.5199, -54.5427, -54.5553, -54.5637, -54.5695, -54.5736,
        -54.5765, -54.5785, -54.5800, -54.5810, -54.5817, -54.5822, -54.5825,
        -54.5828, -54.5830, -54.5831, -54.5832, -54.5832, -54.5833, -54.5833,
        -54.5833, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6114e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4462, -54.5142, -54.5388, -54.5525, -54.5617, -54.5681, -54.5726,
        -54.5758, -54.5780, -54.5796, -54.5807, -54.5815, -54.5821, -54.5824,
        -54.5827, -54.5829, -54.5830, -54.5831, -54.5832, -54.5832, -54.5833,
        -54.5833, -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6356e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5127, -109.5120, -109.5115, -109.5111, -109.5109, -109.5107,
        -109.5106, -109.5105, -109.5105, -109.5104], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5829, -54.5830, -54.5831, -54.5832, -54.5832, -54.5833, -54.5833,
        -54.5833, -54.5833, -54.5833], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 1 	 N2 	 N2 	 9.555365399599114e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0558, -1.1271, -1.1457, -1.1551, -1.1611, -1.1652, -1.1680, -1.1699,
        -1.1713, -1.1722, -1.1729, -1.1734, -1.1737, -1.1739, -1.1741, -1.1742,
        -1.1743, -1.1743, -1.1744, -1.1744, -1.1744, -1.1744, -1.1744, -1.1744,
        -1.1744], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9897e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9794e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2765, -0.4468, -0.4689, -0.4794, -0.4858, -0.4900, -0.4929, -0.4949,
        -0.4963, -0.4973, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8138e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3288e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6071e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2802, -0.4479, -0.4695, -0.4798, -0.4860, -0.4902, -0.4930, -0.4950,
        -0.4963, -0.4973, -0.4980, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8139e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2522e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1742, -1.1743, -1.1743, -1.1744, -1.1744, -1.1744, -1.1744, -1.1744,
        -1.1744, -1.1744], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 0 	 H2 	 H2 	 2.939823689312965e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4684, -7.4752, -7.4774, -7.4784, -7.4791, -7.4800, -7.4804, -7.4802,
        -7.4798, -7.4796, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0181e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1246e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0366e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 7 	 Li 	 Li 	 7.018338343002178e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4554], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7328], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0489], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4554], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7328], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 11 	 HF2 	 HF2 	 0.0008995666755789023

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6827, -99.7061, -99.7155, -99.7210, -99.7248, -99.7275, -99.7294,
        -99.7308, -99.7318, -99.7325, -99.7330, -99.7333, -99.7336, -99.7337,
        -99.7339, -99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341,
        -99.7341, -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4279e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4279e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7339, -99.7340, -99.7340, -99.7341, -99.7341, -99.7341, -99.7341,
        -99.7341, -99.7341, -99.7341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 5 	 F 	 F 	 1.1950377577900354e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5703], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5703], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8369], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 CH4O 	 CH4O 	 5.975403758873192e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3258, -107.3105, -107.2726, -107.2598, -107.2518, -107.2471,
        -107.2446, -107.2431, -107.2423, -107.2418, -107.2416, -107.2416,
        -107.2417, -107.2419, -107.2422, -107.2424, -107.2427, -107.2429,
        -107.2431, -107.2433, -107.2435, -107.2436, -107.2437, -107.2438,
        -107.2439], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3845e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4650, -7.4716, -7.4750, -7.4768, -7.4779, -7.4787, -7.4795, -7.4803,
        -7.4803, -7.4799, -7.4796, -7.4795, -7.4795, -7.4796, -7.4796, -7.4796,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0064e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9194e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6801, -99.7029, -99.7132, -99.7192, -99.7234, -99.7264, -99.7286,
        -99.7302, -99.7313, -99.7321, -99.7326, -99.7330, -99.7333, -99.7335,
        -99.7337, -99.7338, -99.7338, -99.7339, -99.7339, -99.7339, -99.7340,
        -99.7340, -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5509e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2424, -107.2427, -107.2429, -107.2431, -107.2433, -107.2435,
        -107.2436, -107.2437, -107.2438, -107.2439], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7338, -99.7338, -99.7339, -99.7339, -99.7339, -99.7340, -99.7340,
        -99.7340, -99.7340, -99.7340], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 2 	 FLi 	 LiF 	 0.008649090896160805

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0360, -93.5509, -93.4221, -93.3667, -93.3267, -93.3006, -93.2819,
        -93.2687, -93.2593, -93.2525, -93.2475, -93.2440, -93.2414, -93.2395,
        -93.2381, -93.2371, -93.2363, -93.2357, -93.2353, -93.2350, -93.2348,
        -93.2346, -93.2345, -93.2344, -93.2343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9955e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7424, -37.7794, -37.7980, -37.8091, -37.8167, -37.8221, -37.8260,
        -37.8288, -37.8308, -37.8322, -37.8332, -37.8339, -37.8344, -37.8348,
        -37.8350, -37.8352, -37.8353, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8356, -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7866e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4306, -54.5014, -54.5297, -54.5459, -54.5568, -54.5645, -54.5700,
        -54.5739, -54.5766, -54.5785, -54.5799, -54.5809, -54.5815, -54.5820,
        -54.5823, -54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9112e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2279, -0.4321, -0.4607, -0.4741, -0.4822, -0.4876, -0.4912, -0.4937,
        -0.4955, -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8086e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.6591e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2371, -93.2363, -93.2357, -93.2353, -93.2350, -93.2348, -93.2346,
        -93.2345, -93.2344, -93.2343], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8352, -37.8353, -37.8354, -37.8355, -37.8355, -37.8355, -37.8356,
        -37.8356, -37.8356, -37.8356], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5827, -54.5828, -54.5829, -54.5830, -54.5830, -54.5830,
        -54.5831, -54.5831, -54.5831], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 3 	 CHN 	 CNH 	 0.0078269671838059

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4560, -54.5208, -54.5432, -54.5556, -54.5637, -54.5694, -54.5734,
        -54.5762, -54.5782, -54.5796, -54.5806, -54.5813, -54.5818, -54.5821,
        -54.5824, -54.5825, -54.5827, -54.5827, -54.5828, -54.5828, -54.5829,
        -54.5829, -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9777e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9777e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5825, -54.5827, -54.5827, -54.5828, -54.5828, -54.5829, -54.5829,
        -54.5829, -54.5829, -54.5829], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 14 	 8 	 N 	 N 	 9.256323679998024e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e14)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e14/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e14/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 14 || ,[' rho : 3.036171', ' ae : 54.036268', ' E : 1.200409'] ,|| total loss 39.600327 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7418, -37.7778, -37.7967, -37.8081, -37.8159, -37.8215, -37.8255,
        -37.8284, -37.8305, -37.8319, -37.8330, -37.8337, -37.8342, -37.8346,
        -37.8348, -37.8350, -37.8352, -37.8352, -37.8353, -37.8353, -37.8354,
        -37.8354, -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9772e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9772e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8350, -37.8352, -37.8352, -37.8353, -37.8353, -37.8354, -37.8354,
        -37.8354, -37.8354, -37.8354], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 4 	 C 	 C 	 6.035952948867805e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2406, -107.2842, -107.2477, -107.2430, -107.2392, -107.2374,
        -107.2369, -107.2372, -107.2378, -107.2385, -107.2391, -107.2397,
        -107.2402, -107.2407, -107.2412, -107.2417, -107.2421, -107.2424,
        -107.2427, -107.2430, -107.2432, -107.2434, -107.2436, -107.2437,
        -107.2438], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3848e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.4723, -7.4755, -7.4772, -7.4781, -7.4789, -7.4798, -7.4803,
        -7.4802, -7.4798, -7.4796, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796,
        -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9954e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8571e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6772, -99.6961, -99.7078, -99.7151, -99.7202, -99.7240, -99.7267,
        -99.7287, -99.7302, -99.7312, -99.7320, -99.7325, -99.7329, -99.7331,
        -99.7333, -99.7334, -99.7335, -99.7336, -99.7336, -99.7337, -99.7337,
        -99.7337, -99.7337, -99.7337, -99.7337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6139e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2417, -107.2421, -107.2424, -107.2427, -107.2430, -107.2432,
        -107.2434, -107.2436, -107.2437, -107.2438], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7334, -99.7335, -99.7336, -99.7336, -99.7337, -99.7337, -99.7337,
        -99.7337, -99.7337, -99.7337], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 2 	 FLi 	 LiF 	 0.008634610495752681

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6777, -99.6979, -99.7092, -99.7162, -99.7211, -99.7247, -99.7273,
        -99.7292, -99.7305, -99.7315, -99.7322, -99.7327, -99.7330, -99.7333,
        -99.7335, -99.7336, -99.7337, -99.7337, -99.7338, -99.7338, -99.7338,
        -99.7338, -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6037e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6037e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7336, -99.7337, -99.7337, -99.7338, -99.7338, -99.7338, -99.7338,
        -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 5 	 F 	 F 	 9.77476680543492e-10

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4666, -7.4739, -7.4765, -7.4778, -7.4786, -7.4794, -7.4802, -7.4804,
        -7.4800, -7.4797, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796, -7.4797,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9936e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9602e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9875e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 7 	 Li 	 Li 	 6.672665223460714e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3488, -0.4663, -0.4799, -0.4865, -0.4906, -0.4933, -0.4952, -0.4965,
        -0.4974, -0.4980, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8018e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4039e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6036e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 6 	 H 	 H 	 7.174818217573509e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5703], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5703], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8369], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 10 	 CH4O 	 CH4O 	 6.0037128481573174e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8041, -109.8468, -109.7312, -109.6605, -109.6143, -109.5827,
        -109.5608, -109.5455, -109.5349, -109.5275, -109.5223, -109.5187,
        -109.5162, -109.5144, -109.5132, -109.5123, -109.5117, -109.5113,
        -109.5110, -109.5108, -109.5106, -109.5105, -109.5105, -109.5104,
        -109.5104], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3450e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4272, -54.4980, -54.5273, -54.5441, -54.5555, -54.5636, -54.5693,
        -54.5733, -54.5762, -54.5782, -54.5797, -54.5807, -54.5814, -54.5819,
        -54.5822, -54.5825, -54.5826, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9833e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4497, -54.5165, -54.5403, -54.5535, -54.5623, -54.5684, -54.5727,
        -54.5758, -54.5780, -54.5795, -54.5805, -54.5813, -54.5818, -54.5822,
        -54.5824, -54.5826, -54.5828, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8933e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5123, -109.5117, -109.5113, -109.5110, -109.5108, -109.5106,
        -109.5105, -109.5105, -109.5104, -109.5104], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5826, -54.5828, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 1 	 N2 	 N2 	 9.017864579114548e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1307, -93.5897, -93.4426, -93.3823, -93.3374, -93.3085, -93.2878,
        -93.2731, -93.2627, -93.2551, -93.2497, -93.2458, -93.2429, -93.2408,
        -93.2393, -93.2382, -93.2374, -93.2368, -93.2363, -93.2360, -93.2357,
        -93.2356, -93.2354, -93.2353, -93.2352], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9633e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7530, -37.7929, -37.8078, -37.8162, -37.8219, -37.8258, -37.8287,
        -37.8307, -37.8321, -37.8331, -37.8338, -37.8343, -37.8347, -37.8349,
        -37.8351, -37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7969e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4381, -54.5078, -54.5342, -54.5492, -54.5592, -54.5662, -54.5711,
        -54.5747, -54.5771, -54.5789, -54.5801, -54.5810, -54.5816, -54.5820,
        -54.5823, -54.5825, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830,
        -54.5830, -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9427e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2346, -0.4342, -0.4618, -0.4748, -0.4827, -0.4879, -0.4914, -0.4939,
        -0.4955, -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7993e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7840e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2382, -93.2374, -93.2368, -93.2363, -93.2360, -93.2357, -93.2356,
        -93.2354, -93.2353, -93.2352], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8352, -37.8353, -37.8354, -37.8354, -37.8355, -37.8355, -37.8355,
        -37.8355, -37.8355, -37.8355], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5825, -54.5827, -54.5828, -54.5829, -54.5829, -54.5830, -54.5830,
        -54.5830, -54.5830, -54.5830], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 3 	 CHN 	 CNH 	 0.007733102553972186

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7324], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0485], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4552], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7324], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 11 	 HF2 	 HF2 	 0.0009081041713750187

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1575], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7382], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5220], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1575], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7382], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5220], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 9 	 HN2O 	 HON2 	 0.0008984620371638307

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0221, -1.1139, -1.1377, -1.1499, -1.1576, -1.1628, -1.1664, -1.1689,
        -1.1707, -1.1719, -1.1728, -1.1734, -1.1738, -1.1741, -1.1743, -1.1744,
        -1.1745, -1.1746, -1.1747, -1.1747, -1.1747, -1.1747, -1.1747, -1.1747,
        -1.1748], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9874e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9749e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2301, -0.4327, -0.4610, -0.4743, -0.4823, -0.4876, -0.4912, -0.4937,
        -0.4954, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7928e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1263e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5605e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3023, -0.4540, -0.4729, -0.4819, -0.4875, -0.4912, -0.4937, -0.4954,
        -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7929e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.4557e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1744, -1.1745, -1.1746, -1.1747, -1.1747, -1.1747, -1.1747, -1.1747,
        -1.1747, -1.1748], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 15 	 0 	 H2 	 H2 	 5.838685853193827e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4546, -54.5197, -54.5423, -54.5547, -54.5630, -54.5687, -54.5727,
        -54.5756, -54.5776, -54.5790, -54.5800, -54.5807, -54.5812, -54.5816,
        -54.5818, -54.5820, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5204e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5204e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5820, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 15 	 8 	 N 	 N 	 1.0997894869031998e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e15)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e15/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e15/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 15 || ,[' rho : 3.028953', ' ae : 53.880863', ' E : 1.256827'] ,|| total loss 39.472563 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1566], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5214], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1566], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5214], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 9 	 HN2O 	 HON2 	 0.0009010049595207844

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9878, -1.1003, -1.1295, -1.1444, -1.1538, -1.1602, -1.1646, -1.1677,
        -1.1698, -1.1713, -1.1724, -1.1731, -1.1736, -1.1740, -1.1742, -1.1744,
        -1.1745, -1.1746, -1.1747, -1.1747, -1.1748, -1.1748, -1.1748, -1.1748,
        -1.1748], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9885e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9770e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2787, -0.4474, -0.4692, -0.4795, -0.4858, -0.4900, -0.4929, -0.4949,
        -0.4962, -0.4972, -0.4979, -0.4983, -0.4987, -0.4989, -0.4990, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7888e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0702e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5545e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2658, -0.4436, -0.4671, -0.4782, -0.4849, -0.4894, -0.4925, -0.4946,
        -0.4960, -0.4970, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7887e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3600e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1744, -1.1745, -1.1746, -1.1747, -1.1747, -1.1748, -1.1748, -1.1748,
        -1.1748, -1.1748], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 0 	 H2 	 H2 	 6.565031165599303e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6835, -99.7068, -99.7157, -99.7208, -99.7243, -99.7268, -99.7285,
        -99.7298, -99.7307, -99.7314, -99.7318, -99.7322, -99.7324, -99.7325,
        -99.7326, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3212e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3212e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7327, -99.7328, -99.7328, -99.7328, -99.7329, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 5 	 F 	 F 	 2.3343755825016376e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8311, -93.4628, -93.3742, -93.3311, -93.3027, -93.2834, -93.2699,
        -93.2602, -93.2533, -93.2483, -93.2447, -93.2421, -93.2402, -93.2388,
        -93.2377, -93.2370, -93.2364, -93.2360, -93.2357, -93.2355, -93.2353,
        -93.2352, -93.2351, -93.2350, -93.2349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9243e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7611, -37.7990, -37.8119, -37.8190, -37.8237, -37.8270, -37.8294,
        -37.8310, -37.8322, -37.8330, -37.8336, -37.8340, -37.8343, -37.8345,
        -37.8346, -37.8347, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3789e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4109, -54.4726, -54.5079, -54.5296, -54.5446, -54.5555, -54.5632,
        -54.5688, -54.5728, -54.5756, -54.5775, -54.5789, -54.5799, -54.5806,
        -54.5811, -54.5814, -54.5817, -54.5818, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9392e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2552, -0.4405, -0.4653, -0.4770, -0.4842, -0.4889, -0.4921, -0.4943,
        -0.4958, -0.4969, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7868e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.6787e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2370, -93.2364, -93.2360, -93.2357, -93.2355, -93.2353, -93.2352,
        -93.2351, -93.2350, -93.2349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8347, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5817, -54.5818, -54.5820, -54.5820, -54.5821, -54.5821,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 3 	 CHN 	 CNH 	 0.0076433128101822245

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4691, -7.4756, -7.4776, -7.4785, -7.4793, -7.4801, -7.4803, -7.4799,
        -7.4796, -7.4795, -7.4794, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796,
        -7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9565e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7123e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9133e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 7 	 Li 	 Li 	 6.10029671085506e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7418, -37.7786, -37.7972, -37.8082, -37.8158, -37.8212, -37.8251,
        -37.8279, -37.8299, -37.8313, -37.8323, -37.8330, -37.8335, -37.8339,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8353e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8353e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 4 	 C 	 C 	 7.89012642823043e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5677], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5677], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7368], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8360], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 10 	 CH4O 	 CH4O 	 6.0431250232124976e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4944, -109.8954, -109.7485, -109.6709, -109.6211, -109.5871,
        -109.5634, -109.5468, -109.5352, -109.5270, -109.5213, -109.5173,
        -109.5145, -109.5126, -109.5112, -109.5103, -109.5096, -109.5091,
        -109.5088, -109.5085, -109.5084, -109.5083, -109.5082, -109.5081,
        -109.5081], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3351e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4430, -54.5112, -54.5362, -54.5502, -54.5595, -54.5660, -54.5706,
        -54.5739, -54.5762, -54.5778, -54.5789, -54.5797, -54.5803, -54.5807,
        -54.5810, -54.5812, -54.5813, -54.5814, -54.5814, -54.5815, -54.5815,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3579e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4419, -54.5104, -54.5356, -54.5498, -54.5592, -54.5658, -54.5704,
        -54.5737, -54.5761, -54.5777, -54.5789, -54.5797, -54.5803, -54.5807,
        -54.5809, -54.5811, -54.5813, -54.5814, -54.5814, -54.5815, -54.5815,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3622e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5103, -109.5096, -109.5091, -109.5088, -109.5085, -109.5084,
        -109.5083, -109.5082, -109.5081, -109.5081], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5811, -54.5813, -54.5814, -54.5814, -54.5815, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 1 	 N2 	 N2 	 8.473365752366989e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4333, -54.5034, -54.5306, -54.5462, -54.5566, -54.5639, -54.5691,
        -54.5727, -54.5753, -54.5772, -54.5785, -54.5794, -54.5800, -54.5804,
        -54.5808, -54.5810, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5292e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5292e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814, -54.5814,
        -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 8 	 N 	 N 	 1.4018073624619087e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0443], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4529], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0443], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4529], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 11 	 HF2 	 HF2 	 0.0009256006853591523

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2364, -107.2831, -107.2457, -107.2414, -107.2378, -107.2361,
        -107.2357, -107.2359, -107.2366, -107.2373, -107.2379, -107.2385,
        -107.2391, -107.2396, -107.2401, -107.2406, -107.2411, -107.2414,
        -107.2418, -107.2420, -107.2423, -107.2425, -107.2426, -107.2428,
        -107.2429], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3703e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4747, -7.4770, -7.4781, -7.4789, -7.4797, -7.4804, -7.4802,
        -7.4798, -7.4796, -7.4795, -7.4795, -7.4795, -7.4796, -7.4796, -7.4796,
        -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9395e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.8372e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6835, -99.7066, -99.7152, -99.7201, -99.7235, -99.7258, -99.7275,
        -99.7288, -99.7296, -99.7302, -99.7307, -99.7310, -99.7312, -99.7313,
        -99.7314, -99.7315, -99.7316, -99.7316, -99.7316, -99.7317, -99.7317,
        -99.7317, -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6520e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2406, -107.2411, -107.2414, -107.2418, -107.2420, -107.2423,
        -107.2425, -107.2426, -107.2428, -107.2429], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4796, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4797], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7315, -99.7316, -99.7316, -99.7316, -99.7317, -99.7317, -99.7317,
        -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 16 	 2 	 FLi 	 LiF 	 0.008535283019194283

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2843, -0.4489, -0.4700, -0.4801, -0.4862, -0.4903, -0.4930, -0.4949,
        -0.4963, -0.4972, -0.4979, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7755e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.4161e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5510e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 16 	 6 	 H 	 H 	 9.828022537414407e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e16)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e16/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e16/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 16 || ,[' rho : 3.018293', ' ae : 53.603155', ' E : 1.468283'] ,|| total loss 39.255985 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7618, -37.7993, -37.8120, -37.8190, -37.8236, -37.8269, -37.8292,
        -37.8308, -37.8319, -37.8327, -37.8333, -37.8337, -37.8340, -37.8342,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7759e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7759e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 4 	 C 	 C 	 8.019863310254558e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5208], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1552], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5208], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 9 	 HN2O 	 HON2 	 0.0009049661237507502

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2226, -0.4303, -0.4596, -0.4734, -0.4817, -0.4872, -0.4909, -0.4935,
        -0.4953, -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7749e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9951e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5498e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 6 	 H 	 H 	 1.007310506213749e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0502, -1.1253, -1.1449, -1.1549, -1.1612, -1.1654, -1.1684, -1.1705,
        -1.1719, -1.1729, -1.1736, -1.1741, -1.1744, -1.1747, -1.1748, -1.1750,
        -1.1750, -1.1751, -1.1751, -1.1752, -1.1752, -1.1752, -1.1752, -1.1752,
        -1.1752], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0104e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0208e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3120, -0.4566, -0.4743, -0.4829, -0.4881, -0.4915, -0.4939, -0.4956,
        -0.4967, -0.4975, -0.4981, -0.4985, -0.4987, -0.4989, -0.4991, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7749e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8866e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5707e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3063, -0.4551, -0.4735, -0.4823, -0.4877, -0.4913, -0.4937, -0.4954,
        -0.4966, -0.4975, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7749e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.9953e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1750, -1.1750, -1.1751, -1.1751, -1.1752, -1.1752, -1.1752, -1.1752,
        -1.1752, -1.1752], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 0 	 H2 	 H2 	 1.1024550043035447e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0463], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7311], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0463], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4539], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7311], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 11 	 HF2 	 HF2 	 0.0009262228461169115

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3183, -107.3108, -107.2714, -107.2591, -107.2514, -107.2470,
        -107.2445, -107.2431, -107.2424, -107.2420, -107.2418, -107.2418,
        -107.2420, -107.2423, -107.2426, -107.2429, -107.2432, -107.2435,
        -107.2437, -107.2439, -107.2441, -107.2442, -107.2444, -107.2445,
        -107.2445], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3816e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4654, -7.4720, -7.4753, -7.4771, -7.4782, -7.4789, -7.4798, -7.4805,
        -7.4804, -7.4800, -7.4797, -7.4796, -7.4796, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9484e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3728e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6869, -99.7096, -99.7176, -99.7221, -99.7252, -99.7274, -99.7289,
        -99.7300, -99.7308, -99.7314, -99.7317, -99.7320, -99.7322, -99.7324,
        -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8650e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2429, -107.2432, -107.2435, -107.2437, -107.2439, -107.2441,
        -107.2442, -107.2444, -107.2445, -107.2445], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7326, -99.7326, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 2 	 FLi 	 LiF 	 0.008484264986425866

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5691], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5691], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8367], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 10 	 CH4O 	 CH4O 	 6.0362434714734556e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6797, -99.7022, -99.7123, -99.7183, -99.7225, -99.7255, -99.7276,
        -99.7292, -99.7303, -99.7311, -99.7317, -99.7321, -99.7323, -99.7325,
        -99.7327, -99.7328, -99.7328, -99.7329, -99.7329, -99.7329, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2159e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2159e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7328, -99.7328, -99.7329, -99.7329, -99.7329, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 5 	 F 	 F 	 1.9396249380477555e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4672, -7.4743, -7.4769, -7.4782, -7.4789, -7.4797, -7.4805, -7.4805,
        -7.4800, -7.4798, -7.4796, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9463e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4771e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8930e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 7 	 Li 	 Li 	 7.825841346220322e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9173, -93.5013, -93.3959, -93.3477, -93.3145, -93.2924, -93.2768,
        -93.2657, -93.2578, -93.2521, -93.2480, -93.2450, -93.2428, -93.2413,
        -93.2401, -93.2392, -93.2386, -93.2382, -93.2378, -93.2376, -93.2374,
        -93.2372, -93.2371, -93.2370, -93.2370], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8770e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7633, -37.8005, -37.8129, -37.8198, -37.8243, -37.8275, -37.8298,
        -37.8314, -37.8325, -37.8333, -37.8338, -37.8342, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1767e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4202, -54.4899, -54.5211, -54.5395, -54.5519, -54.5608, -54.5671,
        -54.5716, -54.5748, -54.5770, -54.5786, -54.5797, -54.5805, -54.5811,
        -54.5815, -54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823,
        -54.5823, -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6682e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2294, -0.4325, -0.4608, -0.4742, -0.4822, -0.4875, -0.4912, -0.4936,
        -0.4954, -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7733e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.8536e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2392, -93.2386, -93.2382, -93.2378, -93.2376, -93.2374, -93.2372,
        -93.2371, -93.2370, -93.2370], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5821, -54.5822, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5823, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 17 	 3 	 CHN 	 CNH 	 0.007492791068955003

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4345, -54.5044, -54.5316, -54.5470, -54.5574, -54.5647, -54.5699,
        -54.5735, -54.5761, -54.5779, -54.5792, -54.5801, -54.5808, -54.5812,
        -54.5815, -54.5817, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7211e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7211e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5817, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822, -54.5822,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 8 	 N 	 N 	 1.1427245512603514e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6652, -109.9208, -109.7678, -109.6848, -109.6312, -109.5946,
        -109.5692, -109.5514, -109.5389, -109.5302, -109.5241, -109.5198,
        -109.5168, -109.5147, -109.5133, -109.5122, -109.5115, -109.5110,
        -109.5107, -109.5104, -109.5102, -109.5101, -109.5100, -109.5100,
        -109.5099], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3291e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4484, -54.5152, -54.5392, -54.5525, -54.5613, -54.5675, -54.5718,
        -54.5749, -54.5771, -54.5786, -54.5797, -54.5805, -54.5810, -54.5814,
        -54.5816, -54.5818, -54.5819, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6721e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4528, -54.5183, -54.5413, -54.5540, -54.5624, -54.5683, -54.5724,
        -54.5753, -54.5774, -54.5788, -54.5798, -54.5806, -54.5811, -54.5814,
        -54.5817, -54.5818, -54.5820, -54.5820, -54.5821, -54.5821, -54.5822,
        -54.5822, -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6574e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5122, -109.5115, -109.5110, -109.5107, -109.5104, -109.5102,
        -109.5101, -109.5100, -109.5100, -109.5099], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5818, -54.5820, -54.5820, -54.5821, -54.5821, -54.5822, -54.5822,
        -54.5822, -54.5822, -54.5822], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 17 	 1 	 N2 	 N2 	 7.979069221500284e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e17)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e17/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e17/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 17 || ,[' rho : 3.012197', ' ae : 53.281809', ' E : 1.381479'] ,|| total loss 39.024798 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5695], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8368], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5695], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8368], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 10 	 CH4O 	 CH4O 	 6.050760363200344e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2746, -0.4461, -0.4684, -0.4790, -0.4855, -0.4898, -0.4927, -0.4947,
        -0.4961, -0.4971, -0.4978, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7684e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.8992e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5368e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 6 	 H 	 H 	 1.0620169783893042e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0473], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4545], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7316], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0473], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4545], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7316], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 11 	 HF2 	 HF2 	 0.0009293782316538701

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9556, -109.3210, -109.4692, -109.4897, -109.4955, -109.4986,
        -109.5010, -109.5030, -109.5047, -109.5059, -109.5069, -109.5077,
        -109.5083, -109.5087, -109.5090, -109.5092, -109.5094, -109.5095,
        -109.5096, -109.5096, -109.5097, -109.5097, -109.5097, -109.5097,
        -109.5098], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3270e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4520, -54.5177, -54.5408, -54.5537, -54.5621, -54.5680, -54.5722,
        -54.5751, -54.5772, -54.5787, -54.5797, -54.5804, -54.5809, -54.5813,
        -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7673e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4184, -54.4875, -54.5192, -54.5380, -54.5508, -54.5599, -54.5664,
        -54.5710, -54.5743, -54.5766, -54.5783, -54.5794, -54.5802, -54.5808,
        -54.5812, -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9368e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5092, -109.5094, -109.5095, -109.5096, -109.5096, -109.5097,
        -109.5097, -109.5097, -109.5097, -109.5098], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 1 	 N2 	 N2 	 7.985798100500372e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3340, -107.3156, -107.2767, -107.2631, -107.2547, -107.2497,
        -107.2468, -107.2451, -107.2441, -107.2434, -107.2432, -107.2431,
        -107.2432, -107.2435, -107.2437, -107.2440, -107.2443, -107.2445,
        -107.2447, -107.2449, -107.2451, -107.2452, -107.2454, -107.2454,
        -107.2455], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3896e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4668, -7.4740, -7.4767, -7.4780, -7.4788, -7.4796, -7.4804, -7.4805,
        -7.4801, -7.4798, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9281e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5207e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6776, -99.6981, -99.7092, -99.7159, -99.7207, -99.7241, -99.7266,
        -99.7284, -99.7297, -99.7307, -99.7313, -99.7318, -99.7321, -99.7323,
        -99.7325, -99.7326, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329,
        -99.7329, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5537e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2440, -107.2443, -107.2445, -107.2447, -107.2449, -107.2451,
        -107.2452, -107.2454, -107.2454, -107.2455], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7326, -99.7327, -99.7328, -99.7328, -99.7328, -99.7329, -99.7329,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 2 	 FLi 	 LiF 	 0.008418174284729865

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4282, -54.4986, -54.5274, -54.5440, -54.5552, -54.5630, -54.5686,
        -54.5726, -54.5754, -54.5774, -54.5788, -54.5798, -54.5805, -54.5809,
        -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9237e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9237e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5820, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 8 	 N 	 N 	 1.198605682669973e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4730, -7.4760, -7.4776, -7.4785, -7.4792, -7.4801, -7.4806,
        -7.4803, -7.4799, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9279e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5328e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8562e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 7 	 Li 	 Li 	 7.971723277435972e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9986, -1.1050, -1.1326, -1.1467, -1.1557, -1.1617, -1.1659, -1.1688,
        -1.1708, -1.1723, -1.1733, -1.1739, -1.1744, -1.1748, -1.1750, -1.1752,
        -1.1753, -1.1754, -1.1754, -1.1755, -1.1755, -1.1755, -1.1755, -1.1755,
        -1.1756], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0263e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0526e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2291, -0.4323, -0.4607, -0.4741, -0.4822, -0.4875, -0.4911, -0.4936,
        -0.4953, -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7644e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2237e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5815e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2198, -0.4293, -0.4591, -0.4730, -0.4815, -0.4870, -0.4908, -0.4934,
        -0.4952, -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7644e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.4984e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1752, -1.1753, -1.1754, -1.1754, -1.1755, -1.1755, -1.1755, -1.1755,
        -1.1755, -1.1756], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 0 	 H2 	 H2 	 1.5646713391886596e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1581], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5225], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1581], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5225], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 9 	 HN2O 	 HON2 	 0.0009103999504221538

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7512, -37.7910, -37.8063, -37.8150, -37.8209, -37.8250, -37.8280,
        -37.8301, -37.8315, -37.8326, -37.8333, -37.8339, -37.8342, -37.8345,
        -37.8347, -37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2996e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2996e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8348, -37.8349, -37.8349, -37.8350, -37.8350, -37.8350, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 4 	 C 	 C 	 6.896114154767502e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1522, -93.5993, -93.4480, -93.3870, -93.3411, -93.3120, -93.2909,
        -93.2761, -93.2656, -93.2580, -93.2526, -93.2486, -93.2458, -93.2437,
        -93.2422, -93.2411, -93.2403, -93.2397, -93.2393, -93.2390, -93.2387,
        -93.2385, -93.2384, -93.2383, -93.2382], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8474e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7612, -37.7990, -37.8119, -37.8191, -37.8238, -37.8272, -37.8295,
        -37.8312, -37.8324, -37.8332, -37.8338, -37.8342, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1732e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4148, -54.4813, -54.5146, -54.5346, -54.5484, -54.5583, -54.5653,
        -54.5703, -54.5739, -54.5764, -54.5782, -54.5795, -54.5804, -54.5810,
        -54.5814, -54.5817, -54.5819, -54.5821, -54.5822, -54.5823, -54.5823,
        -54.5823, -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6752e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2578, -0.4412, -0.4657, -0.4772, -0.4843, -0.4889, -0.4921, -0.4943,
        -0.4958, -0.4969, -0.4976, -0.4981, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7636e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4904e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2411, -93.2403, -93.2397, -93.2393, -93.2390, -93.2387, -93.2385,
        -93.2384, -93.2383, -93.2382], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5817, -54.5819, -54.5821, -54.5822, -54.5823, -54.5823, -54.5823,
        -54.5824, -54.5824, -54.5824], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 18 	 3 	 CHN 	 CNH 	 0.007387370718139601

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6787, -99.6998, -99.7106, -99.7172, -99.7217, -99.7251, -99.7275,
        -99.7292, -99.7305, -99.7313, -99.7320, -99.7324, -99.7327, -99.7330,
        -99.7331, -99.7332, -99.7333, -99.7334, -99.7334, -99.7334, -99.7335,
        -99.7335, -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8369e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8369e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7332, -99.7333, -99.7334, -99.7334, -99.7334, -99.7335, -99.7335,
        -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 18 	 5 	 F 	 F 	 4.1810068362579405e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e18)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e18/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e18/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 18 || ,[' rho : 3.008090', ' ae : 53.019555', ' E : 1.383109'] ,|| total loss 38.834791 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6796, -99.7016, -99.7119, -99.7181, -99.7224, -99.7255, -99.7278,
        -99.7294, -99.7306, -99.7314, -99.7320, -99.7324, -99.7327, -99.7329,
        -99.7330, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7334, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8679e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8679e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333, -99.7334,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 5 	 F 	 F 	 6.716468725401794e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2734, -0.4458, -0.4682, -0.4789, -0.4854, -0.4897, -0.4926, -0.4946,
        -0.4960, -0.4970, -0.4977, -0.4982, -0.4985, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7593e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2874e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5187e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 6 	 H 	 H 	 1.165588327654305e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6377, -109.9222, -109.7681, -109.6851, -109.6316, -109.5951,
        -109.5696, -109.5518, -109.5394, -109.5306, -109.5245, -109.5203,
        -109.5173, -109.5152, -109.5137, -109.5127, -109.5120, -109.5115,
        -109.5111, -109.5109, -109.5107, -109.5106, -109.5105, -109.5104,
        -109.5104], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3213e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4143, -54.4805, -54.5140, -54.5341, -54.5480, -54.5578, -54.5649,
        -54.5700, -54.5736, -54.5761, -54.5779, -54.5792, -54.5801, -54.5807,
        -54.5811, -54.5814, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9494e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4151, -54.4820, -54.5151, -54.5349, -54.5486, -54.5583, -54.5652,
        -54.5702, -54.5737, -54.5762, -54.5780, -54.5792, -54.5801, -54.5807,
        -54.5812, -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5821, -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9390e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5127, -109.5120, -109.5115, -109.5111, -109.5109, -109.5107,
        -109.5106, -109.5105, -109.5104, -109.5104], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820, -54.5821,
        -54.5821, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 1 	 N2 	 N2 	 7.433410119833191e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0580, -93.5613, -93.4281, -93.3721, -93.3312, -93.3048, -93.2859,
        -93.2725, -93.2630, -93.2562, -93.2513, -93.2477, -93.2452, -93.2433,
        -93.2419, -93.2409, -93.2402, -93.2397, -93.2393, -93.2390, -93.2388,
        -93.2386, -93.2385, -93.2384, -93.2383], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8277e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7473, -37.7867, -37.8032, -37.8128, -37.8192, -37.8238, -37.8270,
        -37.8293, -37.8310, -37.8322, -37.8330, -37.8336, -37.8340, -37.8343,
        -37.8345, -37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4839e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4115, -54.4722, -54.5075, -54.5292, -54.5443, -54.5552, -54.5630,
        -54.5686, -54.5726, -54.5754, -54.5774, -54.5788, -54.5798, -54.5805,
        -54.5810, -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0841e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2662, -0.4437, -0.4670, -0.4781, -0.4849, -0.4893, -0.4924, -0.4945,
        -0.4959, -0.4969, -0.4977, -0.4981, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7570e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.5496e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2409, -93.2402, -93.2397, -93.2393, -93.2390, -93.2388, -93.2386,
        -93.2385, -93.2384, -93.2383], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 3 	 CHN 	 CNH 	 0.007332670291323173

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2236, -107.2815, -107.2440, -107.2412, -107.2386, -107.2374,
        -107.2374, -107.2379, -107.2387, -107.2395, -107.2403, -107.2410,
        -107.2417, -107.2423, -107.2429, -107.2434, -107.2439, -107.2443,
        -107.2447, -107.2450, -107.2453, -107.2455, -107.2457, -107.2458,
        -107.2459], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3964e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4660, -7.4728, -7.4759, -7.4776, -7.4785, -7.4792, -7.4801, -7.4806,
        -7.4804, -7.4799, -7.4797, -7.4797, -7.4797, -7.4797, -7.4798, -7.4798,
        -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9027e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5939e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6867, -99.7094, -99.7175, -99.7220, -99.7251, -99.7273, -99.7289,
        -99.7300, -99.7308, -99.7314, -99.7318, -99.7320, -99.7322, -99.7324,
        -99.7325, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7761e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2434, -107.2439, -107.2443, -107.2447, -107.2450, -107.2453,
        -107.2455, -107.2457, -107.2458, -107.2459], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4798, -7.4798, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799, -7.4799,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 2 	 FLi 	 LiF 	 0.008371983143430906

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1565], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7373], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5215], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1565], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7373], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5215], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 9 	 HN2O 	 HON2 	 0.0009164721686364627

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5684], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8365], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5684], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8365], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 10 	 CH4O 	 CH4O 	 6.109616032456389e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4676, -7.4746, -7.4771, -7.4783, -7.4790, -7.4798, -7.4805, -7.4804,
        -7.4799, -7.4797, -7.4796, -7.4796, -7.4796, -7.4797, -7.4797, -7.4798,
        -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4799,
        -7.4799], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8806e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3251e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7615e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4799, -7.4799], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 7 	 Li 	 Li 	 7.4890077836041e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0451], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 11 	 HF2 	 HF2 	 0.0009454193329318944

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0690, -1.1332, -1.1500, -1.1585, -1.1639, -1.1675, -1.1701, -1.1718,
        -1.1731, -1.1739, -1.1745, -1.1749, -1.1752, -1.1754, -1.1756, -1.1757,
        -1.1757, -1.1758, -1.1758, -1.1759, -1.1759, -1.1759, -1.1759, -1.1759,
        -1.1759], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0394e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0788e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3229, -0.4595, -0.4759, -0.4838, -0.4887, -0.4919, -0.4942, -0.4957,
        -0.4968, -0.4975, -0.4980, -0.4984, -0.4987, -0.4988, -0.4990, -0.4991,
        -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7434e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.9090e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5657e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2305, -0.4327, -0.4609, -0.4742, -0.4822, -0.4875, -0.4911, -0.4936,
        -0.4953, -0.4965, -0.4973, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7433e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0814e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1757, -1.1757, -1.1758, -1.1758, -1.1759, -1.1759, -1.1759, -1.1759,
        -1.1759, -1.1759], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 19 	 0 	 H2 	 H2 	 2.2267134827307326e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4425, -54.5104, -54.5354, -54.5494, -54.5587, -54.5652, -54.5698,
        -54.5731, -54.5754, -54.5770, -54.5782, -54.5790, -54.5795, -54.5799,
        -54.5802, -54.5804, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808,
        -54.5808, -54.5808, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2457e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2457e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5804, -54.5805, -54.5806, -54.5807, -54.5807, -54.5808, -54.5808,
        -54.5808, -54.5808, -54.5808], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 8 	 N 	 N 	 1.645156584138933e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7444, -37.7830, -37.8003, -37.8103, -37.8172, -37.8220, -37.8255,
        -37.8280, -37.8298, -37.8310, -37.8319, -37.8326, -37.8330, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6886e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.6886e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 19 	 4 	 C 	 C 	 9.795380696874348e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e19)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e19/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e19/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 19 || ,[' rho : 3.003879', ' ae : 52.882736', ' E : 1.488487'] ,|| total loss 38.722817 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3038, -107.3094, -107.2683, -107.2571, -107.2500, -107.2458,
        -107.2434, -107.2423, -107.2418, -107.2416, -107.2416, -107.2418,
        -107.2421, -107.2424, -107.2428, -107.2431, -107.2435, -107.2438,
        -107.2441, -107.2443, -107.2445, -107.2447, -107.2448, -107.2449,
        -107.2450], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3854e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4685, -7.4753, -7.4775, -7.4785, -7.4792, -7.4801, -7.4805, -7.4802,
        -7.4798, -7.4796, -7.4795, -7.4796, -7.4796, -7.4797, -7.4797, -7.4797,
        -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8600e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1432e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6759, -99.6950, -99.7064, -99.7134, -99.7183, -99.7220, -99.7246,
        -99.7265, -99.7279, -99.7289, -99.7296, -99.7301, -99.7305, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.1575e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2431, -107.2435, -107.2438, -107.2441, -107.2443, -107.2445,
        -107.2447, -107.2448, -107.2449, -107.2450], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4797, -7.4797, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798, -7.4798,
        -7.4798, -7.4798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7312, -99.7312, -99.7312, -99.7313, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 2 	 FLi 	 LiF 	 0.008313694969189805

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4476, -54.5142, -54.5381, -54.5513, -54.5602, -54.5663, -54.5706,
        -54.5737, -54.5759, -54.5774, -54.5785, -54.5792, -54.5798, -54.5801,
        -54.5804, -54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5809,
        -54.5810, -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0254e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0254e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5807, -54.5808, -54.5809, -54.5809, -54.5809, -54.5810,
        -54.5810, -54.5810, -54.5810], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 8 	 N 	 N 	 1.579813777547379e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4536], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7305], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0456], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4536], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7305], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 11 	 HF2 	 HF2 	 0.0009479933448339828

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0432, -1.1230, -1.1438, -1.1544, -1.1611, -1.1657, -1.1688, -1.1710,
        -1.1725, -1.1736, -1.1744, -1.1749, -1.1753, -1.1755, -1.1757, -1.1758,
        -1.1759, -1.1760, -1.1760, -1.1760, -1.1761, -1.1761, -1.1761, -1.1761,
        -1.1761], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0554e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1108e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3082, -0.4555, -0.4736, -0.4824, -0.4877, -0.4913, -0.4937, -0.4954,
        -0.4965, -0.4974, -0.4979, -0.4983, -0.4986, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7411e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2975e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5931e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2778, -0.4470, -0.4689, -0.4793, -0.4856, -0.4898, -0.4927, -0.4947,
        -0.4961, -0.4970, -0.4977, -0.4982, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7411e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.9540e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1758, -1.1759, -1.1760, -1.1760, -1.1760, -1.1761, -1.1761, -1.1761,
        -1.1761, -1.1761], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 0 	 H2 	 H2 	 2.523953926019578e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2125, -0.4268, -0.4577, -0.4721, -0.4808, -0.4865, -0.4904, -0.4931,
        -0.4950, -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7412e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7348e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4825e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 6 	 H 	 H 	 1.4065272640896508e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0715, -93.5671, -93.4313, -93.3747, -93.3331, -93.3064, -93.2872,
        -93.2738, -93.2642, -93.2573, -93.2523, -93.2488, -93.2462, -93.2443,
        -93.2429, -93.2419, -93.2412, -93.2407, -93.2403, -93.2400, -93.2398,
        -93.2396, -93.2395, -93.2394, -93.2394], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7809e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7813, -37.7992, -37.8097, -37.8169, -37.8220, -37.8257,
        -37.8283, -37.8302, -37.8315, -37.8325, -37.8331, -37.8336, -37.8339,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8515e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4114, -54.4712, -54.5067, -54.5285, -54.5437, -54.5546, -54.5625,
        -54.5681, -54.5721, -54.5750, -54.5770, -54.5784, -54.5794, -54.5801,
        -54.5806, -54.5809, -54.5812, -54.5813, -54.5814, -54.5815, -54.5816,
        -54.5816, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4962e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2471, -0.4379, -0.4638, -0.4760, -0.4834, -0.4883, -0.4917, -0.4940,
        -0.4956, -0.4967, -0.4974, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7414e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7092e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2419, -93.2412, -93.2407, -93.2403, -93.2400, -93.2398, -93.2396,
        -93.2395, -93.2394, -93.2394], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5812, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 3 	 CHN 	 CNH 	 0.007191618092681642

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6813, -99.7040, -99.7135, -99.7191, -99.7230, -99.7257, -99.7277,
        -99.7292, -99.7302, -99.7309, -99.7314, -99.7318, -99.7320, -99.7322,
        -99.7323, -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0768e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0768e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 5 	 F 	 F 	 3.7869783679201896e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1572], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5220], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1572], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5220], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 9 	 HN2O 	 HON2 	 0.0009212610337945024

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7575, -37.7961, -37.8098, -37.8174, -37.8225, -37.8260, -37.8286,
        -37.8303, -37.8316, -37.8325, -37.8331, -37.8336, -37.8339, -37.8341,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8127e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8127e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 4 	 C 	 C 	 8.065032987480213e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4663, -7.4729, -7.4761, -7.4778, -7.4787, -7.4794, -7.4802, -7.4808,
        -7.4805, -7.4801, -7.4798, -7.4798, -7.4798, -7.4799, -7.4799, -7.4799,
        -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8686e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1475e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7377e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4799, -7.4800, -7.4800, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 7 	 Li 	 Li 	 9.352853456722496e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6411, -109.9220, -109.7681, -109.6850, -109.6316, -109.5950,
        -109.5696, -109.5518, -109.5393, -109.5306, -109.5245, -109.5202,
        -109.5172, -109.5151, -109.5137, -109.5126, -109.5119, -109.5114,
        -109.5111, -109.5108, -109.5106, -109.5105, -109.5104, -109.5104,
        -109.5103], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3102e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4251, -54.4951, -54.5247, -54.5419, -54.5536, -54.5618, -54.5676,
        -54.5718, -54.5747, -54.5768, -54.5783, -54.5793, -54.5800, -54.5805,
        -54.5809, -54.5811, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3397e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4453, -54.5126, -54.5372, -54.5509, -54.5600, -54.5664, -54.5709,
        -54.5741, -54.5764, -54.5780, -54.5791, -54.5799, -54.5804, -54.5808,
        -54.5811, -54.5813, -54.5814, -54.5815, -54.5816, -54.5816, -54.5816,
        -54.5817, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2398e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5126, -109.5119, -109.5114, -109.5111, -109.5108, -109.5106,
        -109.5105, -109.5104, -109.5104, -109.5103], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5814, -54.5815, -54.5816, -54.5816, -54.5816, -54.5817,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 20 	 1 	 N2 	 N2 	 6.75730095407825e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5695], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5695], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8371], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 20 	 10 	 CH4O 	 CH4O 	 6.117273958236431e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e20)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e20/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e20/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 20 || ,[' rho : 2.993239', ' ae : 52.560431', ' E : 1.522465'] ,|| total loss 38.482232 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3166, -107.3154, -107.2740, -107.2619, -107.2542, -107.2498,
        -107.2471, -107.2457, -107.2449, -107.2446, -107.2444, -107.2445,
        -107.2447, -107.2451, -107.2454, -107.2457, -107.2461, -107.2464,
        -107.2466, -107.2469, -107.2471, -107.2472, -107.2474, -107.2475,
        -107.2476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4065e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4662, -7.4728, -7.4760, -7.4778, -7.4787, -7.4794, -7.4802, -7.4808,
        -7.4806, -7.4801, -7.4799, -7.4798, -7.4799, -7.4799, -7.4800, -7.4800,
        -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8643e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.3425e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6799, -99.7020, -99.7120, -99.7180, -99.7222, -99.7252, -99.7274,
        -99.7289, -99.7300, -99.7308, -99.7314, -99.7318, -99.7321, -99.7323,
        -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8880e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2457, -107.2461, -107.2464, -107.2466, -107.2469, -107.2471,
        -107.2472, -107.2474, -107.2475, -107.2476], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4801, -7.4801,
        -7.4801, -7.4801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 2 	 FLi 	 LiF 	 0.008241714166205309

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7529, -37.7923, -37.8071, -37.8155, -37.8211, -37.8251, -37.8279,
        -37.8299, -37.8313, -37.8323, -37.8331, -37.8336, -37.8339, -37.8342,
        -37.8343, -37.8345, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7162e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7162e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8345, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 4 	 C 	 C 	 7.81248280365706e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0480], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4548], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0480], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4548], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 11 	 HF2 	 HF2 	 0.000951539799344533

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1584], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5228], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1584], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5228], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 9 	 HN2O 	 HON2 	 0.0009216461354002159

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7190, -109.9101, -109.7637, -109.6824, -109.6299, -109.5940,
        -109.5690, -109.5516, -109.5394, -109.5308, -109.5249, -109.5207,
        -109.5178, -109.5157, -109.5143, -109.5133, -109.5126, -109.5121,
        -109.5118, -109.5115, -109.5114, -109.5112, -109.5112, -109.5111,
        -109.5111], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3082e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4410, -54.5094, -54.5350, -54.5494, -54.5590, -54.5658, -54.5705,
        -54.5739, -54.5763, -54.5780, -54.5792, -54.5800, -54.5806, -54.5810,
        -54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9817e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4179, -54.4860, -54.5180, -54.5371, -54.5501, -54.5593, -54.5659,
        -54.5706, -54.5740, -54.5764, -54.5780, -54.5792, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1221e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5133, -109.5126, -109.5121, -109.5118, -109.5115, -109.5114,
        -109.5112, -109.5112, -109.5111, -109.5111], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 1 	 N2 	 N2 	 6.564236069581288e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2705, -0.4448, -0.4677, -0.4785, -0.4851, -0.4894, -0.4924, -0.4945,
        -0.4959, -0.4969, -0.4976, -0.4981, -0.4984, -0.4987, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7333e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.4836e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4667e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 6 	 H 	 H 	 1.492659289938301e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6782, -99.6973, -99.7086, -99.7156, -99.7205, -99.7241, -99.7268,
        -99.7287, -99.7301, -99.7310, -99.7317, -99.7322, -99.7326, -99.7328,
        -99.7330, -99.7331, -99.7332, -99.7333, -99.7333, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2907e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2907e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7332, -99.7333, -99.7333, -99.7334, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 5 	 F 	 F 	 5.7833940442385636e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0148, -93.5445, -93.4201, -93.3668, -93.3284, -93.3035, -93.2857,
        -93.2732, -93.2643, -93.2579, -93.2533, -93.2500, -93.2476, -93.2459,
        -93.2446, -93.2437, -93.2430, -93.2425, -93.2422, -93.2419, -93.2417,
        -93.2416, -93.2414, -93.2414, -93.2413], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7452e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7503, -37.7898, -37.8055, -37.8144, -37.8204, -37.8246, -37.8276,
        -37.8298, -37.8313, -37.8324, -37.8332, -37.8337, -37.8341, -37.8344,
        -37.8345, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8350, -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4240e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4198, -54.4886, -54.5200, -54.5386, -54.5512, -54.5602, -54.5666,
        -54.5712, -54.5744, -54.5767, -54.5783, -54.5794, -54.5802, -54.5808,
        -54.5812, -54.5814, -54.5816, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9723e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3010, -0.4535, -0.4725, -0.4816, -0.4872, -0.4909, -0.4934, -0.4952,
        -0.4964, -0.4972, -0.4978, -0.4983, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7328e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.8186e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2437, -93.2430, -93.2425, -93.2422, -93.2419, -93.2417, -93.2416,
        -93.2414, -93.2414, -93.2413], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349, -37.8350,
        -37.8350, -37.8350, -37.8350], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5818, -54.5819, -54.5819, -54.5820, -54.5820,
        -54.5820, -54.5821, -54.5821], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 3 	 CHN 	 CNH 	 0.007086749221813547

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5704], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5704], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8375], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 10 	 CH4O 	 CH4O 	 6.129282021930203e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4529, -54.5181, -54.5410, -54.5536, -54.5620, -54.5679, -54.5720,
        -54.5749, -54.5770, -54.5784, -54.5794, -54.5801, -54.5806, -54.5810,
        -54.5812, -54.5814, -54.5815, -54.5816, -54.5817, -54.5817, -54.5817,
        -54.5818, -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0938e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0938e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5814, -54.5815, -54.5816, -54.5817, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 21 	 8 	 N 	 N 	 1.2832714506094009e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0466, -1.1247, -1.1451, -1.1555, -1.1620, -1.1665, -1.1696, -1.1717,
        -1.1732, -1.1743, -1.1750, -1.1755, -1.1759, -1.1761, -1.1763, -1.1764,
        -1.1765, -1.1766, -1.1766, -1.1766, -1.1767, -1.1767, -1.1767, -1.1767,
        -1.1767], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1069e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2137e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3411, -0.4641, -0.4785, -0.4855, -0.4898, -0.4927, -0.4947, -0.4960,
        -0.4970, -0.4977, -0.4981, -0.4984, -0.4987, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7285e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2502e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6708e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2672, -0.4438, -0.4671, -0.4781, -0.4848, -0.4893, -0.4923, -0.4944,
        -0.4958, -0.4969, -0.4976, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7284e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7959e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1764, -1.1765, -1.1766, -1.1766, -1.1766, -1.1767, -1.1767, -1.1767,
        -1.1767, -1.1767], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 0 	 H2 	 H2 	 3.6945298838746492e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4668, -7.4737, -7.4766, -7.4782, -7.4790, -7.4797, -7.4806, -7.4809,
        -7.4806, -7.4801, -7.4800, -7.4799, -7.4800, -7.4800, -7.4801, -7.4801,
        -7.4801, -7.4801, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4802], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8453e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.7765e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6911e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4801, -7.4801, -7.4801, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4802, -7.4802], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 21 	 7 	 Li 	 Li 	 1.0748916054883105e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e21)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e21/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e21/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 21 || ,[' rho : 2.990797', ' ae : 52.275933', ' E : 1.436349'] ,|| total loss 38.281945 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1584], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5228], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1584], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5228], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 9 	 HN2O 	 HON2 	 0.0009247920199505776

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4166, -54.4838, -54.5163, -54.5357, -54.5490, -54.5585, -54.5653,
        -54.5701, -54.5735, -54.5760, -54.5777, -54.5789, -54.5797, -54.5803,
        -54.5807, -54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4046e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4046e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5810, -54.5812, -54.5814, -54.5815, -54.5816, -54.5816, -54.5816,
        -54.5817, -54.5817, -54.5817], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 8 	 N 	 N 	 1.3251655784401055e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2651, -107.2992, -107.2584, -107.2517, -107.2469, -107.2444,
        -107.2432, -107.2429, -107.2430, -107.2434, -107.2438, -107.2443,
        -107.2448, -107.2453, -107.2459, -107.2464, -107.2468, -107.2472,
        -107.2475, -107.2478, -107.2481, -107.2483, -107.2485, -107.2486,
        -107.2487], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4178e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4689, -7.4757, -7.4780, -7.4790, -7.4797, -7.4805, -7.4810, -7.4807,
        -7.4802, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4801, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8393e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.9922e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6785, -99.6987, -99.7096, -99.7162, -99.7209, -99.7243, -99.7268,
        -99.7286, -99.7299, -99.7308, -99.7315, -99.7320, -99.7323, -99.7325,
        -99.7327, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1890e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2464, -107.2468, -107.2472, -107.2475, -107.2478, -107.2481,
        -107.2483, -107.2485, -107.2486, -107.2487], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4802,
        -7.4802, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 2 	 FLi 	 LiF 	 0.008184800701477302

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4700, -7.4764, -7.4784, -7.4792, -7.4800, -7.4808, -7.4810, -7.4805,
        -7.4801, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8404e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0956e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6813e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 7 	 Li 	 Li 	 1.1408118589191739e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1120, -93.5847, -93.4412, -93.3828, -93.3392, -93.3115, -93.2916,
        -93.2776, -93.2676, -93.2605, -93.2554, -93.2517, -93.2490, -93.2471,
        -93.2457, -93.2447, -93.2439, -93.2434, -93.2430, -93.2427, -93.2425,
        -93.2423, -93.2422, -93.2421, -93.2421], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7249e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7659, -37.8020, -37.8139, -37.8204, -37.8247, -37.8277, -37.8298,
        -37.8313, -37.8324, -37.8332, -37.8337, -37.8341, -37.8343, -37.8345,
        -37.8346, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4152e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4533, -54.5184, -54.5412, -54.5539, -54.5622, -54.5680, -54.5722,
        -54.5751, -54.5771, -54.5786, -54.5796, -54.5803, -54.5808, -54.5811,
        -54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9460e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2662, -0.4436, -0.4669, -0.4780, -0.4847, -0.4892, -0.4923, -0.4944,
        -0.4958, -0.4968, -0.4975, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7249e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9913e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2447, -93.2439, -93.2434, -93.2430, -93.2427, -93.2425, -93.2423,
        -93.2422, -93.2421, -93.2421], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5816, -54.5817, -54.5818, -54.5818, -54.5819, -54.5819, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 3 	 CHN 	 CNH 	 0.007009062598404147

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3423, -0.4644, -0.4787, -0.4856, -0.4899, -0.4927, -0.4947, -0.4961,
        -0.4970, -0.4977, -0.4981, -0.4984, -0.4987, -0.4988, -0.4989, -0.4990,
        -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992, -0.4992,
        -0.4992], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7230e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4877e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4460e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4992, -0.4992, -0.4992,
        -0.4992, -0.4992], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 6 	 H 	 H 	 1.6139844592714646e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0483], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4550], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0483], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4550], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7315], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 11 	 HF2 	 HF2 	 0.0009605325959399645

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7423, -37.7771, -37.7959, -37.8073, -37.8151, -37.8207, -37.8247,
        -37.8276, -37.8297, -37.8312, -37.8322, -37.8329, -37.8335, -37.8338,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8999e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8999e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 4 	 C 	 C 	 8.003057978854571e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6778, -99.6969, -99.7081, -99.7150, -99.7199, -99.7235, -99.7261,
        -99.7280, -99.7294, -99.7304, -99.7311, -99.7316, -99.7319, -99.7321,
        -99.7323, -99.7324, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0305e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0305e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 5 	 F 	 F 	 3.3135732990218487e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5699], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5699], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8375], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 10 	 CH4O 	 CH4O 	 6.143064933655172e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7619, -109.8857, -109.7513, -109.6740, -109.6239, -109.5897,
        -109.5659, -109.5493, -109.5377, -109.5297, -109.5240, -109.5201,
        -109.5173, -109.5154, -109.5140, -109.5131, -109.5124, -109.5119,
        -109.5116, -109.5114, -109.5112, -109.5111, -109.5111, -109.5110,
        -109.5110], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3006e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4123, -54.4728, -54.5079, -54.5293, -54.5443, -54.5550, -54.5627,
        -54.5682, -54.5722, -54.5750, -54.5769, -54.5783, -54.5793, -54.5800,
        -54.5804, -54.5808, -54.5810, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6446e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4187, -54.4869, -54.5186, -54.5374, -54.5502, -54.5593, -54.5658,
        -54.5705, -54.5737, -54.5761, -54.5777, -54.5789, -54.5797, -54.5802,
        -54.5806, -54.5809, -54.5811, -54.5813, -54.5814, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5815, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5382e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5131, -109.5124, -109.5119, -109.5116, -109.5114, -109.5112,
        -109.5111, -109.5111, -109.5110, -109.5110], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5813, -54.5814, -54.5814, -54.5815, -54.5815,
        -54.5815, -54.5815, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 22 	 1 	 N2 	 N2 	 6.0553323607462415e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0021, -1.1071, -1.1345, -1.1485, -1.1574, -1.1634, -1.1675, -1.1704,
        -1.1724, -1.1739, -1.1748, -1.1755, -1.1760, -1.1764, -1.1766, -1.1768,
        -1.1769, -1.1770, -1.1770, -1.1771, -1.1771, -1.1771, -1.1771, -1.1771,
        -1.1771], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1471e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2942e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2647, -0.4431, -0.4666, -0.4778, -0.4846, -0.4891, -0.4922, -0.4943,
        -0.4958, -0.4968, -0.4975, -0.4980, -0.4983, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7161e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4743e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7265e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2774, -0.4468, -0.4687, -0.4791, -0.4855, -0.4897, -0.4926, -0.4946,
        -0.4960, -0.4969, -0.4976, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7161e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.1592e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1768, -1.1769, -1.1770, -1.1770, -1.1771, -1.1771, -1.1771, -1.1771,
        -1.1771, -1.1771], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 22 	 0 	 H2 	 H2 	 4.733058565821021e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e22)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e22/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e22/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 22 || ,[' rho : 2.988033', ' ae : 52.065903', ' E : 1.485774'] ,|| total loss 38.127607 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3304, -107.3220, -107.2799, -107.2664, -107.2580, -107.2530,
        -107.2499, -107.2481, -107.2471, -107.2465, -107.2462, -107.2462,
        -107.2464, -107.2467, -107.2470, -107.2473, -107.2476, -107.2479,
        -107.2482, -107.2484, -107.2486, -107.2488, -107.2489, -107.2490,
        -107.2491], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4187e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4664, -7.4724, -7.4758, -7.4777, -7.4788, -7.4794, -7.4802, -7.4809,
        -7.4809, -7.4804, -7.4801, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802,
        -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8073e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1934e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6812, -99.7035, -99.7132, -99.7189, -99.7228, -99.7256, -99.7277,
        -99.7291, -99.7302, -99.7309, -99.7314, -99.7318, -99.7321, -99.7323,
        -99.7324, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9624e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2473, -107.2476, -107.2479, -107.2482, -107.2484, -107.2486,
        -107.2488, -107.2489, -107.2490, -107.2491], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 2 	 FLi 	 LiF 	 0.00812174518422706

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1581], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5227], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1581], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5227], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 9 	 HN2O 	 HON2 	 0.0009296200644263208

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4669, -7.4735, -7.4766, -7.4782, -7.4791, -7.4797, -7.4806, -7.4810,
        -7.4807, -7.4802, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802,
        -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7980e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.0606e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5965e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 7 	 Li 	 Li 	 1.1388172120686749e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6892, -99.7109, -99.7185, -99.7228, -99.7256, -99.7277, -99.7291,
        -99.7301, -99.7308, -99.7314, -99.7317, -99.7320, -99.7322, -99.7323,
        -99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0803e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0803e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7324, -99.7325, -99.7325, -99.7325, -99.7326, -99.7326, -99.7326,
        -99.7326, -99.7326, -99.7326], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 5 	 F 	 F 	 4.070878209539408e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0478], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4547], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7312], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0478], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4547], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7312], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 11 	 HF2 	 HF2 	 0.0009666324911382683

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5697], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5697], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8374], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 10 	 CH4O 	 CH4O 	 6.174684371379698e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9883, -1.1016, -1.1311, -1.1463, -1.1559, -1.1624, -1.1668, -1.1700,
        -1.1722, -1.1737, -1.1747, -1.1755, -1.1760, -1.1764, -1.1766, -1.1768,
        -1.1769, -1.1770, -1.1771, -1.1771, -1.1772, -1.1772, -1.1772, -1.1772,
        -1.1772], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1487e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2973e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2749, -0.4460, -0.4683, -0.4789, -0.4853, -0.4896, -0.4925, -0.4945,
        -0.4959, -0.4969, -0.4976, -0.4980, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7101e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5190e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7175e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2267, -0.4313, -0.4601, -0.4736, -0.4818, -0.4872, -0.4908, -0.4933,
        -0.4951, -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7100e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8544e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1768, -1.1769, -1.1770, -1.1771, -1.1771, -1.1772, -1.1772, -1.1772,
        -1.1772, -1.1772], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 0 	 H2 	 H2 	 5.022189597870063e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4130, -54.4758, -54.5101, -54.5310, -54.5454, -54.5558, -54.5632,
        -54.5685, -54.5723, -54.5750, -54.5768, -54.5782, -54.5791, -54.5798,
        -54.5802, -54.5806, -54.5808, -54.5809, -54.5811, -54.5811, -54.5812,
        -54.5812, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9222e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9222e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5808, -54.5809, -54.5811, -54.5811, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 8 	 N 	 N 	 1.4731907177323742e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8501, -109.7617, -109.6874, -109.6314, -109.5941, -109.5685,
        -109.5509, -109.5386, -109.5302, -109.5243, -109.5202, -109.5174,
        -109.5154, -109.5140, -109.5131, -109.5124, -109.5120, -109.5116,
        -109.5114, -109.5112, -109.5111, -109.5111, -109.5110, -109.5110,
        -109.5109], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2962e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4137, -54.4776, -54.5115, -54.5320, -54.5462, -54.5564, -54.5637,
        -54.5689, -54.5726, -54.5752, -54.5770, -54.5783, -54.5793, -54.5799,
        -54.5804, -54.5807, -54.5809, -54.5811, -54.5812, -54.5812, -54.5813,
        -54.5813, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7879e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4284, -54.4981, -54.5268, -54.5434, -54.5545, -54.5624, -54.5680,
        -54.5719, -54.5747, -54.5767, -54.5781, -54.5791, -54.5798, -54.5803,
        -54.5806, -54.5809, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6445e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5124, -109.5120, -109.5116, -109.5114, -109.5112, -109.5111,
        -109.5111, -109.5110, -109.5110, -109.5109], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5810, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 1 	 N2 	 N2 	 5.8555964267945505e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2954, -0.4519, -0.4716, -0.4810, -0.4867, -0.4906, -0.4932, -0.4950,
        -0.4962, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7095e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0660e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4190e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 6 	 H 	 H 	 1.8267286086192337e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0662, -93.5664, -93.4318, -93.3759, -93.3347, -93.3084, -93.2896,
        -93.2763, -93.2669, -93.2602, -93.2553, -93.2519, -93.2494, -93.2475,
        -93.2462, -93.2453, -93.2446, -93.2441, -93.2437, -93.2434, -93.2432,
        -93.2431, -93.2430, -93.2429, -93.2428], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6816e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7444, -37.7819, -37.7995, -37.8099, -37.8170, -37.8221, -37.8257,
        -37.8283, -37.8301, -37.8315, -37.8324, -37.8330, -37.8335, -37.8338,
        -37.8341, -37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9663e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4232, -54.4925, -54.5227, -54.5404, -54.5524, -54.5609, -54.5669,
        -54.5712, -54.5743, -54.5764, -54.5780, -54.5790, -54.5798, -54.5803,
        -54.5807, -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5407e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2287, -0.4319, -0.4605, -0.4738, -0.4819, -0.4873, -0.4909, -0.4934,
        -0.4951, -0.4963, -0.4972, -0.4978, -0.4982, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7093e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8254e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2453, -93.2446, -93.2441, -93.2437, -93.2434, -93.2432, -93.2431,
        -93.2430, -93.2429, -93.2428], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8342, -37.8343, -37.8344, -37.8345, -37.8345, -37.8345, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 23 	 3 	 CHN 	 CNH 	 0.006881385458221323

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7566, -37.7952, -37.8091, -37.8169, -37.8221, -37.8257, -37.8283,
        -37.8301, -37.8314, -37.8323, -37.8330, -37.8334, -37.8337, -37.8340,
        -37.8341, -37.8342, -37.8343, -37.8344, -37.8344, -37.8344, -37.8345,
        -37.8345, -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9955e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9955e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8342, -37.8343, -37.8344, -37.8344, -37.8344, -37.8345, -37.8345,
        -37.8345, -37.8345, -37.8345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 23 	 4 	 C 	 C 	 8.45149472115928e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e23)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e23/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e23/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 23 || ,[' rho : 2.979904', ' ae : 51.769377', ' E : 1.545138'] ,|| total loss 37.906295 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4128, -54.4748, -54.5093, -54.5304, -54.5450, -54.5555, -54.5630,
        -54.5684, -54.5722, -54.5749, -54.5768, -54.5782, -54.5791, -54.5798,
        -54.5803, -54.5806, -54.5808, -54.5810, -54.5811, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8697e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8697e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5806, -54.5808, -54.5810, -54.5811, -54.5812, -54.5812, -54.5813,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 8 	 N 	 N 	 1.4540638511332672e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3092, -107.3176, -107.2743, -107.2628, -107.2554, -107.2510,
        -107.2484, -107.2471, -107.2464, -107.2462, -107.2462, -107.2464,
        -107.2467, -107.2471, -107.2475, -107.2479, -107.2482, -107.2486,
        -107.2489, -107.2491, -107.2494, -107.2495, -107.2497, -107.2498,
        -107.2499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4299e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4695, -7.4761, -7.4783, -7.4792, -7.4798, -7.4807, -7.4810, -7.4806,
        -7.4802, -7.4800, -7.4800, -7.4800, -7.4801, -7.4801, -7.4802, -7.4802,
        -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7706e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1560e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6900, -99.7116, -99.7191, -99.7232, -99.7261, -99.7280, -99.7294,
        -99.7304, -99.7312, -99.7317, -99.7320, -99.7323, -99.7324, -99.7326,
        -99.7327, -99.7327, -99.7328, -99.7328, -99.7328, -99.7328, -99.7328,
        -99.7328, -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3522e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2479, -107.2482, -107.2486, -107.2489, -107.2491, -107.2494,
        -107.2495, -107.2497, -107.2498, -107.2499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4803, -7.4803,
        -7.4803, -7.4803], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7327, -99.7328, -99.7328, -99.7328, -99.7328, -99.7328, -99.7328,
        -99.7329, -99.7329, -99.7329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 2 	 FLi 	 LiF 	 0.008065753601916293

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5704], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5704], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8377], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 10 	 CH4O 	 CH4O 	 6.18506830754149e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7519, -37.7912, -37.8063, -37.8149, -37.8207, -37.8248, -37.8277,
        -37.8297, -37.8312, -37.8322, -37.8330, -37.8335, -37.8339, -37.8341,
        -37.8343, -37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7508e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7508e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8344, -37.8345, -37.8346, -37.8346, -37.8346, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 4 	 C 	 C 	 7.873186344015006e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1600], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7382], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1600], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7382], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5238], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 9 	 HN2O 	 HON2 	 0.0009338713823807532

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8494, -93.4742, -93.3834, -93.3401, -93.3112, -93.2920, -93.2783,
        -93.2687, -93.2619, -93.2570, -93.2535, -93.2509, -93.2491, -93.2478,
        -93.2468, -93.2461, -93.2456, -93.2452, -93.2449, -93.2447, -93.2446,
        -93.2445, -93.2444, -93.2443, -93.2443], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6618e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7542, -37.7933, -37.8079, -37.8161, -37.8216, -37.8255, -37.8283,
        -37.8302, -37.8316, -37.8326, -37.8333, -37.8338, -37.8341, -37.8344,
        -37.8345, -37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4522e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4147, -54.4787, -54.5125, -54.5329, -54.5470, -54.5571, -54.5643,
        -54.5695, -54.5732, -54.5758, -54.5776, -54.5789, -54.5798, -54.5805,
        -54.5809, -54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1793e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3195, -0.4584, -0.4753, -0.4834, -0.4883, -0.4917, -0.4939, -0.4955,
        -0.4966, -0.4973, -0.4979, -0.4983, -0.4985, -0.4987, -0.4988, -0.4989,
        -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7062e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7271e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2461, -93.2456, -93.2452, -93.2449, -93.2447, -93.2446, -93.2445,
        -93.2444, -93.2443, -93.2443], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8347, -37.8348, -37.8348, -37.8349, -37.8349, -37.8349, -37.8349,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5814, -54.5816, -54.5817, -54.5818, -54.5818, -54.5819,
        -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 3 	 CHN 	 CNH 	 0.006827021097041977

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5045, -109.9014, -109.7539, -109.6760, -109.6259, -109.5917,
        -109.5679, -109.5512, -109.5395, -109.5313, -109.5256, -109.5216,
        -109.5188, -109.5168, -109.5154, -109.5145, -109.5138, -109.5133,
        -109.5130, -109.5128, -109.5126, -109.5125, -109.5124, -109.5123,
        -109.5123], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2944e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4488, -54.5151, -54.5389, -54.5522, -54.5610, -54.5672, -54.5715,
        -54.5746, -54.5768, -54.5783, -54.5794, -54.5801, -54.5807, -54.5810,
        -54.5813, -54.5815, -54.5816, -54.5817, -54.5818, -54.5818, -54.5818,
        -54.5819, -54.5819, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0152e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4133, -54.4743, -54.5091, -54.5303, -54.5451, -54.5557, -54.5633,
        -54.5688, -54.5726, -54.5754, -54.5773, -54.5787, -54.5796, -54.5803,
        -54.5808, -54.5811, -54.5814, -54.5815, -54.5816, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2715e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5145, -109.5138, -109.5133, -109.5130, -109.5128, -109.5126,
        -109.5125, -109.5124, -109.5123, -109.5123], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5811, -54.5814, -54.5815, -54.5816, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5819, -54.5819], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 1 	 N2 	 N2 	 5.530965697394443e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4695, -7.4762, -7.4784, -7.4793, -7.4800, -7.4808, -7.4812, -7.4808,
        -7.4804, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803, -7.4804,
        -7.4804, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7639e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0316e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5284e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 7 	 Li 	 Li 	 1.35022837477228e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0501, -1.1266, -1.1467, -1.1569, -1.1633, -1.1677, -1.1707, -1.1728,
        -1.1743, -1.1753, -1.1761, -1.1766, -1.1769, -1.1772, -1.1773, -1.1775,
        -1.1775, -1.1776, -1.1776, -1.1777, -1.1777, -1.1777, -1.1777, -1.1777,
        -1.1777], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2028e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4057e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2770, -0.4466, -0.4686, -0.4791, -0.4854, -0.4896, -0.4925, -0.4945,
        -0.4959, -0.4969, -0.4975, -0.4980, -0.4983, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7015e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.9156e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8088e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2346, -0.4338, -0.4615, -0.4745, -0.4824, -0.4875, -0.4911, -0.4935,
        -0.4952, -0.4964, -0.4972, -0.4978, -0.4982, -0.4984, -0.4986, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7015e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0074e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1775, -1.1775, -1.1776, -1.1776, -1.1777, -1.1777, -1.1777, -1.1777,
        -1.1777, -1.1777], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 0 	 H2 	 H2 	 6.347490680508054e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6822, -99.7045, -99.7140, -99.7196, -99.7235, -99.7262, -99.7282,
        -99.7297, -99.7307, -99.7314, -99.7319, -99.7323, -99.7325, -99.7327,
        -99.7328, -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9987e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9987e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 24 	 5 	 F 	 F 	 1.38733529112215e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7316], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0489], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4553], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7316], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 11 	 HF2 	 HF2 	 0.0009757154491033023

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2297, -0.4322, -0.4606, -0.4739, -0.4820, -0.4873, -0.4909, -0.4934,
        -0.4951, -0.4963, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6972e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0460e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3944e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 24 	 6 	 H 	 H 	 2.0452728614363637e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e24)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e24/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e24/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 24 || ,[' rho : 2.977766', ' ae : 51.597989', ' E : 1.479144'] ,|| total loss 37.778540 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6781, -99.6964, -99.7076, -99.7147, -99.7197, -99.7233, -99.7260,
        -99.7279, -99.7293, -99.7303, -99.7310, -99.7316, -99.7319, -99.7322,
        -99.7323, -99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9778e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9778e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7325, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 5 	 F 	 F 	 3.1722701253038006e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2433, -107.2948, -107.2531, -107.2488, -107.2452, -107.2434,
        -107.2430, -107.2430, -107.2434, -107.2440, -107.2446, -107.2452,
        -107.2459, -107.2466, -107.2472, -107.2478, -107.2483, -107.2487,
        -107.2491, -107.2495, -107.2498, -107.2500, -107.2502, -107.2504,
        -107.2505], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4364e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4678, -7.4745, -7.4774, -7.4788, -7.4795, -7.4802, -7.4810, -7.4811,
        -7.4807, -7.4803, -7.4801, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803,
        -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7307e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.8375e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6784, -99.6981, -99.7090, -99.7157, -99.7204, -99.7239, -99.7264,
        -99.7282, -99.7295, -99.7304, -99.7311, -99.7316, -99.7319, -99.7321,
        -99.7323, -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0711e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2478, -107.2483, -107.2487, -107.2491, -107.2495, -107.2498,
        -107.2500, -107.2502, -107.2504, -107.2505], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4803, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804, -7.4804], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 2 	 FLi 	 LiF 	 0.00801772313827411

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5702], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5702], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8377], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 10 	 CH4O 	 CH4O 	 6.198562566272565e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4146, -54.4791, -54.5126, -54.5328, -54.5468, -54.5567, -54.5639,
        -54.5690, -54.5726, -54.5752, -54.5770, -54.5782, -54.5791, -54.5798,
        -54.5802, -54.5805, -54.5807, -54.5809, -54.5810, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9665e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9665e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5805, -54.5807, -54.5809, -54.5810, -54.5811, -54.5811, -54.5812,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 8 	 N 	 N 	 1.4947765393482774e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9898, -1.1025, -1.1320, -1.1471, -1.1566, -1.1631, -1.1676, -1.1707,
        -1.1729, -1.1744, -1.1755, -1.1762, -1.1767, -1.1771, -1.1773, -1.1775,
        -1.1776, -1.1777, -1.1778, -1.1778, -1.1779, -1.1779, -1.1779, -1.1779,
        -1.1779], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2221e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4443e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2115, -0.4262, -0.4573, -0.4718, -0.4805, -0.4863, -0.4902, -0.4929,
        -0.4948, -0.4961, -0.4970, -0.4976, -0.4980, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6932e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1279e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8307e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3092, -0.4556, -0.4736, -0.4823, -0.4876, -0.4911, -0.4935, -0.4952,
        -0.4964, -0.4972, -0.4978, -0.4982, -0.4984, -0.4986, -0.4988, -0.4989,
        -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6933e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6122e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1775, -1.1776, -1.1777, -1.1778, -1.1778, -1.1779, -1.1779, -1.1779,
        -1.1779, -1.1779], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 0 	 H2 	 H2 	 6.953497451383374e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2756, -0.4462, -0.4683, -0.4789, -0.4853, -0.4895, -0.4925, -0.4945,
        -0.4958, -0.4968, -0.4975, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6930e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.4014e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3862e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 6 	 H 	 H 	 2.0920432769152267e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7465, -37.7849, -37.8018, -37.8116, -37.8183, -37.8230, -37.8264,
        -37.8288, -37.8305, -37.8317, -37.8326, -37.8332, -37.8336, -37.8339,
        -37.8341, -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8877e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8877e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 4 	 C 	 C 	 8.089505703210236e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9019, -109.6035, -109.6084, -109.5798, -109.5584, -109.5436,
        -109.5336, -109.5268, -109.5222, -109.5190, -109.5169, -109.5154,
        -109.5144, -109.5137, -109.5132, -109.5129, -109.5127, -109.5125,
        -109.5124, -109.5123, -109.5123, -109.5122, -109.5122, -109.5122,
        -109.5122], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2893e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4172, -54.4837, -54.5162, -54.5356, -54.5489, -54.5584, -54.5652,
        -54.5700, -54.5734, -54.5759, -54.5776, -54.5788, -54.5796, -54.5802,
        -54.5807, -54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4889e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4417, -54.5096, -54.5350, -54.5493, -54.5589, -54.5656, -54.5703,
        -54.5737, -54.5760, -54.5777, -54.5789, -54.5797, -54.5803, -54.5807,
        -54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816,
        -54.5816, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3277e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5129, -109.5127, -109.5125, -109.5124, -109.5123, -109.5123,
        -109.5122, -109.5122, -109.5122, -109.5122], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5816, -54.5816,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 25 	 1 	 N2 	 N2 	 5.301288321374422e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1605], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7383], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5242], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1605], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7383], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5242], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 9 	 HN2O 	 HON2 	 0.0009392826372369615

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1512, -93.6020, -93.4509, -93.3909, -93.3454, -93.3169, -93.2963,
        -93.2819, -93.2716, -93.2643, -93.2591, -93.2553, -93.2526, -93.2506,
        -93.2492, -93.2482, -93.2474, -93.2469, -93.2465, -93.2462, -93.2460,
        -93.2458, -93.2457, -93.2457, -93.2456], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6314e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7437, -37.7795, -37.7978, -37.8087, -37.8162, -37.8215, -37.8254,
        -37.8282, -37.8301, -37.8315, -37.8325, -37.8332, -37.8337, -37.8341,
        -37.8343, -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6316e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4544, -54.5189, -54.5416, -54.5541, -54.5623, -54.5681, -54.5721,
        -54.5750, -54.5770, -54.5785, -54.5795, -54.5802, -54.5807, -54.5810,
        -54.5813, -54.5814, -54.5816, -54.5816, -54.5817, -54.5817, -54.5818,
        -54.5818, -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0774e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2144, -0.4272, -0.4578, -0.4721, -0.4808, -0.4865, -0.4903, -0.4930,
        -0.4948, -0.4961, -0.4970, -0.4976, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4991,
        -0.4991], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6931e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1170e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2482, -93.2474, -93.2469, -93.2465, -93.2462, -93.2460, -93.2458,
        -93.2457, -93.2457, -93.2456], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5814, -54.5816, -54.5816, -54.5817, -54.5817, -54.5818, -54.5818,
        -54.5818, -54.5818, -54.5818], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4991, -0.4991], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 3 	 CHN 	 CNH 	 0.006701502045079284

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4671, -7.4730, -7.4764, -7.4782, -7.4792, -7.4798, -7.4806, -7.4812,
        -7.4811, -7.4806, -7.4803, -7.4802, -7.4803, -7.4803, -7.4804, -7.4804,
        -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7210e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.3325e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4426e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 7 	 Li 	 Li 	 1.42421917257423e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0498], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4557], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7319], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0498], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4557], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7319], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 25 	 11 	 HF2 	 HF2 	 0.0009806566189573586

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e25)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e25/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e25/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 25 || ,[' rho : 2.972332', ' ae : 51.324217', ' E : 1.511246'] ,|| total loss 37.577270 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0083, -1.1101, -1.1367, -1.1503, -1.1589, -1.1648, -1.1688, -1.1716,
        -1.1736, -1.1750, -1.1759, -1.1766, -1.1771, -1.1774, -1.1776, -1.1778,
        -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2441e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4883e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2454, -0.4371, -0.4633, -0.4756, -0.4831, -0.4880, -0.4914, -0.4937,
        -0.4953, -0.4965, -0.4972, -0.4978, -0.4982, -0.4984, -0.4986, -0.4988,
        -0.4988, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6883e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0468e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8650e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2364, -0.4343, -0.4617, -0.4746, -0.4824, -0.4876, -0.4911, -0.4935,
        -0.4952, -0.4963, -0.4972, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6883e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0737e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1778, -1.1779, -1.1780, -1.1780, -1.1781, -1.1781, -1.1781, -1.1781,
        -1.1781, -1.1781], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 0 	 H2 	 H2 	 7.65624083421705e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1594], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5235], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1594], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5235], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 9 	 HN2O 	 HON2 	 0.0009428803818675115

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2953, -0.4518, -0.4715, -0.4809, -0.4866, -0.4905, -0.4931, -0.4949,
        -0.4961, -0.4970, -0.4976, -0.4980, -0.4983, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6853e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3398e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3707e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 6 	 H 	 H 	 2.2074901944339835e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4673, -7.4736, -7.4768, -7.4784, -7.4793, -7.4799, -7.4807, -7.4812,
        -7.4809, -7.4804, -7.4802, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803,
        -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6858e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.9341e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3721e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4803, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 7 	 Li 	 Li 	 1.3341965251380268e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4409, -54.5088, -54.5343, -54.5486, -54.5582, -54.5649, -54.5696,
        -54.5730, -54.5753, -54.5770, -54.5782, -54.5790, -54.5796, -54.5800,
        -54.5803, -54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5809,
        -54.5809, -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1118e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1118e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5805, -54.5806, -54.5807, -54.5808, -54.5808, -54.5809, -54.5809,
        -54.5809, -54.5809, -54.5809], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 8 	 N 	 N 	 1.5990336858309097e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7476, -37.7863, -37.8027, -37.8122, -37.8186, -37.8231, -37.8264,
        -37.8287, -37.8303, -37.8315, -37.8323, -37.8329, -37.8333, -37.8336,
        -37.8338, -37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342,
        -37.8343, -37.8343, -37.8343, -37.8343], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3273e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3273e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8340, -37.8341, -37.8341, -37.8342, -37.8342, -37.8342, -37.8343,
        -37.8343, -37.8343, -37.8343], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 4 	 C 	 C 	 9.058711677938186e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2655, -107.3041, -107.2607, -107.2542, -107.2494, -107.2467,
        -107.2456, -107.2451, -107.2451, -107.2453, -107.2458, -107.2463,
        -107.2468, -107.2474, -107.2480, -107.2486, -107.2491, -107.2495,
        -107.2499, -107.2502, -107.2505, -107.2507, -107.2509, -107.2511,
        -107.2512], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4435e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4770, -7.4789, -7.4796, -7.4803, -7.4811, -7.4812, -7.4807,
        -7.4803, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4804, -7.4804,
        -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6761e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1412e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6830, -99.7053, -99.7144, -99.7198, -99.7234, -99.7260, -99.7279,
        -99.7293, -99.7302, -99.7309, -99.7314, -99.7317, -99.7320, -99.7321,
        -99.7323, -99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3484e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2486, -107.2491, -107.2495, -107.2499, -107.2502, -107.2505,
        -107.2507, -107.2509, -107.2511, -107.2512], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 2 	 FLi 	 LiF 	 0.007947838936101029

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6890, -99.7107, -99.7184, -99.7227, -99.7256, -99.7277, -99.7291,
        -99.7302, -99.7309, -99.7315, -99.7318, -99.7321, -99.7323, -99.7324,
        -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7266e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7266e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7326, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 5 	 F 	 F 	 3.313773988467068e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5708], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7377], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5708], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7377], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8381], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 10 	 CH4O 	 CH4O 	 6.223246950306445e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0496], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4556], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0496], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4556], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7318], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 11 	 HF2 	 HF2 	 0.000985926872056137

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8338, -109.7978, -109.7065, -109.6446, -109.6037, -109.5758,
        -109.5564, -109.5430, -109.5337, -109.5272, -109.5227, -109.5196,
        -109.5174, -109.5159, -109.5148, -109.5141, -109.5136, -109.5132,
        -109.5130, -109.5128, -109.5127, -109.5126, -109.5125, -109.5125,
        -109.5124], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2855e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4274, -54.4967, -54.5258, -54.5426, -54.5540, -54.5620, -54.5678,
        -54.5718, -54.5747, -54.5767, -54.5782, -54.5792, -54.5799, -54.5804,
        -54.5807, -54.5810, -54.5811, -54.5812, -54.5813, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5307e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4371, -54.5057, -54.5323, -54.5473, -54.5574, -54.5645, -54.5695,
        -54.5731, -54.5756, -54.5773, -54.5786, -54.5795, -54.5801, -54.5805,
        -54.5808, -54.5810, -54.5812, -54.5813, -54.5814, -54.5814, -54.5814,
        -54.5815, -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4767e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5141, -109.5136, -109.5132, -109.5130, -109.5128, -109.5127,
        -109.5126, -109.5125, -109.5125, -109.5124], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5810, -54.5812, -54.5813, -54.5814, -54.5814, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 26 	 1 	 N2 	 N2 	 4.945448021546717e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9197, -93.5058, -93.4010, -93.3537, -93.3209, -93.2994, -93.2841,
        -93.2733, -93.2657, -93.2603, -93.2564, -93.2536, -93.2515, -93.2501,
        -93.2490, -93.2482, -93.2477, -93.2473, -93.2470, -93.2468, -93.2466,
        -93.2465, -93.2464, -93.2463, -93.2463], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6008e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7673, -37.8027, -37.8143, -37.8206, -37.8248, -37.8277, -37.8298,
        -37.8312, -37.8323, -37.8330, -37.8335, -37.8339, -37.8341, -37.8343,
        -37.8344, -37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6721e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4554, -54.5195, -54.5419, -54.5542, -54.5624, -54.5680, -54.5720,
        -54.5749, -54.5769, -54.5783, -54.5793, -54.5800, -54.5804, -54.5808,
        -54.5810, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5815,
        -54.5815, -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3354e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3006, -0.4532, -0.4723, -0.4814, -0.4870, -0.4907, -0.4932, -0.4950,
        -0.4962, -0.4971, -0.4977, -0.4981, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6823e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3847e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2482, -93.2477, -93.2473, -93.2470, -93.2468, -93.2466, -93.2465,
        -93.2464, -93.2463, -93.2463], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8345, -37.8346, -37.8346, -37.8347, -37.8347, -37.8347, -37.8347,
        -37.8347, -37.8347, -37.8347], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5812, -54.5813, -54.5814, -54.5815, -54.5815, -54.5815, -54.5815,
        -54.5816, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 26 	 3 	 CHN 	 CNH 	 0.006616040654660581

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e26)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e26/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e26/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 26 || ,[' rho : 2.967151', ' ae : 51.077393', ' E : 1.540248'] ,|| total loss 37.395496 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9399, -93.5144, -93.4055, -93.3571, -93.3231, -93.3009, -93.2852,
        -93.2741, -93.2662, -93.2606, -93.2566, -93.2537, -93.2516, -93.2501,
        -93.2490, -93.2482, -93.2477, -93.2472, -93.2469, -93.2467, -93.2465,
        -93.2464, -93.2463, -93.2463, -93.2462], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5977e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7610, -37.7985, -37.8114, -37.8185, -37.8233, -37.8266, -37.8290,
        -37.8306, -37.8318, -37.8327, -37.8332, -37.8337, -37.8340, -37.8342,
        -37.8343, -37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8085e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4351, -54.5040, -54.5310, -54.5464, -54.5567, -54.5640, -54.5691,
        -54.5728, -54.5753, -54.5772, -54.5784, -54.5793, -54.5800, -54.5804,
        -54.5807, -54.5809, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5663e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3299, -0.4611, -0.4767, -0.4843, -0.4889, -0.4920, -0.4942, -0.4956,
        -0.4967, -0.4974, -0.4979, -0.4982, -0.4985, -0.4986, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6806e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8643e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2482, -93.2477, -93.2472, -93.2469, -93.2467, -93.2465, -93.2464,
        -93.2463, -93.2463, -93.2462], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8345, -37.8345, -37.8346, -37.8346, -37.8346, -37.8346,
        -37.8346, -37.8346, -37.8346], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5814, -54.5814], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 3 	 CHN 	 CNH 	 0.0066030538636647

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2982, -0.4526, -0.4719, -0.4811, -0.4868, -0.4906, -0.4931, -0.4949,
        -0.4962, -0.4970, -0.4976, -0.4980, -0.4983, -0.4985, -0.4987, -0.4988,
        -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6773e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7267e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3548e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 6 	 H 	 H 	 2.3433132710432373e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0432, -1.1243, -1.1456, -1.1564, -1.1633, -1.1679, -1.1711, -1.1734,
        -1.1749, -1.1760, -1.1768, -1.1773, -1.1777, -1.1780, -1.1782, -1.1783,
        -1.1784, -1.1784, -1.1785, -1.1785, -1.1785, -1.1785, -1.1786, -1.1786,
        -1.1786], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2916e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5832e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2149, -0.4273, -0.4578, -0.4721, -0.4807, -0.4864, -0.4903, -0.4929,
        -0.4948, -0.4960, -0.4969, -0.4976, -0.4980, -0.4983, -0.4985, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6743e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2261e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9320e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2185, -0.4285, -0.4585, -0.4725, -0.4810, -0.4866, -0.4904, -0.4930,
        -0.4948, -0.4961, -0.4970, -0.4976, -0.4980, -0.4983, -0.4985, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6743e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2137e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1783, -1.1784, -1.1784, -1.1785, -1.1785, -1.1785, -1.1785, -1.1786,
        -1.1786, -1.1786], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4990, -0.4990,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 0 	 H2 	 H2 	 9.154527692647351e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2526, -107.3001, -107.2565, -107.2513, -107.2472, -107.2450,
        -107.2443, -107.2440, -107.2441, -107.2445, -107.2450, -107.2456,
        -107.2463, -107.2469, -107.2475, -107.2481, -107.2487, -107.2491,
        -107.2495, -107.2499, -107.2502, -107.2504, -107.2506, -107.2508,
        -107.2509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4418e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4683, -7.4750, -7.4777, -7.4790, -7.4797, -7.4804, -7.4811, -7.4811,
        -7.4806, -7.4803, -7.4802, -7.4802, -7.4802, -7.4803, -7.4803, -7.4804,
        -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6227e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1028e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6775, -99.6959, -99.7070, -99.7139, -99.7189, -99.7225, -99.7251,
        -99.7270, -99.7284, -99.7294, -99.7301, -99.7306, -99.7309, -99.7312,
        -99.7314, -99.7315, -99.7316, -99.7316, -99.7317, -99.7317, -99.7317,
        -99.7317, -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6292e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2481, -107.2487, -107.2491, -107.2495, -107.2499, -107.2502,
        -107.2504, -107.2506, -107.2508, -107.2509], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4804, -7.4804, -7.4804, -7.4804, -7.4805, -7.4805, -7.4805, -7.4805,
        -7.4805, -7.4805], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7315, -99.7316, -99.7316, -99.7317, -99.7317, -99.7317, -99.7317,
        -99.7318, -99.7318, -99.7318], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 2 	 FLi 	 LiF 	 0.007906138207245839

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7548, -37.7935, -37.8077, -37.8157, -37.8210, -37.8247, -37.8274,
        -37.8293, -37.8306, -37.8316, -37.8322, -37.8327, -37.8331, -37.8333,
        -37.8334, -37.8336, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9215e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9215e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 4 	 C 	 C 	 1.0441523956779635e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6778, -99.6980, -99.7085, -99.7150, -99.7195, -99.7228, -99.7252,
        -99.7269, -99.7281, -99.7290, -99.7296, -99.7301, -99.7304, -99.7306,
        -99.7308, -99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9562e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9562e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7309, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 5 	 F 	 F 	 1.796240715273462e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4535], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7297], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0456], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4535], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7297], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 11 	 HF2 	 HF2 	 0.0009994945266010142

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9126, -109.5337, -109.5725, -109.5557, -109.5409, -109.5306,
        -109.5237, -109.5191, -109.5161, -109.5140, -109.5127, -109.5118,
        -109.5112, -109.5108, -109.5105, -109.5103, -109.5102, -109.5101,
        -109.5100, -109.5100, -109.5100, -109.5099, -109.5099, -109.5099,
        -109.5099], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2777e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4477, -54.5137, -54.5374, -54.5506, -54.5593, -54.5654, -54.5698,
        -54.5728, -54.5750, -54.5765, -54.5776, -54.5783, -54.5788, -54.5792,
        -54.5795, -54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1979e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4339, -54.5027, -54.5297, -54.5451, -54.5554, -54.5626, -54.5677,
        -54.5714, -54.5740, -54.5758, -54.5771, -54.5780, -54.5786, -54.5790,
        -54.5793, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2658e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5103, -109.5102, -109.5101, -109.5100, -109.5100, -109.5100,
        -109.5099, -109.5099, -109.5099, -109.5099], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 1 	 N2 	 N2 	 4.710997514001121e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5681], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7360], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8371], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 10 	 CH4O 	 CH4O 	 6.271697004409205e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1557], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5214], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1557], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7360], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5214], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 9 	 HN2O 	 HON2 	 0.0009569768389370006

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4703, -7.4767, -7.4787, -7.4795, -7.4802, -7.4810, -7.4811, -7.4806,
        -7.4803, -7.4801, -7.4801, -7.4802, -7.4802, -7.4803, -7.4803, -7.4803,
        -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5697e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7649e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1399e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4803, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804, -7.4804,
        -7.4804, -7.4804], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 27 	 7 	 Li 	 Li 	 1.2904340558440753e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4131, -54.4759, -54.5097, -54.5303, -54.5445, -54.5547, -54.5620,
        -54.5672, -54.5709, -54.5736, -54.5754, -54.5767, -54.5776, -54.5783,
        -54.5787, -54.5791, -54.5793, -54.5794, -54.5796, -54.5796, -54.5797,
        -54.5797, -54.5797, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8233e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8233e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5791, -54.5793, -54.5794, -54.5796, -54.5796, -54.5797, -54.5797,
        -54.5797, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 27 	 8 	 N 	 N 	 2.0831481454270505e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e27)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e27/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e27/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 27 || ,[' rho : 2.963147', ' ae : 51.022447', ' E : 1.723817'] ,|| total loss 37.336149 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0452], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7295], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0452], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7295], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 11 	 HF2 	 HF2 	 0.0010036369853056142

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1561], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5217], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1561], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5217], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 9 	 HN2O 	 HON2 	 0.0009576455657252486

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4439, -54.5108, -54.5354, -54.5492, -54.5583, -54.5647, -54.5693,
        -54.5725, -54.5747, -54.5763, -54.5775, -54.5782, -54.5788, -54.5792,
        -54.5795, -54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1832e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1832e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 8 	 N 	 N 	 1.950041143872607e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7441, -37.7810, -37.7986, -37.8091, -37.8162, -37.8213, -37.8249,
        -37.8275, -37.8294, -37.8307, -37.8317, -37.8323, -37.8328, -37.8331,
        -37.8334, -37.8335, -37.8336, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9298e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9298e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8335, -37.8336, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 4 	 C 	 C 	 1.0282219446010655e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9070, -109.5676, -109.5900, -109.5675, -109.5495, -109.5371,
        -109.5288, -109.5231, -109.5193, -109.5168, -109.5150, -109.5139,
        -109.5131, -109.5125, -109.5122, -109.5119, -109.5118, -109.5116,
        -109.5116, -109.5115, -109.5115, -109.5114, -109.5114, -109.5114,
        -109.5114], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2777e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4179, -54.4847, -54.5167, -54.5357, -54.5487, -54.5580, -54.5646,
        -54.5693, -54.5727, -54.5750, -54.5767, -54.5779, -54.5787, -54.5793,
        -54.5797, -54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5806,
        -54.5806, -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6283e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4165, -54.4822, -54.5148, -54.5343, -54.5477, -54.5572, -54.5641,
        -54.5689, -54.5724, -54.5749, -54.5766, -54.5778, -54.5787, -54.5793,
        -54.5797, -54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5806,
        -54.5806, -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6476e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5119, -109.5118, -109.5116, -109.5116, -109.5115, -109.5115,
        -109.5114, -109.5114, -109.5114, -109.5114], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5806, -54.5806,
        -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 1 	 N2 	 N2 	 4.5099782114752204e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4770, -7.4791, -7.4798, -7.4805, -7.4813, -7.4815, -7.4810,
        -7.4806, -7.4804, -7.4804, -7.4805, -7.4805, -7.4806, -7.4806, -7.4807,
        -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5770e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.5004e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1547e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807, -7.4807,
        -7.4807, -7.4807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 7 	 Li 	 Li 	 1.6755568808265317e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8384], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5710], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7376], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8384], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 10 	 CH4O 	 CH4O 	 6.232897255044979e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2307, -107.2946, -107.2514, -107.2486, -107.2460, -107.2446,
        -107.2446, -107.2449, -107.2454, -107.2460, -107.2467, -107.2474,
        -107.2482, -107.2489, -107.2497, -107.2503, -107.2509, -107.2514,
        -107.2519, -107.2523, -107.2526, -107.2529, -107.2531, -107.2533,
        -107.2534], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4648e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4686, -7.4750, -7.4779, -7.4793, -7.4800, -7.4806, -7.4814, -7.4816,
        -7.4811, -7.4807, -7.4806, -7.4806, -7.4806, -7.4806, -7.4807, -7.4807,
        -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5818e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0739e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7024, -99.7124, -99.7184, -99.7225, -99.7255, -99.7277,
        -99.7293, -99.7304, -99.7312, -99.7317, -99.7321, -99.7324, -99.7326,
        -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7331,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0425e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2503, -107.2509, -107.2514, -107.2519, -107.2523, -107.2526,
        -107.2529, -107.2531, -107.2533, -107.2534], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4807, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808, -7.4808,
        -7.4808, -7.4808], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 2 	 FLi 	 LiF 	 0.007838075700800912

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6827, -99.7045, -99.7140, -99.7197, -99.7236, -99.7264, -99.7284,
        -99.7298, -99.7309, -99.7316, -99.7321, -99.7325, -99.7327, -99.7329,
        -99.7331, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6840e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6840e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 28 	 5 	 F 	 F 	 7.288157646861261e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0070, -93.5444, -93.4221, -93.3702, -93.3325, -93.3083, -93.2911,
        -93.2790, -93.2704, -93.2643, -93.2599, -93.2568, -93.2545, -93.2529,
        -93.2517, -93.2509, -93.2503, -93.2498, -93.2495, -93.2492, -93.2491,
        -93.2489, -93.2488, -93.2488, -93.2487], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5534e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7438, -37.7787, -37.7971, -37.8082, -37.8158, -37.8212, -37.8252,
        -37.8280, -37.8300, -37.8314, -37.8324, -37.8332, -37.8337, -37.8340,
        -37.8343, -37.8344, -37.8346, -37.8346, -37.8347, -37.8347, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6772e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4154, -54.4787, -54.5123, -54.5327, -54.5468, -54.5568, -54.5640,
        -54.5692, -54.5729, -54.5754, -54.5773, -54.5786, -54.5795, -54.5801,
        -54.5806, -54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5815,
        -54.5815, -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5729e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2388, -0.4349, -0.4620, -0.4748, -0.4825, -0.4876, -0.4911, -0.4935,
        -0.4951, -0.4963, -0.4971, -0.4977, -0.4981, -0.4983, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4990,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6655e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2056e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2509, -93.2503, -93.2498, -93.2495, -93.2492, -93.2491, -93.2489,
        -93.2488, -93.2488, -93.2487], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8344, -37.8346, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5814, -54.5815, -54.5815,
        -54.5815, -54.5816, -54.5816], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 3 	 CHN 	 CNH 	 0.006427217763993137

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2817, -0.4478, -0.4692, -0.4794, -0.4856, -0.4897, -0.4925, -0.4945,
        -0.4958, -0.4968, -0.4974, -0.4979, -0.4982, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6643e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0934e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3287e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4990], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 6 	 H 	 H 	 2.5939999193445265e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0176, -1.1145, -1.1399, -1.1529, -1.1611, -1.1667, -1.1705, -1.1732,
        -1.1751, -1.1764, -1.1773, -1.1780, -1.1784, -1.1787, -1.1789, -1.1791,
        -1.1792, -1.1793, -1.1793, -1.1794, -1.1794, -1.1794, -1.1794, -1.1794,
        -1.1794], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4090e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8181e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3447, -0.4648, -0.4788, -0.4856, -0.4898, -0.4926, -0.4946, -0.4959,
        -0.4968, -0.4975, -0.4979, -0.4982, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4990], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6631e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6262e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1444e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2614, -0.4419, -0.4659, -0.4773, -0.4842, -0.4887, -0.4919, -0.4940,
        -0.4955, -0.4965, -0.4973, -0.4978, -0.4981, -0.4984, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6630e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1553e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1791, -1.1792, -1.1793, -1.1793, -1.1794, -1.1794, -1.1794, -1.1794,
        -1.1794, -1.1794], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 28 	 0 	 H2 	 H2 	 1.211085801026119e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e28)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e28/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e28/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 28 || ,[' rho : 2.960619', ' ae : 50.623148', ' E : 1.653258'] ,|| total loss 37.056851 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6800, -99.7000, -99.7105, -99.7170, -99.7216, -99.7249, -99.7273,
        -99.7290, -99.7303, -99.7312, -99.7318, -99.7323, -99.7326, -99.7328,
        -99.7330, -99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8930e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8930e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 5 	 F 	 F 	 7.943692619098901e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4228, -54.4911, -54.5216, -54.5395, -54.5517, -54.5603, -54.5665,
        -54.5709, -54.5740, -54.5761, -54.5777, -54.5788, -54.5795, -54.5801,
        -54.5805, -54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812,
        -54.5813, -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7737e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7737e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5807, -54.5809, -54.5810, -54.5811, -54.5812, -54.5812, -54.5813,
        -54.5813, -54.5813, -54.5813], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 8 	 N 	 N 	 1.4579594309797075e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3276, -107.3318, -107.2854, -107.2719, -107.2634, -107.2581,
        -107.2547, -107.2527, -107.2515, -107.2510, -107.2508, -107.2509,
        -107.2511, -107.2515, -107.2519, -107.2523, -107.2527, -107.2530,
        -107.2533, -107.2536, -107.2538, -107.2540, -107.2542, -107.2543,
        -107.2544], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4707e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4703, -7.4768, -7.4791, -7.4800, -7.4805, -7.4813, -7.4817, -7.4813,
        -7.4808, -7.4806, -7.4806, -7.4807, -7.4807, -7.4808, -7.4808, -7.4808,
        -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5507e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6067e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6802, -99.7002, -99.7107, -99.7172, -99.7217, -99.7250, -99.7274,
        -99.7291, -99.7304, -99.7313, -99.7319, -99.7323, -99.7327, -99.7329,
        -99.7330, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333, -99.7334,
        -99.7334, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8370e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2523, -107.2527, -107.2530, -107.2533, -107.2536, -107.2538,
        -107.2540, -107.2542, -107.2543, -107.2544], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4808, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809, -7.4809,
        -7.4809, -7.4809], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7332, -99.7332, -99.7333, -99.7333, -99.7333, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 2 	 FLi 	 LiF 	 0.007782250909780059

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2592, -0.4412, -0.4655, -0.4770, -0.4840, -0.4886, -0.4918, -0.4939,
        -0.4955, -0.4965, -0.4972, -0.4978, -0.4981, -0.4984, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6600e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1800e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3201e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4987, -0.4987, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 6 	 H 	 H 	 2.683205195663681e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5723], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7384], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8390], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5723], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7384], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8390], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 10 	 CH4O 	 CH4O 	 6.231337751653542e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7451, -37.7817, -37.7994, -37.8099, -37.8170, -37.8222, -37.8258,
        -37.8285, -37.8303, -37.8317, -37.8326, -37.8333, -37.8337, -37.8341,
        -37.8343, -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6528e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6528e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 4 	 C 	 C 	 7.536526624083251e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1625], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7387], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5256], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1625], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7387], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5256], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 9 	 HN2O 	 HON2 	 0.0009513360274286195

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0523], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4570], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7329], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0523], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4570], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7329], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 11 	 HF2 	 HF2 	 0.001000451511092344

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4685, -7.4745, -7.4776, -7.4793, -7.4801, -7.4806, -7.4814, -7.4818,
        -7.4814, -7.4810, -7.4808, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5399e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3269e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0807e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 7 	 Li 	 Li 	 2.088734060098937e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0393, -1.1234, -1.1455, -1.1568, -1.1639, -1.1687, -1.1721, -1.1744,
        -1.1760, -1.1772, -1.1779, -1.1785, -1.1789, -1.1792, -1.1794, -1.1795,
        -1.1796, -1.1796, -1.1797, -1.1797, -1.1797, -1.1798, -1.1798, -1.1798,
        -1.1798], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4565e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9131e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3096, -0.4556, -0.4736, -0.4822, -0.4875, -0.4910, -0.4934, -0.4951,
        -0.4963, -0.4971, -0.4976, -0.4980, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6593e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0566e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2317e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3471, -0.4654, -0.4792, -0.4859, -0.4900, -0.4927, -0.4946, -0.4959,
        -0.4968, -0.4975, -0.4979, -0.4982, -0.4984, -0.4986, -0.4987, -0.4988,
        -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6593e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7969e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1795, -1.1796, -1.1796, -1.1797, -1.1797, -1.1797, -1.1798, -1.1798,
        -1.1798, -1.1798], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 0 	 H2 	 H2 	 1.3382910316697409e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7271, -109.9108, -109.7658, -109.6850, -109.6328, -109.5971,
        -109.5723, -109.5550, -109.5428, -109.5344, -109.5285, -109.5243,
        -109.5214, -109.5194, -109.5180, -109.5170, -109.5163, -109.5158,
        -109.5155, -109.5152, -109.5151, -109.5149, -109.5149, -109.5148,
        -109.5148], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2779e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4376, -54.5060, -54.5326, -54.5477, -54.5578, -54.5649, -54.5700,
        -54.5735, -54.5761, -54.5778, -54.5791, -54.5800, -54.5806, -54.5810,
        -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9138e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4168, -54.4809, -54.5141, -54.5341, -54.5479, -54.5578, -54.5649,
        -54.5699, -54.5735, -54.5760, -54.5778, -54.5791, -54.5800, -54.5806,
        -54.5810, -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0717e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5170, -109.5163, -109.5158, -109.5155, -109.5152, -109.5151,
        -109.5149, -109.5149, -109.5148, -109.5148], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 29 	 1 	 N2 	 N2 	 4.081793883105992e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0088, -93.5461, -93.4237, -93.3718, -93.3341, -93.3100, -93.2927,
        -93.2807, -93.2721, -93.2660, -93.2617, -93.2585, -93.2563, -93.2547,
        -93.2535, -93.2527, -93.2521, -93.2516, -93.2513, -93.2510, -93.2509,
        -93.2508, -93.2507, -93.2506, -93.2505], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5288e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7643, -37.8008, -37.8131, -37.8199, -37.8244, -37.8276, -37.8298,
        -37.8314, -37.8325, -37.8333, -37.8338, -37.8342, -37.8345, -37.8347,
        -37.8348, -37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1924e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4330, -54.5019, -54.5296, -54.5456, -54.5563, -54.5638, -54.5692,
        -54.5730, -54.5757, -54.5776, -54.5789, -54.5798, -54.5805, -54.5809,
        -54.5813, -54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5819,
        -54.5820, -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9504e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3203, -0.4585, -0.4752, -0.4833, -0.4882, -0.4915, -0.4938, -0.4953,
        -0.4964, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6583e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0385e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2527, -93.2521, -93.2516, -93.2513, -93.2510, -93.2509, -93.2508,
        -93.2507, -93.2506, -93.2505], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8349, -37.8350, -37.8350, -37.8351, -37.8351, -37.8351, -37.8351,
        -37.8351, -37.8351, -37.8351], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5815, -54.5817, -54.5818, -54.5819, -54.5819, -54.5819, -54.5820,
        -54.5820, -54.5820, -54.5820], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 29 	 3 	 CHN 	 CNH 	 0.006343062814184397

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e29)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e29/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e29/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 29 || ,[' rho : 2.957448', ' ae : 50.367298', ' E : 1.469152'] ,|| total loss 36.882275 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5732], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7388], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8394], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5732], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7388], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8394], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 10 	 CH4O 	 CH4O 	 6.234101924576875e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7680, -37.8031, -37.8146, -37.8209, -37.8250, -37.8279, -37.8300,
        -37.8314, -37.8324, -37.8332, -37.8337, -37.8340, -37.8343, -37.8344,
        -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8348, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5065e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5065e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8348, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 4 	 C 	 C 	 7.470620981104055e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0517], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4567], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7325], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0517], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4567], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7325], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 11 	 HF2 	 HF2 	 0.0010045723749852666

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4685, -7.4744, -7.4776, -7.4792, -7.4800, -7.4806, -7.4814, -7.4818,
        -7.4814, -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4951e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.9672e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9910e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 7 	 Li 	 Li 	 2.0089724387625714e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3384, -107.3362, -107.2898, -107.2753, -107.2662, -107.2606,
        -107.2568, -107.2545, -107.2531, -107.2524, -107.2521, -107.2521,
        -107.2523, -107.2526, -107.2530, -107.2534, -107.2538, -107.2541,
        -107.2544, -107.2546, -107.2549, -107.2550, -107.2552, -107.2553,
        -107.2554], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4809e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4683, -7.4739, -7.4772, -7.4790, -7.4799, -7.4804, -7.4812, -7.4817,
        -7.4815, -7.4810, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809,
        -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4885e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8800e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6811, -99.7017, -99.7119, -99.7182, -99.7225, -99.7256, -99.7279,
        -99.7295, -99.7307, -99.7315, -99.7321, -99.7326, -99.7329, -99.7331,
        -99.7332, -99.7333, -99.7334, -99.7334, -99.7335, -99.7335, -99.7335,
        -99.7335, -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9117e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2534, -107.2538, -107.2541, -107.2544, -107.2546, -107.2549,
        -107.2550, -107.2552, -107.2553, -107.2554], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7333, -99.7334, -99.7334, -99.7335, -99.7335, -99.7335, -99.7335,
        -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 2 	 FLi 	 LiF 	 0.007712721958087235

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6797, -99.6980, -99.7089, -99.7158, -99.7207, -99.7242, -99.7268,
        -99.7287, -99.7301, -99.7311, -99.7317, -99.7322, -99.7326, -99.7328,
        -99.7330, -99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7334,
        -99.7334, -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4577e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4577e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7331, -99.7332, -99.7333, -99.7333, -99.7333, -99.7334, -99.7334,
        -99.7334, -99.7334, -99.7334], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 5 	 F 	 F 	 6.248600675645497e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5248], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1612], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7381], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5248], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 9 	 HN2O 	 HON2 	 0.0009587019417276728

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9359, -93.5142, -93.4065, -93.3587, -93.3251, -93.3033, -93.2878,
        -93.2769, -93.2692, -93.2637, -93.2598, -93.2570, -93.2549, -93.2535,
        -93.2524, -93.2517, -93.2511, -93.2507, -93.2504, -93.2502, -93.2501,
        -93.2500, -93.2499, -93.2498, -93.2498], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5081e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7479, -37.7862, -37.8027, -37.8122, -37.8186, -37.8232, -37.8265,
        -37.8288, -37.8305, -37.8316, -37.8325, -37.8331, -37.8335, -37.8338,
        -37.8340, -37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1158e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4173, -54.4826, -54.5152, -54.5347, -54.5481, -54.5577, -54.5645,
        -54.5694, -54.5728, -54.5753, -54.5770, -54.5783, -54.5791, -54.5797,
        -54.5801, -54.5804, -54.5806, -54.5808, -54.5809, -54.5810, -54.5810,
        -54.5810, -54.5811, -54.5811, -54.5811], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0924e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2907, -0.4503, -0.4706, -0.4803, -0.4862, -0.4901, -0.4928, -0.4946,
        -0.4959, -0.4968, -0.4974, -0.4979, -0.4982, -0.4984, -0.4985, -0.4987,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6466e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1801e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2517, -93.2511, -93.2507, -93.2504, -93.2502, -93.2501, -93.2500,
        -93.2499, -93.2498, -93.2498], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8341, -37.8342, -37.8343, -37.8343, -37.8344, -37.8344, -37.8344,
        -37.8344, -37.8344, -37.8344], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5804, -54.5806, -54.5808, -54.5809, -54.5810, -54.5810, -54.5810,
        -54.5811, -54.5811, -54.5811], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 3 	 CHN 	 CNH 	 0.006275277873793511

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0588, -1.1314, -1.1505, -1.1603, -1.1664, -1.1706, -1.1734, -1.1754,
        -1.1768, -1.1778, -1.1785, -1.1790, -1.1793, -1.1796, -1.1797, -1.1798,
        -1.1799, -1.1800, -1.1800, -1.1800, -1.1801, -1.1801, -1.1801, -1.1801,
        -1.1801], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5018e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0035e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2770, -0.4464, -0.4684, -0.4788, -0.4852, -0.4894, -0.4923, -0.4943,
        -0.4957, -0.4967, -0.4973, -0.4978, -0.4981, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6440e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2331e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2916e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3316, -0.4614, -0.4769, -0.4843, -0.4889, -0.4920, -0.4941, -0.4955,
        -0.4965, -0.4972, -0.4977, -0.4981, -0.4983, -0.4985, -0.4986, -0.4987,
        -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6440e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1047e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1798, -1.1799, -1.1800, -1.1800, -1.1800, -1.1801, -1.1801, -1.1801,
        -1.1801, -1.1801], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 0 	 H2 	 H2 	 1.4923982651273071e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2265, -0.4309, -0.4598, -0.4733, -0.4815, -0.4869, -0.4906, -0.4931,
        -0.4948, -0.4961, -0.4969, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989, -0.4989,
        -0.4989], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6413e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4026e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2827e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4989,
        -0.4989, -0.4989], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 30 	 6 	 H 	 H 	 3.0594051916244935e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4975, -109.8990, -109.7522, -109.6747, -109.6249, -109.5908,
        -109.5671, -109.5505, -109.5389, -109.5308, -109.5251, -109.5211,
        -109.5183, -109.5163, -109.5149, -109.5140, -109.5133, -109.5128,
        -109.5125, -109.5123, -109.5121, -109.5120, -109.5119, -109.5119,
        -109.5118], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2696e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4355, -54.5039, -54.5306, -54.5458, -54.5560, -54.5631, -54.5682,
        -54.5718, -54.5743, -54.5761, -54.5774, -54.5783, -54.5789, -54.5793,
        -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8951e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4135, -54.4733, -54.5078, -54.5290, -54.5437, -54.5542, -54.5618,
        -54.5673, -54.5711, -54.5738, -54.5758, -54.5771, -54.5781, -54.5788,
        -54.5792, -54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1253e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5140, -109.5133, -109.5128, -109.5125, -109.5123, -109.5121,
        -109.5120, -109.5119, -109.5119, -109.5118], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5798, -54.5800, -54.5801, -54.5802, -54.5802, -54.5803,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 1 	 N2 	 N2 	 3.8121143926692995e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4418, -54.5090, -54.5341, -54.5483, -54.5577, -54.5643, -54.5689,
        -54.5722, -54.5746, -54.5762, -54.5774, -54.5782, -54.5788, -54.5792,
        -54.5794, -54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1903e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1903e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 30 	 8 	 N 	 N 	 1.9491378891775766e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e30)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e30/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e30/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 30 || ,[' rho : 2.953059', ' ae : 50.155292', ' E : 1.665981'] ,|| total loss 36.724092 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4312, -54.4999, -54.5277, -54.5436, -54.5543, -54.5618, -54.5672,
        -54.5710, -54.5737, -54.5756, -54.5769, -54.5778, -54.5785, -54.5790,
        -54.5793, -54.5795, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3168e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3168e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5795, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 8 	 N 	 N 	 1.973438268509288e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1467, -93.6015, -93.4509, -93.3918, -93.3466, -93.3185, -93.2982,
        -93.2841, -93.2741, -93.2670, -93.2619, -93.2582, -93.2556, -93.2537,
        -93.2524, -93.2514, -93.2507, -93.2502, -93.2498, -93.2495, -93.2494,
        -93.2492, -93.2491, -93.2490, -93.2490], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4934e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7462, -37.7839, -37.8008, -37.8106, -37.8173, -37.8221, -37.8255,
        -37.8279, -37.8296, -37.8308, -37.8317, -37.8323, -37.8328, -37.8331,
        -37.8333, -37.8334, -37.8335, -37.8336, -37.8337, -37.8337, -37.8337,
        -37.8337, -37.8337, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0817e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4367, -54.5049, -54.5312, -54.5462, -54.5562, -54.5632, -54.5682,
        -54.5718, -54.5743, -54.5760, -54.5773, -54.5781, -54.5787, -54.5792,
        -54.5795, -54.5797, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5801, -54.5801, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1147e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3147, -0.4569, -0.4743, -0.4826, -0.4878, -0.4912, -0.4935, -0.4951,
        -0.4963, -0.4970, -0.4976, -0.4980, -0.4982, -0.4984, -0.4986, -0.4986,
        -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6354e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1967e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2514, -93.2507, -93.2502, -93.2498, -93.2495, -93.2494, -93.2492,
        -93.2491, -93.2490, -93.2490], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8334, -37.8335, -37.8336, -37.8337, -37.8337, -37.8337, -37.8337,
        -37.8337, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5801,
        -54.5801, -54.5801, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 3 	 CHN 	 CNH 	 0.006208686479723777

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5696], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7366], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5696], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7366], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8380], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 10 	 CH4O 	 CH4O 	 6.302679528927565e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8797, -109.6674, -109.6395, -109.5998, -109.5720, -109.5530,
        -109.5399, -109.5310, -109.5249, -109.5207, -109.5178, -109.5158,
        -109.5144, -109.5135, -109.5128, -109.5124, -109.5120, -109.5118,
        -109.5117, -109.5115, -109.5115, -109.5114, -109.5114, -109.5114,
        -109.5113], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2677e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4408, -54.5081, -54.5335, -54.5478, -54.5573, -54.5640, -54.5687,
        -54.5721, -54.5744, -54.5761, -54.5773, -54.5781, -54.5787, -54.5791,
        -54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2760e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4462, -54.5123, -54.5364, -54.5499, -54.5588, -54.5651, -54.5695,
        -54.5726, -54.5748, -54.5764, -54.5775, -54.5782, -54.5788, -54.5792,
        -54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2506e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5124, -109.5120, -109.5118, -109.5117, -109.5115, -109.5115,
        -109.5114, -109.5114, -109.5114, -109.5113], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 1 	 N2 	 N2 	 3.770936281697705e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7614, -37.7983, -37.8109, -37.8179, -37.8226, -37.8258, -37.8281,
        -37.8298, -37.8309, -37.8317, -37.8323, -37.8327, -37.8330, -37.8332,
        -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1492e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1492e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 4 	 C 	 C 	 1.0995195122847474e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0724, -1.1372, -1.1542, -1.1629, -1.1684, -1.1721, -1.1747, -1.1765,
        -1.1777, -1.1786, -1.1792, -1.1796, -1.1799, -1.1801, -1.1803, -1.1804,
        -1.1804, -1.1805, -1.1805, -1.1805, -1.1806, -1.1806, -1.1806, -1.1806,
        -1.1806], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5837e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1674e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3236, -0.4593, -0.4756, -0.4835, -0.4883, -0.4916, -0.4938, -0.4953,
        -0.4964, -0.4971, -0.4976, -0.4980, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6304e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2119e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4283e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2108, -0.4252, -0.4566, -0.4713, -0.4801, -0.4859, -0.4899, -0.4926,
        -0.4945, -0.4958, -0.4967, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6302e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5398e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1804, -1.1804, -1.1805, -1.1805, -1.1805, -1.1806, -1.1806, -1.1806,
        -1.1806, -1.1806], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 0 	 H2 	 H2 	 1.7373019856562803e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1577], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7364], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5228], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1577], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7364], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5228], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 9 	 HN2O 	 HON2 	 0.0009691813033662169

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6895, -99.7105, -99.7178, -99.7219, -99.7246, -99.7265, -99.7279,
        -99.7289, -99.7296, -99.7301, -99.7304, -99.7307, -99.7309, -99.7310,
        -99.7311, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8101e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8101e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7311, -99.7312, -99.7312, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 5 	 F 	 F 	 1.6358245973657753e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0470], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4542], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7300], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0470], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4542], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7300], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 11 	 HF2 	 HF2 	 0.0010253639042245779

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3240, -107.3340, -107.2853, -107.2718, -107.2632, -107.2577,
        -107.2542, -107.2520, -107.2508, -107.2502, -107.2500, -107.2502,
        -107.2505, -107.2509, -107.2514, -107.2518, -107.2522, -107.2526,
        -107.2530, -107.2533, -107.2535, -107.2537, -107.2539, -107.2540,
        -107.2541], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4698e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4707, -7.4771, -7.4793, -7.4801, -7.4806, -7.4814, -7.4818, -7.4813,
        -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3509e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0003e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6850, -99.7068, -99.7152, -99.7201, -99.7233, -99.7257, -99.7274,
        -99.7286, -99.7294, -99.7300, -99.7305, -99.7308, -99.7310, -99.7311,
        -99.7312, -99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314,
        -99.7315, -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7762e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2518, -107.2522, -107.2526, -107.2530, -107.2533, -107.2535,
        -107.2537, -107.2539, -107.2540, -107.2541], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7313, -99.7313, -99.7314, -99.7314, -99.7314, -99.7314, -99.7315,
        -99.7315, -99.7315, -99.7315], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 31 	 2 	 FLi 	 LiF 	 0.007648138946335511

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4707, -7.4770, -7.4793, -7.4801, -7.4806, -7.4814, -7.4818, -7.4814,
        -7.4809, -7.4807, -7.4807, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3458e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.0593e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6925e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810,
        -7.4810, -7.4810], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 7 	 Li 	 Li 	 2.0225905910942195e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3351, -0.4623, -0.4773, -0.4846, -0.4891, -0.4921, -0.4941, -0.4955,
        -0.4965, -0.4972, -0.4977, -0.4980, -0.4983, -0.4984, -0.4986, -0.4986,
        -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6269e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2098e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2539e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4986, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 31 	 6 	 H 	 H 	 3.3018136238253043e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e31)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e31/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e31/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 31 || ,[' rho : 2.945514', ' ae : 49.976161', ' E : 1.802066'] ,|| total loss 36.571669 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5698], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7366], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8382], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5698], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7366], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8382], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 10 	 CH4O 	 CH4O 	 6.302735752982582e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7501, -37.7887, -37.8043, -37.8132, -37.8192, -37.8234, -37.8264,
        -37.8286, -37.8301, -37.8312, -37.8320, -37.8325, -37.8329, -37.8332,
        -37.8334, -37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0164e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0164e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 4 	 C 	 C 	 1.058317745252718e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6783, -99.6966, -99.7074, -99.7142, -99.7191, -99.7226, -99.7252,
        -99.7271, -99.7284, -99.7294, -99.7301, -99.7305, -99.7309, -99.7311,
        -99.7313, -99.7314, -99.7315, -99.7316, -99.7316, -99.7316, -99.7316,
        -99.7317, -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0068e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0068e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7314, -99.7315, -99.7316, -99.7316, -99.7316, -99.7316, -99.7317,
        -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 5 	 F 	 F 	 1.155412221678183e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4697, -7.4760, -7.4787, -7.4799, -7.4804, -7.4811, -7.4818, -7.4817,
        -7.4812, -7.4808, -7.4807, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3257e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3790e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6524e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4810, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 7 	 Li 	 Li 	 2.09678656568408e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2884, -107.3214, -107.2726, -107.2636, -107.2573, -107.2535,
        -107.2514, -107.2502, -107.2496, -107.2495, -107.2496, -107.2500,
        -107.2505, -107.2511, -107.2518, -107.2523, -107.2529, -107.2534,
        -107.2538, -107.2541, -107.2544, -107.2547, -107.2549, -107.2551,
        -107.2552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4826e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4717, -7.4778, -7.4797, -7.4804, -7.4810, -7.4817, -7.4818, -7.4812,
        -7.4809, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810, -7.4810,
        -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3249e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5736e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6846, -99.7064, -99.7151, -99.7201, -99.7236, -99.7260, -99.7278,
        -99.7291, -99.7300, -99.7306, -99.7310, -99.7314, -99.7316, -99.7317,
        -99.7319, -99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7943e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2523, -107.2529, -107.2534, -107.2538, -107.2541, -107.2544,
        -107.2547, -107.2549, -107.2551, -107.2552], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7320, -99.7320, -99.7321, -99.7321, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 2 	 FLi 	 LiF 	 0.007622817985833688

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0574, -1.1314, -1.1509, -1.1608, -1.1671, -1.1713, -1.1743, -1.1763,
        -1.1777, -1.1787, -1.1794, -1.1799, -1.1803, -1.1805, -1.1807, -1.1808,
        -1.1809, -1.1809, -1.1810, -1.1810, -1.1810, -1.1810, -1.1810, -1.1810,
        -1.1810], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6495e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2990e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3092, -0.4554, -0.4734, -0.4821, -0.4874, -0.4909, -0.4933, -0.4950,
        -0.4961, -0.4969, -0.4975, -0.4979, -0.4982, -0.4984, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6256e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2760e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.5503e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2972, -0.4521, -0.4715, -0.4809, -0.4865, -0.4903, -0.4929, -0.4947,
        -0.4959, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6256e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3050e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1808, -1.1809, -1.1809, -1.1810, -1.1810, -1.1810, -1.1810, -1.1810,
        -1.1810, -1.1810], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 0 	 H2 	 H2 	 1.9321867320230213e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9282, -93.5115, -93.4054, -93.3583, -93.3252, -93.3037, -93.2884,
        -93.2777, -93.2701, -93.2647, -93.2609, -93.2581, -93.2562, -93.2548,
        -93.2537, -93.2530, -93.2525, -93.2521, -93.2518, -93.2516, -93.2515,
        -93.2513, -93.2513, -93.2512, -93.2512], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4603e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7458, -37.7829, -37.8001, -37.8102, -37.8171, -37.8220, -37.8255,
        -37.8280, -37.8298, -37.8310, -37.8319, -37.8326, -37.8330, -37.8333,
        -37.8335, -37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6825e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4220, -54.4897, -54.5203, -54.5383, -54.5506, -54.5593, -54.5655,
        -54.5699, -54.5730, -54.5752, -54.5768, -54.5779, -54.5787, -54.5792,
        -54.5796, -54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8433e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2988, -0.4525, -0.4718, -0.4810, -0.4867, -0.4904, -0.4930, -0.4947,
        -0.4960, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4985, -0.4986,
        -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6250e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3047e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2530, -93.2525, -93.2521, -93.2518, -93.2516, -93.2515, -93.2513,
        -93.2513, -93.2512, -93.2512], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8337, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8340,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 3 	 CHN 	 CNH 	 0.006084169852270561

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1594], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5238], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1594], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5238], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 9 	 HN2O 	 HON2 	 0.0009721255207156112

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2833, -0.4482, -0.4693, -0.4794, -0.4856, -0.4897, -0.4924, -0.4944,
        -0.4957, -0.4966, -0.4973, -0.4977, -0.4981, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6209e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3731e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2419e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 6 	 H 	 H 	 3.4534038890189794e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0477], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4546], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7303], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0477], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4546], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7303], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 32 	 11 	 HF2 	 HF2 	 0.001029355466194015

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4398, -54.5073, -54.5328, -54.5473, -54.5569, -54.5636, -54.5684,
        -54.5718, -54.5742, -54.5759, -54.5771, -54.5779, -54.5785, -54.5789,
        -54.5792, -54.5794, -54.5795, -54.5796, -54.5797, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5343e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5343e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5794, -54.5795, -54.5796, -54.5797, -54.5797, -54.5798, -54.5798,
        -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 8 	 N 	 N 	 2.0577224601440795e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7914, -109.8542, -109.7351, -109.6634, -109.6167, -109.5848,
        -109.5626, -109.5472, -109.5365, -109.5290, -109.5238, -109.5202,
        -109.5176, -109.5159, -109.5146, -109.5137, -109.5131, -109.5127,
        -109.5124, -109.5122, -109.5121, -109.5120, -109.5119, -109.5118,
        -109.5118], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4388, -54.5064, -54.5323, -54.5469, -54.5566, -54.5635, -54.5683,
        -54.5717, -54.5742, -54.5759, -54.5771, -54.5779, -54.5785, -54.5789,
        -54.5792, -54.5794, -54.5796, -54.5797, -54.5797, -54.5798, -54.5798,
        -54.5799, -54.5799, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4533e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4138, -54.4737, -54.5080, -54.5290, -54.5436, -54.5541, -54.5616,
        -54.5669, -54.5708, -54.5735, -54.5754, -54.5767, -54.5777, -54.5783,
        -54.5788, -54.5791, -54.5794, -54.5795, -54.5796, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7034e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5137, -109.5131, -109.5127, -109.5124, -109.5122, -109.5121,
        -109.5120, -109.5119, -109.5118, -109.5118], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5791, -54.5794, -54.5795, -54.5796, -54.5797, -54.5798, -54.5798,
        -54.5798, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 32 	 1 	 N2 	 N2 	 3.319850978130241e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e32)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e32/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e32/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 32 || ,[' rho : 2.941992', ' ae : 49.727328', ' E : 1.794306'] ,|| total loss 36.392048 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0494, -1.1282, -1.1490, -1.1597, -1.1664, -1.1709, -1.1740, -1.1762,
        -1.1778, -1.1788, -1.1796, -1.1801, -1.1805, -1.1807, -1.1809, -1.1810,
        -1.1811, -1.1812, -1.1812, -1.1812, -1.1813, -1.1813, -1.1813, -1.1813,
        -1.1813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6903e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3806e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2199, -0.4286, -0.4585, -0.4724, -0.4809, -0.4864, -0.4902, -0.4928,
        -0.4946, -0.4959, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4984,
        -0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6166e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6001e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6140e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2519, -0.4388, -0.4641, -0.4761, -0.4833, -0.4881, -0.4914, -0.4936,
        -0.4952, -0.4963, -0.4970, -0.4976, -0.4979, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6166e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4934e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1810, -1.1811, -1.1812, -1.1812, -1.1812, -1.1813, -1.1813, -1.1813,
        -1.1813, -1.1813], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 0 	 H2 	 H2 	 2.0719341703789453e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2213, -0.4290, -0.4587, -0.4726, -0.4810, -0.4865, -0.4903, -0.4929,
        -0.4946, -0.4959, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4984,
        -0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6159e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5996e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2319e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4984, -0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 6 	 H 	 H 	 3.592301426521542e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7643, -37.8002, -37.8123, -37.8189, -37.8232, -37.8263, -37.8284,
        -37.8300, -37.8311, -37.8318, -37.8324, -37.8327, -37.8330, -37.8332,
        -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1822e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1822e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 4 	 C 	 C 	 1.109000046340967e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6804, -99.7011, -99.7110, -99.7170, -99.7211, -99.7241, -99.7263,
        -99.7279, -99.7290, -99.7298, -99.7303, -99.7307, -99.7310, -99.7312,
        -99.7314, -99.7315, -99.7315, -99.7316, -99.7316, -99.7316, -99.7317,
        -99.7317, -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8437e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8437e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7315, -99.7315, -99.7316, -99.7316, -99.7316, -99.7317, -99.7317,
        -99.7317, -99.7317, -99.7317], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 5 	 F 	 F 	 1.1561570549093205e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9990, -93.5421, -93.4214, -93.3704, -93.3332, -93.3096, -93.2926,
        -93.2808, -93.2724, -93.2665, -93.2622, -93.2592, -93.2570, -93.2555,
        -93.2543, -93.2535, -93.2530, -93.2525, -93.2522, -93.2520, -93.2518,
        -93.2517, -93.2516, -93.2516, -93.2515], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4426e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7668, -37.8019, -37.8135, -37.8198, -37.8239, -37.8268, -37.8289,
        -37.8303, -37.8314, -37.8321, -37.8326, -37.8330, -37.8332, -37.8334,
        -37.8335, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8984e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4295, -54.4980, -54.5263, -54.5427, -54.5536, -54.5614, -54.5669,
        -54.5708, -54.5736, -54.5755, -54.5769, -54.5779, -54.5786, -54.5790,
        -54.5794, -54.5796, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1897e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2740, -0.4454, -0.4678, -0.4784, -0.4849, -0.4892, -0.4921, -0.4941,
        -0.4955, -0.4965, -0.4972, -0.4977, -0.4980, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988, -0.4988,
        -0.4988], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6156e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4331e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2535, -93.2530, -93.2525, -93.2522, -93.2520, -93.2518, -93.2517,
        -93.2516, -93.2516, -93.2515], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8336, -37.8337, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4988, -0.4988,
        -0.4988, -0.4988], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 3 	 CHN 	 CNH 	 0.006012711834858011

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4690, -7.4742, -7.4774, -7.4792, -7.4801, -7.4806, -7.4813, -7.4818,
        -7.4816, -7.4811, -7.4808, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809,
        -7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2467e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.4622e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4944e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4809, -7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 7 	 Li 	 Li 	 2.1207457478354586e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5702], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8385], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5702], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7367], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8385], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 10 	 CH4O 	 CH4O 	 6.33293068955073e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2687, -107.3141, -107.2656, -107.2590, -107.2542, -107.2511,
        -107.2499, -107.2492, -107.2489, -107.2489, -107.2492, -107.2497,
        -107.2503, -107.2509, -107.2516, -107.2523, -107.2529, -107.2534,
        -107.2539, -107.2543, -107.2546, -107.2549, -107.2551, -107.2553,
        -107.2554], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4892e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4698, -7.4759, -7.4786, -7.4799, -7.4805, -7.4810, -7.4818, -7.4817,
        -7.4812, -7.4809, -7.4808, -7.4808, -7.4808, -7.4809, -7.4809, -7.4810,
        -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2263e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5503e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6868, -99.7083, -99.7163, -99.7209, -99.7240, -99.7262, -99.7277,
        -99.7289, -99.7297, -99.7302, -99.7306, -99.7309, -99.7311, -99.7312,
        -99.7313, -99.7314, -99.7315, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7315, -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2398e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2523, -107.2529, -107.2534, -107.2539, -107.2543, -107.2546,
        -107.2549, -107.2551, -107.2553, -107.2554], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4811, -7.4811, -7.4811,
        -7.4811, -7.4811], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7314, -99.7315, -99.7315, -99.7315, -99.7315, -99.7315, -99.7315,
        -99.7316, -99.7316, -99.7316], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 2 	 FLi 	 LiF 	 0.007558466599081694

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4550, -54.5184, -54.5405, -54.5528, -54.5608, -54.5664, -54.5704,
        -54.5732, -54.5752, -54.5765, -54.5775, -54.5782, -54.5787, -54.5790,
        -54.5793, -54.5794, -54.5796, -54.5796, -54.5797, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5032e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5032e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5794, -54.5796, -54.5796, -54.5797, -54.5797, -54.5798, -54.5798,
        -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 8 	 N 	 N 	 2.0669199648243753e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0479], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4546], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0479], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4546], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 11 	 HF2 	 HF2 	 0.0010364724317965938

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1590], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5236], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1590], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7367], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5236], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 33 	 9 	 HN2O 	 HON2 	 0.0009790536577510118

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8322, -109.7924, -109.7035, -109.6424, -109.6021, -109.5746,
        -109.5557, -109.5425, -109.5333, -109.5270, -109.5226, -109.5195,
        -109.5173, -109.5159, -109.5148, -109.5141, -109.5136, -109.5132,
        -109.5130, -109.5128, -109.5127, -109.5126, -109.5125, -109.5125,
        -109.5125], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2627e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4142, -54.4739, -54.5082, -54.5292, -54.5438, -54.5542, -54.5617,
        -54.5671, -54.5709, -54.5736, -54.5755, -54.5769, -54.5778, -54.5785,
        -54.5790, -54.5793, -54.5795, -54.5797, -54.5798, -54.5799, -54.5799,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5036e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4749, -54.5089, -54.5298, -54.5442, -54.5545, -54.5619,
        -54.5673, -54.5710, -54.5737, -54.5756, -54.5769, -54.5779, -54.5785,
        -54.5790, -54.5793, -54.5795, -54.5797, -54.5798, -54.5799, -54.5799,
        -54.5800, -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4949e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5141, -109.5136, -109.5132, -109.5130, -109.5128, -109.5127,
        -109.5126, -109.5125, -109.5125, -109.5125], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5793, -54.5795, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5800], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 33 	 1 	 N2 	 N2 	 3.122782128023527e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e33)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e33/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e33/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 33 || ,[' rho : 2.937868', ' ae : 49.511519', ' E : 1.814163'] ,|| total loss 36.229776 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2118, -0.4257, -0.4569, -0.4714, -0.4802, -0.4860, -0.4899, -0.4926,
        -0.4944, -0.4957, -0.4967, -0.4973, -0.4977, -0.4980, -0.4983, -0.4984,
        -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6088e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6861e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2178e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4984, -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 6 	 H 	 H 	 3.7484677811760487e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3300, -107.3395, -107.2896, -107.2756, -107.2665, -107.2608,
        -107.2570, -107.2546, -107.2532, -107.2525, -107.2522, -107.2524,
        -107.2527, -107.2531, -107.2536, -107.2540, -107.2545, -107.2549,
        -107.2552, -107.2555, -107.2558, -107.2560, -107.2562, -107.2563,
        -107.2565], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4966e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4703, -7.4764, -7.4790, -7.4801, -7.4806, -7.4813, -7.4819, -7.4818,
        -7.4812, -7.4809, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4811,
        -7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1957e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0164e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6830, -99.7045, -99.7137, -99.7190, -99.7227, -99.7254, -99.7273,
        -99.7286, -99.7296, -99.7303, -99.7308, -99.7312, -99.7314, -99.7316,
        -99.7317, -99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7319,
        -99.7319, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4474e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2540, -107.2545, -107.2549, -107.2552, -107.2555, -107.2558,
        -107.2560, -107.2562, -107.2563, -107.2565], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4811, -7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4812], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7319, -99.7319,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 2 	 FLi 	 LiF 	 0.007510837347175034

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5706], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8387], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5706], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7369], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8387], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 10 	 CH4O 	 CH4O 	 6.340248935060858e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6878, -99.7092, -99.7171, -99.7216, -99.7246, -99.7267, -99.7283,
        -99.7294, -99.7301, -99.7307, -99.7311, -99.7314, -99.7315, -99.7317,
        -99.7318, -99.7318, -99.7319, -99.7319, -99.7319, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2065e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.2065e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7318, -99.7319, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320,
        -99.7320, -99.7320, -99.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 5 	 F 	 F 	 8.530919252388034e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1599], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5241], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1599], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7370], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5241], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 9 	 HN2O 	 HON2 	 0.0009812255938138

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4554], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7309], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0493], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4554], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7309], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 11 	 HF2 	 HF2 	 0.0010361346594476156

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0330, -93.5572, -93.4297, -93.3769, -93.3380, -93.3133, -93.2957,
        -93.2833, -93.2746, -93.2684, -93.2640, -93.2609, -93.2586, -93.2570,
        -93.2558, -93.2550, -93.2544, -93.2540, -93.2536, -93.2534, -93.2532,
        -93.2531, -93.2530, -93.2530, -93.2529], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4186e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7653, -37.8009, -37.8128, -37.8193, -37.8236, -37.8266, -37.8287,
        -37.8302, -37.8313, -37.8321, -37.8326, -37.8330, -37.8332, -37.8334,
        -37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8598e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4318, -54.5001, -54.5279, -54.5438, -54.5545, -54.5620, -54.5674,
        -54.5712, -54.5738, -54.5757, -54.5771, -54.5780, -54.5787, -54.5791,
        -54.5795, -54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5801,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0705e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2638, -0.4424, -0.4661, -0.4773, -0.4841, -0.4887, -0.4917, -0.4939,
        -0.4953, -0.4964, -0.4971, -0.4976, -0.4979, -0.4982, -0.4983, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6058e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5330e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2550, -93.2544, -93.2540, -93.2536, -93.2534, -93.2532, -93.2531,
        -93.2530, -93.2530, -93.2529], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5800, -54.5801, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 3 	 CHN 	 CNH 	 0.005914245536717875

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4402, -54.5075, -54.5331, -54.5475, -54.5571, -54.5639, -54.5686,
        -54.5720, -54.5744, -54.5761, -54.5773, -54.5781, -54.5787, -54.5791,
        -54.5794, -54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5800, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2216e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2216e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5796, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 8 	 N 	 N 	 1.956583607195695e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4698, -7.4754, -7.4783, -7.4798, -7.4805, -7.4810, -7.4817, -7.4819,
        -7.4814, -7.4810, -7.4809, -7.4809, -7.4809, -7.4810, -7.4810, -7.4811,
        -7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1581e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0191e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3172e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4811, -7.4811, -7.4811, -7.4811, -7.4812, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4812], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 7 	 Li 	 Li 	 2.280483222887626e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0687, -1.1366, -1.1545, -1.1636, -1.1694, -1.1733, -1.1760, -1.1779,
        -1.1792, -1.1801, -1.1808, -1.1812, -1.1815, -1.1817, -1.1819, -1.1820,
        -1.1821, -1.1821, -1.1822, -1.1822, -1.1822, -1.1822, -1.1822, -1.1822,
        -1.1822], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8448e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6897e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2424, -0.4358, -0.4624, -0.4750, -0.4825, -0.4876, -0.4910, -0.4933,
        -0.4950, -0.4961, -0.4969, -0.4974, -0.4978, -0.4981, -0.4983, -0.4984,
        -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6026e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6248e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8951e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3331, -0.4617, -0.4769, -0.4843, -0.4889, -0.4919, -0.4940, -0.4954,
        -0.4964, -0.4971, -0.4976, -0.4979, -0.4982, -0.4983, -0.4985, -0.4985,
        -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6027e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3807e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1820, -1.1821, -1.1821, -1.1822, -1.1822, -1.1822, -1.1822, -1.1822,
        -1.1822, -1.1822], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 34 	 0 	 H2 	 H2 	 2.5535583036326384e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7591, -37.7965, -37.8098, -37.8171, -37.8220, -37.8254, -37.8279,
        -37.8296, -37.8308, -37.8317, -37.8323, -37.8327, -37.8330, -37.8333,
        -37.8334, -37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337,
        -37.8337, -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0202e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0202e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8337,
        -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 4 	 C 	 C 	 1.0693047588217488e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8466, -109.7632, -109.6888, -109.6328, -109.5955, -109.5701,
        -109.5526, -109.5405, -109.5321, -109.5263, -109.5222, -109.5194,
        -109.5175, -109.5161, -109.5152, -109.5145, -109.5141, -109.5137,
        -109.5135, -109.5134, -109.5132, -109.5132, -109.5131, -109.5131,
        -109.5131], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2609e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4362, -54.5041, -54.5306, -54.5458, -54.5559, -54.5630, -54.5681,
        -54.5716, -54.5742, -54.5759, -54.5772, -54.5781, -54.5787, -54.5791,
        -54.5794, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4223, -54.4896, -54.5202, -54.5381, -54.5504, -54.5590, -54.5652,
        -54.5696, -54.5727, -54.5749, -54.5765, -54.5776, -54.5784, -54.5789,
        -54.5793, -54.5795, -54.5797, -54.5799, -54.5799, -54.5800, -54.5801,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2448e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5145, -109.5141, -109.5137, -109.5135, -109.5134, -109.5132,
        -109.5132, -109.5131, -109.5131, -109.5131], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5795, -54.5797, -54.5799, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 34 	 1 	 N2 	 N2 	 2.9252502222842365e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e34)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e34/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e34/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 34 || ,[' rho : 2.935129', ' ae : 49.268691', ' E : 1.781495'] ,|| total loss 36.058312 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4555], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7310], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0495], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4555], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7310], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 11 	 HF2 	 HF2 	 0.0010396573962735353

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0028, -1.1098, -1.1381, -1.1527, -1.1619, -1.1682, -1.1725, -1.1755,
        -1.1776, -1.1790, -1.1801, -1.1808, -1.1813, -1.1816, -1.1819, -1.1820,
        -1.1822, -1.1822, -1.1823, -1.1823, -1.1824, -1.1824, -1.1824, -1.1824,
        -1.1824], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8721e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.7442e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2218, -0.4291, -0.4587, -0.4726, -0.4810, -0.4865, -0.4902, -0.4928,
        -0.4946, -0.4958, -0.4967, -0.4973, -0.4977, -0.4980, -0.4982, -0.4984,
        -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6006e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7106e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9456e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2922, -0.4506, -0.4707, -0.4803, -0.4861, -0.4900, -0.4927, -0.4945,
        -0.4958, -0.4967, -0.4973, -0.4977, -0.4980, -0.4982, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6006e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4925e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1820, -1.1822, -1.1822, -1.1823, -1.1823, -1.1824, -1.1824, -1.1824,
        -1.1824, -1.1824], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 0 	 H2 	 H2 	 2.6490579055388463e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2955, -107.3278, -107.2771, -107.2674, -107.2607, -107.2566,
        -107.2543, -107.2529, -107.2521, -107.2518, -107.2519, -107.2523,
        -107.2528, -107.2534, -107.2540, -107.2546, -107.2552, -107.2557,
        -107.2561, -107.2565, -107.2568, -107.2571, -107.2573, -107.2575,
        -107.2576], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5113e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4726, -7.4784, -7.4802, -7.4807, -7.4813, -7.4820, -7.4819, -7.4813,
        -7.4810, -7.4809, -7.4810, -7.4810, -7.4811, -7.4811, -7.4812, -7.4812,
        -7.4812, -7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1301e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0861e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6866, -99.7081, -99.7164, -99.7212, -99.7244, -99.7267, -99.7283,
        -99.7295, -99.7303, -99.7309, -99.7313, -99.7316, -99.7318, -99.7320,
        -99.7321, -99.7321, -99.7322, -99.7322, -99.7323, -99.7323, -99.7323,
        -99.7323, -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0132e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2546, -107.2552, -107.2557, -107.2561, -107.2565, -107.2568,
        -107.2571, -107.2573, -107.2575, -107.2576], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4812, -7.4812, -7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7321, -99.7322, -99.7322, -99.7323, -99.7323, -99.7323, -99.7323,
        -99.7323, -99.7323, -99.7323], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 2 	 FLi 	 LiF 	 0.00745517774482449

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7505, -37.7888, -37.8044, -37.8132, -37.8192, -37.8234, -37.8265,
        -37.8286, -37.8301, -37.8312, -37.8320, -37.8325, -37.8329, -37.8332,
        -37.8334, -37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0023e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0023e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8335, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 4 	 C 	 C 	 1.0554410627842748e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6872, -99.7086, -99.7168, -99.7215, -99.7246, -99.7269, -99.7285,
        -99.7296, -99.7304, -99.7310, -99.7314, -99.7317, -99.7319, -99.7320,
        -99.7321, -99.7322, -99.7323, -99.7323, -99.7323, -99.7323, -99.7324,
        -99.7324, -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7907e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7907e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7322, -99.7323, -99.7323, -99.7323, -99.7323, -99.7324, -99.7324,
        -99.7324, -99.7324, -99.7324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 5 	 F 	 F 	 5.485338303494157e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6940, -109.9183, -109.7686, -109.6865, -109.6335, -109.5973,
        -109.5721, -109.5545, -109.5422, -109.5335, -109.5275, -109.5233,
        -109.5204, -109.5183, -109.5168, -109.5158, -109.5151, -109.5146,
        -109.5143, -109.5140, -109.5139, -109.5138, -109.5137, -109.5136,
        -109.5136], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2601e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4147, -54.4733, -54.5077, -54.5289, -54.5436, -54.5542, -54.5618,
        -54.5672, -54.5711, -54.5738, -54.5757, -54.5771, -54.5781, -54.5787,
        -54.5792, -54.5795, -54.5798, -54.5799, -54.5800, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1838e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4209, -54.4875, -54.5186, -54.5370, -54.5496, -54.5585, -54.5649,
        -54.5694, -54.5726, -54.5749, -54.5765, -54.5776, -54.5784, -54.5790,
        -54.5794, -54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0662e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5158, -109.5151, -109.5146, -109.5143, -109.5140, -109.5139,
        -109.5138, -109.5137, -109.5136, -109.5136], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5797, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802, -54.5802,
        -54.5803, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 1 	 N2 	 N2 	 2.7998114760134266e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5250], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1612], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5250], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 9 	 HN2O 	 HON2 	 0.0009859649683643767

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5718], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8392], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5718], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8392], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 10 	 CH4O 	 CH4O 	 6.362097537096802e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4724, -7.4783, -7.4802, -7.4807, -7.4813, -7.4820, -7.4819, -7.4814,
        -7.4810, -7.4810, -7.4810, -7.4810, -7.4811, -7.4812, -7.4812, -7.4812,
        -7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1126e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1010e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2263e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4812, -7.4812, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4813,
        -7.4813, -7.4813], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 7 	 Li 	 Li 	 2.453447573133981e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2761, -0.4460, -0.4681, -0.4786, -0.4850, -0.4892, -0.4921, -0.4941,
        -0.4955, -0.4965, -0.4971, -0.4976, -0.4979, -0.4982, -0.4983, -0.4985,
        -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5976e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5538e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1953e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 6 	 H 	 H 	 3.947726347240846e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8852, -93.4943, -93.3976, -93.3532, -93.3227, -93.3028, -93.2887,
        -93.2788, -93.2718, -93.2669, -93.2633, -93.2608, -93.2590, -93.2577,
        -93.2568, -93.2561, -93.2556, -93.2553, -93.2550, -93.2549, -93.2547,
        -93.2546, -93.2546, -93.2545, -93.2545], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3952e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7446, -37.7794, -37.7974, -37.8082, -37.8156, -37.8209, -37.8246,
        -37.8274, -37.8293, -37.8307, -37.8317, -37.8324, -37.8328, -37.8332,
        -37.8334, -37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8062e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4432, -54.5099, -54.5349, -54.5489, -54.5582, -54.5648, -54.5694,
        -54.5727, -54.5750, -54.5766, -54.5778, -54.5786, -54.5791, -54.5795,
        -54.5798, -54.5800, -54.5802, -54.5802, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7047e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2143, -0.4265, -0.4573, -0.4717, -0.4803, -0.4861, -0.4899, -0.4926,
        -0.4944, -0.4957, -0.4966, -0.4973, -0.4977, -0.4980, -0.4982, -0.4984,
        -0.4985, -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5971e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7598e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2561, -93.2556, -93.2553, -93.2550, -93.2549, -93.2547, -93.2546,
        -93.2546, -93.2545, -93.2545], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8336, -37.8337, -37.8338, -37.8339, -37.8339, -37.8339, -37.8339,
        -37.8340, -37.8340, -37.8340], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5800, -54.5802, -54.5802, -54.5803, -54.5804, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 35 	 3 	 CHN 	 CNH 	 0.005826175673109604

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4365, -54.5043, -54.5308, -54.5460, -54.5561, -54.5632, -54.5682,
        -54.5718, -54.5743, -54.5761, -54.5773, -54.5782, -54.5788, -54.5793,
        -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9852e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9852e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5798, -54.5799, -54.5800, -54.5801, -54.5802, -54.5802, -54.5802,
        -54.5802, -54.5803, -54.5803], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 35 	 8 	 N 	 N 	 1.8740540874119723e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e35)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e35/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e35/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 35 || ,[' rho : 2.932253', ' ae : 49.029926', ' E : 1.759914'] ,|| total loss 35.885633 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1612], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5250], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1612], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5250], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 9 	 HN2O 	 HON2 	 0.0009892077377927396

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0567, -1.1320, -1.1519, -1.1621, -1.1685, -1.1728, -1.1758, -1.1779,
        -1.1794, -1.1804, -1.1811, -1.1816, -1.1819, -1.1822, -1.1824, -1.1825,
        -1.1826, -1.1826, -1.1827, -1.1827, -1.1827, -1.1827, -1.1827, -1.1827,
        -1.1827], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9164e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8328e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3109, -0.4557, -0.4736, -0.4821, -0.4874, -0.4909, -0.4932, -0.4949,
        -0.4960, -0.4968, -0.4974, -0.4978, -0.4981, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5938e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4908e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0206e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3344, -0.4620, -0.4771, -0.4844, -0.4889, -0.4919, -0.4940, -0.4954,
        -0.4964, -0.4971, -0.4976, -0.4979, -0.4982, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5939e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4363e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1825, -1.1826, -1.1826, -1.1827, -1.1827, -1.1827, -1.1827, -1.1827,
        -1.1827, -1.1827], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 0 	 H2 	 H2 	 2.8354044539355704e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4257, -54.4935, -54.5231, -54.5403, -54.5520, -54.5602, -54.5661,
        -54.5703, -54.5732, -54.5753, -54.5768, -54.5778, -54.5785, -54.5791,
        -54.5794, -54.5797, -54.5798, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0843e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0843e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5797, -54.5798, -54.5800, -54.5801, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 36 	 8 	 N 	 N 	 1.8852278247600587e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4725, -7.4784, -7.4802, -7.4808, -7.4814, -7.4821, -7.4820, -7.4814,
        -7.4811, -7.4810, -7.4811, -7.4811, -7.4812, -7.4812, -7.4813, -7.4813,
        -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814, -7.4814, -7.4814,
        -7.4814], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0790e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1467e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1591e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4813, -7.4813, -7.4813, -7.4813, -7.4813, -7.4814, -7.4814, -7.4814,
        -7.4814, -7.4814], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 7 	 Li 	 Li 	 2.55448459632919e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2998, -0.4527, -0.4718, -0.4810, -0.4866, -0.4903, -0.4929, -0.4946,
        -0.4959, -0.4967, -0.4973, -0.4977, -0.4980, -0.4982, -0.4984, -0.4985,
        -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5934e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5201e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1869e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 6 	 H 	 H 	 4.026870299017127e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9294, -93.5140, -93.4083, -93.3615, -93.3285, -93.3072, -93.2920,
        -93.2815, -93.2740, -93.2686, -93.2649, -93.2622, -93.2602, -93.2589,
        -93.2579, -93.2571, -93.2566, -93.2563, -93.2560, -93.2558, -93.2557,
        -93.2556, -93.2555, -93.2554, -93.2554], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3862e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7548, -37.7930, -37.8074, -37.8155, -37.8210, -37.8248, -37.8275,
        -37.8295, -37.8308, -37.8318, -37.8325, -37.8330, -37.8333, -37.8336,
        -37.8337, -37.8338, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5193e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4461, -54.5122, -54.5365, -54.5501, -54.5591, -54.5654, -54.5699,
        -54.5731, -54.5753, -54.5769, -54.5780, -54.5788, -54.5793, -54.5797,
        -54.5800, -54.5801, -54.5803, -54.5804, -54.5804, -54.5805, -54.5805,
        -54.5805, -54.5805, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5491e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2175, -0.4275, -0.4578, -0.4720, -0.4806, -0.4862, -0.4900, -0.4927,
        -0.4945, -0.4958, -0.4966, -0.4973, -0.4977, -0.4980, -0.4982, -0.4984,
        -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5933e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7758e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2571, -93.2566, -93.2563, -93.2560, -93.2558, -93.2557, -93.2556,
        -93.2555, -93.2554, -93.2554], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8338, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5801, -54.5803, -54.5804, -54.5804, -54.5805, -54.5805, -54.5805,
        -54.5805, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 3 	 CHN 	 CNH 	 0.0057761119087441914

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0510], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4563], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7316], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0510], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4563], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7316], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 11 	 HF2 	 HF2 	 0.0010459862113160613

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3079, -107.3344, -107.2830, -107.2718, -107.2642, -107.2596,
        -107.2566, -107.2549, -107.2539, -107.2535, -107.2535, -107.2538,
        -107.2543, -107.2548, -107.2554, -107.2560, -107.2566, -107.2571,
        -107.2575, -107.2579, -107.2582, -107.2585, -107.2587, -107.2588,
        -107.2590], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5253e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4720, -7.4780, -7.4801, -7.4808, -7.4813, -7.4820, -7.4822, -7.4817,
        -7.4813, -7.4811, -7.4811, -7.4812, -7.4812, -7.4813, -7.4813, -7.4814,
        -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814,
        -7.4814], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0556e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2013e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6823, -99.7030, -99.7127, -99.7185, -99.7225, -99.7254, -99.7275,
        -99.7290, -99.7301, -99.7309, -99.7314, -99.7318, -99.7321, -99.7323,
        -99.7324, -99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8800e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2560, -107.2566, -107.2571, -107.2575, -107.2579, -107.2582,
        -107.2585, -107.2587, -107.2588, -107.2590], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814, -7.4814,
        -7.4814, -7.4814], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7325, -99.7326, -99.7326, -99.7326, -99.7327, -99.7327, -99.7327,
        -99.7327, -99.7327, -99.7327], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 36 	 2 	 FLi 	 LiF 	 0.00738709916710371

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6821, -99.7029, -99.7125, -99.7183, -99.7223, -99.7252, -99.7273,
        -99.7288, -99.7299, -99.7307, -99.7312, -99.7316, -99.7319, -99.7321,
        -99.7322, -99.7323, -99.7324, -99.7324, -99.7324, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5155e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5155e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 36 	 5 	 F 	 F 	 4.632676593273203e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7584, -37.7959, -37.8093, -37.8168, -37.8218, -37.8253, -37.8278,
        -37.8296, -37.8308, -37.8317, -37.8323, -37.8328, -37.8331, -37.8333,
        -37.8334, -37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9444e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8336, -37.8337, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 36 	 4 	 C 	 C 	 1.0519997980981426e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.4768, -109.8944, -109.7500, -109.6737, -109.6248, -109.5914,
        -109.5681, -109.5518, -109.5404, -109.5324, -109.5268, -109.5229,
        -109.5201, -109.5182, -109.5168, -109.5159, -109.5152, -109.5148,
        -109.5144, -109.5142, -109.5141, -109.5139, -109.5139, -109.5138,
        -109.5138], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2579e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4152, -54.4748, -54.5089, -54.5297, -54.5442, -54.5545, -54.5620,
        -54.5673, -54.5711, -54.5738, -54.5757, -54.5770, -54.5780, -54.5786,
        -54.5791, -54.5794, -54.5796, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3641e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4150, -54.4739, -54.5082, -54.5292, -54.5438, -54.5543, -54.5618,
        -54.5672, -54.5710, -54.5737, -54.5756, -54.5770, -54.5779, -54.5786,
        -54.5791, -54.5794, -54.5796, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3722e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5159, -109.5152, -109.5148, -109.5144, -109.5142, -109.5141,
        -109.5139, -109.5139, -109.5138, -109.5138], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5794, -54.5796, -54.5798, -54.5799, -54.5800, -54.5800, -54.5801,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 36 	 1 	 N2 	 N2 	 2.542262263404741e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5716], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8393], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5716], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7372], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8393], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 36 	 10 	 CH4O 	 CH4O 	 6.387706401949786e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e36)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e36/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e36/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 36 || ,[' rho : 2.931435', ' ae : 48.836140', ' E : 1.761703'] ,|| total loss 35.746256 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7656, -37.8011, -37.8129, -37.8194, -37.8236, -37.8266, -37.8287,
        -37.8302, -37.8313, -37.8321, -37.8326, -37.8330, -37.8332, -37.8334,
        -37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8852e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8852e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 37 	 4 	 C 	 C 	 1.045146974108688e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4456, -54.5116, -54.5360, -54.5496, -54.5587, -54.5650, -54.5695,
        -54.5727, -54.5749, -54.5765, -54.5776, -54.5784, -54.5790, -54.5793,
        -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9824e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9824e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 37 	 8 	 N 	 N 	 1.8860761708678536e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6841, -99.7053, -99.7145, -99.7199, -99.7236, -99.7263, -99.7283,
        -99.7296, -99.7306, -99.7313, -99.7318, -99.7322, -99.7324, -99.7326,
        -99.7327, -99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1192e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1192e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7328, -99.7329, -99.7329, -99.7330, -99.7330, -99.7330, -99.7330,
        -99.7330, -99.7330, -99.7330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 37 	 5 	 F 	 F 	 1.8523233732705676e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3434, -0.4643, -0.4784, -0.4853, -0.4895, -0.4923, -0.4942, -0.4956,
        -0.4965, -0.4972, -0.4976, -0.4979, -0.4982, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5870e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4639e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1741e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 6 	 H 	 H 	 4.1451791159562947e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9852, -1.1032, -1.1345, -1.1507, -1.1609, -1.1678, -1.1726, -1.1760,
        -1.1783, -1.1799, -1.1810, -1.1818, -1.1824, -1.1828, -1.1830, -1.1832,
        -1.1834, -1.1835, -1.1835, -1.1836, -1.1836, -1.1836, -1.1836, -1.1836,
        -1.1837], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0549e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1098e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2131, -0.4259, -0.4570, -0.4715, -0.4802, -0.4859, -0.4898, -0.4925,
        -0.4944, -0.4957, -0.4966, -0.4972, -0.4977, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5879e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8327e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2857e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3386, -0.4631, -0.4777, -0.4848, -0.4892, -0.4921, -0.4941, -0.4955,
        -0.4964, -0.4971, -0.4976, -0.4979, -0.4981, -0.4983, -0.4984, -0.4985,
        -0.4986, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5879e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4660e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1832, -1.1834, -1.1835, -1.1835, -1.1836, -1.1836, -1.1836, -1.1836,
        -1.1836, -1.1837], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 0 	 H2 	 H2 	 3.342801524168352e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7970, -109.8558, -109.7379, -109.6666, -109.6202, -109.5885,
        -109.5665, -109.5512, -109.5406, -109.5331, -109.5279, -109.5243,
        -109.5218, -109.5200, -109.5188, -109.5180, -109.5174, -109.5169,
        -109.5166, -109.5164, -109.5163, -109.5162, -109.5161, -109.5161,
        -109.5160], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2608e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4253, -54.4927, -54.5227, -54.5403, -54.5522, -54.5607, -54.5667,
        -54.5709, -54.5740, -54.5761, -54.5776, -54.5787, -54.5794, -54.5800,
        -54.5803, -54.5806, -54.5808, -54.5809, -54.5810, -54.5811, -54.5811,
        -54.5811, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9259e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4416, -54.5087, -54.5342, -54.5487, -54.5583, -54.5650, -54.5698,
        -54.5732, -54.5755, -54.5772, -54.5784, -54.5792, -54.5798, -54.5802,
        -54.5805, -54.5807, -54.5809, -54.5810, -54.5810, -54.5811, -54.5811,
        -54.5811, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8269e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5180, -109.5174, -109.5169, -109.5166, -109.5164, -109.5163,
        -109.5162, -109.5161, -109.5161, -109.5160], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5807, -54.5809, -54.5810, -54.5810, -54.5811, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 37 	 1 	 N2 	 N2 	 2.4834095501092938e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0541], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4579], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7330], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0541], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4579], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7330], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 11 	 HF2 	 HF2 	 0.0010481813932740126

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2639, -107.3176, -107.2680, -107.2628, -107.2585, -107.2559,
        -107.2549, -107.2544, -107.2543, -107.2544, -107.2548, -107.2554,
        -107.2560, -107.2568, -107.2575, -107.2582, -107.2588, -107.2594,
        -107.2600, -107.2604, -107.2608, -107.2611, -107.2613, -107.2615,
        -107.2617], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5512e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4707, -7.4757, -7.4788, -7.4805, -7.4812, -7.4816, -7.4823, -7.4827,
        -7.4822, -7.4817, -7.4816, -7.4815, -7.4816, -7.4816, -7.4817, -7.4817,
        -7.4818, -7.4818, -7.4818, -7.4818, -7.4819, -7.4819, -7.4819, -7.4819,
        -7.4819], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0345e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5175e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6821, -99.7004, -99.7110, -99.7176, -99.7223, -99.7257, -99.7282,
        -99.7300, -99.7313, -99.7323, -99.7329, -99.7334, -99.7337, -99.7340,
        -99.7341, -99.7342, -99.7343, -99.7344, -99.7344, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7087e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2582, -107.2588, -107.2594, -107.2600, -107.2604, -107.2608,
        -107.2611, -107.2613, -107.2615, -107.2617], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4819, -7.4819, -7.4819,
        -7.4819, -7.4819], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7342, -99.7343, -99.7344, -99.7344, -99.7345, -99.7345, -99.7345,
        -99.7345, -99.7345, -99.7345], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 37 	 2 	 FLi 	 LiF 	 0.007347823269776744

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0090, -93.5499, -93.4283, -93.3772, -93.3399, -93.3162, -93.2992,
        -93.2874, -93.2790, -93.2731, -93.2689, -93.2659, -93.2638, -93.2622,
        -93.2611, -93.2603, -93.2598, -93.2594, -93.2591, -93.2589, -93.2587,
        -93.2586, -93.2585, -93.2584, -93.2584], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3687e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7533, -37.7915, -37.8066, -37.8152, -37.8209, -37.8250, -37.8279,
        -37.8299, -37.8314, -37.8324, -37.8331, -37.8337, -37.8340, -37.8343,
        -37.8345, -37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348,
        -37.8348, -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5515e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4249, -54.4921, -54.5223, -54.5401, -54.5521, -54.5607, -54.5668,
        -54.5711, -54.5742, -54.5764, -54.5779, -54.5790, -54.5797, -54.5802,
        -54.5806, -54.5809, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814,
        -54.5814, -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5967e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2470, -0.4371, -0.4631, -0.4754, -0.4828, -0.4877, -0.4911, -0.4934,
        -0.4950, -0.4961, -0.4969, -0.4974, -0.4978, -0.4981, -0.4983, -0.4984,
        -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987, -0.4987,
        -0.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5888e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7000e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2603, -93.2598, -93.2594, -93.2591, -93.2589, -93.2587, -93.2586,
        -93.2585, -93.2584, -93.2584], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8346, -37.8347, -37.8347, -37.8348, -37.8348, -37.8348, -37.8348,
        -37.8349, -37.8349, -37.8349], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5809, -54.5811, -54.5812, -54.5813, -54.5813, -54.5814, -54.5814,
        -54.5814, -54.5815, -54.5815], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4987, -0.4987,
        -0.4987, -0.4987], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 3 	 CHN 	 CNH 	 0.005674946941246793

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5747], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7389], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8407], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5747], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7389], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8407], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 10 	 CH4O 	 CH4O 	 6.354402214931419e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4729, -7.4787, -7.4807, -7.4813, -7.4818, -7.4825, -7.4825, -7.4820,
        -7.4816, -7.4815, -7.4815, -7.4816, -7.4816, -7.4817, -7.4817, -7.4818,
        -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0121e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4969e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0256e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 7 	 Li 	 Li 	 3.330452365365663e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1645], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5271], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1645], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7386], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5271], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 37 	 9 	 HN2O 	 HON2 	 0.0009913695978056194

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e37)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e37/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e37/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 37 || ,[' rho : 2.933423', ' ae : 48.607849', ' E : 1.647933'] ,|| total loss 35.591227 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4755, -7.4786, -7.4803, -7.4811, -7.4814, -7.4821, -7.4826,
        -7.4822, -7.4817, -7.4815, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816,
        -7.4817, -7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.9648e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4432e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9944e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 7 	 Li 	 Li 	 3.2233453881662696e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6810, -99.6983, -99.7090, -99.7158, -99.7207, -99.7243, -99.7269,
        -99.7288, -99.7301, -99.7311, -99.7318, -99.7323, -99.7327, -99.7329,
        -99.7331, -99.7332, -99.7333, -99.7333, -99.7334, -99.7334, -99.7334,
        -99.7334, -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5319e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5319e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7332, -99.7333, -99.7333, -99.7334, -99.7334, -99.7334, -99.7334,
        -99.7335, -99.7335, -99.7335], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 38 	 5 	 F 	 F 	 4.558940229391301e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6625, -109.9247, -109.7721, -109.6893, -109.6360, -109.5995,
        -109.5741, -109.5564, -109.5440, -109.5353, -109.5292, -109.5250,
        -109.5220, -109.5199, -109.5184, -109.5174, -109.5167, -109.5162,
        -109.5159, -109.5156, -109.5154, -109.5153, -109.5152, -109.5152,
        -109.5151], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2572e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4222, -54.4886, -54.5195, -54.5378, -54.5502, -54.5590, -54.5653,
        -54.5698, -54.5730, -54.5753, -54.5769, -54.5780, -54.5788, -54.5793,
        -54.5797, -54.5800, -54.5802, -54.5803, -54.5804, -54.5804, -54.5805,
        -54.5805, -54.5805, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6848e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4494, -54.5146, -54.5381, -54.5513, -54.5600, -54.5660, -54.5703,
        -54.5734, -54.5755, -54.5770, -54.5781, -54.5788, -54.5794, -54.5797,
        -54.5800, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805, -54.5805,
        -54.5806, -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5179e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5174, -109.5167, -109.5162, -109.5159, -109.5156, -109.5154,
        -109.5153, -109.5152, -109.5152, -109.5151], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5802, -54.5803, -54.5804, -54.5805, -54.5805, -54.5805, -54.5806,
        -54.5806, -54.5806, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 38 	 1 	 N2 	 N2 	 2.3345842884459458e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1627], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5260], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1627], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7378], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5260], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 9 	 HN2O 	 HON2 	 0.0009974710261068823

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7563, -37.7941, -37.8081, -37.8160, -37.8213, -37.8250, -37.8276,
        -37.8295, -37.8308, -37.8317, -37.8324, -37.8329, -37.8332, -37.8334,
        -37.8336, -37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7414e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7414e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8337, -37.8338, -37.8338, -37.8339, -37.8339, -37.8339, -37.8339,
        -37.8339, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 38 	 4 	 C 	 C 	 1.005653269495738e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2476, -107.3105, -107.2614, -107.2578, -107.2545, -107.2525,
        -107.2519, -107.2518, -107.2520, -107.2523, -107.2528, -107.2535,
        -107.2542, -107.2550, -107.2558, -107.2565, -107.2572, -107.2578,
        -107.2584, -107.2589, -107.2593, -107.2596, -107.2599, -107.2601,
        -107.2602], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5420e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4706, -7.4756, -7.4787, -7.4803, -7.4810, -7.4814, -7.4821, -7.4824,
        -7.4820, -7.4815, -7.4813, -7.4813, -7.4814, -7.4814, -7.4815, -7.4815,
        -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5872e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3409e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6859, -99.7072, -99.7158, -99.7209, -99.7243, -99.7267, -99.7285,
        -99.7297, -99.7306, -99.7313, -99.7317, -99.7320, -99.7323, -99.7324,
        -99.7325, -99.7326, -99.7327, -99.7327, -99.7327, -99.7327, -99.7328,
        -99.7328, -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6171e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2565, -107.2572, -107.2578, -107.2584, -107.2589, -107.2593,
        -107.2596, -107.2599, -107.2601, -107.2602], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7326, -99.7327, -99.7327, -99.7327, -99.7327, -99.7328, -99.7328,
        -99.7328, -99.7328, -99.7328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 38 	 2 	 FLi 	 LiF 	 0.007308239292485692

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0707, -1.1385, -1.1564, -1.1655, -1.1713, -1.1752, -1.1779, -1.1798,
        -1.1811, -1.1820, -1.1827, -1.1831, -1.1834, -1.1836, -1.1838, -1.1839,
        -1.1840, -1.1840, -1.1841, -1.1841, -1.1841, -1.1841, -1.1841, -1.1841,
        -1.1841], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1302e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2603e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2522, -0.4386, -0.4640, -0.4759, -0.4832, -0.4879, -0.4912, -0.4935,
        -0.4950, -0.4961, -0.4969, -0.4974, -0.4978, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5742e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8012e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4089e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2208, -0.4285, -0.4584, -0.4723, -0.4808, -0.4863, -0.4901, -0.4927,
        -0.4945, -0.4957, -0.4966, -0.4972, -0.4976, -0.4979, -0.4981, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5742e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9114e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1839, -1.1840, -1.1840, -1.1841, -1.1841, -1.1841, -1.1841, -1.1841,
        -1.1841, -1.1841], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 0 	 H2 	 H2 	 3.6982144104322346e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4482, -54.5135, -54.5373, -54.5505, -54.5593, -54.5654, -54.5697,
        -54.5728, -54.5750, -54.5765, -54.5776, -54.5783, -54.5789, -54.5792,
        -54.5795, -54.5797, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1684e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1684e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5797, -54.5798, -54.5799, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 38 	 8 	 N 	 N 	 1.9497740131939616e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2295, -0.4314, -0.4600, -0.4733, -0.4814, -0.4868, -0.4904, -0.4929,
        -0.4946, -0.4958, -0.4967, -0.4973, -0.4977, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5729e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8885e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1459e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4983, -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 6 	 H 	 H 	 4.536510362342982e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9355, -93.5176, -93.4109, -93.3639, -93.3307, -93.3092, -93.2940,
        -93.2833, -93.2758, -93.2705, -93.2667, -93.2640, -93.2621, -93.2607,
        -93.2597, -93.2590, -93.2585, -93.2581, -93.2579, -93.2577, -93.2576,
        -93.2575, -93.2574, -93.2573, -93.2573], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3439e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7455, -37.7810, -37.7986, -37.8090, -37.8161, -37.8212, -37.8249,
        -37.8275, -37.8294, -37.8307, -37.8316, -37.8323, -37.8328, -37.8331,
        -37.8333, -37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338,
        -37.8338, -37.8338, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9562e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4226, -54.4893, -54.5199, -54.5380, -54.5503, -54.5590, -54.5652,
        -54.5696, -54.5728, -54.5750, -54.5766, -54.5777, -54.5784, -54.5790,
        -54.5794, -54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801,
        -54.5802, -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1205e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2133, -0.4259, -0.4569, -0.4714, -0.4801, -0.4859, -0.4898, -0.4925,
        -0.4943, -0.4956, -0.4965, -0.4972, -0.4976, -0.4979, -0.4981, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5728e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9503e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2590, -93.2585, -93.2581, -93.2579, -93.2577, -93.2576, -93.2575,
        -93.2574, -93.2573, -93.2573], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8335, -37.8336, -37.8337, -37.8337, -37.8338, -37.8338, -37.8338,
        -37.8338, -37.8339, -37.8339], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5798, -54.5799, -54.5800, -54.5801, -54.5801, -54.5802,
        -54.5802, -54.5802, -54.5802], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 3 	 CHN 	 CNH 	 0.0055884501679357365

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5722], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8397], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5722], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8397], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 10 	 CH4O 	 CH4O 	 6.437650019422073e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0506], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4561], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7312], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0506], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4561], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7312], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 38 	 11 	 HF2 	 HF2 	 0.00106047963894253

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e38)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e38/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e38/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 38 || ,[' rho : 2.927040', ' ae : 48.411551', ' E : 1.754652'] ,|| total loss 35.435508 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0503], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4559], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7310], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0503], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4559], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7310], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 11 	 HF2 	 HF2 	 0.001061585652888547

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4378, -54.5051, -54.5313, -54.5461, -54.5561, -54.5630, -54.5680,
        -54.5715, -54.5739, -54.5757, -54.5769, -54.5778, -54.5784, -54.5788,
        -54.5791, -54.5793, -54.5795, -54.5796, -54.5797, -54.5797, -54.5797,
        -54.5798, -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5876e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5876e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5793, -54.5795, -54.5796, -54.5797, -54.5797, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 39 	 8 	 N 	 N 	 2.07098838511896e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6570, -109.9238, -109.7711, -109.6883, -109.6350, -109.5985,
        -109.5732, -109.5554, -109.5430, -109.5343, -109.5283, -109.5240,
        -109.5210, -109.5189, -109.5175, -109.5165, -109.5157, -109.5152,
        -109.5149, -109.5146, -109.5145, -109.5144, -109.5143, -109.5142,
        -109.5142], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2531e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4497, -54.5146, -54.5379, -54.5509, -54.5595, -54.5655, -54.5698,
        -54.5728, -54.5749, -54.5764, -54.5775, -54.5782, -54.5787, -54.5791,
        -54.5793, -54.5795, -54.5796, -54.5797, -54.5798, -54.5798, -54.5799,
        -54.5799, -54.5799, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3796e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4296, -54.4974, -54.5258, -54.5422, -54.5533, -54.5610, -54.5666,
        -54.5705, -54.5733, -54.5753, -54.5767, -54.5776, -54.5783, -54.5788,
        -54.5791, -54.5794, -54.5795, -54.5797, -54.5797, -54.5798, -54.5798,
        -54.5799, -54.5799, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4896e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5165, -109.5157, -109.5152, -109.5149, -109.5146, -109.5145,
        -109.5144, -109.5143, -109.5142, -109.5142], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5794, -54.5795, -54.5797, -54.5797, -54.5798, -54.5798, -54.5799,
        -54.5799, -54.5799, -54.5799], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 39 	 1 	 N2 	 N2 	 2.1549130706077255e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7571, -37.7947, -37.8085, -37.8162, -37.8213, -37.8249, -37.8275,
        -37.8293, -37.8306, -37.8315, -37.8322, -37.8326, -37.8330, -37.8332,
        -37.8333, -37.8334, -37.8335, -37.8336, -37.8336, -37.8336, -37.8337,
        -37.8337, -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0992e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0992e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8334, -37.8335, -37.8336, -37.8336, -37.8336, -37.8337, -37.8337,
        -37.8337, -37.8337, -37.8337], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 39 	 4 	 C 	 C 	 1.0841947153819663e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5724], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7375], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8398], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5724], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7375], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8398], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 10 	 CH4O 	 CH4O 	 6.440838595054859e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0425, -1.1272, -1.1497, -1.1612, -1.1685, -1.1734, -1.1768, -1.1792,
        -1.1809, -1.1820, -1.1828, -1.1834, -1.1838, -1.1840, -1.1842, -1.1844,
        -1.1845, -1.1845, -1.1846, -1.1846, -1.1846, -1.1847, -1.1847, -1.1847,
        -1.1847], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2024e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4048e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2859, -0.4487, -0.4695, -0.4795, -0.4856, -0.4896, -0.4923, -0.4942,
        -0.4956, -0.4965, -0.4971, -0.4976, -0.4979, -0.4981, -0.4983, -0.4984,
        -0.4984, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5677e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7453e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5404e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2571, -0.4401, -0.4648, -0.4764, -0.4835, -0.4882, -0.4914, -0.4936,
        -0.4951, -0.4961, -0.4969, -0.4974, -0.4978, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5677e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8316e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1844, -1.1845, -1.1845, -1.1846, -1.1846, -1.1846, -1.1847, -1.1847,
        -1.1847, -1.1847], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 0 	 H2 	 H2 	 4.0376868678152544e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1633], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7379], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5263], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1633], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7379], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5263], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 9 	 HN2O 	 HON2 	 0.0010044148007470385

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2917, -107.3303, -107.2782, -107.2696, -107.2635, -107.2597,
        -107.2577, -107.2564, -107.2556, -107.2553, -107.2555, -107.2559,
        -107.2564, -107.2571, -107.2577, -107.2584, -107.2590, -107.2596,
        -107.2601, -107.2605, -107.2608, -107.2611, -107.2614, -107.2615,
        -107.2617], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5545e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4722, -7.4779, -7.4803, -7.4811, -7.4815, -7.4822, -7.4826, -7.4822,
        -7.4817, -7.4815, -7.4815, -7.4815, -7.4816, -7.4816, -7.4817, -7.4817,
        -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.0913e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4821e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6813, -99.6997, -99.7101, -99.7167, -99.7213, -99.7246, -99.7271,
        -99.7289, -99.7302, -99.7311, -99.7317, -99.7322, -99.7325, -99.7327,
        -99.7329, -99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332,
        -99.7332, -99.7332, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.0051e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2584, -107.2590, -107.2596, -107.2601, -107.2605, -107.2608,
        -107.2611, -107.2614, -107.2615, -107.2617], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7330, -99.7331, -99.7331, -99.7332, -99.7332, -99.7332, -99.7332,
        -99.7332, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 39 	 2 	 FLi 	 LiF 	 0.007239765932298778

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9705, -93.5336, -93.4197, -93.3710, -93.3358, -93.3133, -93.2973,
        -93.2861, -93.2782, -93.2726, -93.2686, -93.2658, -93.2638, -93.2624,
        -93.2613, -93.2606, -93.2601, -93.2597, -93.2594, -93.2592, -93.2591,
        -93.2590, -93.2589, -93.2588, -93.2588], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3304e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7474, -37.7841, -37.8010, -37.8108, -37.8176, -37.8223, -37.8257,
        -37.8282, -37.8299, -37.8312, -37.8320, -37.8327, -37.8331, -37.8334,
        -37.8336, -37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5815e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4321, -54.5000, -54.5278, -54.5438, -54.5546, -54.5622, -54.5676,
        -54.5714, -54.5741, -54.5760, -54.5774, -54.5783, -54.5790, -54.5794,
        -54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5805, -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6937e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2411, -0.4351, -0.4620, -0.4746, -0.4823, -0.4874, -0.4908, -0.4932,
        -0.4948, -0.4960, -0.4968, -0.4973, -0.4977, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5674e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8832e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2606, -93.2601, -93.2597, -93.2594, -93.2592, -93.2591, -93.2590,
        -93.2589, -93.2588, -93.2588], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8338, -37.8339, -37.8339, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804, -54.5805,
        -54.5805, -54.5805, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 3 	 CHN 	 CNH 	 0.00551790183333304

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3365, -0.4624, -0.4773, -0.4845, -0.4890, -0.4919, -0.4940, -0.4954,
        -0.4963, -0.4970, -0.4975, -0.4978, -0.4981, -0.4982, -0.4983, -0.4984,
        -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5654e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6327e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1309e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4984, -0.4985, -0.4985, -0.4985, -0.4986, -0.4986, -0.4986, -0.4986,
        -0.4986, -0.4986], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 6 	 H 	 H 	 4.6306950748253856e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4737, -7.4793, -7.4809, -7.4814, -7.4819, -7.4825, -7.4823, -7.4818,
        -7.4815, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816, -7.4817, -7.4817,
        -7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.8942e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4475e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7803e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4817, -7.4817, -7.4817, -7.4817, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4818, -7.4818], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 39 	 7 	 Li 	 Li 	 3.2191017461263015e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6863, -99.7075, -99.7160, -99.7209, -99.7242, -99.7266, -99.7283,
        -99.7295, -99.7304, -99.7310, -99.7315, -99.7318, -99.7320, -99.7322,
        -99.7323, -99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3804e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3804e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7323, -99.7324, -99.7324, -99.7325, -99.7325, -99.7325, -99.7325,
        -99.7325, -99.7325, -99.7325], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 39 	 5 	 F 	 F 	 4.56526574320826e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e39)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e39/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e39/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 39 || ,[' rho : 2.924721', ' ae : 48.185649', ' E : 1.797873'] ,|| total loss 35.272669 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4710, -7.4759, -7.4789, -7.4805, -7.4811, -7.4815, -7.4822, -7.4825,
        -7.4820, -7.4815, -7.4814, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816,
        -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.7311e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3963e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.7476e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 7 	 Li 	 Li 	 3.118640784101878e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2795, -107.3246, -107.2729, -107.2658, -107.2605, -107.2572,
        -107.2555, -107.2546, -107.2540, -107.2539, -107.2541, -107.2546,
        -107.2552, -107.2559, -107.2566, -107.2573, -107.2579, -107.2585,
        -107.2590, -107.2595, -107.2598, -107.2601, -107.2604, -107.2606,
        -107.2607], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5489e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4709, -7.4757, -7.4787, -7.4804, -7.4811, -7.4814, -7.4821, -7.4825,
        -7.4821, -7.4815, -7.4814, -7.4813, -7.4814, -7.4815, -7.4815, -7.4816,
        -7.4816, -7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(8.6466e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3718e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6820, -99.7024, -99.7120, -99.7178, -99.7218, -99.7248, -99.7269,
        -99.7284, -99.7295, -99.7302, -99.7308, -99.7312, -99.7315, -99.7316,
        -99.7318, -99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7321,
        -99.7321, -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0025e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2573, -107.2579, -107.2585, -107.2590, -107.2595, -107.2598,
        -107.2601, -107.2604, -107.2606, -107.2607], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4816, -7.4816, -7.4816, -7.4816, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7319, -99.7319, -99.7320, -99.7320, -99.7320, -99.7321, -99.7321,
        -99.7321, -99.7321, -99.7321], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 40 	 2 	 FLi 	 LiF 	 0.007212089898509071

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4555], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7305], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0495], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4555], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7305], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 11 	 HF2 	 HF2 	 0.0010699710087444254

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1602], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7365], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5245], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1602], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7365], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5245], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 9 	 HN2O 	 HON2 	 0.0010172597606889866

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4237, -54.4907, -54.5207, -54.5383, -54.5502, -54.5586, -54.5646,
        -54.5689, -54.5720, -54.5741, -54.5756, -54.5767, -54.5774, -54.5780,
        -54.5783, -54.5786, -54.5788, -54.5789, -54.5790, -54.5790, -54.5791,
        -54.5791, -54.5791, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5697e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5697e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5786, -54.5788, -54.5789, -54.5790, -54.5790, -54.5791, -54.5791,
        -54.5791, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 40 	 8 	 N 	 N 	 2.3595393148008103e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9243, -93.5128, -93.4082, -93.3620, -93.3294, -93.3084, -93.2934,
        -93.2830, -93.2756, -93.2704, -93.2667, -93.2640, -93.2622, -93.2608,
        -93.2599, -93.2592, -93.2587, -93.2583, -93.2581, -93.2579, -93.2578,
        -93.2577, -93.2576, -93.2575, -93.2575], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3097e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7448, -37.7799, -37.7975, -37.8080, -37.8152, -37.8203, -37.8240,
        -37.8267, -37.8286, -37.8299, -37.8308, -37.8315, -37.8320, -37.8323,
        -37.8326, -37.8327, -37.8328, -37.8329, -37.8330, -37.8330, -37.8330,
        -37.8331, -37.8331, -37.8331, -37.8331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1375e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4218, -54.4881, -54.5188, -54.5369, -54.5492, -54.5579, -54.5642,
        -54.5686, -54.5718, -54.5740, -54.5756, -54.5767, -54.5774, -54.5780,
        -54.5784, -54.5786, -54.5788, -54.5790, -54.5790, -54.5791, -54.5792,
        -54.5792, -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4946e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2255, -0.4299, -0.4591, -0.4728, -0.4810, -0.4865, -0.4902, -0.4927,
        -0.4945, -0.4957, -0.4966, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5526e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0683e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2592, -93.2587, -93.2583, -93.2581, -93.2579, -93.2578, -93.2577,
        -93.2576, -93.2575, -93.2575], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8327, -37.8328, -37.8329, -37.8330, -37.8330, -37.8330, -37.8331,
        -37.8331, -37.8331, -37.8331], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5786, -54.5788, -54.5790, -54.5790, -54.5791, -54.5792, -54.5792,
        -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 3 	 CHN 	 CNH 	 0.0054414684407310164

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5704], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8391], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5704], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7362], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8391], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 10 	 CH4O 	 CH4O 	 6.514761521655746e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6814, -99.7018, -99.7113, -99.7170, -99.7210, -99.7239, -99.7259,
        -99.7274, -99.7285, -99.7292, -99.7298, -99.7302, -99.7304, -99.7306,
        -99.7308, -99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7310, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.2497e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2497e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7309, -99.7309, -99.7310, -99.7310, -99.7310, -99.7310, -99.7310,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 40 	 5 	 F 	 F 	 1.8879649425989777e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6088, -109.9215, -109.7681, -109.6859, -109.6329, -109.5967,
        -109.5716, -109.5539, -109.5416, -109.5330, -109.5269, -109.5227,
        -109.5197, -109.5176, -109.5162, -109.5152, -109.5144, -109.5139,
        -109.5136, -109.5134, -109.5132, -109.5131, -109.5130, -109.5129,
        -109.5129], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2480e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4423, -54.5086, -54.5335, -54.5475, -54.5568, -54.5633, -54.5679,
        -54.5712, -54.5735, -54.5751, -54.5763, -54.5771, -54.5777, -54.5781,
        -54.5783, -54.5785, -54.5787, -54.5788, -54.5788, -54.5789, -54.5789,
        -54.5789, -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4224, -54.4890, -54.5194, -54.5372, -54.5494, -54.5580, -54.5641,
        -54.5685, -54.5716, -54.5738, -54.5753, -54.5764, -54.5772, -54.5777,
        -54.5781, -54.5784, -54.5786, -54.5787, -54.5788, -54.5788, -54.5789,
        -54.5789, -54.5789, -54.5789, -54.5790], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8892e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5152, -109.5144, -109.5139, -109.5136, -109.5134, -109.5132,
        -109.5131, -109.5130, -109.5129, -109.5129], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5784, -54.5786, -54.5787, -54.5788, -54.5788, -54.5789, -54.5789,
        -54.5789, -54.5789, -54.5790], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 40 	 1 	 N2 	 N2 	 1.890682137697828e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3349, -0.4620, -0.4770, -0.4843, -0.4888, -0.4918, -0.4938, -0.4953,
        -0.4962, -0.4969, -0.4974, -0.4977, -0.4980, -0.4982, -0.4983, -0.4983,
        -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5473e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7890e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0947e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 6 	 H 	 H 	 5.110928170882062e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0170, -1.1171, -1.1438, -1.1576, -1.1663, -1.1722, -1.1762, -1.1791,
        -1.1810, -1.1824, -1.1834, -1.1840, -1.1845, -1.1848, -1.1851, -1.1852,
        -1.1853, -1.1854, -1.1855, -1.1855, -1.1855, -1.1855, -1.1856, -1.1856,
        -1.1856], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3205e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.6410e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3083, -0.4549, -0.4730, -0.4817, -0.4870, -0.4906, -0.4930, -0.4947,
        -0.4958, -0.4966, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5463e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8629e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7337e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3135, -0.4563, -0.4738, -0.4822, -0.4874, -0.4908, -0.4932, -0.4948,
        -0.4959, -0.4967, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5463e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8495e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1852, -1.1853, -1.1854, -1.1855, -1.1855, -1.1855, -1.1855, -1.1856,
        -1.1856, -1.1856], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 40 	 0 	 H2 	 H2 	 4.706709228111247e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7647, -37.8000, -37.8118, -37.8183, -37.8226, -37.8256, -37.8277,
        -37.8292, -37.8303, -37.8310, -37.8315, -37.8319, -37.8322, -37.8323,
        -37.8325, -37.8326, -37.8326, -37.8327, -37.8327, -37.8327, -37.8327,
        -37.8328, -37.8328, -37.8328, -37.8328], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5122e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5122e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8326, -37.8326, -37.8327, -37.8327, -37.8327, -37.8327, -37.8328,
        -37.8328, -37.8328, -37.8328], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 40 	 4 	 C 	 C 	 1.3988631008114859e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e40)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e40/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e40/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 40 || ,[' rho : 2.919999', ' ae : 48.044398', ' E : 2.004118'] ,|| total loss 35.155576 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6830, -99.7039, -99.7129, -99.7181, -99.7218, -99.7244, -99.7262,
        -99.7276, -99.7285, -99.7292, -99.7297, -99.7301, -99.7303, -99.7305,
        -99.7306, -99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7308, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0497e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0497e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7307, -99.7307, -99.7308, -99.7308, -99.7308, -99.7308, -99.7308,
        -99.7308, -99.7309, -99.7309], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 41 	 5 	 F 	 F 	 2.173154342498675e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4715, -7.4765, -7.4793, -7.4807, -7.4812, -7.4815, -7.4822, -7.4823,
        -7.4818, -7.4814, -7.4813, -7.4813, -7.4814, -7.4814, -7.4815, -7.4815,
        -7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.8504e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3302e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.5714e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4815, -7.4815, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816, -7.4816,
        -7.4816, -7.4816], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 7 	 Li 	 Li 	 2.970298360449374e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8708, -109.6889, -109.6509, -109.6076, -109.5778, -109.5576,
        -109.5438, -109.5343, -109.5277, -109.5232, -109.5201, -109.5180,
        -109.5165, -109.5155, -109.5148, -109.5143, -109.5140, -109.5137,
        -109.5136, -109.5134, -109.5134, -109.5133, -109.5133, -109.5132,
        -109.5132], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2482e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4198, -54.4849, -54.5164, -54.5350, -54.5478, -54.5569, -54.5634,
        -54.5680, -54.5713, -54.5736, -54.5752, -54.5764, -54.5772, -54.5778,
        -54.5782, -54.5784, -54.5786, -54.5788, -54.5789, -54.5789, -54.5790,
        -54.5790, -54.5790, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7698e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4200, -54.4853, -54.5166, -54.5353, -54.5480, -54.5570, -54.5634,
        -54.5680, -54.5713, -54.5736, -54.5752, -54.5764, -54.5772, -54.5778,
        -54.5782, -54.5784, -54.5786, -54.5788, -54.5789, -54.5789, -54.5790,
        -54.5790, -54.5790, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7665e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5143, -109.5140, -109.5137, -109.5136, -109.5134, -109.5134,
        -109.5133, -109.5133, -109.5132, -109.5132], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5784, -54.5786, -54.5788, -54.5789, -54.5789, -54.5790, -54.5790,
        -54.5790, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 41 	 1 	 N2 	 N2 	 1.8514184574356263e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9987, -93.5454, -93.4253, -93.3751, -93.3383, -93.3150, -93.2983,
        -93.2867, -93.2785, -93.2727, -93.2686, -93.2656, -93.2636, -93.2621,
        -93.2610, -93.2603, -93.2597, -93.2593, -93.2590, -93.2588, -93.2587,
        -93.2586, -93.2585, -93.2585, -93.2584], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2952e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7587, -37.7958, -37.8090, -37.8164, -37.8213, -37.8247, -37.8272,
        -37.8289, -37.8301, -37.8310, -37.8316, -37.8320, -37.8323, -37.8325,
        -37.8327, -37.8328, -37.8329, -37.8329, -37.8330, -37.8330, -37.8330,
        -37.8330, -37.8330, -37.8330, -37.8330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1096e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4327, -54.5003, -54.5277, -54.5433, -54.5538, -54.5612, -54.5665,
        -54.5702, -54.5729, -54.5747, -54.5760, -54.5770, -54.5776, -54.5781,
        -54.5784, -54.5786, -54.5788, -54.5789, -54.5790, -54.5790, -54.5790,
        -54.5791, -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5785e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2381, -0.4340, -0.4614, -0.4742, -0.4820, -0.4871, -0.4906, -0.4930,
        -0.4947, -0.4958, -0.4966, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5450e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0842e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2603, -93.2597, -93.2593, -93.2590, -93.2588, -93.2587, -93.2586,
        -93.2585, -93.2585, -93.2584], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8328, -37.8329, -37.8329, -37.8330, -37.8330, -37.8330, -37.8330,
        -37.8330, -37.8330, -37.8330], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5786, -54.5788, -54.5789, -54.5790, -54.5790, -54.5790, -54.5791,
        -54.5791, -54.5791, -54.5791], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 3 	 CHN 	 CNH 	 0.005362587013998801

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4305, -54.4981, -54.5261, -54.5421, -54.5529, -54.5605, -54.5660,
        -54.5698, -54.5725, -54.5744, -54.5758, -54.5767, -54.5774, -54.5779,
        -54.5782, -54.5784, -54.5786, -54.5787, -54.5788, -54.5789, -54.5789,
        -54.5789, -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8173e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8173e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5784, -54.5786, -54.5787, -54.5788, -54.5789, -54.5789, -54.5789,
        -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 41 	 8 	 N 	 N 	 2.456143636530682e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2656, -107.3189, -107.2677, -107.2623, -107.2580, -107.2552,
        -107.2540, -107.2534, -107.2532, -107.2532, -107.2535, -107.2541,
        -107.2548, -107.2556, -107.2563, -107.2571, -107.2578, -107.2584,
        -107.2589, -107.2594, -107.2598, -107.2601, -107.2604, -107.2606,
        -107.2607], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5558e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4720, -7.4773, -7.4799, -7.4810, -7.4814, -7.4818, -7.4825, -7.4823,
        -7.4817, -7.4814, -7.4814, -7.4814, -7.4815, -7.4815, -7.4816, -7.4816,
        -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.6700e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4072e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6886, -99.7093, -99.7169, -99.7212, -99.7241, -99.7262, -99.7276,
        -99.7287, -99.7294, -99.7299, -99.7303, -99.7306, -99.7308, -99.7309,
        -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2393e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2571, -107.2578, -107.2584, -107.2589, -107.2594, -107.2598,
        -107.2601, -107.2604, -107.2606, -107.2607], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4816, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817, -7.4817,
        -7.4817, -7.4817], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7311, -99.7311, -99.7312, -99.7312, -99.7312,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 41 	 2 	 FLi 	 LiF 	 0.007143431678004697

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5706], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8393], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5706], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8393], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 10 	 CH4O 	 CH4O 	 6.538970346559126e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1600], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5244], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1600], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7362], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5244], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 9 	 HN2O 	 HON2 	 0.001026603196181841

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0675, -1.1383, -1.1572, -1.1667, -1.1728, -1.1769, -1.1797, -1.1817,
        -1.1831, -1.1840, -1.1847, -1.1851, -1.1855, -1.1857, -1.1859, -1.1860,
        -1.1861, -1.1861, -1.1862, -1.1862, -1.1862, -1.1862, -1.1862, -1.1862,
        -1.1862], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3878e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7756e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3188, -0.4577, -0.4746, -0.4827, -0.4877, -0.4910, -0.4933, -0.4949,
        -0.4960, -0.4967, -0.4973, -0.4976, -0.4979, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5405e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8789e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8568e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2410, -0.4349, -0.4618, -0.4745, -0.4822, -0.4872, -0.4907, -0.4931,
        -0.4947, -0.4959, -0.4967, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5405e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1121e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1860, -1.1861, -1.1861, -1.1862, -1.1862, -1.1862, -1.1862, -1.1862,
        -1.1862, -1.1862], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 0 	 H2 	 H2 	 5.1909576806556546e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7506, -37.7883, -37.8037, -37.8126, -37.8185, -37.8227, -37.8257,
        -37.8278, -37.8293, -37.8304, -37.8312, -37.8317, -37.8321, -37.8324,
        -37.8325, -37.8327, -37.8328, -37.8328, -37.8329, -37.8329, -37.8329,
        -37.8329, -37.8330, -37.8330, -37.8330], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2691e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2691e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8327, -37.8328, -37.8328, -37.8329, -37.8329, -37.8329, -37.8329,
        -37.8330, -37.8330, -37.8330], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 41 	 4 	 C 	 C 	 1.329754969456635e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2910, -0.4500, -0.4702, -0.4799, -0.4858, -0.4897, -0.4924, -0.4942,
        -0.4955, -0.4964, -0.4971, -0.4975, -0.4978, -0.4980, -0.4982, -0.4983,
        -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5394e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9603e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0790e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 6 	 H 	 H 	 5.318912192931895e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7302], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0492], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4553], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7302], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 41 	 11 	 HF2 	 HF2 	 0.0010836231959512389

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e41)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e41/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e41/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 41 || ,[' rho : 2.916852', ' ae : 47.816773', ' E : 2.015059'] ,|| total loss 34.981121 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4720, -7.4771, -7.4798, -7.4811, -7.4815, -7.4818, -7.4825, -7.4825,
        -7.4820, -7.4816, -7.4815, -7.4815, -7.4816, -7.4817, -7.4817, -7.4817,
        -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4819,
        -7.4819], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.4280e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5063e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4871e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4817, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818, -7.4818,
        -7.4819, -7.4819], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 7 	 Li 	 Li 	 3.359489298493233e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2613, -0.4413, -0.4654, -0.4768, -0.4837, -0.4883, -0.4914, -0.4935,
        -0.4950, -0.4961, -0.4968, -0.4973, -0.4977, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5386e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0533e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0775e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 6 	 H 	 H 	 5.346869646268796e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4266, -54.4938, -54.5230, -54.5400, -54.5515, -54.5596, -54.5653,
        -54.5695, -54.5724, -54.5744, -54.5759, -54.5769, -54.5776, -54.5781,
        -54.5785, -54.5787, -54.5789, -54.5790, -54.5791, -54.5791, -54.5792,
        -54.5792, -54.5792, -54.5792, -54.5793], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4171e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.4171e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5787, -54.5789, -54.5790, -54.5791, -54.5791, -54.5792, -54.5792,
        -54.5792, -54.5792, -54.5793], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 42 	 8 	 N 	 N 	 2.3170433506859072e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7551, -37.7928, -37.8070, -37.8150, -37.8204, -37.8242, -37.8269,
        -37.8288, -37.8301, -37.8311, -37.8317, -37.8322, -37.8326, -37.8328,
        -37.8330, -37.8331, -37.8332, -37.8332, -37.8333, -37.8333, -37.8333,
        -37.8333, -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6508e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6508e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8331, -37.8332, -37.8332, -37.8333, -37.8333, -37.8333, -37.8333,
        -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 42 	 4 	 C 	 C 	 1.2016819754567944e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5726], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7372], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8402], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5726], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7372], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8402], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 10 	 CH4O 	 CH4O 	 6.531348009672734e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9073, -109.5571, -109.5863, -109.5662, -109.5496, -109.5383,
        -109.5308, -109.5258, -109.5224, -109.5202, -109.5187, -109.5177,
        -109.5170, -109.5166, -109.5163, -109.5161, -109.5159, -109.5158,
        -109.5158, -109.5157, -109.5157, -109.5157, -109.5157, -109.5156,
        -109.5156], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2509e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4199, -54.4841, -54.5160, -54.5350, -54.5481, -54.5574, -54.5640,
        -54.5687, -54.5721, -54.5745, -54.5761, -54.5773, -54.5782, -54.5787,
        -54.5791, -54.5794, -54.5796, -54.5798, -54.5799, -54.5799, -54.5800,
        -54.5800, -54.5800, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3599e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4339, -54.5014, -54.5287, -54.5443, -54.5548, -54.5622, -54.5675,
        -54.5712, -54.5738, -54.5757, -54.5770, -54.5779, -54.5786, -54.5790,
        -54.5794, -54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800,
        -54.5800, -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2339e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5161, -109.5159, -109.5158, -109.5158, -109.5157, -109.5157,
        -109.5157, -109.5157, -109.5156, -109.5156], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5796, -54.5797, -54.5798, -54.5799, -54.5800, -54.5800, -54.5800,
        -54.5801, -54.5801, -54.5801], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 42 	 1 	 N2 	 N2 	 1.7055629928089012e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9972, -1.1095, -1.1395, -1.1551, -1.1649, -1.1715, -1.1761, -1.1793,
        -1.1815, -1.1831, -1.1842, -1.1849, -1.1855, -1.1858, -1.1861, -1.1863,
        -1.1864, -1.1865, -1.1866, -1.1866, -1.1866, -1.1867, -1.1867, -1.1867,
        -1.1867], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4234e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8469e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2890, -0.4494, -0.4699, -0.4797, -0.4857, -0.4896, -0.4923, -0.4942,
        -0.4955, -0.4964, -0.4971, -0.4975, -0.4978, -0.4980, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5429e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9233e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9328e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2145, -0.4259, -0.4569, -0.4714, -0.4801, -0.4858, -0.4897, -0.4924,
        -0.4942, -0.4955, -0.4964, -0.4971, -0.4975, -0.4978, -0.4980, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5428e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1786e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1863, -1.1864, -1.1865, -1.1866, -1.1866, -1.1866, -1.1867, -1.1867,
        -1.1867, -1.1867], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 0 	 H2 	 H2 	 5.4901631275979415e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9465, -93.5249, -93.4166, -93.3695, -93.3358, -93.3143, -93.2989,
        -93.2882, -93.2806, -93.2752, -93.2714, -93.2687, -93.2668, -93.2655,
        -93.2645, -93.2638, -93.2633, -93.2629, -93.2627, -93.2625, -93.2624,
        -93.2623, -93.2622, -93.2621, -93.2621], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2817e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7690, -37.8033, -37.8144, -37.8206, -37.8246, -37.8274, -37.8294,
        -37.8308, -37.8318, -37.8325, -37.8330, -37.8333, -37.8335, -37.8337,
        -37.8338, -37.8339, -37.8340, -37.8340, -37.8340, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4702e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4213, -54.4861, -54.5176, -54.5363, -54.5491, -54.5582, -54.5647,
        -54.5694, -54.5726, -54.5750, -54.5766, -54.5778, -54.5786, -54.5791,
        -54.5795, -54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804,
        -54.5804, -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8515e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2377, -0.4338, -0.4612, -0.4741, -0.4819, -0.4871, -0.4906, -0.4930,
        -0.4947, -0.4958, -0.4966, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5434e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0807e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2638, -93.2633, -93.2629, -93.2627, -93.2625, -93.2624, -93.2623,
        -93.2622, -93.2621, -93.2621], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8339, -37.8340, -37.8340, -37.8340, -37.8341, -37.8341, -37.8341,
        -37.8341, -37.8341, -37.8341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5798, -54.5800, -54.5802, -54.5803, -54.5803, -54.5804, -54.5804,
        -54.5804, -54.5804, -54.5805], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4982, -0.4983, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 3 	 CHN 	 CNH 	 0.0052727686972446185

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4574], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7322], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0533], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4574], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7322], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 11 	 HF2 	 HF2 	 0.0010815182098080783

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1647], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7380], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5273], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1647], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7380], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5273], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 42 	 9 	 HN2O 	 HON2 	 0.0010228512942973703

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2811, -107.3277, -107.2754, -107.2686, -107.2635, -107.2602,
        -107.2586, -107.2576, -107.2571, -107.2570, -107.2572, -107.2577,
        -107.2584, -107.2591, -107.2598, -107.2606, -107.2612, -107.2618,
        -107.2624, -107.2628, -107.2632, -107.2635, -107.2638, -107.2640,
        -107.2642], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5864e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4720, -7.4765, -7.4794, -7.4811, -7.4818, -7.4820, -7.4826, -7.4830,
        -7.4826, -7.4821, -7.4819, -7.4819, -7.4820, -7.4820, -7.4821, -7.4821,
        -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4823,
        -7.4823], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.4152e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8422e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6844, -99.7048, -99.7142, -99.7197, -99.7236, -99.7264, -99.7283,
        -99.7298, -99.7308, -99.7315, -99.7321, -99.7324, -99.7327, -99.7329,
        -99.7330, -99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4300e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2606, -107.2612, -107.2618, -107.2624, -107.2628, -107.2632,
        -107.2635, -107.2638, -107.2640, -107.2642], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4821, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822,
        -7.4823, -7.4823], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7331, -99.7332, -99.7332, -99.7332, -99.7333, -99.7333, -99.7333,
        -99.7333, -99.7333, -99.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 42 	 2 	 FLi 	 LiF 	 0.007079471629479678

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6831, -99.7030, -99.7127, -99.7186, -99.7227, -99.7256, -99.7278,
        -99.7293, -99.7305, -99.7312, -99.7318, -99.7322, -99.7325, -99.7327,
        -99.7328, -99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.4463e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4463e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7329, -99.7330, -99.7330, -99.7331, -99.7331, -99.7331, -99.7331,
        -99.7331, -99.7331, -99.7331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 42 	 5 	 F 	 F 	 1.4038758287565723e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e42)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e42/2022-12-13_14:44:38.138534_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e42/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 42 || ,[' rho : 2.919259', ' ae : 47.537896', ' E : 1.832899'] ,|| total loss 34.798008 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0525], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4570], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7318], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0525], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4570], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7318], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 11 	 HF2 	 HF2 	 0.0010852853525192125

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3125, -0.4560, -0.4736, -0.4821, -0.4873, -0.4907, -0.4931, -0.4947,
        -0.4959, -0.4967, -0.4972, -0.4976, -0.4979, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5369e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.9029e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0740e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 6 	 H 	 H 	 5.308482393557855e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4746, -7.4799, -7.4816, -7.4819, -7.4824, -7.4830, -7.4828, -7.4822,
        -7.4819, -7.4818, -7.4819, -7.4819, -7.4820, -7.4821, -7.4821, -7.4821,
        -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822,
        -7.4822], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.1903e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8051e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4399e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4821, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822, -7.4822,
        -7.4822, -7.4822], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 7 	 Li 	 Li 	 4.009608599397474e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5731], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7374], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8405], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5731], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7374], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8405], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 10 	 CH4O 	 CH4O 	 6.546923239136774e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0122, -93.5530, -93.4306, -93.3800, -93.3426, -93.3190, -93.3021,
        -93.2904, -93.2820, -93.2762, -93.2720, -93.2691, -93.2670, -93.2655,
        -93.2644, -93.2637, -93.2631, -93.2627, -93.2624, -93.2622, -93.2621,
        -93.2620, -93.2619, -93.2619, -93.2618], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2683e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7513, -37.7890, -37.8044, -37.8132, -37.8191, -37.8233, -37.8263,
        -37.8285, -37.8300, -37.8311, -37.8318, -37.8324, -37.8327, -37.8330,
        -37.8332, -37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2607e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4222, -54.4878, -54.5187, -54.5370, -54.5494, -54.5582, -54.5646,
        -54.5690, -54.5722, -54.5745, -54.5761, -54.5772, -54.5780, -54.5785,
        -54.5789, -54.5792, -54.5794, -54.5795, -54.5796, -54.5797, -54.5797,
        -54.5798, -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6918e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3367, -0.4624, -0.4772, -0.4844, -0.4889, -0.4918, -0.4938, -0.4953,
        -0.4962, -0.4969, -0.4974, -0.4977, -0.4980, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5338e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8699e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2637, -93.2631, -93.2627, -93.2624, -93.2622, -93.2621, -93.2620,
        -93.2619, -93.2619, -93.2618], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8333, -37.8334, -37.8335, -37.8335, -37.8336, -37.8336, -37.8336,
        -37.8336, -37.8336, -37.8336], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5792, -54.5794, -54.5795, -54.5796, -54.5797, -54.5797, -54.5798,
        -54.5798, -54.5798, -54.5798], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 3 	 CHN 	 CNH 	 0.005210974331050876

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0584, -1.1351, -1.1556, -1.1660, -1.1726, -1.1770, -1.1801, -1.1822,
        -1.1837, -1.1848, -1.1855, -1.1860, -1.1864, -1.1866, -1.1868, -1.1869,
        -1.1870, -1.1871, -1.1871, -1.1871, -1.1871, -1.1872, -1.1872, -1.1872,
        -1.1872], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4560e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9119e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2887, -0.4493, -0.4698, -0.4796, -0.4856, -0.4896, -0.4923, -0.4942,
        -0.4955, -0.4964, -0.4970, -0.4975, -0.4978, -0.4980, -0.4981, -0.4982,
        -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5312e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0179e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9746e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3445, -0.4644, -0.4784, -0.4852, -0.4894, -0.4922, -0.4941, -0.4954,
        -0.4963, -0.4970, -0.4974, -0.4978, -0.4980, -0.4981, -0.4982, -0.4983,
        -0.4984, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985, -0.4985,
        -0.4985], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5312e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8744e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1869, -1.1870, -1.1871, -1.1871, -1.1871, -1.1871, -1.1872, -1.1872,
        -1.1872, -1.1872], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4985, -0.4985, -0.4985,
        -0.4985, -0.4985], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 0 	 H2 	 H2 	 5.8997799987051644e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6563, -109.9235, -109.7710, -109.6883, -109.6350, -109.5986,
        -109.5733, -109.5556, -109.5432, -109.5345, -109.5285, -109.5242,
        -109.5212, -109.5192, -109.5177, -109.5167, -109.5160, -109.5155,
        -109.5151, -109.5149, -109.5147, -109.5146, -109.5145, -109.5144,
        -109.5144], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2470e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4182, -54.4812, -54.5135, -54.5330, -54.5463, -54.5559, -54.5627,
        -54.5676, -54.5710, -54.5735, -54.5752, -54.5764, -54.5773, -54.5779,
        -54.5783, -54.5786, -54.5788, -54.5789, -54.5790, -54.5791, -54.5791,
        -54.5792, -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5536e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4284, -54.4957, -54.5243, -54.5410, -54.5522, -54.5601, -54.5657,
        -54.5697, -54.5725, -54.5745, -54.5759, -54.5769, -54.5776, -54.5781,
        -54.5785, -54.5787, -54.5789, -54.5790, -54.5791, -54.5791, -54.5792,
        -54.5792, -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4363e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5167, -109.5160, -109.5155, -109.5151, -109.5149, -109.5147,
        -109.5146, -109.5145, -109.5144, -109.5144], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5787, -54.5789, -54.5790, -54.5791, -54.5791, -54.5792, -54.5792,
        -54.5792, -54.5792, -54.5792], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 43 	 1 	 N2 	 N2 	 1.511830868538091e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4344, -54.5016, -54.5286, -54.5439, -54.5542, -54.5615, -54.5666,
        -54.5703, -54.5728, -54.5747, -54.5759, -54.5768, -54.5775, -54.5779,
        -54.5782, -54.5784, -54.5786, -54.5787, -54.5788, -54.5788, -54.5789,
        -54.5789, -54.5789, -54.5789, -54.5789], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8312e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8312e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5784, -54.5786, -54.5787, -54.5788, -54.5788, -54.5789, -54.5789,
        -54.5789, -54.5789, -54.5789], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 43 	 8 	 N 	 N 	 2.4679596163235323e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6907, -99.7108, -99.7179, -99.7219, -99.7246, -99.7265, -99.7278,
        -99.7288, -99.7295, -99.7300, -99.7303, -99.7305, -99.7307, -99.7308,
        -99.7309, -99.7310, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7590e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.7590e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7311, -99.7311, -99.7311], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 43 	 5 	 F 	 F 	 1.842852764209088e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3141, -107.3419, -107.2877, -107.2764, -107.2685, -107.2634,
        -107.2601, -107.2582, -107.2570, -107.2565, -107.2565, -107.2568,
        -107.2573, -107.2579, -107.2586, -107.2592, -107.2598, -107.2603,
        -107.2608, -107.2612, -107.2616, -107.2618, -107.2621, -107.2623,
        -107.2624], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5732e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4725, -7.4775, -7.4802, -7.4814, -7.4817, -7.4821, -7.4827, -7.4827,
        -7.4821, -7.4818, -7.4817, -7.4817, -7.4818, -7.4818, -7.4819, -7.4819,
        -7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.6759e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6491e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6878, -99.7085, -99.7163, -99.7208, -99.7238, -99.7259, -99.7274,
        -99.7285, -99.7293, -99.7299, -99.7303, -99.7305, -99.7307, -99.7309,
        -99.7310, -99.7310, -99.7311, -99.7311, -99.7311, -99.7311, -99.7311,
        -99.7312, -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3906e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2592, -107.2598, -107.2603, -107.2608, -107.2612, -107.2616,
        -107.2618, -107.2621, -107.2623, -107.2624], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4819, -7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820, -7.4820], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7310, -99.7311, -99.7311, -99.7311, -99.7311, -99.7311, -99.7312,
        -99.7312, -99.7312, -99.7312], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 43 	 2 	 FLi 	 LiF 	 0.007028331876481072

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1605], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5247], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1605], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5247], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 43 	 9 	 HN2O 	 HON2 	 0.001040463236885147

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7690, -37.8028, -37.8137, -37.8197, -37.8236, -37.8263, -37.8283,
        -37.8296, -37.8306, -37.8313, -37.8318, -37.8321, -37.8323, -37.8325,
        -37.8326, -37.8327, -37.8328, -37.8328, -37.8328, -37.8329, -37.8329,
        -37.8329, -37.8329, -37.8329, -37.8329], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2873e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2873e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8327, -37.8328, -37.8328, -37.8328, -37.8329, -37.8329, -37.8329,
        -37.8329, -37.8329, -37.8329], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 43 	 4 	 C 	 C 	 1.3531138670873336e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e43)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e43/2022-12-13_14:44:38.138534_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e43/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 43 || ,[' rho : 2.913483', ' ae : 47.371900', ' E : 1.978984'] ,|| total loss 34.662192 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------7----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [7]
================================
Subsetting Dataset with molecules[Li]:  ,[7]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4720, -7.4762, -7.4792, -7.4809, -7.4816, -7.4818, -7.4824, -7.4828,
        -7.4825, -7.4819, -7.4817, -7.4817, -7.4817, -7.4818, -7.4819, -7.4819,
        -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.6026e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6612e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3222e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820,
        -7.4820, -7.4820], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 7 	 Li 	 Li 	 3.707372113033603e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3308, -107.3499, -107.2951, -107.2817, -107.2727, -107.2668,
        -107.2630, -107.2603, -107.2587, -107.2579, -107.2577, -107.2579,
        -107.2583, -107.2589, -107.2595, -107.2601, -107.2606, -107.2611,
        -107.2615, -107.2619, -107.2622, -107.2624, -107.2627, -107.2628,
        -107.2630], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5788e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4721, -7.4765, -7.4794, -7.4810, -7.4816, -7.4819, -7.4825, -7.4828,
        -7.4824, -7.4819, -7.4817, -7.4817, -7.4818, -7.4818, -7.4819, -7.4819,
        -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4821, -7.4821, -7.4821,
        -7.4821], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.5761e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6749e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6807, -99.6996, -99.7096, -99.7158, -99.7201, -99.7233, -99.7256,
        -99.7273, -99.7285, -99.7293, -99.7299, -99.7304, -99.7307, -99.7309,
        -99.7310, -99.7311, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7313, -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5544e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2601, -107.2606, -107.2611, -107.2615, -107.2619, -107.2622,
        -107.2624, -107.2627, -107.2628, -107.2630], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4819, -7.4820, -7.4820, -7.4820, -7.4820, -7.4820, -7.4821, -7.4821,
        -7.4821, -7.4821], dtype=torch.float64, grad_fn=<SliceBackward0>), 'F': tensor([-99.7311, -99.7312, -99.7313, -99.7313, -99.7313, -99.7313, -99.7313,
        -99.7314, -99.7314, -99.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 44 	 2 	 FLi 	 LiF 	 0.006999182989843813

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 8, 8]
================================
Subsetting Dataset with molecules[  1NN]:  ,[1, 8, 8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,1
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9452, -109.3126, -109.4657, -109.4881, -109.4950, -109.4991,
        -109.5025, -109.5053, -109.5074, -109.5091, -109.5104, -109.5114,
        -109.5121, -109.5127, -109.5131, -109.5133, -109.5135, -109.5137,
        -109.5138, -109.5139, -109.5139, -109.5140, -109.5140, -109.5140,
        -109.5140], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.4191624301889
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2451e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4173, -54.4790, -54.5118, -54.5316, -54.5453, -54.5550, -54.5620,
        -54.5670, -54.5705, -54.5730, -54.5748, -54.5761, -54.5769, -54.5776,
        -54.5780, -54.5783, -54.5785, -54.5786, -54.5788, -54.5788, -54.5789,
        -54.5789, -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9582e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4242, -54.4907, -54.5206, -54.5382, -54.5501, -54.5585, -54.5645,
        -54.5688, -54.5718, -54.5739, -54.5754, -54.5765, -54.5772, -54.5778,
        -54.5781, -54.5784, -54.5786, -54.5787, -54.5788, -54.5789, -54.5789,
        -54.5789, -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8576e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5133, -109.5135, -109.5137, -109.5138, -109.5139, -109.5139,
        -109.5140, -109.5140, -109.5140, -109.5140], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5784, -54.5786, -54.5787, -54.5788, -54.5789, -54.5789, -54.5789,
        -54.5789, -54.5790, -54.5790], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 44 	 1 	 N2 	 N2 	 1.4868865009176892e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 17HFF
SUBMOLECULES: ['HF2', 'HF', 'F']
SUBMOLECULE INDICES: [17, 15, 16]
================================
Subsetting Dataset with molecules[ 17HFF]:  ,[17, 15, 16]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,17
Calculating sub-atoms in molecule --  ,Atoms(symbols='HF2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1692], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1692], dtype=torch.float64)
E_PRED: tensor([-200.0493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 113612])
ao_eval   ---   torch.Size([1, 10, 113612, 93])
grid_weights   ---   torch.Size([1, 113612])
-199.8334702446965
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,15
Calculating sub-atoms in molecule --  ,Atoms(symbols='FH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-100.4553], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 68690])
ao_eval   ---   torch.Size([1, 10, 68690, 54])
grid_weights   ---   torch.Size([1, 68690])
-100.36474184919678
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,16
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-99.7300], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
tensor([0.], dtype=torch.float64)
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1692], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-200.0493], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-100.4553], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-99.7300], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 11 	 HF2 	 HF2 	 0.0010972004222861156

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  , 11HONN
SUBMOLECULES: ['HN2O', 'HO', 'N2']
SUBMOLECULE INDICES: [11, 9, 10]
================================
Subsetting Dataset with molecules[ 11HONN]:  ,[11, 9, 10]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,11
Calculating sub-atoms in molecule --  ,Atoms(symbols='HON2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.1326], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.1326], dtype=torch.float64)
E_PRED: tensor([-185.1607], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 132, 132])
mo_energy   ---   torch.Size([2, 132])
dm_ref   ---   torch.Size([1, 2, 132, 132])
rho   ---   torch.Size([1, 2, 153602])
ao_eval   ---   torch.Size([1, 10, 153602, 132])
grid_weights   ---   torch.Size([1, 153602])
-184.94901512780942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 132])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 132])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,9
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66226710345305
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,10
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-109.5249], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 86316])
ao_eval   ---   torch.Size([1, 10, 86316, 78])
grid_weights   ---   torch.Size([1, 86316])
-109.41912915450887
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.1326], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-185.1607], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-109.5249], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 9 	 HN2O 	 HON2 	 0.0010457630046015608

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 14CHHHHO
SUBMOLECULES: ['CH4O', 'HO', 'CH3']
SUBMOLECULE INDICES: [14, 12, 13]
================================
Subsetting Dataset with molecules[ 14CHHHHO]:  ,[14, 12, 13]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,14
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH4O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.0129], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.0129], dtype=torch.float64)
E_PRED: tensor([-115.5710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 138, 138])
mo_energy   ---   torch.Size([2, 138])
dm_ref   ---   torch.Size([1, 2, 138, 138])
rho   ---   torch.Size([1, 2, 181208])
ao_eval   ---   torch.Size([1, 10, 181208, 138])
grid_weights   ---   torch.Size([1, 181208])
-115.43257745801942
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 138])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 138])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: 2. A+B -> AB
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,12
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-75.7361], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.662267103453
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,13
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([0.], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([0.], dtype=torch.float64)
E_PRED: tensor([-39.8397], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78390619967421
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
REACTION TYPE: REACTANT.
0
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'AB': tensor([0.0129], dtype=torch.float64), 'A': tensor([0.], dtype=torch.float64), 'B': tensor([0.], dtype=torch.float64)}
PRED_DICT:  ,{'AB': tensor([-115.5710], dtype=torch.float64, grad_fn=<SliceBackward0>), 'A': tensor([-75.7361], dtype=torch.float64, grad_fn=<SliceBackward0>), 'B': tensor([-39.8397], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 10 	 CH4O 	 CH4O 	 6.635068340331648e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 6, 6]
================================
Subsetting Dataset with molecules[  0HH]:  ,[0, 6, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,0
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0173, -1.1183, -1.1454, -1.1593, -1.1681, -1.1741, -1.1782, -1.1811,
        -1.1831, -1.1845, -1.1854, -1.1861, -1.1866, -1.1869, -1.1872, -1.1873,
        -1.1874, -1.1875, -1.1876, -1.1876, -1.1876, -1.1877, -1.1877, -1.1877,
        -1.1877], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668212
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4771e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9542e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3135, -0.4561, -0.4737, -0.4821, -0.4873, -0.4907, -0.4931, -0.4947,
        -0.4958, -0.4966, -0.4972, -0.4975, -0.4978, -0.4980, -0.4981, -0.4982,
        -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5179e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.0614e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9901e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2121, -0.4246, -0.4562, -0.4709, -0.4797, -0.4855, -0.4895, -0.4922,
        -0.4941, -0.4954, -0.4963, -0.4970, -0.4974, -0.4977, -0.4979, -0.4981,
        -0.4982, -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5178e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4039e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1873, -1.1874, -1.1875, -1.1876, -1.1876, -1.1876, -1.1877, -1.1877,
        -1.1877, -1.1877], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4981, -0.4982, -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984, -0.4984], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 0 	 H2 	 H2 	 6.369610033449772e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [8]
================================
Subsetting Dataset with molecules[N]:  ,[8]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4481, -54.5128, -54.5363, -54.5494, -54.5581, -54.5642, -54.5685,
        -54.5715, -54.5736, -54.5751, -54.5762, -54.5770, -54.5775, -54.5778,
        -54.5781, -54.5783, -54.5784, -54.5785, -54.5786, -54.5786, -54.5786,
        -54.5787, -54.5787, -54.5787, -54.5787], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.1379e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1379e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5783, -54.5784, -54.5785, -54.5786, -54.5786, -54.5786, -54.5787,
        -54.5787, -54.5787, -54.5787], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 44 	 8 	 N 	 N 	 2.589646975517105e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [5]
================================
Subsetting Dataset with molecules[F]:  ,[5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,5
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6800, -99.6974, -99.7077, -99.7143, -99.7190, -99.7225, -99.7250,
        -99.7268, -99.7281, -99.7290, -99.7297, -99.7302, -99.7305, -99.7307,
        -99.7309, -99.7310, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312,
        -99.7313, -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 44922])
ao_eval   ---   torch.Size([1, 10, 44922, 39])
grid_weights   ---   torch.Size([1, 44922])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.1705e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1705e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7310, -99.7311, -99.7312, -99.7312, -99.7312, -99.7312, -99.7313,
        -99.7313, -99.7313, -99.7313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 44 	 5 	 F 	 F 	 1.6172120090168896e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [6]
================================
Subsetting Dataset with molecules[H]:  ,[6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2801, -0.4467, -0.4684, -0.4787, -0.4850, -0.4891, -0.4920, -0.4939,
        -0.4953, -0.4962, -0.4969, -0.4974, -0.4977, -0.4979, -0.4981, -0.4982,
        -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5182e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.1475e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0367e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4982, -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984, -0.4984], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 6 	 H 	 H 	 5.805638315767647e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [4]
================================
Subsetting Dataset with molecules[C]:  ,[4]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7642, -37.7996, -37.8117, -37.8183, -37.8227, -37.8257, -37.8279,
        -37.8294, -37.8305, -37.8313, -37.8318, -37.8322, -37.8325, -37.8326,
        -37.8328, -37.8329, -37.8329, -37.8330, -37.8330, -37.8330, -37.8330,
        -37.8331, -37.8331, -37.8331, -37.8331], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0140e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0140e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8329, -37.8329, -37.8330, -37.8330, -37.8330, -37.8330, -37.8331,
        -37.8331, -37.8331, -37.8331], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 44 	 4 	 C 	 C 	 1.289646355245007e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 4, 8, 6]
================================
Subsetting Dataset with molecules[  3CNH]:  ,[3, 4, 8, 6]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,3
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9823, -93.5406, -93.4245, -93.3757, -93.3400, -93.3174, -93.3012,
        -93.2899, -93.2820, -93.2764, -93.2724, -93.2696, -93.2676, -93.2661,
        -93.2651, -93.2644, -93.2639, -93.2635, -93.2632, -93.2630, -93.2629,
        -93.2628, -93.2627, -93.2627, -93.2627], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.3217540463389
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2451e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,4
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7634, -37.7992, -37.8114, -37.8182, -37.8227, -37.8258, -37.8280,
        -37.8296, -37.8307, -37.8315, -37.8320, -37.8324, -37.8327, -37.8329,
        -37.8330, -37.8331, -37.8332, -37.8332, -37.8332, -37.8333, -37.8333,
        -37.8333, -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6606e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
2 ,8
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4171, -54.4766, -54.5100, -54.5304, -54.5446, -54.5547, -54.5619,
        -54.5671, -54.5708, -54.5734, -54.5752, -54.5765, -54.5774, -54.5781,
        -54.5785, -54.5788, -54.5791, -54.5792, -54.5793, -54.5794, -54.5794,
        -54.5795, -54.5795, -54.5795, -54.5795], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1557e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
3 ,6
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2117, -0.4244, -0.4561, -0.4708, -0.4797, -0.4855, -0.4895, -0.4922,
        -0.4941, -0.4954, -0.4963, -0.4970, -0.4974, -0.4977, -0.4979, -0.4981,
        -0.4982, -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5204e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3714e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2644, -93.2639, -93.2635, -93.2632, -93.2630, -93.2629, -93.2628,
        -93.2627, -93.2627, -93.2627], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8331, -37.8332, -37.8332, -37.8332, -37.8333, -37.8333, -37.8333,
        -37.8333, -37.8333, -37.8333], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5788, -54.5791, -54.5792, -54.5793, -54.5794, -54.5794, -54.5795,
        -54.5795, -54.5795, -54.5795], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4981, -0.4982, -0.4983, -0.4983, -0.4984, -0.4984, -0.4984, -0.4984,
        -0.4984, -0.4984], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 44 	 3 	 CHN 	 CNH 	 0.005108811624816152

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e44)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e44/2022-12-13_14:44:38.138534_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/16/MODEL_MGGA_e44/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 44 || ,[' rho : 2.909177', ' ae : 47.164537', ' E : 2.012277'] ,|| total loss 34.502453 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 7, 5]
================================
Subsetting Dataset with molecules[  2LiF]:  ,[2, 7, 5]
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
0 ,2
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3426, -107.3555, -107.3013, -107.2865, -107.2767, -107.2704,
        -107.2662, -107.2632, -107.2614, -107.2605, -107.2602, -107.2604,
        -107.2607, -107.2612, -107.2618, -107.2624, -107.2629, -107.2633,
        -107.2637, -107.2640, -107.2643, -107.2646, -107.2648, -107.2649,
        -107.2651], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504787
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5998e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Subset: Reassigning didx <- idx; idx <- molecules[molecule][didx]
1 ,7
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION

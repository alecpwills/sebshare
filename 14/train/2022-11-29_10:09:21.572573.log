{
    "pretrain_loc": "/gpfs/home/awills/dpyscfl/models/pretrained/scan",
    "type": "MGGA",
    "datapath": "/gpfs/scratch/awills/swxcd/data/test_subset_ps2/11",
    "reftraj": "/gpfs/scratch/awills/swxcd/aegis/test_subset_ps2/08/subat_ref.traj",
    "n_hidden": 16,
    "hyb_par": 0.0,
    "E_weight": 0.01,
    "rho_weight": 20,
    "ae_weight": 1,
    "modelpath": "",
    "optimpath": "",
    "logpath": ".",
    "testrun": false,
    "lr": 0.0001,
    "l2": 1e-06,
    "hnorm": true,
    "print_stdout": false,
    "print_names": false,
    "nonsc_weight": 0.01,
    "start_converged": false,
    "scf_steps": 25,
    "polynomial": false,
    "free": false,
    "freec": false,
    "meta_x": null,
    "rho_alt": false,
    "radical_factor": 1.0,
    "forcedensloss": false,
    "forceEloss": false,
    "freezeappend": 0,
    "loadfa": 0,
    "outputlayergrad": false,
    "checkgrad": false,
    "testmol": "",
    "torchtype": "float",
    "testall": false,
    "targetdir": "/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13",
    "valtraj": "",
    "valbasis": "6-311++G(3df,2pd)",
    "valpol": true,
    "valgridlevel": 5,
    "valmaxcycle": 100,
    "noxcdiffpop": false,
    "testpop": false,
    "passthrough": true,
    "chkptmax": 999999999
}
READING REFERENCE TRAJECTORY.
READING DATASET
LOADING DATASET INTO PYTORCH
PARSING NON-ATOMIC NON-REACTION MOLECULES
{'  0HH': [0], '  1NN': [1], '  2LiF': [2], '  3CNH': [3], '  4COO': [4], '  5ClCl': [5], '  6FF': [6], '  7CCHH': [7], '  8OC': [8], '  9ClH': [9], ' 10LiH': [10], ' 11NaNa': [11], ' 20NO': [20], ' 21NOO': [21], ' 22NH': [22], ' 23OOO': [23], ' 24NNO': [24], ' 25CHHH': [25], ' 26CHH': [26], ' 27OHH': [27], ' 28NHHH': [28], ' 29OH': [29]}
PARSING NEUTRAL, PURE NON-REACTION ATOMS. CHARGE FLAG NOT SET.
{'C': [12], 'Cl': [13], 'F': [14], 'H': [15], 'Li': [16], 'N': [17], 'Na': [18], 'O': [19]}
PARSING SUPPLEMENTAL NEUTRAL, PURE ATOMS (FROM FRAC DATASET)
{}
PARSING SUPPLEMENTAL CHARGED, PURE ATOMS
{}
PARSING SUPPLEMENTAL FRACTIONAL ATOMS
{}
CONCATENATING SUPPLEMENTAL/FRACTIONAL ATOMS
{}
PARSING REACTIONS
{}
MOLECULES TO TRAIN ON
{'  0HH': [0, 15, 15], '  1NN': [1, 17, 17], '  2LiF': [2, 16, 14], '  3CNH': [3, 12, 17, 15], '  4COO': [4, 12, 19, 19], '  5ClCl': [5, 13, 13], '  6FF': [6, 14, 14], '  7CCHH': [7, 12, 12, 15, 15], '  8OC': [8, 19, 12], '  9ClH': [9, 13, 15], ' 10LiH': [10, 16, 15], ' 11NaNa': [11, 18, 18], ' 20NO': [20, 17, 19], ' 21NOO': [21, 17, 19, 19], ' 22NH': [22, 17, 15], ' 23OOO': [23, 19, 19, 19], ' 24NNO': [24, 17, 17, 19], ' 25CHHH': [25, 12, 15, 15, 15], ' 26CHH': [26, 12, 15, 15], ' 27OHH': [27, 19, 15, 15], ' 28NHHH': [28, 17, 15, 15, 15], ' 29OH': [29, 19, 15], 'C': [12], 'Cl': [13], 'F': [14], 'H': [15], 'Li': [16], 'N': [17], 'Na': [18], 'O': [19]}
A_COUNT
{0: 1, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1, 9: 1, 10: 1, 11: 1, 12: 7, 13: 3, 14: 3, 15: 12, 16: 3, 17: 8, 18: 2, 19: 9, 20: 1, 21: 1, 22: 1, 23: 1, 24: 1, 25: 1, 26: 1, 27: 1, 28: 1, 29: 1}
GENERATING SCF OBJECT

 ======= Starting training ====== 


FIRST PASS: EVALUATION ON TRAINING DATA
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4355, -54.5072, -54.5343, -54.5496, -54.5599, -54.5670, -54.5721,
        -54.5758, -54.5783, -54.5801, -54.5814, -54.5823, -54.5829, -54.5833,
        -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0702e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0702e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9520, -74.9914, -75.0147, -75.0291, -75.0390, -75.0461, -75.0513,
        -75.0550, -75.0577, -75.0596, -75.0610, -75.0620, -75.0627, -75.0631,
        -75.0635, -75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0642], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7456e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8158e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0900], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(9.8158e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0900], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 13 	 NO2 	 NO2 	 0.00018987207551898598

PASSTHROUGH -- NO2 DONE.
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4355, -54.5072, -54.5343, -54.5496, -54.5599, -54.5671, -54.5722,
        -54.5758, -54.5783, -54.5801, -54.5814, -54.5823, -54.5829, -54.5833,
        -54.5836, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0693e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0693e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9575, -75.0033, -75.0240, -75.0360, -75.0441, -75.0499, -75.0540,
        -75.0570, -75.0591, -75.0606, -75.0617, -75.0625, -75.0630, -75.0634,
        -75.0636, -75.0638, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5864e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6557e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0357, -129.7648, -129.7063, -129.6836, -129.6720, -129.6647,
        -129.6600, -129.6569, -129.6549, -129.6535, -129.6526, -129.6520,
        -129.6516, -129.6514, -129.6512, -129.6511, -129.6510, -129.6510,
        -129.6510, -129.6509, -129.6509, -129.6509, -129.6509, -129.6509,
        -129.6509], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0066e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0638, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6511, -129.6510, -129.6510, -129.6510, -129.6509, -129.6509,
        -129.6509, -129.6509, -129.6509, -129.6509], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 12 	 NO 	 NO 	 8.707758073724603e-06

PASSTHROUGH -- NO DONE.
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.5010, -920.4791, -920.4745, -920.4722, -920.4707, -920.4697,
        -920.4690, -920.4685, -920.4682, -920.4679, -920.4678, -920.4676,
        -920.4675, -920.4675, -920.4674, -920.4674, -920.4674, -920.4674,
        -920.4674, -920.4674, -920.4673, -920.4673, -920.4673, -920.4673,
        -920.4673], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.9388e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8775e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1326, -460.1586, -460.1667, -460.1712, -460.1742, -460.1763,
        -460.1778, -460.1789, -460.1797, -460.1802, -460.1806, -460.1809,
        -460.1811, -460.1812, -460.1813, -460.1814, -460.1814, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9348e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9569e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4674, -920.4674, -920.4674, -920.4674, -920.4674, -920.4673,
        -920.4673, -920.4673, -920.4673, -920.4673], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1814, -460.1814, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 5 	 Cl2 	 Cl2 	 2.2197173183538634e-05

PASSTHROUGH -- Cl2 DONE.
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2799, -0.4482, -0.4698, -0.4802, -0.4865, -0.4906, -0.4935, -0.4954,
        -0.4968, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9297e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2144e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8595e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4146, -54.4861, -54.5190, -54.5384, -54.5517, -54.5612, -54.5680,
        -54.5728, -54.5762, -54.5786, -54.5803, -54.5815, -54.5824, -54.5830,
        -54.5834, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4491e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8669e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2198], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.8669e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2198], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 14 	 HN 	 NH 	 1.1541717313126842e-05

PASSTHROUGH -- HN DONE.
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2420, -162.2524, -162.2557, -162.2573, -162.2583, -162.2591,
        -162.2597, -162.2601, -162.2603, -162.2604, -162.2605, -162.2605,
        -162.2605, -162.2605, -162.2606, -162.2606, -162.2606, -162.2606,
        -162.2606, -162.2606, -162.2606, -162.2606, -162.2606, -162.2606,
        -162.2606], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8146e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8146e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2606, -162.2606, -162.2606, -162.2606, -162.2606, -162.2606,
        -162.2606, -162.2606, -162.2606, -162.2606], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 28 	 Na 	 Na 	 8.420299284391373e-06

PASSTHROUGH -- Na DONE.
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1314, -460.1579, -460.1663, -460.1709, -460.1740, -460.1762,
        -460.1777, -460.1788, -460.1796, -460.1802, -460.1806, -460.1809,
        -460.1811, -460.1812, -460.1813, -460.1814, -460.1814, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9336e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9336e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1814, -460.1814, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 23 	 Cl 	 Cl 	 0.00026266692149930963

PASSTHROUGH -- Cl DONE.
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.6341, -188.8032, -188.6227, -188.5185, -188.4542, -188.4106,
        -188.3802, -188.3588, -188.3437, -188.3330, -188.3254, -188.3201,
        -188.3163, -188.3135, -188.3116, -188.3102, -188.3092, -188.3085,
        -188.3080, -188.3077, -188.3074, -188.3072, -188.3071, -188.3070,
        -188.3069], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0036e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7659, -37.8028, -37.8148, -37.8214, -37.8257, -37.8287, -37.8308,
        -37.8323, -37.8334, -37.8341, -37.8347, -37.8350, -37.8353, -37.8355,
        -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7527e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9518, -74.9887, -75.0124, -75.0274, -75.0377, -75.0452, -75.0506,
        -75.0546, -75.0574, -75.0594, -75.0608, -75.0618, -75.0626, -75.0631,
        -75.0634, -75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0642], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7891e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3102, -188.3092, -188.3085, -188.3080, -188.3077, -188.3074,
        -188.3072, -188.3071, -188.3070, -188.3069], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 4 	 CO2 	 CO2 	 0.01827360683651613

PASSTHROUGH -- CO2 DONE.
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4536, -54.5204, -54.5434, -54.5561, -54.5645, -54.5704, -54.5745,
        -54.5774, -54.5795, -54.5809, -54.5820, -54.5827, -54.5832, -54.5835,
        -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8773e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8773e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9558, -75.0010, -75.0222, -75.0347, -75.0431, -75.0492, -75.0535,
        -75.0566, -75.0589, -75.0605, -75.0616, -75.0624, -75.0629, -75.0633,
        -75.0636, -75.0638, -75.0639, -75.0640, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6144e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4917e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6673], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(9.4917e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5839, -54.5841, -54.5841, -54.5842, -54.5842, -54.5843, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0638, -75.0639, -75.0640, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6673], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 16 	 N2O 	 N2O 	 6.832867296621479e-06

PASSTHROUGH -- N2O DONE.
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2896, -107.2931, -107.2569, -107.2460, -107.2388, -107.2347,
        -107.2328, -107.2319, -107.2316, -107.2315, -107.2314, -107.2314,
        -107.2315, -107.2317, -107.2319, -107.2321, -107.2322, -107.2324,
        -107.2326, -107.2327, -107.2328, -107.2329, -107.2330, -107.2330,
        -107.2331], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3968e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6800, -99.7055, -99.7151, -99.7206, -99.7243, -99.7270, -99.7290,
        -99.7304, -99.7313, -99.7321, -99.7326, -99.7329, -99.7332, -99.7333,
        -99.7335, -99.7336, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337,
        -99.7337, -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1769e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4656, -7.4728, -7.4752, -7.4764, -7.4772, -7.4781, -7.4788, -7.4790,
        -7.4787, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3805e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5820e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2321, -107.2322, -107.2324, -107.2326, -107.2327, -107.2328,
        -107.2329, -107.2330, -107.2330, -107.2331], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7336, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337, -99.7337,
        -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 2 	 FLi 	 LiF 	 0.009508575561468596

PASSTHROUGH -- FLi DONE.
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.7914, -113.4499, -113.3678, -113.3240, -113.2973, -113.2789,
        -113.2661, -113.2572, -113.2510, -113.2467, -113.2437, -113.2416,
        -113.2402, -113.2392, -113.2385, -113.2380, -113.2376, -113.2374,
        -113.2372, -113.2371, -113.2370, -113.2370, -113.2369, -113.2369,
        -113.2369], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7064e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7543, -37.7949, -37.8094, -37.8175, -37.8229, -37.8267, -37.8294,
        -37.8313, -37.8327, -37.8336, -37.8343, -37.8348, -37.8351, -37.8353,
        -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8564e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9530, -74.9953, -75.0178, -75.0314, -75.0408, -75.0474, -75.0522,
        -75.0557, -75.0582, -75.0600, -75.0612, -75.0621, -75.0628, -75.0632,
        -75.0635, -75.0638, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6884e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2380, -113.2376, -113.2374, -113.2372, -113.2371, -113.2370,
        -113.2370, -113.2369, -113.2369, -113.2369], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0638, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 8 	 CO 	 OC 	 0.0014008510170865323

PASSTHROUGH -- CO DONE.
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8665, -109.7296, -109.6691, -109.6177, -109.5828, -109.5587,
        -109.5422, -109.5307, -109.5227, -109.5172, -109.5134, -109.5107,
        -109.5089, -109.5076, -109.5067, -109.5061, -109.5056, -109.5053,
        -109.5051, -109.5050, -109.5048, -109.5048, -109.5047, -109.5047,
        -109.5047], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4637e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4083, -54.4738, -54.5096, -54.5314, -54.5466, -54.5574, -54.5653,
        -54.5709, -54.5748, -54.5777, -54.5796, -54.5810, -54.5820, -54.5827,
        -54.5832, -54.5835, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7218e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5061, -109.5056, -109.5053, -109.5051, -109.5050, -109.5048,
        -109.5048, -109.5047, -109.5047, -109.5047], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5835, -54.5838, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 1 	 N2 	 N2 	 0.00018238340181191934

PASSTHROUGH -- N2 DONE.
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4164, -54.4886, -54.5208, -54.5398, -54.5527, -54.5619, -54.5685,
        -54.5732, -54.5765, -54.5788, -54.5805, -54.5816, -54.5824, -54.5830,
        -54.5834, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4004e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.4004e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 27 	 N 	 N 	 5.608921921375586e-06

PASSTHROUGH -- N DONE.
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4625, -7.4691, -7.4727, -7.4747, -7.4759, -7.4768, -7.4777, -7.4785,
        -7.4790, -7.4788, -7.4786, -7.4784, -7.4784, -7.4784, -7.4784, -7.4784,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3820e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5448e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.7640e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4784, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 26 	 Li 	 Li 	 5.4211615511955265e-08

PASSTHROUGH -- Li DONE.
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3005, -0.4540, -0.4731, -0.4823, -0.4879, -0.4916, -0.4941, -0.4959,
        -0.4971, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4029e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8596e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 25 	 H 	 H 	 6.177816567963233e-10

PASSTHROUGH -- H DONE.
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7445, -37.7855, -37.8027, -37.8127, -37.8194, -37.8242, -37.8276,
        -37.8300, -37.8318, -37.8330, -37.8338, -37.8345, -37.8349, -37.8352,
        -37.8354, -37.8355, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0009e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.0009e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3074, -0.4558, -0.4741, -0.4829, -0.4883, -0.4919, -0.4944, -0.4961,
        -0.4972, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.1559e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8666e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1497], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.8666e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1497], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 18 	 CH2 	 CH2 	 0.00010438751047179172

PASSTHROUGH -- CH2 DONE.
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9610, -75.0075, -75.0271, -75.0382, -75.0458, -75.0511, -75.0549,
        -75.0576, -75.0596, -75.0610, -75.0619, -75.0626, -75.0631, -75.0635,
        -75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5393e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5393e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 29 	 O 	 O 	 2.1820828507701267e-06

PASSTHROUGH -- O DONE.
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6245, -324.5771, -324.5647, -324.5584, -324.5543, -324.5516,
        -324.5496, -324.5483, -324.5474, -324.5467, -324.5462, -324.5459,
        -324.5457, -324.5455, -324.5454, -324.5453, -324.5453, -324.5452,
        -324.5452, -324.5452, -324.5452, -324.5452, -324.5452, -324.5452,
        -324.5451], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.1020e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2354, -162.2477, -162.2525, -162.2552, -162.2569, -162.2580,
        -162.2588, -162.2595, -162.2600, -162.2603, -162.2604, -162.2604,
        -162.2605, -162.2605, -162.2605, -162.2606, -162.2606, -162.2606,
        -162.2606, -162.2606, -162.2606, -162.2606, -162.2606, -162.2606,
        -162.2606], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8031e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5453, -324.5453, -324.5452, -324.5452, -324.5452, -324.5452,
        -324.5452, -324.5452, -324.5452, -324.5451], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2606, -162.2606, -162.2606, -162.2606, -162.2606, -162.2606,
        -162.2606, -162.2606, -162.2606, -162.2606], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 11 	 Na2 	 Na2 	 2.683863866479014e-06

PASSTHROUGH -- Na2 DONE.
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2185, -0.4296, -0.4595, -0.4735, -0.4820, -0.4876, -0.4914, -0.4940,
        -0.4958, -0.4970, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9295e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3223e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8591e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9738, -75.0189, -75.0351, -75.0440, -75.0499, -75.0541, -75.0571,
        -75.0592, -75.0607, -75.0617, -75.0625, -75.0630, -75.0634, -75.0637,
        -75.0638, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4306e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8616e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6463, -75.6847, -75.7029, -75.7133, -75.7203, -75.7254, -75.7290,
        -75.7316, -75.7335, -75.7348, -75.7358, -75.7364, -75.7369, -75.7372,
        -75.7375, -75.7376, -75.7377, -75.7378, -75.7379, -75.7379, -75.7379,
        -75.7380, -75.7380, -75.7380, -75.7380], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0643, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7376, -75.7377, -75.7378, -75.7379, -75.7379, -75.7379, -75.7380,
        -75.7380, -75.7380, -75.7380], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 21 	 HO 	 OH 	 2.169594388847112e-06

PASSTHROUGH -- HO DONE.
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2373, -0.4355, -0.4628, -0.4756, -0.4834, -0.4885, -0.4920, -0.4944,
        -0.4961, -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9296e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2484e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8593e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4076, -54.4712, -54.5076, -54.5299, -54.5455, -54.5566, -54.5647,
        -54.5704, -54.5745, -54.5774, -54.5795, -54.5809, -54.5820, -54.5827,
        -54.5832, -54.5835, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842,
        -54.5842, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7835e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8670e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.8670e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5835, -54.5838, -54.5839, -54.5841, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5539], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 20 	 H3N 	 NH3 	 2.3645748779490534e-05

PASSTHROUGH -- H3N DONE.
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3100, -0.4565, -0.4745, -0.4832, -0.4885, -0.4920, -0.4944, -0.4961,
        -0.4973, -0.4981, -0.4986, -0.4990, -0.4993, -0.4995, -0.4997, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0652e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8596e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9621, -75.0087, -75.0279, -75.0389, -75.0462, -75.0514, -75.0551,
        -75.0578, -75.0597, -75.0610, -75.0620, -75.0627, -75.0631, -75.0635,
        -75.0637, -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5265e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8621e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4300], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.8621e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4300], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 19 	 H2O 	 OH2 	 3.0593605679019624e-05

PASSTHROUGH -- H2O DONE.
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9763, -75.0208, -75.0364, -75.0449, -75.0506, -75.0546, -75.0574,
        -75.0594, -75.0609, -75.0619, -75.0626, -75.0631, -75.0634, -75.0637,
        -75.0639, -75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0642, -75.0643, -75.0643], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4150e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4150e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4294], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(2.4150e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0640, -75.0641, -75.0641, -75.0642, -75.0642, -75.0642, -75.0642,
        -75.0642, -75.0643, -75.0643], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4294], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 15 	 O3 	 O3 	 4.3568748706750855e-06

PASSTHROUGH -- O3 DONE.
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6238, -199.5658, -199.5510, -199.5434, -199.5386, -199.5354,
        -199.5331, -199.5316, -199.5304, -199.5297, -199.5291, -199.5287,
        -199.5284, -199.5282, -199.5281, -199.5280, -199.5279, -199.5279,
        -199.5279, -199.5278, -199.5278, -199.5278, -199.5278, -199.5278,
        -199.5278], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5546e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1091e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6759, -99.7007, -99.7116, -99.7180, -99.7224, -99.7256, -99.7280,
        -99.7296, -99.7308, -99.7317, -99.7323, -99.7327, -99.7330, -99.7332,
        -99.7334, -99.7335, -99.7336, -99.7336, -99.7337, -99.7337, -99.7337,
        -99.7337, -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6311e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1091e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5280, -199.5279, -199.5279, -199.5279, -199.5278, -199.5278,
        -199.5278, -199.5278, -199.5278, -199.5278], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7335, -99.7336, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337,
        -99.7338, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 6 	 F2 	 F2 	 5.558758809941218e-07

PASSTHROUGH -- F2 DONE.
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9362, -8.0135, -8.0337, -8.0443, -8.0511, -8.0558, -8.0591, -8.0614,
        -8.0631, -8.0642, -8.0650, -8.0656, -8.0660, -8.0663, -8.0665, -8.0666,
        -8.0667, -8.0668, -8.0669, -8.0669, -8.0669, -8.0669, -8.0669, -8.0669,
        -8.0670], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.5370e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0739e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2742, -0.4466, -0.4689, -0.4796, -0.4861, -0.4903, -0.4933, -0.4953,
        -0.4967, -0.4977, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9297e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.4558e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0599e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4666, -7.4734, -7.4755, -7.4766, -7.4775, -7.4784, -7.4789, -7.4789,
        -7.4786, -7.4785, -7.4784, -7.4784, -7.4784, -7.4784, -7.4785, -7.4785,
        -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3809e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5904e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8216e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0666, -8.0667, -8.0668, -8.0669, -8.0669, -8.0669, -8.0669, -8.0669,
        -8.0669, -8.0670], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785, -7.4785,
        -7.4785, -7.4785], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 10 	 HLi 	 LiH 	 3.426352063462153e-06

PASSTHROUGH -- HLi DONE.
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6736, -99.6960, -99.7081, -99.7154, -99.7205, -99.7242, -99.7269,
        -99.7289, -99.7303, -99.7313, -99.7320, -99.7325, -99.7329, -99.7331,
        -99.7333, -99.7335, -99.7335, -99.7336, -99.7337, -99.7337, -99.7337,
        -99.7337, -99.7337, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1935e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1935e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7335, -99.7335, -99.7336, -99.7337, -99.7337, -99.7337, -99.7337,
        -99.7337, -99.7338, -99.7338], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 24 	 F 	 F 	 5.033239333584849e-09

PASSTHROUGH -- F DONE.
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7750, -460.8235, -460.8370, -460.8439, -460.8483, -460.8513,
        -460.8534, -460.8549, -460.8559, -460.8566, -460.8571, -460.8575,
        -460.8577, -460.8579, -460.8580, -460.8581, -460.8581, -460.8582,
        -460.8582, -460.8582, -460.8582, -460.8582, -460.8582, -460.8583,
        -460.8583], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.5982e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1335, -460.1592, -460.1671, -460.1715, -460.1744, -460.1765,
        -460.1779, -460.1790, -460.1797, -460.1803, -460.1806, -460.1809,
        -460.1811, -460.1812, -460.1813, -460.1814, -460.1814, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9358e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2717, -0.4458, -0.4685, -0.4793, -0.4859, -0.4902, -0.4932, -0.4952,
        -0.4967, -0.4977, -0.4984, -0.4988, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9297e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.5684e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8581, -460.8581, -460.8582, -460.8582, -460.8582, -460.8582,
        -460.8582, -460.8582, -460.8583, -460.8583], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1814, -460.1814, -460.1815, -460.1815, -460.1815, -460.1815,
        -460.1815, -460.1815, -460.1815, -460.1815], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 9 	 HCl 	 ClH 	 7.179460902296259e-06

PASSTHROUGH -- HCl DONE.
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7631, -37.8011, -37.8136, -37.8205, -37.8251, -37.8283, -37.8305,
        -37.8321, -37.8332, -37.8340, -37.8346, -37.8350, -37.8352, -37.8354,
        -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7749e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7749e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 22 	 C 	 C 	 4.989844074401886e-06

PASSTHROUGH -- C DONE.
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.1661, -73.0815, -75.0676, -75.8462, -76.2978, -76.5938, -76.7954,
        -76.9347, -77.0316, -77.0993, -77.1466, -77.1798, -77.2030, -77.2192,
        -77.2306, -77.2385, -77.2441, -77.2480, -77.2508, -77.2527, -77.2540,
        -77.2550, -77.2556, -77.2561, -77.2564], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.3631e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7391, -37.7755, -37.7952, -37.8071, -37.8153, -37.8212, -37.8255,
        -37.8285, -37.8307, -37.8322, -37.8333, -37.8341, -37.8346, -37.8350,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1845e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2122, -0.4275, -0.4584, -0.4728, -0.4815, -0.4872, -0.4911, -0.4938,
        -0.4957, -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9295e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7058e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2385, -77.2441, -77.2480, -77.2508, -77.2527, -77.2540, -77.2550,
        -77.2556, -77.2561, -77.2564], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 7 	 C2H2 	 C2H2 	 0.0008873415052899101

PASSTHROUGH -- C2H2 DONE.
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1325, -93.5844, -93.4368, -93.3739, -93.3278, -93.2974, -93.2753,
        -93.2596, -93.2481, -93.2397, -93.2336, -93.2291, -93.2258, -93.2233,
        -93.2215, -93.2201, -93.2191, -93.2183, -93.2177, -93.2173, -93.2169,
        -93.2167, -93.2165, -93.2163, -93.2162], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6406e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7401, -37.7784, -37.7975, -37.8088, -37.8166, -37.8221, -37.8261,
        -37.8290, -37.8310, -37.8325, -37.8335, -37.8342, -37.8347, -37.8351,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1267e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3305, -0.4620, -0.4776, -0.4852, -0.4899, -0.4930, -0.4951, -0.4966,
        -0.4976, -0.4983, -0.4988, -0.4992, -0.4994, -0.4996, -0.4997, -0.4998,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4044e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4209, -54.4938, -54.5247, -54.5426, -54.5548, -54.5634, -54.5696,
        -54.5739, -54.5770, -54.5792, -54.5807, -54.5818, -54.5826, -54.5831,
        -54.5835, -54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842,
        -54.5843, -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2996e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2201, -93.2191, -93.2183, -93.2177, -93.2173, -93.2169, -93.2167,
        -93.2165, -93.2163, -93.2162], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8355, -37.8356, -37.8357, -37.8358, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5837, -54.5839, -54.5840, -54.5841, -54.5842, -54.5842, -54.5843,
        -54.5843, -54.5843, -54.5843], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 0 	 3 	 CHN 	 CNH 	 0.009636701269030172

PASSTHROUGH -- CHN DONE.
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9851, -1.0975, -1.1264, -1.1411, -1.1504, -1.1567, -1.1610, -1.1641,
        -1.1662, -1.1677, -1.1687, -1.1694, -1.1699, -1.1703, -1.1705, -1.1707,
        -1.1708, -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711, -1.1711,
        -1.1711], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9529e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9059e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3045, -0.4551, -0.4737, -0.4827, -0.4881, -0.4918, -0.4943, -0.4960,
        -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2562e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8918e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1707, -1.1708, -1.1709, -1.1710, -1.1710, -1.1711, -1.1711, -1.1711,
        -1.1711, -1.1711], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 0 	 H2 	 H2 	 2.3139898192324612e-06

PASSTHROUGH -- H2 DONE.
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7457, -37.7870, -37.8038, -37.8134, -37.8200, -37.8246, -37.8279,
        -37.8302, -37.8319, -37.8331, -37.8339, -37.8345, -37.8349, -37.8352,
        -37.8354, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9772e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9772e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2521, -0.4400, -0.4653, -0.4772, -0.4845, -0.4893, -0.4925, -0.4948,
        -0.4963, -0.4974, -0.4982, -0.4987, -0.4991, -0.4994, -0.4995, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9296e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.4861e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8663e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8339], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.8663e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358, -37.8359,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8339], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 0 	 17 	 CH3 	 CH3 	 6.262720171162831e-05

PASSTHROUGH -- CH3 DONE.
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e00)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e00/2022-11-29_10:09:21.572573_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e00/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 0 || ,[' rho : 4.733977', ' ae : 51.924124', ' E : 2.937571'] ,|| total loss 42.298886 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
NEXT EPOCH BEGINNING - PASSTHROUGH COMPLETE.
SETTING NETWORK TO TRAINING MODE.
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7392, -37.7759, -37.7956, -37.8074, -37.8155, -37.8214, -37.8256,
        -37.8286, -37.8307, -37.8322, -37.8333, -37.8341, -37.8346, -37.8350,
        -37.8353, -37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358,
        -37.8358, -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1762e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1762e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2951, -0.4525, -0.4722, -0.4817, -0.4875, -0.4913, -0.4940, -0.4958,
        -0.4970, -0.4979, -0.4985, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.5000,
        -0.5000], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9298e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6050e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.8667e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8339], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.8667e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8355, -37.8356, -37.8357, -37.8357, -37.8358, -37.8358, -37.8358,
        -37.8359, -37.8359, -37.8359], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.5000, -0.5000], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8339], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 17 	 CH3 	 CH3 	 6.258534975140823e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9686, -8.0259, -8.0413, -8.0493, -8.0545, -8.0580, -8.0605, -8.0623,
        -8.0635, -8.0644, -8.0650, -8.0654, -8.0657, -8.0660, -8.0661, -8.0662,
        -8.0663, -8.0663, -8.0664, -8.0664, -8.0664, -8.0664, -8.0664, -8.0664,
        -8.0664], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.4951e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9902e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3066, -0.4556, -0.4740, -0.4828, -0.4883, -0.4919, -0.4943, -0.4960,
        -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9042e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3108e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9710e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4631, -7.4704, -7.4735, -7.4751, -7.4762, -7.4770, -7.4779, -7.4785,
        -7.4786, -7.4783, -7.4781, -7.4781, -7.4780, -7.4781, -7.4781, -7.4781,
        -7.4781, -7.4781, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3602e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1599e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6915e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0662, -8.0663, -8.0663, -8.0664, -8.0664, -8.0664, -8.0664, -8.0664,
        -8.0664, -8.0664], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4781, -7.4781, -7.4781, -7.4782, -7.4782, -7.4782, -7.4782, -7.4782,
        -7.4782, -7.4782], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 10 	 HLi 	 LiH 	 3.64856370015673e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2859, -0.4499, -0.4708, -0.4807, -0.4868, -0.4909, -0.4936, -0.4955,
        -0.4968, -0.4978, -0.4984, -0.4989, -0.4992, -0.4994, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8843e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.2567e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7686e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9572, -75.0037, -75.0234, -75.0348, -75.0424, -75.0478, -75.0516,
        -75.0544, -75.0564, -75.0578, -75.0588, -75.0595, -75.0600, -75.0604,
        -75.0606, -75.0608, -75.0609, -75.0610, -75.0610, -75.0611, -75.0611,
        -75.0611, -75.0611, -75.0612, -75.0612], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.5126e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7781e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4264], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.7781e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0608, -75.0609, -75.0610, -75.0610, -75.0611, -75.0611, -75.0611,
        -75.0611, -75.0612, -75.0612], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4264], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 19 	 H2O 	 OH2 	 3.513307168831372e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3112, -0.4568, -0.4747, -0.4833, -0.4885, -0.4920, -0.4944, -0.4961,
        -0.4972, -0.4980, -0.4986, -0.4990, -0.4993, -0.4995, -0.4996, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8681e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4092e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7363e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4430, -54.5121, -54.5367, -54.5505, -54.5596, -54.5660, -54.5705,
        -54.5736, -54.5759, -54.5775, -54.5786, -54.5794, -54.5799, -54.5803,
        -54.5806, -54.5807, -54.5809, -54.5810, -54.5810, -54.5811, -54.5811,
        -54.5811, -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8095e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7544e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.7544e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5807, -54.5809, -54.5810, -54.5810, -54.5811, -54.5811, -54.5811,
        -54.5812, -54.5812, -54.5812], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5500], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 20 	 H3N 	 NH3 	 2.982599136456903e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2987, -0.4534, -0.4727, -0.4820, -0.4877, -0.4914, -0.4940, -0.4958,
        -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4997,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8540e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9922e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7080e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4072, -54.4765, -54.5108, -54.5313, -54.5455, -54.5557, -54.5629,
        -54.5681, -54.5718, -54.5744, -54.5762, -54.5775, -54.5785, -54.5791,
        -54.5795, -54.5799, -54.5801, -54.5802, -54.5803, -54.5804, -54.5805,
        -54.5805, -54.5805, -54.5805, -54.5806], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1688e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7297e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2158], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.7297e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5799, -54.5801, -54.5802, -54.5803, -54.5804, -54.5805, -54.5805,
        -54.5805, -54.5805, -54.5806], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2158], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 14 	 HN 	 NH 	 1.046578513738141e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7846, -460.8150, -460.8238, -460.8284, -460.8313, -460.8332,
        -460.8346, -460.8356, -460.8363, -460.8367, -460.8371, -460.8373,
        -460.8375, -460.8376, -460.8376, -460.8377, -460.8377, -460.8378,
        -460.8378, -460.8378, -460.8378, -460.8378, -460.8378, -460.8378,
        -460.8378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(7.5280e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0976, -460.1287, -460.1399, -460.1462, -460.1505, -460.1536,
        -460.1559, -460.1575, -460.1586, -460.1595, -460.1601, -460.1605,
        -460.1608, -460.1610, -460.1611, -460.1612, -460.1613, -460.1613,
        -460.1614, -460.1614, -460.1614, -460.1614, -460.1614, -460.1615,
        -460.1615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2650e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3060, -0.4554, -0.4739, -0.4827, -0.4882, -0.4918, -0.4942, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999, -0.4999,
        -0.4999], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8411e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.8241e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8377, -460.8377, -460.8378, -460.8378, -460.8378, -460.8378,
        -460.8378, -460.8378, -460.8378, -460.8378], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1612, -460.1613, -460.1613, -460.1614, -460.1614, -460.1614,
        -460.1614, -460.1614, -460.1615, -460.1615], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4999,
        -0.4999, -0.4999], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 9 	 HCl 	 ClH 	 6.512475764532684e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1156, -460.1393, -460.1465, -460.1504, -460.1530, -460.1548,
        -460.1561, -460.1570, -460.1576, -460.1581, -460.1584, -460.1587,
        -460.1588, -460.1589, -460.1590, -460.1591, -460.1591, -460.1591,
        -460.1592, -460.1592, -460.1592, -460.1592, -460.1592, -460.1592,
        -460.1592], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.8150e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8150e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1591, -460.1591, -460.1591, -460.1592, -460.1592, -460.1592,
        -460.1592, -460.1592, -460.1592, -460.1592], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 23 	 Cl 	 Cl 	 2.9337690870854785e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9638, -75.0095, -75.0264, -75.0358, -75.0421, -75.0465, -75.0496,
        -75.0518, -75.0534, -75.0546, -75.0554, -75.0559, -75.0563, -75.0566,
        -75.0568, -75.0569, -75.0570, -75.0571, -75.0571, -75.0572, -75.0572,
        -75.0572, -75.0572, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4642e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4642e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4089], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(2.4642e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0569, -75.0570, -75.0571, -75.0571, -75.0572, -75.0572, -75.0572,
        -75.0572, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4089], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 15 	 O3 	 O3 	 6.918239910696182e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7508, -37.7912, -37.8054, -37.8134, -37.8187, -37.8224, -37.8250,
        -37.8269, -37.8282, -37.8291, -37.8298, -37.8303, -37.8306, -37.8308,
        -37.8310, -37.8311, -37.8312, -37.8312, -37.8313, -37.8313, -37.8313,
        -37.8313, -37.8313, -37.8313, -37.8313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6190e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6190e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8311, -37.8312, -37.8312, -37.8313, -37.8313, -37.8313, -37.8313,
        -37.8313, -37.8313, -37.8313], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 22 	 C 	 C 	 1.9663563974135175e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6120, -199.5478, -199.5314, -199.5230, -199.5177, -199.5141,
        -199.5116, -199.5098, -199.5086, -199.5077, -199.5071, -199.5067,
        -199.5064, -199.5062, -199.5060, -199.5059, -199.5058, -199.5058,
        -199.5057, -199.5057, -199.5057, -199.5057, -199.5057, -199.5056,
        -199.5056], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2464e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4928e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6642, -99.6885, -99.6996, -99.7062, -99.7108, -99.7141, -99.7165,
        -99.7182, -99.7195, -99.7204, -99.7210, -99.7215, -99.7218, -99.7220,
        -99.7222, -99.7223, -99.7224, -99.7224, -99.7225, -99.7225, -99.7225,
        -99.7225, -99.7225, -99.7225, -99.7225], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3385e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5022e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5059, -199.5058, -199.5058, -199.5057, -199.5057, -199.5057,
        -199.5057, -199.5057, -199.5056, -199.5056], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7223, -99.7224, -99.7224, -99.7225, -99.7225, -99.7225, -99.7225,
        -99.7225, -99.7225, -99.7225], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 6 	 F2 	 F2 	 3.571954811241848e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2224, -162.2336, -162.2373, -162.2393, -162.2404, -162.2412,
        -162.2419, -162.2424, -162.2427, -162.2428, -162.2429, -162.2429,
        -162.2430, -162.2430, -162.2430, -162.2430, -162.2430, -162.2430,
        -162.2431, -162.2431, -162.2431, -162.2431, -162.2431, -162.2431,
        -162.2431], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4185e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.4185e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2430, -162.2430, -162.2430, -162.2431, -162.2431, -162.2431,
        -162.2431, -162.2431, -162.2431, -162.2431], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 28 	 Na 	 Na 	 3.111596716999335e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6676, -99.6929, -99.7026, -99.7083, -99.7121, -99.7148, -99.7168,
        -99.7182, -99.7192, -99.7200, -99.7205, -99.7208, -99.7211, -99.7213,
        -99.7214, -99.7215, -99.7216, -99.7216, -99.7216, -99.7217, -99.7217,
        -99.7217, -99.7217, -99.7217, -99.7217], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0695e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0695e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7215, -99.7216, -99.7216, -99.7216, -99.7217, -99.7217, -99.7217,
        -99.7217, -99.7217, -99.7217], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 24 	 F 	 F 	 3.475333301039959e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4380, -54.5074, -54.5324, -54.5463, -54.5556, -54.5621, -54.5666,
        -54.5699, -54.5722, -54.5738, -54.5749, -54.5757, -54.5763, -54.5767,
        -54.5769, -54.5771, -54.5773, -54.5773, -54.5774, -54.5775, -54.5775,
        -54.5775, -54.5775, -54.5775, -54.5775], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7407e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7407e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5771, -54.5773, -54.5773, -54.5774, -54.5775, -54.5775, -54.5775,
        -54.5775, -54.5775, -54.5775], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 27 	 N 	 N 	 3.1791738872407364e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.5522, -188.7591, -188.5870, -188.4878, -188.4267, -188.3852,
        -188.3562, -188.3359, -188.3215, -188.3113, -188.3041, -188.2990,
        -188.2954, -188.2928, -188.2909, -188.2896, -188.2887, -188.2880,
        -188.2875, -188.2872, -188.2870, -188.2868, -188.2867, -188.2866,
        -188.2865], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0031e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7360, -37.7749, -37.7937, -37.8048, -37.8124, -37.8178, -37.8218,
        -37.8245, -37.8265, -37.8279, -37.8289, -37.8296, -37.8301, -37.8305,
        -37.8307, -37.8309, -37.8310, -37.8311, -37.8312, -37.8312, -37.8312,
        -37.8313, -37.8313, -37.8313, -37.8313], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6802e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9471, -74.9918, -75.0132, -75.0258, -75.0344, -75.0405, -75.0450,
        -75.0481, -75.0504, -75.0520, -75.0532, -75.0540, -75.0546, -75.0550,
        -75.0553, -75.0555, -75.0556, -75.0557, -75.0558, -75.0558, -75.0559,
        -75.0559, -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1827e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.2896, -188.2887, -188.2880, -188.2875, -188.2872, -188.2870,
        -188.2868, -188.2867, -188.2866, -188.2865], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8309, -37.8310, -37.8311, -37.8312, -37.8312, -37.8312, -37.8313,
        -37.8313, -37.8313, -37.8313], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0555, -75.0556, -75.0557, -75.0558, -75.0558, -75.0559, -75.0559,
        -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 4 	 CO2 	 CO2 	 0.0181681073702378

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.5850, -324.5417, -324.5304, -324.5246, -324.5209, -324.5184,
        -324.5166, -324.5154, -324.5145, -324.5139, -324.5135, -324.5132,
        -324.5130, -324.5129, -324.5127, -324.5127, -324.5126, -324.5126,
        -324.5126, -324.5125, -324.5125, -324.5125, -324.5125, -324.5125,
        -324.5125], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5177e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0354e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2231, -162.2345, -162.2383, -162.2403, -162.2416, -162.2424,
        -162.2431, -162.2436, -162.2439, -162.2441, -162.2441, -162.2442,
        -162.2442, -162.2442, -162.2443, -162.2443, -162.2443, -162.2443,
        -162.2443, -162.2443, -162.2443, -162.2443, -162.2443, -162.2443,
        -162.2443], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1289e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0467e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5127, -324.5126, -324.5126, -324.5126, -324.5125, -324.5125,
        -324.5125, -324.5125, -324.5125, -324.5125], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2443, -162.2443, -162.2443, -162.2443, -162.2443, -162.2443,
        -162.2443, -162.2443, -162.2443, -162.2443], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 11 	 Na2 	 Na2 	 2.7627661914645886e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4622, -7.4697, -7.4725, -7.4741, -7.4751, -7.4759, -7.4768, -7.4773,
        -7.4773, -7.4770, -7.4769, -7.4768, -7.4768, -7.4768, -7.4769, -7.4769,
        -7.4769, -7.4769, -7.4769, -7.4769, -7.4770, -7.4770, -7.4770, -7.4770,
        -7.4770], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2436e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7743e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4874e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4769, -7.4769, -7.4769, -7.4769, -7.4769, -7.4770, -7.4770, -7.4770,
        -7.4770, -7.4770], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 26 	 Li 	 Li 	 2.795008208419848e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2053, -107.2580, -107.2243, -107.2204, -107.2167, -107.2146,
        -107.2140, -107.2145, -107.2153, -107.2161, -107.2167, -107.2171,
        -107.2175, -107.2179, -107.2182, -107.2185, -107.2188, -107.2190,
        -107.2192, -107.2194, -107.2196, -107.2197, -107.2198, -107.2199,
        -107.2199], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.2494e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0010, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6679, -99.6932, -99.7031, -99.7088, -99.7128, -99.7156, -99.7176,
        -99.7191, -99.7201, -99.7209, -99.7214, -99.7218, -99.7220, -99.7222,
        -99.7223, -99.7224, -99.7225, -99.7226, -99.7226, -99.7226, -99.7226,
        -99.7226, -99.7227, -99.7227, -99.7227], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1031e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0010, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4621, -7.4695, -7.4724, -7.4740, -7.4750, -7.4758, -7.4767, -7.4773,
        -7.4772, -7.4770, -7.4768, -7.4768, -7.4768, -7.4768, -7.4768, -7.4768,
        -7.4768, -7.4769, -7.4769, -7.4769, -7.4769, -7.4769, -7.4769, -7.4769,
        -7.4769], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2403e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7218e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2185, -107.2188, -107.2190, -107.2192, -107.2194, -107.2196,
        -107.2197, -107.2198, -107.2199, -107.2199], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7224, -99.7225, -99.7226, -99.7226, -99.7226, -99.7226, -99.7226,
        -99.7227, -99.7227, -99.7227], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4768, -7.4768, -7.4769, -7.4769, -7.4769, -7.4769, -7.4769, -7.4769,
        -7.4769, -7.4769], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 2 	 FLi 	 LiF 	 0.009549874976357706

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.5522, -113.3481, -113.3002, -113.2744, -113.2587, -113.2480,
        -113.2406, -113.2355, -113.2319, -113.2295, -113.2278, -113.2266,
        -113.2258, -113.2252, -113.2248, -113.2245, -113.2243, -113.2242,
        -113.2241, -113.2240, -113.2240, -113.2240, -113.2239, -113.2239,
        -113.2239], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6854e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7580, -37.7960, -37.8086, -37.8156, -37.8202, -37.8234, -37.8256,
        -37.8272, -37.8284, -37.8292, -37.8297, -37.8301, -37.8304, -37.8306,
        -37.8307, -37.8308, -37.8309, -37.8309, -37.8310, -37.8310, -37.8310,
        -37.8310, -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7833e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9661, -75.0110, -75.0270, -75.0358, -75.0416, -75.0458, -75.0487,
        -75.0508, -75.0523, -75.0533, -75.0540, -75.0546, -75.0549, -75.0552,
        -75.0554, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557, -75.0558,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2010e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2245, -113.2243, -113.2242, -113.2241, -113.2240, -113.2240,
        -113.2240, -113.2239, -113.2239, -113.2239], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8308, -37.8309, -37.8309, -37.8310, -37.8310, -37.8310, -37.8310,
        -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0555, -75.0556, -75.0557, -75.0557, -75.0557, -75.0558, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 8 	 CO 	 OC 	 0.0013898657519134702

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4406, -920.4150, -920.4094, -920.4065, -920.4046, -920.4034,
        -920.4025, -920.4019, -920.4015, -920.4011, -920.4009, -920.4008,
        -920.4007, -920.4006, -920.4005, -920.4005, -920.4005, -920.4004,
        -920.4004, -920.4004, -920.4004, -920.4004, -920.4004, -920.4004,
        -920.4004], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.6186e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.2373e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0942, -460.1222, -460.1313, -460.1364, -460.1398, -460.1422,
        -460.1439, -460.1452, -460.1461, -460.1467, -460.1472, -460.1475,
        -460.1477, -460.1478, -460.1480, -460.1480, -460.1481, -460.1481,
        -460.1482, -460.1482, -460.1482, -460.1482, -460.1482, -460.1482,
        -460.1482], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8290e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.2373e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4005, -920.4005, -920.4004, -920.4004, -920.4004, -920.4004,
        -920.4004, -920.4004, -920.4004, -920.4004], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1480, -460.1481, -460.1481, -460.1482, -460.1482, -460.1482,
        -460.1482, -460.1482, -460.1482, -460.1482], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 5 	 Cl2 	 Cl2 	 2.081429770319375e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4315, -54.5026, -54.5290, -54.5440, -54.5540, -54.5610, -54.5659,
        -54.5694, -54.5719, -54.5736, -54.5749, -54.5757, -54.5763, -54.5768,
        -54.5771, -54.5773, -54.5774, -54.5775, -54.5776, -54.5777, -54.5777,
        -54.5777, -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6297e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6297e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9584, -75.0046, -75.0226, -75.0326, -75.0394, -75.0441, -75.0475,
        -75.0500, -75.0517, -75.0529, -75.0538, -75.0544, -75.0548, -75.0551,
        -75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0558, -75.0558,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1957e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8254e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6469], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.8254e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5773, -54.5774, -54.5775, -54.5776, -54.5777, -54.5777, -54.5777,
        -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0555, -75.0556, -75.0557, -75.0557, -75.0558, -75.0558, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6469], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 16 	 N2O 	 N2O 	 1.4284953272453465e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9540, -93.5044, -93.3880, -93.3348, -93.2975, -93.2725, -93.2545,
        -93.2416, -93.2322, -93.2253, -93.2202, -93.2165, -93.2137, -93.2117,
        -93.2101, -93.2090, -93.2081, -93.2075, -93.2070, -93.2066, -93.2063,
        -93.2061, -93.2059, -93.2058, -93.2057], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.5607e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7472, -37.7882, -37.8032, -37.8116, -37.8173, -37.8213, -37.8241,
        -37.8261, -37.8275, -37.8285, -37.8292, -37.8297, -37.8301, -37.8303,
        -37.8305, -37.8306, -37.8307, -37.8308, -37.8308, -37.8309, -37.8309,
        -37.8309, -37.8309, -37.8309, -37.8309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8706e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2307, -0.4333, -0.4615, -0.4748, -0.4828, -0.4881, -0.4917, -0.4941,
        -0.4959, -0.4970, -0.4979, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7994e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.8856e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4031, -54.4705, -54.5056, -54.5267, -54.5414, -54.5519, -54.5594,
        -54.5648, -54.5686, -54.5713, -54.5732, -54.5746, -54.5755, -54.5762,
        -54.5767, -54.5770, -54.5772, -54.5774, -54.5775, -54.5776, -54.5776,
        -54.5777, -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7398e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2090, -93.2081, -93.2075, -93.2070, -93.2066, -93.2063, -93.2061,
        -93.2059, -93.2058, -93.2057], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8306, -37.8307, -37.8308, -37.8308, -37.8309, -37.8309, -37.8309,
        -37.8309, -37.8309, -37.8309], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5770, -54.5772, -54.5774, -54.5775, -54.5776, -54.5776, -54.5777,
        -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 3 	 CHN 	 CNH 	 0.009528288596671649

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4010, -54.4636, -54.5002, -54.5227, -54.5383, -54.5496, -54.5577,
        -54.5636, -54.5677, -54.5706, -54.5727, -54.5742, -54.5752, -54.5759,
        -54.5764, -54.5768, -54.5770, -54.5772, -54.5773, -54.5774, -54.5775,
        -54.5775, -54.5775, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8631e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8631e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9484, -74.9938, -75.0146, -75.0268, -75.0351, -75.0410, -75.0452,
        -75.0482, -75.0504, -75.0520, -75.0531, -75.0538, -75.0544, -75.0548,
        -75.0550, -75.0552, -75.0554, -75.0555, -75.0555, -75.0556, -75.0556,
        -75.0556, -75.0556, -75.0557, -75.0557], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3145e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1776e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9802, -129.7408, -129.6892, -129.6681, -129.6570, -129.6499,
        -129.6453, -129.6423, -129.6403, -129.6389, -129.6380, -129.6374,
        -129.6370, -129.6367, -129.6365, -129.6364, -129.6363, -129.6363,
        -129.6363, -129.6362, -129.6362, -129.6362, -129.6362, -129.6362,
        -129.6362], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7991e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5768, -54.5770, -54.5772, -54.5773, -54.5774, -54.5775, -54.5775,
        -54.5775, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0552, -75.0554, -75.0555, -75.0555, -75.0556, -75.0556, -75.0556,
        -75.0556, -75.0557, -75.0557], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6364, -129.6363, -129.6363, -129.6363, -129.6362, -129.6362,
        -129.6362, -129.6362, -129.6362, -129.6362], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 12 	 NO 	 NO 	 6.967255648491134e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7413, -37.7825, -37.7990, -37.8086, -37.8150, -37.8196, -37.8228,
        -37.8251, -37.8268, -37.8279, -37.8287, -37.8293, -37.8297, -37.8300,
        -37.8302, -37.8304, -37.8305, -37.8305, -37.8306, -37.8306, -37.8306,
        -37.8306, -37.8307, -37.8307, -37.8307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0241e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0241e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2624, -0.4430, -0.4669, -0.4782, -0.4851, -0.4896, -0.4927, -0.4949,
        -0.4964, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7928e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.2528e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6158e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1437], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.6158e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8304, -37.8305, -37.8305, -37.8306, -37.8306, -37.8306, -37.8306,
        -37.8307, -37.8307, -37.8307], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1437], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 18 	 CH2 	 CH2 	 9.446929074302574e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3444, -0.4654, -0.4795, -0.4864, -0.4906, -0.4934, -0.4954, -0.4967,
        -0.4976, -0.4983, -0.4988, -0.4991, -0.4993, -0.4994, -0.4996, -0.4996,
        -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7900e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.0558e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5800e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9481, -74.9934, -75.0142, -75.0264, -75.0347, -75.0406, -75.0448,
        -75.0479, -75.0501, -75.0516, -75.0527, -75.0535, -75.0541, -75.0544,
        -75.0547, -75.0549, -75.0550, -75.0551, -75.0552, -75.0552, -75.0553,
        -75.0553, -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5003e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6150e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6589, -75.6935, -75.7059, -75.7128, -75.7174, -75.7206, -75.7229,
        -75.7245, -75.7257, -75.7265, -75.7271, -75.7275, -75.7278, -75.7280,
        -75.7281, -75.7282, -75.7283, -75.7283, -75.7284, -75.7284, -75.7284,
        -75.7284, -75.7284, -75.7284, -75.7284], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0549, -75.0550, -75.0551, -75.0552, -75.0552, -75.0553, -75.0553,
        -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7282, -75.7283, -75.7283, -75.7284, -75.7284, -75.7284, -75.7284,
        -75.7284, -75.7284, -75.7284], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 21 	 HO 	 OH 	 1.5421102222418061e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9434, -74.9832, -75.0062, -75.0204, -75.0302, -75.0373, -75.0424,
        -75.0461, -75.0487, -75.0506, -75.0519, -75.0529, -75.0536, -75.0540,
        -75.0544, -75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0551,
        -75.0551, -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6423e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6423e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 29 	 O 	 O 	 3.461747540442653e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.7999, -109.8107, -109.7038, -109.6360, -109.5915, -109.5610,
        -109.5398, -109.5251, -109.5149, -109.5077, -109.5028, -109.4993,
        -109.4969, -109.4952, -109.4940, -109.4931, -109.4926, -109.4922,
        -109.4919, -109.4917, -109.4915, -109.4914, -109.4914, -109.4913,
        -109.4913], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4297e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4006, -54.4627, -54.4994, -54.5219, -54.5377, -54.5490, -54.5572,
        -54.5630, -54.5672, -54.5701, -54.5722, -54.5737, -54.5747, -54.5754,
        -54.5760, -54.5763, -54.5766, -54.5767, -54.5769, -54.5769, -54.5770,
        -54.5770, -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1634e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4931, -109.4926, -109.4922, -109.4919, -109.4917, -109.4915,
        -109.4914, -109.4914, -109.4913, -109.4913], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5763, -54.5766, -54.5767, -54.5769, -54.5769, -54.5770, -54.5770,
        -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 1 	 1 	 N2 	 N2 	 0.00016896050043752492

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4288, -54.5003, -54.5273, -54.5425, -54.5527, -54.5599, -54.5650,
        -54.5686, -54.5711, -54.5729, -54.5742, -54.5750, -54.5757, -54.5761,
        -54.5764, -54.5766, -54.5768, -54.5769, -54.5769, -54.5770, -54.5770,
        -54.5771, -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0459e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0459e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9453, -74.9888, -75.0106, -75.0237, -75.0326, -75.0390, -75.0436,
        -75.0470, -75.0493, -75.0510, -75.0522, -75.0531, -75.0537, -75.0541,
        -75.0544, -75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0550,
        -75.0551, -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6439e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6898e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0662], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(7.6898e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5766, -54.5768, -54.5769, -54.5769, -54.5770, -54.5770, -54.5771,
        -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0550, -75.0551,
        -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0662], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 13 	 NO2 	 NO2 	 0.00023931469447137577

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2685, -0.4448, -0.4679, -0.4788, -0.4855, -0.4899, -0.4929, -0.4950,
        -0.4965, -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7830e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.0964e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5660e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 25 	 H 	 H 	 1.0839090378342361e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9898, -1.0988, -1.1267, -1.1410, -1.1501, -1.1562, -1.1604, -1.1634,
        -1.1654, -1.1669, -1.1679, -1.1686, -1.1691, -1.1694, -1.1697, -1.1698,
        -1.1699, -1.1700, -1.1701, -1.1701, -1.1702, -1.1702, -1.1702, -1.1702,
        -1.1702], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7578e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5155e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2834, -0.4491, -0.4703, -0.4804, -0.4865, -0.4906, -0.4934, -0.4954,
        -0.4967, -0.4976, -0.4983, -0.4987, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7821e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.4162e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4719e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1698, -1.1699, -1.1700, -1.1701, -1.1701, -1.1702, -1.1702, -1.1702,
        -1.1702, -1.1702], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 0 	 H2 	 H2 	 3.228306061837553e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.3509, -73.3257, -75.1751, -75.9065, -76.3338, -76.6147, -76.8065,
        -76.9391, -77.0315, -77.0959, -77.1410, -77.1725, -77.1946, -77.2101,
        -77.2209, -77.2286, -77.2339, -77.2376, -77.2402, -77.2421, -77.2434,
        -77.2443, -77.2449, -77.2453, -77.2456], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.2633e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7421, -37.7833, -37.7996, -37.8089, -37.8151, -37.8196, -37.8227,
        -37.8250, -37.8266, -37.8277, -37.8285, -37.8290, -37.8294, -37.8297,
        -37.8299, -37.8301, -37.8301, -37.8302, -37.8303, -37.8303, -37.8303,
        -37.8303, -37.8303, -37.8304, -37.8304], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2157e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3221, -0.4597, -0.4763, -0.4842, -0.4892, -0.4924, -0.4947, -0.4962,
        -0.4973, -0.4981, -0.4986, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7811e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.8936e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2286, -77.2339, -77.2376, -77.2402, -77.2421, -77.2434, -77.2443,
        -77.2449, -77.2453, -77.2456], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8301, -37.8301, -37.8302, -37.8303, -37.8303, -37.8303, -37.8303,
        -37.8303, -37.8304, -37.8304], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 1 	 7 	 C2H2 	 C2H2 	 0.0008708656644644298

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e01)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e01/2022-11-29_10:09:21.572573_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e01/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 1 || ,[' rho : 4.711483', ' ae : 51.738013', ' E : 2.224811'] ,|| total loss 42.122292 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4282, -54.4997, -54.5268, -54.5422, -54.5525, -54.5597, -54.5648,
        -54.5685, -54.5710, -54.5728, -54.5741, -54.5750, -54.5756, -54.5761,
        -54.5764, -54.5766, -54.5767, -54.5768, -54.5769, -54.5770, -54.5770,
        -54.5770, -54.5770, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0738e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0738e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5766, -54.5767, -54.5768, -54.5769, -54.5770, -54.5770, -54.5770,
        -54.5770, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 27 	 N 	 N 	 3.451866813521075e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2121, -0.4274, -0.4582, -0.4727, -0.4814, -0.4871, -0.4910, -0.4937,
        -0.4955, -0.4968, -0.4977, -0.4983, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7813e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3401e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5627e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4290, -54.5004, -54.5273, -54.5426, -54.5528, -54.5600, -54.5650,
        -54.5686, -54.5712, -54.5730, -54.5742, -54.5751, -54.5757, -54.5762,
        -54.5765, -54.5767, -54.5769, -54.5770, -54.5770, -54.5771, -54.5771,
        -54.5771, -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9933e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6026e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5455], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.6026e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5767, -54.5769, -54.5770, -54.5770, -54.5771, -54.5771, -54.5771,
        -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5455], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 20 	 H3N 	 NH3 	 3.098368779790912e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2792, -0.4479, -0.4696, -0.4799, -0.4863, -0.4904, -0.4933, -0.4953,
        -0.4966, -0.4976, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7825e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.6163e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5650e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9444, -74.9857, -75.0082, -75.0220, -75.0315, -75.0383, -75.0432,
        -75.0467, -75.0492, -75.0511, -75.0524, -75.0533, -75.0539, -75.0544,
        -75.0547, -75.0549, -75.0551, -75.0552, -75.0553, -75.0553, -75.0554,
        -75.0554, -75.0554, -75.0554, -75.0554], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4763e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5998e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4202], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5998e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0549, -75.0551, -75.0552, -75.0553, -75.0553, -75.0554, -75.0554,
        -75.0554, -75.0554, -75.0554], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4202], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 19 	 H2O 	 OH2 	 3.7422171465114685e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9961, -8.0362, -8.0469, -8.0525, -8.0561, -8.0586, -8.0603, -8.0615,
        -8.0624, -8.0630, -8.0634, -8.0637, -8.0639, -8.0641, -8.0642, -8.0643,
        -8.0643, -8.0644, -8.0644, -8.0644, -8.0644, -8.0644, -8.0644, -8.0644,
        -8.0644], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1891e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3782e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2617, -0.4428, -0.4667, -0.4781, -0.4850, -0.4896, -0.4927, -0.4949,
        -0.4963, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7833e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4516e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3348e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4612, -7.4685, -7.4716, -7.4733, -7.4744, -7.4752, -7.4762, -7.4768,
        -7.4769, -7.4767, -7.4765, -7.4764, -7.4764, -7.4764, -7.4764, -7.4765,
        -7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4766, -7.4766, -7.4766,
        -7.4766], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2173e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6400e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7696e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0643, -8.0643, -8.0644, -8.0644, -8.0644, -8.0644, -8.0644, -8.0644,
        -8.0644, -8.0644], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4766, -7.4766,
        -7.4766, -7.4766], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 10 	 HLi 	 LiH 	 4.090833528223262e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9586, -75.0047, -75.0225, -75.0326, -75.0393, -75.0440, -75.0474,
        -75.0498, -75.0515, -75.0528, -75.0536, -75.0542, -75.0547, -75.0550,
        -75.0552, -75.0553, -75.0554, -75.0555, -75.0556, -75.0556, -75.0556,
        -75.0556, -75.0557, -75.0557, -75.0557], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2828e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2828e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4060], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(3.2828e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0553, -75.0554, -75.0555, -75.0556, -75.0556, -75.0556, -75.0556,
        -75.0557, -75.0557, -75.0557], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4060], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 15 	 O3 	 O3 	 1.9452371731271947e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6040, -199.5455, -199.5305, -199.5229, -199.5180, -199.5147,
        -199.5124, -199.5108, -199.5097, -199.5089, -199.5084, -199.5080,
        -199.5077, -199.5075, -199.5073, -199.5072, -199.5072, -199.5071,
        -199.5071, -199.5071, -199.5070, -199.5070, -199.5070, -199.5070,
        -199.5070], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1837e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3675e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6629, -99.6838, -99.6961, -99.7036, -99.7089, -99.7128, -99.7157,
        -99.7177, -99.7192, -99.7203, -99.7211, -99.7216, -99.7220, -99.7223,
        -99.7224, -99.7226, -99.7227, -99.7227, -99.7228, -99.7228, -99.7229,
        -99.7229, -99.7229, -99.7229, -99.7229], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.8024e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3763e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5072, -199.5072, -199.5071, -199.5071, -199.5071, -199.5070,
        -199.5070, -199.5070, -199.5070, -199.5070], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7226, -99.7227, -99.7227, -99.7228, -99.7228, -99.7229, -99.7229,
        -99.7229, -99.7229, -99.7229], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 6 	 F2 	 F2 	 7.96640865948734e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9443, -74.9838, -75.0068, -75.0210, -75.0308, -75.0379, -75.0430,
        -75.0467, -75.0494, -75.0513, -75.0526, -75.0536, -75.0543, -75.0547,
        -75.0551, -75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0558,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2513e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2513e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0558, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 29 	 O 	 O 	 3.081240102198497e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0502, -1.1225, -1.1413, -1.1508, -1.1568, -1.1609, -1.1638, -1.1657,
        -1.1671, -1.1681, -1.1687, -1.1692, -1.1695, -1.1698, -1.1699, -1.1701,
        -1.1701, -1.1702, -1.1702, -1.1703, -1.1703, -1.1703, -1.1703, -1.1703,
        -1.1703], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7624e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5247e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2343, -0.4345, -0.4621, -0.4752, -0.4830, -0.4882, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4992, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7864e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9090e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4820e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1701, -1.1701, -1.1702, -1.1702, -1.1703, -1.1703, -1.1703, -1.1703,
        -1.1703, -1.1703], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 0 	 H2 	 H2 	 3.0463230590105276e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9818, -93.5166, -93.3951, -93.3405, -93.3018, -93.2760, -93.2574,
        -93.2441, -93.2345, -93.2275, -93.2223, -93.2185, -93.2157, -93.2136,
        -93.2120, -93.2109, -93.2100, -93.2094, -93.2089, -93.2085, -93.2082,
        -93.2080, -93.2078, -93.2077, -93.2076], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4987e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7491, -37.7896, -37.8042, -37.8124, -37.8179, -37.8217, -37.8244,
        -37.8264, -37.8277, -37.8287, -37.8294, -37.8299, -37.8302, -37.8304,
        -37.8306, -37.8307, -37.8308, -37.8309, -37.8309, -37.8309, -37.8309,
        -37.8310, -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8255e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3488, -0.4665, -0.4802, -0.4868, -0.4909, -0.4936, -0.4955, -0.4968,
        -0.4977, -0.4983, -0.4988, -0.4991, -0.4993, -0.4995, -0.4996, -0.4996,
        -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7886e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.9836e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4203, -54.4929, -54.5222, -54.5391, -54.5505, -54.5585, -54.5642,
        -54.5683, -54.5711, -54.5732, -54.5746, -54.5756, -54.5763, -54.5768,
        -54.5771, -54.5774, -54.5775, -54.5777, -54.5777, -54.5778, -54.5778,
        -54.5779, -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5574e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2109, -93.2100, -93.2094, -93.2089, -93.2085, -93.2082, -93.2080,
        -93.2078, -93.2077, -93.2076], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8307, -37.8308, -37.8309, -37.8309, -37.8309, -37.8309, -37.8310,
        -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5774, -54.5775, -54.5777, -54.5777, -54.5778, -54.5778, -54.5779,
        -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 3 	 CHN 	 CNH 	 0.009373204703498556

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4276, -54.4994, -54.5268, -54.5424, -54.5529, -54.5602, -54.5654,
        -54.5691, -54.5717, -54.5736, -54.5749, -54.5758, -54.5764, -54.5769,
        -54.5772, -54.5774, -54.5776, -54.5777, -54.5777, -54.5778, -54.5778,
        -54.5779, -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5494e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5494e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9486, -74.9934, -75.0144, -75.0268, -75.0352, -75.0412, -75.0455,
        -75.0486, -75.0509, -75.0524, -75.0536, -75.0544, -75.0549, -75.0553,
        -75.0556, -75.0558, -75.0559, -75.0560, -75.0561, -75.0561, -75.0562,
        -75.0562, -75.0562, -75.0562, -75.0562], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0032e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5526e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9607, -129.7373, -129.6890, -129.6688, -129.6581, -129.6511,
        -129.6466, -129.6436, -129.6416, -129.6403, -129.6394, -129.6388,
        -129.6384, -129.6381, -129.6379, -129.6378, -129.6377, -129.6376,
        -129.6376, -129.6376, -129.6376, -129.6376, -129.6376, -129.6376,
        -129.6376], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7307e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5774, -54.5776, -54.5777, -54.5777, -54.5778, -54.5778, -54.5779,
        -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0558, -75.0559, -75.0560, -75.0561, -75.0561, -75.0562, -75.0562,
        -75.0562, -75.0562, -75.0562], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6378, -129.6377, -129.6376, -129.6376, -129.6376, -129.6376,
        -129.6376, -129.6376, -129.6376, -129.6376], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 12 	 NO 	 NO 	 5.852188085430434e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.6023, -188.7799, -188.6019, -188.4990, -188.4355, -188.3924,
        -188.3624, -188.3412, -188.3263, -188.3157, -188.3082, -188.3029,
        -188.2992, -188.2965, -188.2946, -188.2932, -188.2922, -188.2915,
        -188.2910, -188.2907, -188.2904, -188.2902, -188.2901, -188.2900,
        -188.2899], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9783e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7523, -37.7921, -37.8059, -37.8136, -37.8187, -37.8223, -37.8249,
        -37.8267, -37.8280, -37.8289, -37.8295, -37.8299, -37.8303, -37.8305,
        -37.8306, -37.8307, -37.8308, -37.8309, -37.8309, -37.8309, -37.8309,
        -37.8310, -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8186e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9461, -74.9888, -75.0108, -75.0241, -75.0332, -75.0398, -75.0445,
        -75.0479, -75.0503, -75.0520, -75.0533, -75.0542, -75.0548, -75.0552,
        -75.0555, -75.0557, -75.0559, -75.0560, -75.0561, -75.0561, -75.0561,
        -75.0562, -75.0562, -75.0562, -75.0562], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0332e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.2932, -188.2922, -188.2915, -188.2910, -188.2907, -188.2904,
        -188.2902, -188.2901, -188.2900, -188.2899], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8307, -37.8308, -37.8309, -37.8309, -37.8309, -37.8309, -37.8310,
        -37.8310, -37.8310, -37.8310], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0557, -75.0559, -75.0560, -75.0561, -75.0561, -75.0561, -75.0562,
        -75.0562, -75.0562, -75.0562], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 4 	 CO2 	 CO2 	 0.017758908240503957

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4077, -54.4783, -54.5114, -54.5311, -54.5445, -54.5541, -54.5610,
        -54.5659, -54.5694, -54.5718, -54.5736, -54.5748, -54.5756, -54.5762,
        -54.5767, -54.5769, -54.5772, -54.5773, -54.5774, -54.5775, -54.5775,
        -54.5776, -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7857e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7857e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9453, -74.9871, -75.0094, -75.0230, -75.0323, -75.0390, -75.0439,
        -75.0474, -75.0499, -75.0516, -75.0529, -75.0538, -75.0544, -75.0549,
        -75.0552, -75.0554, -75.0556, -75.0557, -75.0558, -75.0558, -75.0559,
        -75.0559, -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1879e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9736e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0692], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.9736e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5769, -54.5772, -54.5773, -54.5774, -54.5775, -54.5775, -54.5776,
        -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0554, -75.0556, -75.0557, -75.0558, -75.0558, -75.0559, -75.0559,
        -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0692], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 13 	 NO2 	 NO2 	 0.0002656342433526782

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3027, -107.2866, -107.2508, -107.2380, -107.2300, -107.2253,
        -107.2229, -107.2216, -107.2208, -107.2203, -107.2200, -107.2198,
        -107.2198, -107.2199, -107.2200, -107.2202, -107.2203, -107.2205,
        -107.2206, -107.2207, -107.2208, -107.2209, -107.2210, -107.2210,
        -107.2211], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.2603e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6691, -99.6942, -99.7038, -99.7094, -99.7133, -99.7160, -99.7180,
        -99.7194, -99.7204, -99.7211, -99.7216, -99.7220, -99.7222, -99.7224,
        -99.7226, -99.7226, -99.7227, -99.7228, -99.7228, -99.7228, -99.7228,
        -99.7228, -99.7229, -99.7229, -99.7229], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7880e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4607, -7.4678, -7.4711, -7.4730, -7.4741, -7.4750, -7.4759, -7.4767,
        -7.4769, -7.4767, -7.4765, -7.4764, -7.4764, -7.4764, -7.4764, -7.4764,
        -7.4764, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765,
        -7.4765], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2096e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7516e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2202, -107.2203, -107.2205, -107.2206, -107.2207, -107.2208,
        -107.2209, -107.2210, -107.2210, -107.2211], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7226, -99.7227, -99.7228, -99.7228, -99.7228, -99.7228, -99.7228,
        -99.7229, -99.7229, -99.7229], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4764, -7.4764, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765, -7.4765,
        -7.4765, -7.4765], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 2 	 FLi 	 LiF 	 0.009422055495743759

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2296, -0.4330, -0.4613, -0.4746, -0.4827, -0.4880, -0.4916, -0.4941,
        -0.4958, -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7736e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4326e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5473e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 25 	 H 	 H 	 1.3188910716080682e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7419, -37.7830, -37.7993, -37.8087, -37.8150, -37.8194, -37.8226,
        -37.8249, -37.8265, -37.8276, -37.8284, -37.8290, -37.8294, -37.8297,
        -37.8299, -37.8300, -37.8301, -37.8302, -37.8302, -37.8303, -37.8303,
        -37.8303, -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2389e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2389e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8300, -37.8301, -37.8302, -37.8302, -37.8303, -37.8303, -37.8303,
        -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 22 	 C 	 C 	 2.425091958551454e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7473, -460.7905, -460.8026, -460.8088, -460.8128, -460.8155,
        -460.8174, -460.8187, -460.8196, -460.8202, -460.8207, -460.8210,
        -460.8212, -460.8214, -460.8215, -460.8215, -460.8216, -460.8216,
        -460.8217, -460.8217, -460.8217, -460.8217, -460.8217, -460.8217,
        -460.8217], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.5616e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0844, -460.1149, -460.1256, -460.1317, -460.1358, -460.1387,
        -460.1409, -460.1424, -460.1435, -460.1443, -460.1448, -460.1452,
        -460.1455, -460.1457, -460.1458, -460.1459, -460.1460, -460.1460,
        -460.1461, -460.1461, -460.1461, -460.1461, -460.1461, -460.1461,
        -460.1461], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8093e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2306, -0.4333, -0.4615, -0.4747, -0.4827, -0.4880, -0.4916, -0.4941,
        -0.4958, -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7693e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4644e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8215, -460.8216, -460.8216, -460.8217, -460.8217, -460.8217,
        -460.8217, -460.8217, -460.8217, -460.8217], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1459, -460.1460, -460.1460, -460.1461, -460.1461, -460.1461,
        -460.1461, -460.1461, -460.1461, -460.1461], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 9 	 HCl 	 ClH 	 4.889597678090382e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7536, -37.7928, -37.8061, -37.8136, -37.8185, -37.8219, -37.8244,
        -37.8261, -37.8273, -37.8282, -37.8288, -37.8292, -37.8295, -37.8297,
        -37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8302,
        -37.8302, -37.8302, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2950e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2950e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2821, -0.4487, -0.4700, -0.4802, -0.4864, -0.4905, -0.4934, -0.4953,
        -0.4966, -0.4976, -0.4982, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7679e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7866e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5688e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1434], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5688e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8302, -37.8302,
        -37.8302, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1434], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 18 	 CH2 	 CH2 	 0.00010033620578587907

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4382, -920.4113, -920.4053, -920.4022, -920.4003, -920.3989,
        -920.3980, -920.3973, -920.3968, -920.3965, -920.3962, -920.3961,
        -920.3960, -920.3959, -920.3958, -920.3958, -920.3957, -920.3957,
        -920.3957, -920.3957, -920.3957, -920.3957, -920.3957, -920.3957,
        -920.3957], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4346e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8691e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0861, -460.1160, -460.1263, -460.1321, -460.1361, -460.1389,
        -460.1409, -460.1424, -460.1434, -460.1441, -460.1447, -460.1450,
        -460.1453, -460.1455, -460.1456, -460.1457, -460.1458, -460.1458,
        -460.1459, -460.1459, -460.1459, -460.1459, -460.1459, -460.1459,
        -460.1459], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4160e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8695e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3958, -920.3957, -920.3957, -920.3957, -920.3957, -920.3957,
        -920.3957, -920.3957, -920.3957, -920.3957], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1457, -460.1458, -460.1458, -460.1459, -460.1459, -460.1459,
        -460.1459, -460.1459, -460.1459, -460.1459], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 5 	 Cl2 	 Cl2 	 2.020805243215536e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.5684, -113.3545, -113.3041, -113.2771, -113.2607, -113.2494,
        -113.2416, -113.2362, -113.2325, -113.2299, -113.2281, -113.2268,
        -113.2259, -113.2253, -113.2249, -113.2246, -113.2244, -113.2243,
        -113.2242, -113.2241, -113.2241, -113.2240, -113.2240, -113.2240,
        -113.2240], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6454e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7416, -37.7827, -37.7990, -37.8084, -37.8147, -37.8192, -37.8224,
        -37.8246, -37.8262, -37.8274, -37.8282, -37.8288, -37.8292, -37.8294,
        -37.8296, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300, -37.8300,
        -37.8301, -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3932e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9439, -74.9825, -75.0055, -75.0198, -75.0298, -75.0370, -75.0422,
        -75.0459, -75.0486, -75.0506, -75.0519, -75.0529, -75.0536, -75.0541,
        -75.0544, -75.0547, -75.0548, -75.0550, -75.0550, -75.0551, -75.0551,
        -75.0552, -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6058e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2246, -113.2244, -113.2243, -113.2242, -113.2241, -113.2241,
        -113.2240, -113.2240, -113.2240, -113.2240], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8298, -37.8299, -37.8299, -37.8300, -37.8300, -37.8300, -37.8301,
        -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0547, -75.0548, -75.0550, -75.0550, -75.0551, -75.0551, -75.0552,
        -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 8 	 CO 	 OC 	 0.0013322480380685085

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6633, -99.6857, -99.6975, -99.7045, -99.7095, -99.7131, -99.7157,
        -99.7176, -99.7190, -99.7200, -99.7207, -99.7212, -99.7215, -99.7218,
        -99.7220, -99.7221, -99.7222, -99.7222, -99.7223, -99.7223, -99.7223,
        -99.7224, -99.7224, -99.7224, -99.7224], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.6150e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.6150e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7221, -99.7222, -99.7222, -99.7223, -99.7223, -99.7223, -99.7224,
        -99.7224, -99.7224, -99.7224], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 24 	 F 	 F 	 3.1029514122465714e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8988, -109.5496, -109.5730, -109.5506, -109.5324, -109.5196,
        -109.5108, -109.5049, -109.5009, -109.4982, -109.4963, -109.4951,
        -109.4942, -109.4936, -109.4932, -109.4929, -109.4928, -109.4926,
        -109.4925, -109.4925, -109.4924, -109.4924, -109.4924, -109.4923,
        -109.4923], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4084e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4326, -54.5030, -54.5291, -54.5438, -54.5536, -54.5605, -54.5653,
        -54.5688, -54.5712, -54.5729, -54.5741, -54.5750, -54.5756, -54.5760,
        -54.5763, -54.5765, -54.5766, -54.5767, -54.5768, -54.5768, -54.5769,
        -54.5769, -54.5769, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1414e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4929, -109.4928, -109.4926, -109.4925, -109.4925, -109.4924,
        -109.4924, -109.4924, -109.4923, -109.4923], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5765, -54.5766, -54.5767, -54.5768, -54.5768, -54.5769, -54.5769,
        -54.5769, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 1 	 N2 	 N2 	 0.00015269229105785022

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2336, -0.4342, -0.4620, -0.4750, -0.4829, -0.4882, -0.4917, -0.4942,
        -0.4958, -0.4970, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7660e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.3857e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5321e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9487, -74.9936, -75.0144, -75.0265, -75.0348, -75.0407, -75.0449,
        -75.0480, -75.0502, -75.0517, -75.0528, -75.0536, -75.0542, -75.0546,
        -75.0548, -75.0550, -75.0552, -75.0552, -75.0553, -75.0554, -75.0554,
        -75.0554, -75.0554, -75.0554, -75.0555], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4350e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5665e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6514, -75.6878, -75.7022, -75.7102, -75.7156, -75.7194, -75.7221,
        -75.7241, -75.7255, -75.7264, -75.7271, -75.7276, -75.7280, -75.7282,
        -75.7284, -75.7285, -75.7286, -75.7287, -75.7287, -75.7287, -75.7288,
        -75.7288, -75.7288, -75.7288, -75.7288], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0550, -75.0552, -75.0552, -75.0553, -75.0554, -75.0554, -75.0554,
        -75.0554, -75.0554, -75.0555], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7285, -75.7286, -75.7287, -75.7287, -75.7287, -75.7288, -75.7288,
        -75.7288, -75.7288, -75.7288], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 21 	 HO 	 OH 	 1.8890060756157419e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7483, -37.7887, -37.8033, -37.8115, -37.8170, -37.8208, -37.8236,
        -37.8255, -37.8269, -37.8279, -37.8285, -37.8290, -37.8294, -37.8296,
        -37.8298, -37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3379e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3379e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2814, -0.4485, -0.4699, -0.4801, -0.4864, -0.4905, -0.4933, -0.4953,
        -0.4966, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7663e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.8806e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5661e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8272], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5661e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8301], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8272], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 17 	 CH3 	 CH3 	 5.6134968539426566e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.0235, -72.9751, -75.0349, -75.8297, -76.2859, -76.5833, -76.7855,
        -76.9248, -77.0218, -77.0895, -77.1369, -77.1701, -77.1933, -77.2096,
        -77.2210, -77.2290, -77.2346, -77.2386, -77.2413, -77.2433, -77.2446,
        -77.2456, -77.2463, -77.2467, -77.2470], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1942e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7473, -37.7880, -37.8028, -37.8111, -37.8167, -37.8206, -37.8234,
        -37.8254, -37.8268, -37.8278, -37.8285, -37.8290, -37.8294, -37.8296,
        -37.8298, -37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3310e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2847, -0.4494, -0.4704, -0.4805, -0.4866, -0.4907, -0.4934, -0.4954,
        -0.4967, -0.4976, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7665e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7350e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2290, -77.2346, -77.2386, -77.2413, -77.2433, -77.2446, -77.2456,
        -77.2463, -77.2467, -77.2470], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 7 	 C2H2 	 C2H2 	 0.0008187139551624874

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2209, -162.2331, -162.2376, -162.2401, -162.2416, -162.2426,
        -162.2434, -162.2441, -162.2445, -162.2447, -162.2448, -162.2449,
        -162.2449, -162.2449, -162.2450, -162.2450, -162.2450, -162.2450,
        -162.2450, -162.2450, -162.2450, -162.2450, -162.2450, -162.2450,
        -162.2450], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.7768e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7768e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2450, -162.2450, -162.2450, -162.2450, -162.2450, -162.2450,
        -162.2450, -162.2450, -162.2450, -162.2450], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 28 	 Na 	 Na 	 2.1413754251288816e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3106, -0.4566, -0.4745, -0.4831, -0.4884, -0.4919, -0.4943, -0.4959,
        -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7708e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.6168e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5417e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4043, -54.4720, -54.5065, -54.5274, -54.5418, -54.5521, -54.5595,
        -54.5647, -54.5685, -54.5712, -54.5730, -54.5743, -54.5753, -54.5759,
        -54.5764, -54.5767, -54.5769, -54.5771, -54.5772, -54.5773, -54.5773,
        -54.5774, -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9291e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5810e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2129], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.5810e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5767, -54.5769, -54.5771, -54.5772, -54.5773, -54.5773, -54.5774,
        -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2129], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 14 	 HN 	 NH 	 1.2468323544448665e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4126, -54.4845, -54.5160, -54.5345, -54.5470, -54.5560, -54.5623,
        -54.5668, -54.5700, -54.5723, -54.5739, -54.5750, -54.5758, -54.5764,
        -54.5768, -54.5770, -54.5772, -54.5774, -54.5775, -54.5775, -54.5776,
        -54.5776, -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7427e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7427e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9453, -74.9843, -75.0072, -75.0214, -75.0312, -75.0383, -75.0435,
        -75.0472, -75.0498, -75.0518, -75.0531, -75.0541, -75.0548, -75.0552,
        -75.0556, -75.0558, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563,
        -75.0563, -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9764e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7190e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6506], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.7190e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5770, -54.5772, -54.5774, -54.5775, -54.5775, -54.5776, -54.5776,
        -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0558, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563, -75.0563,
        -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6506], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 16 	 N2O 	 N2O 	 5.130291100559436e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0873, -460.1185, -460.1297, -460.1361, -460.1404, -460.1436,
        -460.1458, -460.1475, -460.1486, -460.1495, -460.1501, -460.1505,
        -460.1508, -460.1510, -460.1511, -460.1512, -460.1513, -460.1514,
        -460.1514, -460.1514, -460.1514, -460.1515, -460.1515, -460.1515,
        -460.1515], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.1590e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1590e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1512, -460.1513, -460.1514, -460.1514, -460.1514, -460.1514,
        -460.1515, -460.1515, -460.1515, -460.1515], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 23 	 Cl 	 Cl 	 2.8061444630497523e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4642, -7.4710, -7.4732, -7.4743, -7.4751, -7.4761, -7.4766, -7.4766,
        -7.4763, -7.4761, -7.4761, -7.4761, -7.4761, -7.4761, -7.4762, -7.4762,
        -7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762,
        -7.4762], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1983e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.3793e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3968e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762, -7.4762,
        -7.4762, -7.4762], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 2 	 26 	 Li 	 Li 	 7.70955339319594e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6204, -324.5594, -324.5434, -324.5352, -324.5300, -324.5265,
        -324.5240, -324.5223, -324.5211, -324.5203, -324.5197, -324.5192,
        -324.5190, -324.5187, -324.5186, -324.5185, -324.5184, -324.5184,
        -324.5183, -324.5183, -324.5183, -324.5183, -324.5183, -324.5183,
        -324.5183], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.4717e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9434e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2244, -162.2363, -162.2405, -162.2427, -162.2441, -162.2450,
        -162.2458, -162.2464, -162.2467, -162.2469, -162.2470, -162.2470,
        -162.2471, -162.2471, -162.2471, -162.2471, -162.2471, -162.2471,
        -162.2472, -162.2472, -162.2472, -162.2472, -162.2472, -162.2472,
        -162.2472], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9050e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9494e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5185, -324.5184, -324.5184, -324.5183, -324.5183, -324.5183,
        -324.5183, -324.5183, -324.5183, -324.5183], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2471, -162.2471, -162.2471, -162.2472, -162.2472, -162.2472,
        -162.2472, -162.2472, -162.2472, -162.2472], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 2 	 11 	 Na2 	 Na2 	 2.674715292313425e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e02)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e02/2022-11-29_10:09:21.572573_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e02/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 2 || ,[' rho : 4.696821', ' ae : 51.209312', ' E : 2.059509'] ,|| total loss 41.748954 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6572, -324.5742, -324.5525, -324.5414, -324.5343, -324.5296,
        -324.5262, -324.5239, -324.5223, -324.5211, -324.5203, -324.5197,
        -324.5193, -324.5191, -324.5189, -324.5187, -324.5186, -324.5186,
        -324.5185, -324.5185, -324.5185, -324.5185, -324.5184, -324.5184,
        -324.5184], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.4665e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9329e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2223, -162.2347, -162.2394, -162.2420, -162.2436, -162.2447,
        -162.2455, -162.2462, -162.2467, -162.2469, -162.2470, -162.2471,
        -162.2471, -162.2471, -162.2472, -162.2472, -162.2472, -162.2472,
        -162.2472, -162.2472, -162.2472, -162.2472, -162.2472, -162.2472,
        -162.2472], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7962e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9387e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5187, -324.5186, -324.5186, -324.5185, -324.5185, -324.5185,
        -324.5185, -324.5184, -324.5184, -324.5184], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2472, -162.2472, -162.2472, -162.2472, -162.2472, -162.2472,
        -162.2472, -162.2472, -162.2472, -162.2472], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 11 	 Na2 	 Na2 	 2.6587062815611744e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6761, -99.7003, -99.7087, -99.7135, -99.7167, -99.7190, -99.7207,
        -99.7218, -99.7227, -99.7233, -99.7237, -99.7240, -99.7242, -99.7243,
        -99.7244, -99.7245, -99.7246, -99.7246, -99.7246, -99.7247, -99.7247,
        -99.7247, -99.7247, -99.7247, -99.7247], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.0964e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0964e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7245, -99.7246, -99.7246, -99.7246, -99.7247, -99.7247, -99.7247,
        -99.7247, -99.7247, -99.7247], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 24 	 F 	 F 	 1.9780806941956106e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6704, -199.5757, -199.5509, -199.5382, -199.5301, -199.5247,
        -199.5208, -199.5182, -199.5163, -199.5150, -199.5140, -199.5134,
        -199.5129, -199.5126, -199.5124, -199.5122, -199.5121, -199.5120,
        -199.5119, -199.5119, -199.5119, -199.5118, -199.5118, -199.5118,
        -199.5118], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1915e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3831e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6744, -99.6990, -99.7079, -99.7130, -99.7164, -99.7188, -99.7206,
        -99.7219, -99.7228, -99.7234, -99.7238, -99.7242, -99.7244, -99.7245,
        -99.7247, -99.7247, -99.7248, -99.7248, -99.7249, -99.7249, -99.7249,
        -99.7249, -99.7249, -99.7249, -99.7249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8070e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3889e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5122, -199.5121, -199.5120, -199.5119, -199.5119, -199.5119,
        -199.5118, -199.5118, -199.5118, -199.5118], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7247, -99.7248, -99.7248, -99.7249, -99.7249, -99.7249, -99.7249,
        -99.7249, -99.7249, -99.7249], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 6 	 F2 	 F2 	 5.693956135930845e-09

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2371, -0.4353, -0.4626, -0.4754, -0.4832, -0.4883, -0.4918, -0.4942,
        -0.4959, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7797e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0308e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5596e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4194, -54.4918, -54.5215, -54.5387, -54.5503, -54.5584, -54.5643,
        -54.5684, -54.5713, -54.5734, -54.5748, -54.5759, -54.5766, -54.5771,
        -54.5774, -54.5777, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782,
        -54.5782, -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3595e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5932e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5477], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5932e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5777, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782, -54.5782,
        -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5477], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 20 	 H3N 	 NH3 	 1.9935548759918614e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9524, -74.9978, -75.0180, -75.0297, -75.0376, -75.0432, -75.0473,
        -75.0502, -75.0523, -75.0538, -75.0548, -75.0555, -75.0561, -75.0564,
        -75.0567, -75.0569, -75.0570, -75.0571, -75.0572, -75.0572, -75.0572,
        -75.0573, -75.0573, -75.0573, -75.0573], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4617e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4617e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0569, -75.0570, -75.0571, -75.0572, -75.0572, -75.0572, -75.0573,
        -75.0573, -75.0573, -75.0573], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 29 	 O 	 O 	 2.3455286707476508e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4864, -54.5176, -54.5359, -54.5483, -54.5571, -54.5634,
        -54.5679, -54.5710, -54.5733, -54.5748, -54.5760, -54.5767, -54.5773,
        -54.5777, -54.5779, -54.5781, -54.5783, -54.5783, -54.5784, -54.5785,
        -54.5785, -54.5785, -54.5785, -54.5785], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2026e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2026e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9479, -74.9902, -75.0122, -75.0254, -75.0345, -75.0411, -75.0458,
        -75.0492, -75.0516, -75.0534, -75.0546, -75.0555, -75.0561, -75.0565,
        -75.0568, -75.0571, -75.0572, -75.0573, -75.0574, -75.0574, -75.0575,
        -75.0575, -75.0575, -75.0575, -75.0575], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3602e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5628e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0752], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.5628e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5779, -54.5781, -54.5783, -54.5783, -54.5784, -54.5785, -54.5785,
        -54.5785, -54.5785, -54.5785], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0571, -75.0572, -75.0573, -75.0574, -75.0574, -75.0575, -75.0575,
        -75.0575, -75.0575, -75.0575], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0752], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 13 	 NO2 	 NO2 	 0.0003300144667851475

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2491, -0.4390, -0.4646, -0.4768, -0.4841, -0.4890, -0.4923, -0.4945,
        -0.4961, -0.4972, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7864e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2617e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5728e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9604, -75.0062, -75.0242, -75.0343, -75.0411, -75.0459, -75.0494,
        -75.0518, -75.0536, -75.0548, -75.0557, -75.0563, -75.0568, -75.0571,
        -75.0573, -75.0574, -75.0576, -75.0576, -75.0577, -75.0577, -75.0577,
        -75.0578, -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2119e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5949e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6658, -75.6990, -75.7106, -75.7170, -75.7212, -75.7242, -75.7263,
        -75.7278, -75.7289, -75.7297, -75.7302, -75.7306, -75.7308, -75.7310,
        -75.7311, -75.7312, -75.7313, -75.7313, -75.7314, -75.7314, -75.7314,
        -75.7314, -75.7314, -75.7314, -75.7314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0574, -75.0576, -75.0576, -75.0577, -75.0577, -75.0577, -75.0578,
        -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7312, -75.7313, -75.7313, -75.7314, -75.7314, -75.7314, -75.7314,
        -75.7314, -75.7314, -75.7314], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 21 	 HO 	 OH 	 2.300638424603102e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.5732, -188.7723, -188.5997, -188.4997, -188.4381, -188.3963,
        -188.3671, -188.3465, -188.3320, -188.3218, -188.3145, -188.3093,
        -188.3057, -188.3031, -188.3012, -188.2999, -188.2989, -188.2982,
        -188.2978, -188.2974, -188.2972, -188.2970, -188.2969, -188.2968,
        -188.2967], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9560e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7537, -37.7931, -37.8067, -37.8143, -37.8193, -37.8229, -37.8254,
        -37.8271, -37.8284, -37.8293, -37.8299, -37.8303, -37.8306, -37.8309,
        -37.8310, -37.8311, -37.8312, -37.8312, -37.8313, -37.8313, -37.8313,
        -37.8313, -37.8313, -37.8314, -37.8314], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6015e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9613, -75.0070, -75.0248, -75.0348, -75.0415, -75.0463, -75.0497,
        -75.0521, -75.0538, -75.0550, -75.0559, -75.0565, -75.0569, -75.0572,
        -75.0575, -75.0576, -75.0577, -75.0578, -75.0578, -75.0579, -75.0579,
        -75.0579, -75.0579, -75.0579, -75.0579], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1389e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.2999, -188.2989, -188.2982, -188.2978, -188.2974, -188.2972,
        -188.2970, -188.2969, -188.2968, -188.2967], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8311, -37.8312, -37.8312, -37.8313, -37.8313, -37.8313, -37.8313,
        -37.8313, -37.8314, -37.8314], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0576, -75.0577, -75.0578, -75.0578, -75.0579, -75.0579, -75.0579,
        -75.0579, -75.0579, -75.0579], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 4 	 CO2 	 CO2 	 0.01738669949087599

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2233, -0.4310, -0.4602, -0.4739, -0.4822, -0.4877, -0.4914, -0.4939,
        -0.4957, -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7860e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7877e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5720e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9516, -74.9965, -75.0171, -75.0291, -75.0373, -75.0432, -75.0474,
        -75.0504, -75.0526, -75.0541, -75.0552, -75.0560, -75.0565, -75.0569,
        -75.0572, -75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0578,
        -75.0578, -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2209e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5942e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4237], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5942e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0578, -75.0578,
        -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4237], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 19 	 H2O 	 OH2 	 2.5410425832474567e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1702, -93.5944, -93.4372, -93.3728, -93.3245, -93.2931, -93.2703,
        -93.2541, -93.2424, -93.2340, -93.2278, -93.2233, -93.2199, -93.2175,
        -93.2157, -93.2143, -93.2133, -93.2126, -93.2120, -93.2116, -93.2113,
        -93.2110, -93.2109, -93.2107, -93.2106], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.4066e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7585, -37.7963, -37.8088, -37.8157, -37.8203, -37.8235, -37.8257,
        -37.8273, -37.8284, -37.8292, -37.8298, -37.8302, -37.8305, -37.8307,
        -37.8308, -37.8309, -37.8310, -37.8310, -37.8310, -37.8311, -37.8311,
        -37.8311, -37.8311, -37.8311, -37.8311], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7424e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2604, -0.4424, -0.4665, -0.4780, -0.4849, -0.4895, -0.4926, -0.4948,
        -0.4963, -0.4974, -0.4981, -0.4986, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7845e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.7265e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4229, -54.4951, -54.5240, -54.5406, -54.5517, -54.5596, -54.5652,
        -54.5691, -54.5720, -54.5739, -54.5753, -54.5763, -54.5770, -54.5775,
        -54.5778, -54.5781, -54.5782, -54.5783, -54.5784, -54.5785, -54.5785,
        -54.5785, -54.5786, -54.5786, -54.5786], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1471e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2143, -93.2133, -93.2126, -93.2120, -93.2116, -93.2113, -93.2110,
        -93.2109, -93.2107, -93.2106], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8309, -37.8310, -37.8310, -37.8310, -37.8311, -37.8311, -37.8311,
        -37.8311, -37.8311, -37.8311], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5781, -54.5782, -54.5783, -54.5784, -54.5785, -54.5785, -54.5785,
        -54.5786, -54.5786, -54.5786], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 3 	 CHN 	 CNH 	 0.00916017059933592

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3209, -0.4593, -0.4760, -0.4841, -0.4891, -0.4924, -0.4946, -0.4962,
        -0.4973, -0.4980, -0.4985, -0.4989, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7801e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.1873e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5602e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4344, -54.5047, -54.5307, -54.5453, -54.5551, -54.5619, -54.5668,
        -54.5702, -54.5726, -54.5743, -54.5755, -54.5764, -54.5770, -54.5774,
        -54.5777, -54.5779, -54.5780, -54.5781, -54.5782, -54.5782, -54.5783,
        -54.5783, -54.5783, -54.5783, -54.5783], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2701e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5929e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2139], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.5929e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5779, -54.5780, -54.5781, -54.5782, -54.5782, -54.5783, -54.5783,
        -54.5783, -54.5783, -54.5783], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2139], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 14 	 HN 	 NH 	 1.345352268701103e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7546, -37.7935, -37.8068, -37.8142, -37.8191, -37.8225, -37.8249,
        -37.8266, -37.8278, -37.8287, -37.8293, -37.8297, -37.8300, -37.8302,
        -37.8304, -37.8305, -37.8305, -37.8306, -37.8306, -37.8307, -37.8307,
        -37.8307, -37.8307, -37.8307, -37.8307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9782e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9782e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2842, -0.4493, -0.4704, -0.4804, -0.4866, -0.4906, -0.4934, -0.4953,
        -0.4967, -0.4976, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7758e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7386e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5814e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8282], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5814e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8305, -37.8305, -37.8306, -37.8306, -37.8307, -37.8307, -37.8307,
        -37.8307, -37.8307, -37.8307], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8282], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 17 	 CH3 	 CH3 	 6.336994331834411e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7546, -37.7935, -37.8067, -37.8141, -37.8189, -37.8223, -37.8248,
        -37.8265, -37.8277, -37.8285, -37.8291, -37.8296, -37.8298, -37.8301,
        -37.8302, -37.8303, -37.8304, -37.8304, -37.8305, -37.8305, -37.8305,
        -37.8305, -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0807e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0807e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3389, -0.4640, -0.4787, -0.4858, -0.4902, -0.4932, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998, -0.4998,
        -0.4998], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7721e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7053e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5751e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1441], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5751e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8303, -37.8304, -37.8304, -37.8305, -37.8305, -37.8305, -37.8305,
        -37.8305, -37.8305, -37.8305], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4998,
        -0.4998, -0.4998], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1441], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 18 	 CH2 	 CH2 	 0.00010885748298612961

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4659, -920.4301, -920.4216, -920.4172, -920.4143, -920.4123,
        -920.4110, -920.4100, -920.4093, -920.4088, -920.4084, -920.4082,
        -920.4080, -920.4079, -920.4078, -920.4077, -920.4077, -920.4076,
        -920.4076, -920.4076, -920.4076, -920.4076, -920.4076, -920.4076,
        -920.4076], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2932e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5863e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0918, -460.1218, -460.1322, -460.1380, -460.1420, -460.1448,
        -460.1469, -460.1484, -460.1494, -460.1502, -460.1507, -460.1511,
        -460.1513, -460.1515, -460.1516, -460.1517, -460.1518, -460.1519,
        -460.1519, -460.1519, -460.1519, -460.1519, -460.1519, -460.1519,
        -460.1520], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0653e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5874e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4077, -920.4077, -920.4076, -920.4076, -920.4076, -920.4076,
        -920.4076, -920.4076, -920.4076, -920.4076], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1517, -460.1518, -460.1519, -460.1519, -460.1519, -460.1519,
        -460.1519, -460.1519, -460.1519, -460.1520], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 5 	 Cl2 	 Cl2 	 1.9547748540698712e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9457, -74.9846, -75.0074, -75.0216, -75.0314, -75.0384, -75.0436,
        -75.0473, -75.0500, -75.0519, -75.0532, -75.0542, -75.0548, -75.0553,
        -75.0557, -75.0559, -75.0561, -75.0562, -75.0563, -75.0563, -75.0564,
        -75.0564, -75.0564, -75.0564, -75.0564], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9268e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9268e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4113], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(2.9268e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0559, -75.0561, -75.0562, -75.0563, -75.0563, -75.0564, -75.0564,
        -75.0564, -75.0564, -75.0564], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4113], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 15 	 O3 	 O3 	 5.548289933843915e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4629, -7.4701, -7.4724, -7.4736, -7.4745, -7.4754, -7.4761, -7.4762,
        -7.4760, -7.4758, -7.4757, -7.4757, -7.4757, -7.4757, -7.4758, -7.4758,
        -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4759, -7.4759,
        -7.4759], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1753e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.4974e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3510e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4759,
        -7.4759, -7.4759], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 26 	 Li 	 Li 	 1.1361348092565629e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2217, -162.2340, -162.2386, -162.2411, -162.2427, -162.2438,
        -162.2446, -162.2452, -162.2457, -162.2459, -162.2460, -162.2461,
        -162.2461, -162.2461, -162.2462, -162.2462, -162.2462, -162.2462,
        -162.2462, -162.2462, -162.2462, -162.2462, -162.2462, -162.2462,
        -162.2462], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4754e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.4754e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2462, -162.2462, -162.2462, -162.2462, -162.2462, -162.2462,
        -162.2462, -162.2462, -162.2462, -162.2462], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 28 	 Na 	 Na 	 1.636109480843611e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7682, -460.8011, -460.8105, -460.8154, -460.8185, -460.8206,
        -460.8221, -460.8231, -460.8238, -460.8243, -460.8247, -460.8249,
        -460.8251, -460.8252, -460.8253, -460.8253, -460.8254, -460.8254,
        -460.8254, -460.8254, -460.8255, -460.8255, -460.8255, -460.8255,
        -460.8255], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(6.1937e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0880, -460.1186, -460.1294, -460.1355, -460.1397, -460.1427,
        -460.1448, -460.1464, -460.1475, -460.1483, -460.1488, -460.1492,
        -460.1495, -460.1497, -460.1499, -460.1500, -460.1500, -460.1501,
        -460.1501, -460.1501, -460.1502, -460.1502, -460.1502, -460.1502,
        -460.1502], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2076e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2432, -0.4372, -0.4636, -0.4761, -0.4836, -0.4886, -0.4920, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7603e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.1173e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8253, -460.8254, -460.8254, -460.8254, -460.8254, -460.8255,
        -460.8255, -460.8255, -460.8255, -460.8255], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1500, -460.1500, -460.1501, -460.1501, -460.1501, -460.1502,
        -460.1502, -460.1502, -460.1502, -460.1502], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 9 	 HCl 	 ClH 	 4.3625483238963694e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7460, -37.7866, -37.8018, -37.8104, -37.8161, -37.8202, -37.8231,
        -37.8251, -37.8266, -37.8276, -37.8283, -37.8288, -37.8292, -37.8294,
        -37.8296, -37.8297, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300,
        -37.8300, -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4191e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4191e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8297, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300, -37.8300,
        -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 22 	 C 	 C 	 2.5696002182651523e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9651, -8.0228, -8.0383, -8.0463, -8.0515, -8.0551, -8.0576, -8.0594,
        -8.0606, -8.0615, -8.0621, -8.0625, -8.0629, -8.0631, -8.0632, -8.0633,
        -8.0634, -8.0635, -8.0635, -8.0635, -8.0635, -8.0636, -8.0636, -8.0636,
        -8.0636], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0240e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0480e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2940, -0.4520, -0.4719, -0.4814, -0.4872, -0.4911, -0.4937, -0.4955,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7621e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.5770e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0004e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4604, -7.4677, -7.4708, -7.4725, -7.4736, -7.4745, -7.4754, -7.4761,
        -7.4762, -7.4759, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757,
        -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1738e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6632e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3483e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0633, -8.0634, -8.0635, -8.0635, -8.0635, -8.0635, -8.0636, -8.0636,
        -8.0636, -8.0636], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4757, -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758, -7.4758], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 10 	 HLi 	 LiH 	 4.222838166524043e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8655, -109.6762, -109.6371, -109.5932, -109.5627, -109.5417,
        -109.5272, -109.5172, -109.5103, -109.5055, -109.5022, -109.5000,
        -109.4984, -109.4973, -109.4965, -109.4960, -109.4956, -109.4953,
        -109.4952, -109.4950, -109.4949, -109.4949, -109.4948, -109.4948,
        -109.4948], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3889e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4394, -54.5081, -54.5328, -54.5465, -54.5557, -54.5621, -54.5666,
        -54.5698, -54.5721, -54.5737, -54.5748, -54.5756, -54.5761, -54.5765,
        -54.5768, -54.5770, -54.5771, -54.5772, -54.5773, -54.5773, -54.5773,
        -54.5774, -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8336e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4960, -109.4956, -109.4953, -109.4952, -109.4950, -109.4949,
        -109.4949, -109.4948, -109.4948, -109.4948], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5770, -54.5771, -54.5772, -54.5773, -54.5773, -54.5773, -54.5774,
        -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 1 	 N2 	 N2 	 0.0001347015258454937

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0952, -460.1238, -460.1333, -460.1387, -460.1423, -460.1448,
        -460.1467, -460.1480, -460.1489, -460.1496, -460.1501, -460.1504,
        -460.1506, -460.1508, -460.1509, -460.1510, -460.1511, -460.1511,
        -460.1511, -460.1512, -460.1512, -460.1512, -460.1512, -460.1512,
        -460.1512], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9547e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9547e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1510, -460.1511, -460.1511, -460.1511, -460.1512, -460.1512,
        -460.1512, -460.1512, -460.1512, -460.1512], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 23 	 Cl 	 Cl 	 2.3819884218038297e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4415, -54.5096, -54.5338, -54.5473, -54.5562, -54.5625, -54.5669,
        -54.5700, -54.5722, -54.5737, -54.5748, -54.5756, -54.5761, -54.5765,
        -54.5768, -54.5770, -54.5771, -54.5772, -54.5772, -54.5773, -54.5773,
        -54.5773, -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8479e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8479e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9464, -74.9874, -75.0096, -75.0232, -75.0326, -75.0393, -75.0442,
        -75.0477, -75.0502, -75.0520, -75.0533, -75.0542, -75.0549, -75.0553,
        -75.0556, -75.0558, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563,
        -75.0563, -75.0563, -75.0563, -75.0564], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9616e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8094e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0260, -129.7540, -129.6947, -129.6717, -129.6601, -129.6527,
        -129.6480, -129.6449, -129.6429, -129.6415, -129.6406, -129.6400,
        -129.6397, -129.6394, -129.6392, -129.6391, -129.6390, -129.6390,
        -129.6390, -129.6389, -129.6389, -129.6389, -129.6389, -129.6389,
        -129.6389], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.6160e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5770, -54.5771, -54.5772, -54.5772, -54.5773, -54.5773, -54.5773,
        -54.5774, -54.5774, -54.5774], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0558, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563, -75.0563,
        -75.0563, -75.0563, -75.0564], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6391, -129.6390, -129.6390, -129.6390, -129.6389, -129.6389,
        -129.6389, -129.6389, -129.6389, -129.6389], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 12 	 NO 	 NO 	 2.44742257439672e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.3120, -73.2740, -75.1510, -75.8920, -76.3248, -76.6093, -76.8035,
        -76.9379, -77.0315, -77.0969, -77.1426, -77.1745, -77.1969, -77.2126,
        -77.2236, -77.2313, -77.2367, -77.2405, -77.2432, -77.2450, -77.2463,
        -77.2473, -77.2479, -77.2483, -77.2486], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.1333e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7387, -37.7788, -37.7962, -37.8063, -37.8132, -37.8181, -37.8215,
        -37.8240, -37.8258, -37.8271, -37.8279, -37.8286, -37.8290, -37.8293,
        -37.8295, -37.8297, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300,
        -37.8300, -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4314e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3181, -0.4586, -0.4756, -0.4838, -0.4888, -0.4922, -0.4945, -0.4961,
        -0.4972, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7604e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.6516e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2313, -77.2367, -77.2405, -77.2432, -77.2450, -77.2463, -77.2473,
        -77.2479, -77.2483, -77.2486], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8297, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300, -37.8300,
        -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 7 	 C2H2 	 C2H2 	 0.0007668282396275729

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4092, -54.4798, -54.5124, -54.5317, -54.5449, -54.5543, -54.5610,
        -54.5658, -54.5692, -54.5716, -54.5733, -54.5745, -54.5753, -54.5759,
        -54.5763, -54.5766, -54.5768, -54.5770, -54.5771, -54.5771, -54.5772,
        -54.5772, -54.5772, -54.5772, -54.5773], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0050e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0050e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5766, -54.5768, -54.5770, -54.5771, -54.5771, -54.5772, -54.5772,
        -54.5772, -54.5772, -54.5773], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 27 	 N 	 N 	 3.3417263814377166e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4235, -54.4954, -54.5238, -54.5401, -54.5511, -54.5588, -54.5642,
        -54.5681, -54.5709, -54.5728, -54.5742, -54.5751, -54.5758, -54.5763,
        -54.5766, -54.5768, -54.5770, -54.5771, -54.5772, -54.5772, -54.5773,
        -54.5773, -54.5773, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8999e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8999e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9467, -74.9880, -75.0101, -75.0236, -75.0328, -75.0395, -75.0443,
        -75.0478, -75.0503, -75.0521, -75.0533, -75.0542, -75.0549, -75.0553,
        -75.0556, -75.0559, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563,
        -75.0563, -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9621e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8620e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6521], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.8620e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5768, -54.5770, -54.5771, -54.5772, -54.5772, -54.5773, -54.5773,
        -54.5773, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0559, -75.0560, -75.0561, -75.0562, -75.0562, -75.0563, -75.0563,
        -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6521], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 16 	 N2O 	 N2O 	 8.641628247245758e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0160, -1.1088, -1.1328, -1.1450, -1.1527, -1.1580, -1.1616, -1.1641,
        -1.1659, -1.1671, -1.1680, -1.1686, -1.1690, -1.1693, -1.1695, -1.1696,
        -1.1697, -1.1698, -1.1699, -1.1699, -1.1699, -1.1699, -1.1699, -1.1700,
        -1.1700], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7038e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4076e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3063, -0.4554, -0.4738, -0.4826, -0.4881, -0.4917, -0.4941, -0.4958,
        -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7607e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.1134e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3598e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1696, -1.1697, -1.1698, -1.1699, -1.1699, -1.1699, -1.1699, -1.1699,
        -1.1700, -1.1700], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 0 	 H2 	 H2 	 3.4648226017051892e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.6234, -113.3777, -113.3197, -113.2885, -113.2696, -113.2566,
        -113.2476, -113.2413, -113.2369, -113.2339, -113.2318, -113.2303,
        -113.2293, -113.2286, -113.2281, -113.2277, -113.2275, -113.2273,
        -113.2272, -113.2271, -113.2271, -113.2270, -113.2270, -113.2270,
        -113.2270], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6140e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7432, -37.7840, -37.8000, -37.8091, -37.8153, -37.8196, -37.8227,
        -37.8249, -37.8265, -37.8276, -37.8283, -37.8289, -37.8293, -37.8296,
        -37.8297, -37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301,
        -37.8302, -37.8302, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3266e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9464, -74.9867, -75.0091, -75.0228, -75.0324, -75.0392, -75.0442,
        -75.0477, -75.0503, -75.0521, -75.0534, -75.0544, -75.0550, -75.0555,
        -75.0558, -75.0560, -75.0562, -75.0563, -75.0564, -75.0564, -75.0565,
        -75.0565, -75.0565, -75.0565, -75.0565], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8681e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2277, -113.2275, -113.2273, -113.2272, -113.2271, -113.2271,
        -113.2270, -113.2270, -113.2270, -113.2270], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8299, -37.8300, -37.8300, -37.8301, -37.8301, -37.8301, -37.8302,
        -37.8302, -37.8302, -37.8302], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0560, -75.0562, -75.0563, -75.0564, -75.0564, -75.0565, -75.0565,
        -75.0565, -75.0565, -75.0565], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 3 	 8 	 CO 	 OC 	 0.0012773632444919142

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2939, -107.2865, -107.2506, -107.2389, -107.2315, -107.2272,
        -107.2251, -107.2239, -107.2233, -107.2229, -107.2227, -107.2227,
        -107.2227, -107.2228, -107.2229, -107.2231, -107.2233, -107.2234,
        -107.2236, -107.2237, -107.2238, -107.2239, -107.2240, -107.2241,
        -107.2241], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3129e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6655, -99.6861, -99.6983, -99.7057, -99.7109, -99.7147, -99.7175,
        -99.7196, -99.7210, -99.7221, -99.7228, -99.7234, -99.7238, -99.7240,
        -99.7242, -99.7243, -99.7244, -99.7245, -99.7246, -99.7246, -99.7246,
        -99.7246, -99.7246, -99.7247, -99.7247], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2381e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4614, -7.4689, -7.4716, -7.4731, -7.4740, -7.4749, -7.4758, -7.4762,
        -7.4761, -7.4758, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757,
        -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1709e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6766e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2231, -107.2233, -107.2234, -107.2236, -107.2237, -107.2238,
        -107.2239, -107.2240, -107.2241, -107.2241], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7243, -99.7244, -99.7245, -99.7246, -99.7246, -99.7246, -99.7246,
        -99.7246, -99.7247, -99.7247], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4757, -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758, -7.4758], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 2 	 FLi 	 LiF 	 0.009239557888123431

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2442, -0.4375, -0.4638, -0.4762, -0.4837, -0.4887, -0.4921, -0.4944,
        -0.4960, -0.4971, -0.4979, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7618e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0916e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5236e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 3 	 25 	 H 	 H 	 1.7557449104473286e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e03)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e03/2022-11-29_10:09:21.572573_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e03/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 3 || ,[' rho : 4.689375', ' ae : 50.650148', ' E : 1.896594'] ,|| total loss 41.363764 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4221, -54.4941, -54.5230, -54.5396, -54.5508, -54.5587, -54.5643,
        -54.5683, -54.5711, -54.5731, -54.5745, -54.5755, -54.5761, -54.5766,
        -54.5770, -54.5772, -54.5774, -54.5775, -54.5776, -54.5776, -54.5777,
        -54.5777, -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6592e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6592e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5772, -54.5774, -54.5775, -54.5776, -54.5776, -54.5777, -54.5777,
        -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 27 	 N 	 N 	 3.0788383049414023e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0654, -1.1284, -1.1447, -1.1530, -1.1583, -1.1618, -1.1643, -1.1660,
        -1.1672, -1.1681, -1.1686, -1.1691, -1.1693, -1.1695, -1.1697, -1.1698,
        -1.1699, -1.1699, -1.1699, -1.1700, -1.1700, -1.1700, -1.1700, -1.1700,
        -1.1700], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7052e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4103e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2904, -0.4510, -0.4713, -0.4810, -0.4870, -0.4909, -0.4936, -0.4955,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7647e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7382e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3633e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1698, -1.1699, -1.1699, -1.1699, -1.1700, -1.1700, -1.1700, -1.1700,
        -1.1700, -1.1700], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 0 	 H2 	 H2 	 3.387406962531337e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9778, -8.0279, -8.0415, -8.0486, -8.0531, -8.0563, -8.0585, -8.0600,
        -8.0611, -8.0619, -8.0624, -8.0628, -8.0631, -8.0633, -8.0634, -8.0635,
        -8.0636, -8.0636, -8.0636, -8.0637, -8.0637, -8.0637, -8.0637, -8.0637,
        -8.0637], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0082e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0164e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2175, -0.4291, -0.4591, -0.4732, -0.4817, -0.4873, -0.4911, -0.4937,
        -0.4956, -0.4968, -0.4977, -0.4983, -0.4987, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7663e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6511e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9697e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4607, -7.4681, -7.4711, -7.4727, -7.4738, -7.4746, -7.4756, -7.4762,
        -7.4762, -7.4760, -7.4758, -7.4757, -7.4757, -7.4757, -7.4757, -7.4758,
        -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4759, -7.4759,
        -7.4759], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1769e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5108e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3238e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0635, -8.0636, -8.0636, -8.0636, -8.0637, -8.0637, -8.0637, -8.0637,
        -8.0637, -8.0637], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4759,
        -7.4759, -7.4759], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 10 	 HLi 	 LiH 	 4.054558972339984e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0843, -93.5597, -93.4188, -93.3591, -93.3153, -93.2866, -93.2659,
        -93.2512, -93.2405, -93.2328, -93.2272, -93.2231, -93.2201, -93.2179,
        -93.2162, -93.2150, -93.2141, -93.2134, -93.2129, -93.2125, -93.2122,
        -93.2120, -93.2118, -93.2117, -93.2116], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.3289e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7389, -37.7788, -37.7963, -37.8066, -37.8135, -37.8185, -37.8220,
        -37.8245, -37.8263, -37.8276, -37.8285, -37.8292, -37.8296, -37.8299,
        -37.8301, -37.8303, -37.8304, -37.8305, -37.8305, -37.8306, -37.8306,
        -37.8306, -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0553e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3108, -0.4566, -0.4745, -0.4831, -0.4884, -0.4919, -0.4943, -0.4959,
        -0.4971, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7679e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.8559e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4312, -54.5020, -54.5288, -54.5439, -54.5541, -54.5612, -54.5662,
        -54.5698, -54.5723, -54.5741, -54.5753, -54.5762, -54.5768, -54.5772,
        -54.5775, -54.5777, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782,
        -54.5782, -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3444e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2150, -93.2141, -93.2134, -93.2129, -93.2125, -93.2122, -93.2120,
        -93.2118, -93.2117, -93.2116], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8303, -37.8304, -37.8305, -37.8305, -37.8306, -37.8306, -37.8306,
        -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5777, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782, -54.5782,
        -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 3 	 CHN 	 CNH 	 0.008991641177643154

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6231, -324.5625, -324.5467, -324.5386, -324.5334, -324.5299,
        -324.5275, -324.5258, -324.5246, -324.5237, -324.5232, -324.5227,
        -324.5225, -324.5222, -324.5221, -324.5220, -324.5219, -324.5219,
        -324.5219, -324.5218, -324.5218, -324.5218, -324.5218, -324.5218,
        -324.5218], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.3986e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.7972e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2283, -162.2395, -162.2432, -162.2451, -162.2463, -162.2471,
        -162.2478, -162.2483, -162.2486, -162.2487, -162.2487, -162.2488,
        -162.2488, -162.2488, -162.2489, -162.2489, -162.2489, -162.2489,
        -162.2489, -162.2489, -162.2489, -162.2489, -162.2489, -162.2489,
        -162.2489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4702e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8006e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5220, -324.5219, -324.5219, -324.5219, -324.5218, -324.5218,
        -324.5218, -324.5218, -324.5218, -324.5218], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2489, -162.2489, -162.2489, -162.2489, -162.2489, -162.2489,
        -162.2489, -162.2489, -162.2489, -162.2489], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 11 	 Na2 	 Na2 	 2.627158639069408e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9506, -74.9946, -75.0155, -75.0279, -75.0363, -75.0423, -75.0467,
        -75.0498, -75.0520, -75.0536, -75.0548, -75.0556, -75.0561, -75.0565,
        -75.0568, -75.0570, -75.0571, -75.0572, -75.0573, -75.0573, -75.0574,
        -75.0574, -75.0574, -75.0574, -75.0574], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3994e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3994e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4153], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(2.3994e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0570, -75.0571, -75.0572, -75.0573, -75.0573, -75.0574, -75.0574,
        -75.0574, -75.0574, -75.0574], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4153], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 15 	 O3 	 O3 	 7.145436986172885e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1104, -460.1337, -460.1407, -460.1446, -460.1472, -460.1490,
        -460.1502, -460.1511, -460.1518, -460.1522, -460.1526, -460.1528,
        -460.1529, -460.1531, -460.1531, -460.1532, -460.1532, -460.1533,
        -460.1533, -460.1533, -460.1533, -460.1533, -460.1533, -460.1533,
        -460.1533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9699e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9699e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1532, -460.1532, -460.1533, -460.1533, -460.1533, -460.1533,
        -460.1533, -460.1533, -460.1533, -460.1533], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 23 	 Cl 	 Cl 	 6.613816925485584e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4610, -7.4684, -7.4713, -7.4729, -7.4739, -7.4748, -7.4757, -7.4762,
        -7.4762, -7.4759, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4758,
        -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1733e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5427e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3469e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758, -7.4758], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 26 	 Li 	 Li 	 1.1480022389913988e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3426, -0.4649, -0.4792, -0.4862, -0.4904, -0.4933, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4996,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7505e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9887e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5010e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4028, -54.4642, -54.5005, -54.5229, -54.5385, -54.5497, -54.5578,
        -54.5636, -54.5677, -54.5707, -54.5727, -54.5742, -54.5752, -54.5759,
        -54.5764, -54.5768, -54.5770, -54.5772, -54.5773, -54.5774, -54.5775,
        -54.5775, -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8515e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5395e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5395e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5768, -54.5770, -54.5772, -54.5773, -54.5774, -54.5775, -54.5775,
        -54.5776, -54.5776, -54.5776], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5476], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 20 	 H3N 	 NH3 	 1.426105350830638e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2119, -107.2619, -107.2281, -107.2244, -107.2209, -107.2190,
        -107.2185, -107.2189, -107.2197, -107.2204, -107.2210, -107.2215,
        -107.2219, -107.2222, -107.2226, -107.2229, -107.2232, -107.2234,
        -107.2237, -107.2238, -107.2240, -107.2241, -107.2243, -107.2243,
        -107.2244], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3045e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6664, -99.6890, -99.7004, -99.7072, -99.7121, -99.7155, -99.7181,
        -99.7199, -99.7213, -99.7222, -99.7229, -99.7234, -99.7237, -99.7239,
        -99.7241, -99.7242, -99.7243, -99.7244, -99.7244, -99.7244, -99.7245,
        -99.7245, -99.7245, -99.7245, -99.7245], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4263e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4621, -7.4695, -7.4720, -7.4734, -7.4743, -7.4752, -7.4760, -7.4762,
        -7.4760, -7.4758, -7.4756, -7.4756, -7.4756, -7.4757, -7.4757, -7.4757,
        -7.4757, -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1673e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.7350e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2229, -107.2232, -107.2234, -107.2237, -107.2238, -107.2240,
        -107.2241, -107.2243, -107.2243, -107.2244], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7242, -99.7243, -99.7244, -99.7244, -99.7244, -99.7245, -99.7245,
        -99.7245, -99.7245, -99.7245], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4757, -7.4757, -7.4757, -7.4758, -7.4758, -7.4758, -7.4758, -7.4758,
        -7.4758, -7.4758], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 2 	 FLi 	 LiF 	 0.009198151697090111

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7371, -37.7762, -37.7943, -37.8049, -37.8121, -37.8173, -37.8210,
        -37.8236, -37.8255, -37.8268, -37.8278, -37.8284, -37.8289, -37.8292,
        -37.8295, -37.8296, -37.8298, -37.8298, -37.8299, -37.8299, -37.8300,
        -37.8300, -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4560e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4560e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2262, -0.4318, -0.4607, -0.4742, -0.4824, -0.4877, -0.4914, -0.4939,
        -0.4957, -0.4969, -0.4977, -0.4983, -0.4988, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7416e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5253e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5179e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1438], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5179e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8296, -37.8298, -37.8298, -37.8299, -37.8299, -37.8300, -37.8300,
        -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1438], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 18 	 CH2 	 CH2 	 0.00011510106361560865

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3046, -0.4549, -0.4735, -0.4824, -0.4879, -0.4915, -0.4940, -0.4958,
        -0.4969, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7384e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.5447e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4769e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4370, -54.5062, -54.5314, -54.5455, -54.5549, -54.5615, -54.5661,
        -54.5694, -54.5717, -54.5733, -54.5745, -54.5753, -54.5759, -54.5763,
        -54.5765, -54.5767, -54.5769, -54.5770, -54.5770, -54.5771, -54.5771,
        -54.5771, -54.5771, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9865e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5168e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2130], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.5168e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5767, -54.5769, -54.5770, -54.5770, -54.5771, -54.5771, -54.5771,
        -54.5771, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2130], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 14 	 HN 	 NH 	 1.5232540858208047e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.6671, -113.3947, -113.3300, -113.2954, -113.2743, -113.2598,
        -113.2497, -113.2427, -113.2379, -113.2344, -113.2321, -113.2304,
        -113.2293, -113.2285, -113.2279, -113.2275, -113.2272, -113.2271,
        -113.2269, -113.2268, -113.2268, -113.2267, -113.2267, -113.2267,
        -113.2267], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6001e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7346, -37.7709, -37.7902, -37.8018, -37.8098, -37.8155, -37.8197,
        -37.8227, -37.8248, -37.8263, -37.8273, -37.8281, -37.8286, -37.8290,
        -37.8293, -37.8294, -37.8296, -37.8297, -37.8297, -37.8298, -37.8298,
        -37.8298, -37.8298, -37.8298, -37.8299], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5753e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9631, -75.0080, -75.0249, -75.0344, -75.0407, -75.0451, -75.0483,
        -75.0506, -75.0522, -75.0534, -75.0542, -75.0547, -75.0551, -75.0554,
        -75.0556, -75.0558, -75.0559, -75.0559, -75.0560, -75.0560, -75.0560,
        -75.0561, -75.0561, -75.0561, -75.0561], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2275, -113.2272, -113.2271, -113.2269, -113.2268, -113.2268,
        -113.2267, -113.2267, -113.2267, -113.2267], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8294, -37.8296, -37.8297, -37.8297, -37.8298, -37.8298, -37.8298,
        -37.8298, -37.8298, -37.8299], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0558, -75.0559, -75.0559, -75.0560, -75.0560, -75.0560, -75.0561,
        -75.0561, -75.0561, -75.0561], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 8 	 CO 	 OC 	 0.0012613721524312495

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5765, -109.9017, -109.7486, -109.6668, -109.6142, -109.5782,
        -109.5532, -109.5357, -109.5234, -109.5148, -109.5088, -109.5046,
        -109.5017, -109.4996, -109.4981, -109.4971, -109.4964, -109.4959,
        -109.4956, -109.4953, -109.4952, -109.4950, -109.4950, -109.4949,
        -109.4949], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3742e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4359, -54.5053, -54.5307, -54.5450, -54.5544, -54.5611, -54.5658,
        -54.5691, -54.5714, -54.5731, -54.5742, -54.5751, -54.5756, -54.5760,
        -54.5763, -54.5765, -54.5767, -54.5768, -54.5768, -54.5769, -54.5769,
        -54.5769, -54.5769, -54.5770, -54.5770], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1217e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4971, -109.4964, -109.4959, -109.4956, -109.4953, -109.4952,
        -109.4950, -109.4950, -109.4949, -109.4949], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5765, -54.5767, -54.5768, -54.5768, -54.5769, -54.5769, -54.5769,
        -54.5769, -54.5770, -54.5770], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 1 	 N2 	 N2 	 0.00012400048640014502

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7383, -37.7781, -37.7956, -37.8058, -37.8127, -37.8176, -37.8211,
        -37.8236, -37.8254, -37.8267, -37.8276, -37.8282, -37.8287, -37.8290,
        -37.8292, -37.8293, -37.8295, -37.8295, -37.8296, -37.8296, -37.8296,
        -37.8297, -37.8297, -37.8297, -37.8297], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6561e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6561e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8293, -37.8295, -37.8295, -37.8296, -37.8296, -37.8296, -37.8297,
        -37.8297, -37.8297, -37.8297], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 22 	 C 	 C 	 2.7333399194310238e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2130, -0.4276, -0.4583, -0.4727, -0.4813, -0.4870, -0.4909, -0.4936,
        -0.4954, -0.4967, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7274e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0647e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4549e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9476, -74.9903, -75.0117, -75.0246, -75.0335, -75.0398, -75.0444,
        -75.0477, -75.0501, -75.0518, -75.0530, -75.0538, -75.0544, -75.0548,
        -75.0551, -75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2448e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4873e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4219], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.4873e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4219], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 19 	 H2O 	 OH2 	 2.1813300037500236e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9517, -74.9967, -75.0166, -75.0282, -75.0361, -75.0418, -75.0458,
        -75.0487, -75.0508, -75.0523, -75.0533, -75.0541, -75.0546, -75.0549,
        -75.0552, -75.0554, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2338e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2338e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0554, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 29 	 O 	 O 	 3.0981294630458465e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6665, -99.6896, -99.7006, -99.7073, -99.7119, -99.7152, -99.7177,
        -99.7194, -99.7207, -99.7216, -99.7223, -99.7227, -99.7230, -99.7233,
        -99.7234, -99.7235, -99.7236, -99.7237, -99.7237, -99.7237, -99.7238,
        -99.7238, -99.7238, -99.7238, -99.7238], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3973e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3973e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7235, -99.7236, -99.7237, -99.7237, -99.7237, -99.7238, -99.7238,
        -99.7238, -99.7238, -99.7238], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 24 	 F 	 F 	 2.3846833904633858e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4102, -54.4808, -54.5131, -54.5322, -54.5453, -54.5545, -54.5612,
        -54.5659, -54.5692, -54.5716, -54.5733, -54.5745, -54.5753, -54.5759,
        -54.5763, -54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771,
        -54.5771, -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0463e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0463e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9607, -75.0060, -75.0235, -75.0334, -75.0400, -75.0447, -75.0481,
        -75.0505, -75.0522, -75.0534, -75.0543, -75.0549, -75.0553, -75.0556,
        -75.0558, -75.0560, -75.0561, -75.0561, -75.0562, -75.0562, -75.0562,
        -75.0563, -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9461e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9924e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0737], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.9924e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771, -54.5771,
        -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0560, -75.0561, -75.0561, -75.0562, -75.0562, -75.0562, -75.0563,
        -75.0563, -75.0563, -75.0563], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0737], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 13 	 NO2 	 NO2 	 0.0004210246053645364

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6555, -199.5699, -199.5475, -199.5360, -199.5288, -199.5238,
        -199.5203, -199.5179, -199.5162, -199.5150, -199.5142, -199.5136,
        -199.5132, -199.5129, -199.5127, -199.5125, -199.5124, -199.5123,
        -199.5123, -199.5123, -199.5122, -199.5122, -199.5122, -199.5122,
        -199.5122], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1005e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2010e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6684, -99.6922, -99.7028, -99.7091, -99.7135, -99.7166, -99.7189,
        -99.7206, -99.7217, -99.7226, -99.7232, -99.7236, -99.7239, -99.7241,
        -99.7243, -99.7244, -99.7245, -99.7245, -99.7245, -99.7246, -99.7246,
        -99.7246, -99.7246, -99.7246, -99.7246], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2402e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2072e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5125, -199.5124, -199.5123, -199.5123, -199.5123, -199.5122,
        -199.5122, -199.5122, -199.5122, -199.5122], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7244, -99.7245, -99.7245, -99.7245, -99.7246, -99.7246, -99.7246,
        -99.7246, -99.7246, -99.7246], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 6 	 F2 	 F2 	 2.952465084054033e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2610, -0.4425, -0.4666, -0.4780, -0.4849, -0.4895, -0.4926, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7363e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.6116e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4727e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9557, -75.0011, -75.0202, -75.0311, -75.0385, -75.0438, -75.0476,
        -75.0503, -75.0522, -75.0536, -75.0545, -75.0552, -75.0557, -75.0561,
        -75.0563, -75.0565, -75.0566, -75.0567, -75.0567, -75.0568, -75.0568,
        -75.0568, -75.0568, -75.0568, -75.0568], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6731e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4995e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6544, -75.6903, -75.7045, -75.7124, -75.7177, -75.7214, -75.7241,
        -75.7260, -75.7274, -75.7284, -75.7291, -75.7295, -75.7299, -75.7301,
        -75.7303, -75.7304, -75.7305, -75.7306, -75.7306, -75.7306, -75.7306,
        -75.7307, -75.7307, -75.7307, -75.7307], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0565, -75.0566, -75.0567, -75.0567, -75.0568, -75.0568, -75.0568,
        -75.0568, -75.0568, -75.0568], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7304, -75.7305, -75.7306, -75.7306, -75.7306, -75.7306, -75.7307,
        -75.7307, -75.7307, -75.7307], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 21 	 HO 	 OH 	 2.681026748871636e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4552, -920.4224, -920.4148, -920.4108, -920.4082, -920.4064,
        -920.4052, -920.4043, -920.4036, -920.4032, -920.4029, -920.4027,
        -920.4025, -920.4024, -920.4023, -920.4023, -920.4022, -920.4022,
        -920.4022, -920.4022, -920.4021, -920.4021, -920.4021, -920.4021,
        -920.4021], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9991e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9982e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1034, -460.1281, -460.1357, -460.1399, -460.1427, -460.1447,
        -460.1461, -460.1471, -460.1478, -460.1483, -460.1486, -460.1489,
        -460.1491, -460.1492, -460.1493, -460.1493, -460.1494, -460.1494,
        -460.1494, -460.1494, -460.1495, -460.1495, -460.1495, -460.1495,
        -460.1495], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4488e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9983e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4023, -920.4022, -920.4022, -920.4022, -920.4022, -920.4021,
        -920.4021, -920.4021, -920.4021, -920.4021], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1493, -460.1494, -460.1494, -460.1494, -460.1494, -460.1495,
        -460.1495, -460.1495, -460.1495, -460.1495], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 5 	 Cl2 	 Cl2 	 1.7532012242993526e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4308, -54.5015, -54.5283, -54.5435, -54.5536, -54.5608, -54.5658,
        -54.5694, -54.5719, -54.5737, -54.5749, -54.5758, -54.5764, -54.5769,
        -54.5772, -54.5774, -54.5775, -54.5776, -54.5777, -54.5778, -54.5778,
        -54.5778, -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5565e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5565e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9504, -74.9942, -75.0150, -75.0274, -75.0359, -75.0420, -75.0463,
        -75.0495, -75.0517, -75.0533, -75.0545, -75.0553, -75.0558, -75.0562,
        -75.0565, -75.0567, -75.0569, -75.0570, -75.0570, -75.0571, -75.0571,
        -75.0571, -75.0571, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5325e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0890e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0840, -129.7683, -129.6989, -129.6739, -129.6618, -129.6542,
        -129.6494, -129.6464, -129.6444, -129.6431, -129.6422, -129.6417,
        -129.6413, -129.6411, -129.6409, -129.6408, -129.6408, -129.6407,
        -129.6407, -129.6407, -129.6407, -129.6407, -129.6407, -129.6407,
        -129.6407], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5447e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5774, -54.5775, -54.5776, -54.5777, -54.5778, -54.5778, -54.5778,
        -54.5779, -54.5779, -54.5779], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0567, -75.0569, -75.0570, -75.0570, -75.0571, -75.0571, -75.0571,
        -75.0571, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6408, -129.6408, -129.6407, -129.6407, -129.6407, -129.6407,
        -129.6407, -129.6407, -129.6407, -129.6407], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 12 	 NO 	 NO 	 1.803330169161221e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4322, -54.5026, -54.5291, -54.5441, -54.5541, -54.5611, -54.5661,
        -54.5696, -54.5721, -54.5739, -54.5751, -54.5760, -54.5766, -54.5770,
        -54.5773, -54.5775, -54.5776, -54.5777, -54.5778, -54.5779, -54.5779,
        -54.5779, -54.5779, -54.5780, -54.5780], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4940e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4940e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9611, -75.0064, -75.0241, -75.0341, -75.0408, -75.0456, -75.0490,
        -75.0514, -75.0532, -75.0544, -75.0552, -75.0559, -75.0563, -75.0566,
        -75.0568, -75.0570, -75.0571, -75.0571, -75.0572, -75.0572, -75.0573,
        -75.0573, -75.0573, -75.0573, -75.0573], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4414e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9353e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6556], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.9353e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5775, -54.5776, -54.5777, -54.5778, -54.5779, -54.5779, -54.5779,
        -54.5779, -54.5780, -54.5780], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0570, -75.0571, -75.0571, -75.0572, -75.0572, -75.0573, -75.0573,
        -75.0573, -75.0573, -75.0573], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6556], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 16 	 N2O 	 N2O 	 0.00011137402089067227

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.4042, -73.9879, -75.4878, -76.1017, -76.4659, -76.7069, -76.8720,
        -76.9865, -77.0663, -77.1221, -77.1611, -77.1884, -77.2075, -77.2208,
        -77.2302, -77.2368, -77.2414, -77.2447, -77.2469, -77.2485, -77.2496,
        -77.2504, -77.2509, -77.2513, -77.2516], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.0720e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7431, -37.7837, -37.7999, -37.8092, -37.8154, -37.8198, -37.8230,
        -37.8252, -37.8268, -37.8279, -37.8287, -37.8293, -37.8297, -37.8299,
        -37.8301, -37.8303, -37.8304, -37.8304, -37.8305, -37.8305, -37.8305,
        -37.8306, -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0792e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3431, -0.4650, -0.4793, -0.4862, -0.4905, -0.4933, -0.4952, -0.4966,
        -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995, -0.4995,
        -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7411e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(4.0993e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2368, -77.2414, -77.2447, -77.2469, -77.2485, -77.2496, -77.2504,
        -77.2509, -77.2513, -77.2516], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8303, -37.8304, -37.8304, -37.8305, -37.8305, -37.8305, -37.8306,
        -37.8306, -37.8306, -37.8306], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 7 	 C2H2 	 C2H2 	 0.0007155840629648347

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2212, -0.4303, -0.4598, -0.4736, -0.4820, -0.4875, -0.4912, -0.4938,
        -0.4956, -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7419e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8288e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4840e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 25 	 H 	 H 	 2.099726783196732e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2251, -162.2372, -162.2415, -162.2439, -162.2453, -162.2463,
        -162.2471, -162.2477, -162.2481, -162.2483, -162.2483, -162.2484,
        -162.2484, -162.2485, -162.2485, -162.2485, -162.2485, -162.2485,
        -162.2485, -162.2485, -162.2485, -162.2485, -162.2485, -162.2485,
        -162.2485], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9255e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9255e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2485, -162.2485, -162.2485, -162.2485, -162.2485, -162.2485,
        -162.2485, -162.2485, -162.2485, -162.2485], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 28 	 Na 	 Na 	 8.580406641919889e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.5639, -188.7704, -188.6001, -188.5014, -188.4405, -188.3991,
        -188.3702, -188.3499, -188.3355, -188.3253, -188.3181, -188.3130,
        -188.3094, -188.3068, -188.3049, -188.3036, -188.3027, -188.3020,
        -188.3015, -188.3012, -188.3009, -188.3007, -188.3006, -188.3005,
        -188.3005], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9273e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7622, -37.7984, -37.8102, -37.8167, -37.8209, -37.8239, -37.8259,
        -37.8274, -37.8285, -37.8292, -37.8297, -37.8301, -37.8303, -37.8305,
        -37.8306, -37.8307, -37.8308, -37.8308, -37.8309, -37.8309, -37.8309,
        -37.8309, -37.8309, -37.8309, -37.8309], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8344e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9625, -75.0077, -75.0252, -75.0351, -75.0418, -75.0465, -75.0498,
        -75.0522, -75.0539, -75.0552, -75.0560, -75.0566, -75.0571, -75.0574,
        -75.0576, -75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0956e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3036, -188.3027, -188.3020, -188.3015, -188.3012, -188.3009,
        -188.3007, -188.3006, -188.3005, -188.3005], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8307, -37.8308, -37.8308, -37.8309, -37.8309, -37.8309, -37.8309,
        -37.8309, -37.8309, -37.8309], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 4 	 4 	 CO2 	 CO2 	 0.01688091345907827

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7365, -37.7739, -37.7927, -37.8039, -37.8116, -37.8171, -37.8211,
        -37.8239, -37.8260, -37.8274, -37.8284, -37.8291, -37.8296, -37.8300,
        -37.8303, -37.8304, -37.8306, -37.8306, -37.8307, -37.8307, -37.8308,
        -37.8308, -37.8308, -37.8308, -37.8308], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9580e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9580e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2812, -0.4484, -0.4698, -0.4801, -0.4863, -0.4905, -0.4933, -0.4952,
        -0.4966, -0.4975, -0.4982, -0.4987, -0.4990, -0.4992, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7460e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4779e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5217e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8291], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5217e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8304, -37.8306, -37.8306, -37.8307, -37.8307, -37.8308, -37.8308,
        -37.8308, -37.8308, -37.8308], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8291], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 17 	 CH3 	 CH3 	 7.81928177218105e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7638, -460.8011, -460.8117, -460.8171, -460.8206, -460.8230,
        -460.8246, -460.8258, -460.8266, -460.8271, -460.8275, -460.8278,
        -460.8280, -460.8281, -460.8282, -460.8283, -460.8283, -460.8283,
        -460.8284, -460.8284, -460.8284, -460.8284, -460.8284, -460.8284,
        -460.8284], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5736e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0894, -460.1205, -460.1316, -460.1380, -460.1423, -460.1455,
        -460.1477, -460.1493, -460.1505, -460.1513, -460.1519, -460.1523,
        -460.1526, -460.1528, -460.1530, -460.1531, -460.1532, -460.1532,
        -460.1532, -460.1533, -460.1533, -460.1533, -460.1533, -460.1533,
        -460.1533], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9387e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2636, -0.4433, -0.4670, -0.4782, -0.4851, -0.4896, -0.4927, -0.4948,
        -0.4963, -0.4973, -0.4981, -0.4986, -0.4989, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7455e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.3744e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8283, -460.8283, -460.8283, -460.8284, -460.8284, -460.8284,
        -460.8284, -460.8284, -460.8284, -460.8284], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1531, -460.1532, -460.1532, -460.1532, -460.1533, -460.1533,
        -460.1533, -460.1533, -460.1533, -460.1533], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 4 	 9 	 HCl 	 ClH 	 4.044899180282661e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e04)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e04/2022-11-29_10:09:21.572573_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e04/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 4 || ,[' rho : 4.676724', ' ae : 50.176934', ' E : 1.914605'] ,|| total loss 41.016272 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9372, -109.3852, -109.4958, -109.5029, -109.5012, -109.4993,
        -109.4982, -109.4977, -109.4975, -109.4975, -109.4976, -109.4977,
        -109.4978, -109.4979, -109.4980, -109.4980, -109.4981, -109.4981,
        -109.4981, -109.4981, -109.4982, -109.4982, -109.4982, -109.4982,
        -109.4982], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3670e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4060, -54.4723, -54.5070, -54.5279, -54.5424, -54.5528, -54.5602,
        -54.5656, -54.5693, -54.5720, -54.5739, -54.5752, -54.5762, -54.5768,
        -54.5773, -54.5776, -54.5778, -54.5780, -54.5781, -54.5782, -54.5782,
        -54.5783, -54.5783, -54.5783, -54.5783], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3599e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4980, -109.4981, -109.4981, -109.4981, -109.4981, -109.4982,
        -109.4982, -109.4982, -109.4982, -109.4982], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5776, -54.5778, -54.5780, -54.5781, -54.5782, -54.5782, -54.5783,
        -54.5783, -54.5783, -54.5783], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 1 	 N2 	 N2 	 0.00011856416458210805

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9701, -8.0249, -8.0397, -8.0473, -8.0523, -8.0557, -8.0581, -8.0598,
        -8.0610, -8.0618, -8.0624, -8.0628, -8.0631, -8.0633, -8.0635, -8.0636,
        -8.0636, -8.0637, -8.0637, -8.0637, -8.0638, -8.0638, -8.0638, -8.0638,
        -8.0638], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9403e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8806e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2533, -0.4402, -0.4653, -0.4771, -0.4843, -0.4891, -0.4923, -0.4946,
        -0.4961, -0.4972, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7441e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9839e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8294e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4612, -7.4686, -7.4714, -7.4729, -7.4739, -7.4748, -7.4757, -7.4762,
        -7.4760, -7.4757, -7.4756, -7.4756, -7.4756, -7.4756, -7.4756, -7.4756,
        -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757,
        -7.4757], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1705e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.9118e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1707e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0636, -8.0636, -8.0637, -8.0637, -8.0637, -8.0638, -8.0638, -8.0638,
        -8.0638, -8.0638], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4756, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757, -7.4757,
        -7.4757, -7.4757], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 10 	 HLi 	 LiH 	 3.6042795803208912e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4107, -54.4809, -54.5134, -54.5327, -54.5459, -54.5553, -54.5620,
        -54.5668, -54.5702, -54.5726, -54.5742, -54.5754, -54.5763, -54.5769,
        -54.5773, -54.5776, -54.5778, -54.5779, -54.5780, -54.5781, -54.5781,
        -54.5782, -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4088e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4088e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5776, -54.5778, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782,
        -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 27 	 N 	 N 	 2.8294049383342105e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2392, -0.4359, -0.4629, -0.4756, -0.4833, -0.4884, -0.4918, -0.4942,
        -0.4959, -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7438e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8278e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4877e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4089, -54.4780, -54.5113, -54.5311, -54.5448, -54.5545, -54.5614,
        -54.5664, -54.5699, -54.5724, -54.5741, -54.5754, -54.5762, -54.5768,
        -54.5773, -54.5776, -54.5778, -54.5779, -54.5780, -54.5781, -54.5782,
        -54.5782, -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3988e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5216e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5489], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.5216e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5776, -54.5778, -54.5779, -54.5780, -54.5781, -54.5782, -54.5782,
        -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5489], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 20 	 H3N 	 NH3 	 9.223598310616183e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6579, -199.5736, -199.5515, -199.5402, -199.5330, -199.5281,
        -199.5247, -199.5223, -199.5206, -199.5194, -199.5186, -199.5180,
        -199.5176, -199.5173, -199.5171, -199.5170, -199.5169, -199.5168,
        -199.5167, -199.5167, -199.5167, -199.5167, -199.5167, -199.5166,
        -199.5166], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1475e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2950e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6773, -99.7013, -99.7100, -99.7150, -99.7183, -99.7207, -99.7225,
        -99.7237, -99.7246, -99.7252, -99.7256, -99.7259, -99.7262, -99.7263,
        -99.7264, -99.7265, -99.7266, -99.7266, -99.7266, -99.7266, -99.7267,
        -99.7267, -99.7267, -99.7267, -99.7267], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7747e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2988e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5170, -199.5169, -199.5168, -199.5167, -199.5167, -199.5167,
        -199.5167, -199.5167, -199.5166, -199.5166], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7265, -99.7266, -99.7266, -99.7266, -99.7266, -99.7267, -99.7267,
        -99.7267, -99.7267, -99.7267], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 6 	 F2 	 F2 	 5.014781231049672e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2635, -0.4432, -0.4670, -0.4782, -0.4851, -0.4896, -0.4927, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7448e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.4961e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4897e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9521, -74.9962, -75.0167, -75.0289, -75.0372, -75.0431, -75.0474,
        -75.0505, -75.0527, -75.0543, -75.0554, -75.0562, -75.0567, -75.0571,
        -75.0574, -75.0576, -75.0577, -75.0578, -75.0579, -75.0579, -75.0580,
        -75.0580, -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1354e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5110e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4248], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5110e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0576, -75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4248], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 19 	 H2O 	 OH2 	 1.5836196031197272e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2542, -0.4405, -0.4654, -0.4772, -0.4844, -0.4891, -0.4924, -0.4946,
        -0.4961, -0.4972, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7450e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9942e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4901e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 25 	 H 	 H 	 2.1732730452870152e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2643, -0.4435, -0.4671, -0.4783, -0.4851, -0.4896, -0.4927, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7452e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.4665e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4905e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9482, -74.9862, -75.0088, -75.0230, -75.0328, -75.0400, -75.0451,
        -75.0489, -75.0515, -75.0535, -75.0548, -75.0558, -75.0565, -75.0570,
        -75.0573, -75.0575, -75.0577, -75.0578, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1334e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5119e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6603, -75.6950, -75.7082, -75.7154, -75.7203, -75.7238, -75.7262,
        -75.7280, -75.7292, -75.7301, -75.7307, -75.7311, -75.7314, -75.7317,
        -75.7318, -75.7319, -75.7320, -75.7320, -75.7321, -75.7321, -75.7321,
        -75.7321, -75.7321, -75.7322, -75.7322], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0575, -75.0577, -75.0578, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7319, -75.7320, -75.7320, -75.7321, -75.7321, -75.7321, -75.7321,
        -75.7321, -75.7322, -75.7322], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 21 	 HO 	 OH 	 3.111795821934632e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9926, -1.0996, -1.1272, -1.1412, -1.1502, -1.1562, -1.1603, -1.1633,
        -1.1653, -1.1667, -1.1677, -1.1684, -1.1689, -1.1692, -1.1695, -1.1696,
        -1.1697, -1.1698, -1.1699, -1.1699, -1.1700, -1.1700, -1.1700, -1.1700,
        -1.1700], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6783e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3566e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3125, -0.4570, -0.4747, -0.4832, -0.4884, -0.4919, -0.4943, -0.4959,
        -0.4971, -0.4979, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994, -0.4995,
        -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7446e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.3053e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3056e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1696, -1.1697, -1.1698, -1.1699, -1.1699, -1.1700, -1.1700, -1.1700,
        -1.1700, -1.1700], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 0 	 H2 	 H2 	 3.280464409504846e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4040, -54.4656, -54.5018, -54.5240, -54.5395, -54.5506, -54.5586,
        -54.5644, -54.5685, -54.5714, -54.5734, -54.5749, -54.5759, -54.5766,
        -54.5771, -54.5774, -54.5777, -54.5779, -54.5780, -54.5781, -54.5781,
        -54.5782, -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4513e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4513e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9685, -75.0126, -75.0287, -75.0376, -75.0436, -75.0478, -75.0507,
        -75.0529, -75.0544, -75.0555, -75.0562, -75.0568, -75.0571, -75.0574,
        -75.0576, -75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0997e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5509e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6584], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.5509e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5774, -54.5777, -54.5779, -54.5780, -54.5781, -54.5781, -54.5782,
        -54.5782, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6584], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 16 	 N2O 	 N2O 	 0.0001471311726646738

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6622, -324.5797, -324.5582, -324.5471, -324.5401, -324.5354,
        -324.5321, -324.5297, -324.5281, -324.5270, -324.5262, -324.5256,
        -324.5252, -324.5250, -324.5248, -324.5246, -324.5245, -324.5245,
        -324.5244, -324.5244, -324.5244, -324.5244, -324.5243, -324.5243,
        -324.5243], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.3301e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6602e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2241, -162.2367, -162.2416, -162.2444, -162.2462, -162.2474,
        -162.2483, -162.2490, -162.2495, -162.2498, -162.2499, -162.2500,
        -162.2500, -162.2500, -162.2501, -162.2501, -162.2501, -162.2501,
        -162.2501, -162.2501, -162.2501, -162.2501, -162.2501, -162.2501,
        -162.2501], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1337e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6623e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5246, -324.5245, -324.5245, -324.5244, -324.5244, -324.5244,
        -324.5244, -324.5243, -324.5243, -324.5243], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2501, -162.2501, -162.2501, -162.2501, -162.2501, -162.2501,
        -162.2501, -162.2501, -162.2501, -162.2501], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 11 	 Na2 	 Na2 	 2.5303325328277566e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8884, -93.4780, -93.3746, -93.3264, -93.2932, -93.2710, -93.2552,
        -93.2439, -93.2357, -93.2298, -93.2255, -93.2223, -93.2200, -93.2183,
        -93.2170, -93.2160, -93.2153, -93.2148, -93.2144, -93.2141, -93.2138,
        -93.2137, -93.2135, -93.2134, -93.2134], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2225e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7355, -37.7718, -37.7909, -37.8025, -37.8104, -37.8161, -37.8202,
        -37.8232, -37.8252, -37.8267, -37.8278, -37.8285, -37.8291, -37.8294,
        -37.8297, -37.8299, -37.8300, -37.8301, -37.8302, -37.8302, -37.8302,
        -37.8303, -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2938e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2338, -0.4342, -0.4620, -0.4750, -0.4829, -0.4881, -0.4917, -0.4941,
        -0.4958, -0.4970, -0.4978, -0.4984, -0.4988, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7416e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.2642e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4427, -54.5105, -54.5346, -54.5481, -54.5570, -54.5633, -54.5677,
        -54.5708, -54.5730, -54.5745, -54.5756, -54.5764, -54.5769, -54.5773,
        -54.5776, -54.5778, -54.5779, -54.5780, -54.5780, -54.5781, -54.5781,
        -54.5781, -54.5781, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3578e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0007, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2160, -93.2153, -93.2148, -93.2144, -93.2141, -93.2138, -93.2137,
        -93.2135, -93.2134, -93.2134], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8299, -37.8300, -37.8301, -37.8302, -37.8302, -37.8302, -37.8303,
        -37.8303, -37.8303, -37.8303], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5778, -54.5779, -54.5780, -54.5780, -54.5781, -54.5781, -54.5781,
        -54.5781, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 3 	 CHN 	 CNH 	 0.008792866023874813

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.9500, -188.9198, -188.6973, -188.5674, -188.4866, -188.4317,
        -188.3934, -188.3664, -188.3474, -188.3339, -188.3244, -188.3176,
        -188.3128, -188.3093, -188.3069, -188.3052, -188.3039, -188.3031,
        -188.3024, -188.3020, -188.3016, -188.3014, -188.3012, -188.3011,
        -188.3010], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9125e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7604, -37.7970, -37.8090, -37.8156, -37.8199, -37.8229, -37.8251,
        -37.8266, -37.8276, -37.8284, -37.8289, -37.8293, -37.8295, -37.8297,
        -37.8299, -37.8299, -37.8300, -37.8301, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8301, -37.8302], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3111e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9515, -74.9953, -75.0160, -75.0283, -75.0366, -75.0426, -75.0470,
        -75.0501, -75.0523, -75.0539, -75.0550, -75.0558, -75.0563, -75.0567,
        -75.0570, -75.0572, -75.0573, -75.0574, -75.0575, -75.0576, -75.0576,
        -75.0576, -75.0576, -75.0576, -75.0577], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3000e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3052, -188.3039, -188.3031, -188.3024, -188.3020, -188.3016,
        -188.3014, -188.3012, -188.3011, -188.3010], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8299, -37.8300, -37.8301, -37.8301, -37.8301, -37.8301, -37.8301,
        -37.8301, -37.8301, -37.8302], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0572, -75.0573, -75.0574, -75.0575, -75.0576, -75.0576, -75.0576,
        -75.0576, -75.0576, -75.0577], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 4 	 CO2 	 CO2 	 0.0166083232423869

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7458, -37.7861, -37.8014, -37.8100, -37.8158, -37.8199, -37.8228,
        -37.8248, -37.8263, -37.8273, -37.8281, -37.8286, -37.8290, -37.8292,
        -37.8294, -37.8295, -37.8296, -37.8297, -37.8297, -37.8297, -37.8298,
        -37.8298, -37.8298, -37.8298, -37.8298], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5699e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5699e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2917, -0.4513, -0.4715, -0.4811, -0.4870, -0.4909, -0.4936, -0.4954,
        -0.4967, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7303e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.4694e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4963e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1440], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.4963e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8295, -37.8296, -37.8297, -37.8297, -37.8297, -37.8298, -37.8298,
        -37.8298, -37.8298, -37.8298], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1440], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 18 	 CH2 	 CH2 	 0.00012437435892189498

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4075, -54.4762, -54.5096, -54.5296, -54.5433, -54.5531, -54.5601,
        -54.5651, -54.5687, -54.5712, -54.5729, -54.5742, -54.5751, -54.5757,
        -54.5761, -54.5764, -54.5766, -54.5768, -54.5769, -54.5770, -54.5770,
        -54.5771, -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1191e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1191e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9493, -74.9922, -75.0133, -75.0260, -75.0347, -75.0410, -75.0455,
        -75.0487, -75.0510, -75.0527, -75.0539, -75.0547, -75.0553, -75.0557,
        -75.0560, -75.0562, -75.0563, -75.0564, -75.0565, -75.0566, -75.0566,
        -75.0566, -75.0566, -75.0567, -75.0567], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7886e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9077e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0764], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.9077e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5764, -54.5766, -54.5768, -54.5769, -54.5770, -54.5770, -54.5771,
        -54.5771, -54.5771, -54.5771], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0562, -75.0563, -75.0564, -75.0565, -75.0566, -75.0566, -75.0566,
        -75.0566, -75.0567, -75.0567], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0764], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 13 	 NO2 	 NO2 	 0.0005088570262530151

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0988, -460.1257, -460.1343, -460.1391, -460.1423, -460.1445,
        -460.1462, -460.1473, -460.1481, -460.1487, -460.1491, -460.1494,
        -460.1496, -460.1498, -460.1499, -460.1500, -460.1500, -460.1500,
        -460.1501, -460.1501, -460.1501, -460.1501, -460.1501, -460.1501,
        -460.1501], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0429e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0429e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1500, -460.1500, -460.1500, -460.1501, -460.1501, -460.1501,
        -460.1501, -460.1501, -460.1501, -460.1501], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 23 	 Cl 	 Cl 	 1.0499485028237242e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2207, -162.2332, -162.2381, -162.2408, -162.2426, -162.2437,
        -162.2446, -162.2453, -162.2458, -162.2461, -162.2462, -162.2462,
        -162.2463, -162.2463, -162.2463, -162.2464, -162.2464, -162.2464,
        -162.2464, -162.2464, -162.2464, -162.2464, -162.2464, -162.2464,
        -162.2464], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.1762e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1762e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2464, -162.2464, -162.2464, -162.2464, -162.2464, -162.2464,
        -162.2464, -162.2464, -162.2464, -162.2464], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 28 	 Na 	 Na 	 1.5696007778335525e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7687, -460.7997, -460.8086, -460.8132, -460.8161, -460.8181,
        -460.8195, -460.8205, -460.8211, -460.8216, -460.8219, -460.8222,
        -460.8223, -460.8225, -460.8225, -460.8226, -460.8226, -460.8227,
        -460.8227, -460.8227, -460.8227, -460.8227, -460.8227, -460.8227,
        -460.8227], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5513e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1050, -460.1283, -460.1353, -460.1392, -460.1418, -460.1436,
        -460.1449, -460.1458, -460.1464, -460.1469, -460.1472, -460.1474,
        -460.1476, -460.1477, -460.1478, -460.1478, -460.1479, -460.1479,
        -460.1479, -460.1479, -460.1479, -460.1479, -460.1480, -460.1480,
        -460.1480], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0923e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2200, -0.4298, -0.4595, -0.4734, -0.4818, -0.4874, -0.4911, -0.4937,
        -0.4955, -0.4968, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7080e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0965e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8226, -460.8226, -460.8227, -460.8227, -460.8227, -460.8227,
        -460.8227, -460.8227, -460.8227, -460.8227], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1478, -460.1479, -460.1479, -460.1479, -460.1479, -460.1479,
        -460.1479, -460.1480, -460.1480, -460.1480], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 9 	 HCl 	 ClH 	 3.531705349464247e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4605, -7.4679, -7.4706, -7.4721, -7.4730, -7.4739, -7.4748, -7.4751,
        -7.4749, -7.4747, -7.4746, -7.4745, -7.4745, -7.4746, -7.4746, -7.4746,
        -7.4746, -7.4747, -7.4747, -7.4747, -7.4747, -7.4747, -7.4747, -7.4747,
        -7.4747], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1161e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.0953e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2331e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4746, -7.4746, -7.4747, -7.4747, -7.4747, -7.4747, -7.4747, -7.4747,
        -7.4747, -7.4747], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 26 	 Li 	 Li 	 2.6396678926446013e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7402, -37.7805, -37.7970, -37.8064, -37.8128, -37.8173, -37.8205,
        -37.8228, -37.8245, -37.8256, -37.8265, -37.8270, -37.8274, -37.8277,
        -37.8279, -37.8281, -37.8282, -37.8282, -37.8283, -37.8283, -37.8283,
        -37.8284, -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5715e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5715e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8281, -37.8282, -37.8282, -37.8283, -37.8283, -37.8283, -37.8284,
        -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 22 	 C 	 C 	 3.437603210279936e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9487, -74.9921, -75.0128, -75.0253, -75.0337, -75.0398, -75.0442,
        -75.0473, -75.0496, -75.0512, -75.0523, -75.0531, -75.0537, -75.0541,
        -75.0544, -75.0546, -75.0547, -75.0548, -75.0549, -75.0549, -75.0550,
        -75.0550, -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6760e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6760e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4112], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(3.6760e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0546, -75.0547, -75.0548, -75.0549, -75.0549, -75.0550, -75.0550,
        -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4112], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 15 	 O3 	 O3 	 0.00013264985526511221

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4024, -54.4662, -54.5016, -54.5232, -54.5382, -54.5490, -54.5567,
        -54.5623, -54.5662, -54.5690, -54.5710, -54.5724, -54.5734, -54.5741,
        -54.5745, -54.5749, -54.5751, -54.5753, -54.5754, -54.5755, -54.5755,
        -54.5756, -54.5756, -54.5756, -54.5756], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1755e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1755e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9506, -74.9950, -75.0151, -75.0269, -75.0349, -75.0407, -75.0448,
        -75.0477, -75.0499, -75.0514, -75.0524, -75.0532, -75.0537, -75.0541,
        -75.0544, -75.0546, -75.0547, -75.0548, -75.0548, -75.0549, -75.0549,
        -75.0549, -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7033e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8788e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9947, -129.7461, -129.6918, -129.6700, -129.6588, -129.6516,
        -129.6469, -129.6439, -129.6418, -129.6405, -129.6396, -129.6390,
        -129.6386, -129.6383, -129.6381, -129.6380, -129.6379, -129.6379,
        -129.6378, -129.6378, -129.6378, -129.6378, -129.6378, -129.6378,
        -129.6378], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.4800e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5749, -54.5751, -54.5753, -54.5754, -54.5755, -54.5755, -54.5756,
        -54.5756, -54.5756, -54.5756], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0546, -75.0547, -75.0548, -75.0548, -75.0549, -75.0549, -75.0549,
        -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6380, -129.6379, -129.6379, -129.6378, -129.6378, -129.6378,
        -129.6378, -129.6378, -129.6378, -129.6378], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 12 	 NO 	 NO 	 3.757393199503113e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6687, -99.6926, -99.7027, -99.7087, -99.7128, -99.7157, -99.7178,
        -99.7194, -99.7205, -99.7212, -99.7218, -99.7222, -99.7225, -99.7227,
        -99.7228, -99.7229, -99.7230, -99.7230, -99.7230, -99.7231, -99.7231,
        -99.7231, -99.7231, -99.7231, -99.7231], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3847e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.3847e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7229, -99.7230, -99.7230, -99.7230, -99.7231, -99.7231, -99.7231,
        -99.7231, -99.7231, -99.7231], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 24 	 F 	 F 	 2.7155112353287406e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3006, -0.4537, -0.4728, -0.4820, -0.4876, -0.4913, -0.4938, -0.4956,
        -0.4968, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7017e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.8081e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4034e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4350, -54.5041, -54.5295, -54.5437, -54.5532, -54.5598, -54.5645,
        -54.5678, -54.5702, -54.5718, -54.5730, -54.5738, -54.5744, -54.5748,
        -54.5750, -54.5752, -54.5754, -54.5755, -54.5755, -54.5756, -54.5756,
        -54.5756, -54.5757, -54.5757, -54.5757], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0114e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4535e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2116], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.4535e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5752, -54.5754, -54.5755, -54.5755, -54.5756, -54.5756, -54.5756,
        -54.5757, -54.5757, -54.5757], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2116], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 14 	 HN 	 NH 	 1.692944088728071e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3058, -107.2887, -107.2532, -107.2408, -107.2330, -107.2285,
        -107.2261, -107.2247, -107.2238, -107.2233, -107.2230, -107.2228,
        -107.2228, -107.2229, -107.2231, -107.2232, -107.2234, -107.2236,
        -107.2237, -107.2238, -107.2240, -107.2240, -107.2241, -107.2242,
        -107.2242], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3341e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6677, -99.6913, -99.7018, -99.7081, -99.7124, -99.7156, -99.7178,
        -99.7195, -99.7206, -99.7215, -99.7221, -99.7225, -99.7228, -99.7230,
        -99.7232, -99.7233, -99.7233, -99.7234, -99.7234, -99.7235, -99.7235,
        -99.7235, -99.7235, -99.7235, -99.7235], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8178e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4606, -7.4680, -7.4706, -7.4720, -7.4729, -7.4738, -7.4747, -7.4750,
        -7.4748, -7.4745, -7.4744, -7.4744, -7.4744, -7.4744, -7.4744, -7.4745,
        -7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4746,
        -7.4746], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1106e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8189e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2232, -107.2234, -107.2236, -107.2237, -107.2238, -107.2240,
        -107.2240, -107.2241, -107.2242, -107.2242], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7233, -99.7233, -99.7234, -99.7234, -99.7235, -99.7235, -99.7235,
        -99.7235, -99.7235, -99.7235], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4745, -7.4745,
        -7.4746, -7.4746], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 2 	 FLi 	 LiF 	 0.00900718341162899

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9475, -74.9895, -75.0109, -75.0239, -75.0328, -75.0392, -75.0439,
        -75.0472, -75.0496, -75.0513, -75.0525, -75.0534, -75.0540, -75.0544,
        -75.0547, -75.0549, -75.0551, -75.0552, -75.0552, -75.0553, -75.0553,
        -75.0554, -75.0554, -75.0554, -75.0554], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4837e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4837e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0549, -75.0551, -75.0552, -75.0552, -75.0553, -75.0553, -75.0554,
        -75.0554, -75.0554, -75.0554], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 29 	 O 	 O 	 3.3231123425337334e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.5787, -113.3602, -113.3089, -113.2814, -113.2647, -113.2532,
        -113.2452, -113.2397, -113.2358, -113.2332, -113.2313, -113.2300,
        -113.2291, -113.2284, -113.2280, -113.2277, -113.2275, -113.2273,
        -113.2272, -113.2272, -113.2271, -113.2271, -113.2270, -113.2270,
        -113.2270], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5596e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7344, -37.7713, -37.7902, -37.8015, -37.8092, -37.8148, -37.8188,
        -37.8216, -37.8237, -37.8251, -37.8262, -37.8269, -37.8274, -37.8278,
        -37.8280, -37.8282, -37.8283, -37.8284, -37.8285, -37.8285, -37.8285,
        -37.8285, -37.8286, -37.8286, -37.8286], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4553e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9580, -75.0032, -75.0213, -75.0317, -75.0386, -75.0436, -75.0471,
        -75.0496, -75.0514, -75.0527, -75.0536, -75.0543, -75.0547, -75.0550,
        -75.0552, -75.0554, -75.0555, -75.0556, -75.0556, -75.0557, -75.0557,
        -75.0557, -75.0557, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2401e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2277, -113.2275, -113.2273, -113.2272, -113.2272, -113.2271,
        -113.2271, -113.2270, -113.2270, -113.2270], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8282, -37.8283, -37.8284, -37.8285, -37.8285, -37.8285, -37.8285,
        -37.8286, -37.8286, -37.8286], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0554, -75.0555, -75.0556, -75.0556, -75.0557, -75.0557, -75.0557,
        -75.0557, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 8 	 CO 	 OC 	 0.0011951376193067391

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.4023, -73.4416, -75.2232, -75.9356, -76.3537, -76.6293, -76.8176,
        -76.9480, -77.0388, -77.1023, -77.1467, -77.1777, -77.1995, -77.2148,
        -77.2255, -77.2330, -77.2383, -77.2420, -77.2445, -77.2464, -77.2476,
        -77.2485, -77.2491, -77.2496, -77.2499], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9978e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7507, -37.7899, -37.8037, -37.8114, -37.8165, -37.8201, -37.8226,
        -37.8244, -37.8257, -37.8266, -37.8272, -37.8277, -37.8280, -37.8282,
        -37.8284, -37.8285, -37.8286, -37.8286, -37.8287, -37.8287, -37.8287,
        -37.8287, -37.8287, -37.8287, -37.8287], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2851e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2411, -0.4365, -0.4632, -0.4758, -0.4834, -0.4884, -0.4919, -0.4942,
        -0.4959, -0.4970, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7129e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6699e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2330, -77.2383, -77.2420, -77.2445, -77.2464, -77.2476, -77.2485,
        -77.2491, -77.2496, -77.2499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8285, -37.8286, -37.8286, -37.8287, -37.8287, -37.8287, -37.8287,
        -37.8287, -37.8287, -37.8287], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 7 	 C2H2 	 C2H2 	 0.0006625789048941744

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7605, -37.7965, -37.8083, -37.8147, -37.8189, -37.8218, -37.8239,
        -37.8254, -37.8264, -37.8272, -37.8277, -37.8281, -37.8283, -37.8285,
        -37.8286, -37.8287, -37.8288, -37.8288, -37.8288, -37.8289, -37.8289,
        -37.8289, -37.8289, -37.8289, -37.8289], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1493e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1493e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3213, -0.4593, -0.4760, -0.4840, -0.4890, -0.4923, -0.4945, -0.4961,
        -0.4971, -0.4979, -0.4984, -0.4988, -0.4991, -0.4992, -0.4994, -0.4995,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7168e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.7291e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4751e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8270], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.4751e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8287, -37.8288, -37.8288, -37.8288, -37.8289, -37.8289, -37.8289,
        -37.8289, -37.8289, -37.8289], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8270], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 5 	 17 	 CH3 	 CH3 	 7.936490058635407e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4614, -920.4299, -920.4226, -920.4187, -920.4162, -920.4145,
        -920.4133, -920.4125, -920.4119, -920.4114, -920.4111, -920.4109,
        -920.4108, -920.4107, -920.4106, -920.4105, -920.4105, -920.4105,
        -920.4104, -920.4104, -920.4104, -920.4104, -920.4104, -920.4104,
        -920.4104], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9657e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9313e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0886, -460.1199, -460.1313, -460.1378, -460.1423, -460.1455,
        -460.1478, -460.1494, -460.1506, -460.1515, -460.1521, -460.1525,
        -460.1528, -460.1530, -460.1532, -460.1533, -460.1534, -460.1534,
        -460.1535, -460.1535, -460.1535, -460.1535, -460.1535, -460.1535,
        -460.1535], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1084e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9334e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4105, -920.4105, -920.4105, -920.4104, -920.4104, -920.4104,
        -920.4104, -920.4104, -920.4104, -920.4104], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1533, -460.1534, -460.1534, -460.1535, -460.1535, -460.1535,
        -460.1535, -460.1535, -460.1535, -460.1535], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 5 	 5 	 Cl2 	 Cl2 	 1.807803675505436e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e05)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e05/2022-11-29_10:09:21.572573_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e05/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 5 || ,[' rho : 4.668790', ' ae : 49.722219', ' E : 1.986281'] ,|| total loss 40.682599 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4515, -920.4269, -920.4214, -920.4186, -920.4167, -920.4155,
        -920.4146, -920.4140, -920.4136, -920.4133, -920.4131, -920.4129,
        -920.4128, -920.4127, -920.4127, -920.4126, -920.4126, -920.4126,
        -920.4126, -920.4126, -920.4126, -920.4126, -920.4126, -920.4126,
        -920.4126], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9609e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9217e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0901, -460.1213, -460.1326, -460.1391, -460.1435, -460.1466,
        -460.1489, -460.1506, -460.1518, -460.1526, -460.1532, -460.1536,
        -460.1539, -460.1541, -460.1543, -460.1544, -460.1545, -460.1545,
        -460.1546, -460.1546, -460.1546, -460.1546, -460.1546, -460.1546,
        -460.1546], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0292e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9248e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4126, -920.4126, -920.4126, -920.4126, -920.4126, -920.4126,
        -920.4126, -920.4126, -920.4126, -920.4126], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1544, -460.1545, -460.1545, -460.1546, -460.1546, -460.1546,
        -460.1546, -460.1546, -460.1546, -460.1546], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 5 	 Cl2 	 Cl2 	 1.8021332326645822e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.6157, -109.9077, -109.7543, -109.6717, -109.6185, -109.5822,
        -109.5568, -109.5391, -109.5267, -109.5181, -109.5120, -109.5077,
        -109.5048, -109.5027, -109.5012, -109.5002, -109.4995, -109.4990,
        -109.4986, -109.4984, -109.4982, -109.4981, -109.4980, -109.4979,
        -109.4979], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3425e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4239, -54.4952, -54.5237, -54.5400, -54.5509, -54.5586, -54.5641,
        -54.5680, -54.5708, -54.5727, -54.5741, -54.5750, -54.5757, -54.5762,
        -54.5765, -54.5768, -54.5769, -54.5770, -54.5771, -54.5772, -54.5772,
        -54.5772, -54.5773, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9451e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5002, -109.4995, -109.4990, -109.4986, -109.4984, -109.4982,
        -109.4981, -109.4980, -109.4979, -109.4979], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5768, -54.5769, -54.5770, -54.5771, -54.5772, -54.5772, -54.5772,
        -54.5773, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 1 	 N2 	 N2 	 9.938763820530332e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9539, -74.9984, -75.0182, -75.0299, -75.0378, -75.0434, -75.0475,
        -75.0504, -75.0525, -75.0539, -75.0550, -75.0557, -75.0563, -75.0566,
        -75.0569, -75.0571, -75.0572, -75.0573, -75.0574, -75.0574, -75.0574,
        -75.0575, -75.0575, -75.0575, -75.0575], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3681e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3681e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0571, -75.0572, -75.0573, -75.0574, -75.0574, -75.0574, -75.0575,
        -75.0575, -75.0575, -75.0575], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 29 	 O 	 O 	 2.2542545367856447e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.5031, -188.7481, -188.5872, -188.4937, -188.4361, -188.3970,
        -188.3696, -188.3504, -188.3368, -188.3272, -188.3204, -188.3155,
        -188.3121, -188.3096, -188.3079, -188.3067, -188.3058, -188.3051,
        -188.3047, -188.3043, -188.3041, -188.3039, -188.3038, -188.3037,
        -188.3037], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8911e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7541, -37.7925, -37.8058, -37.8131, -37.8180, -37.8214, -37.8238,
        -37.8255, -37.8267, -37.8276, -37.8282, -37.8286, -37.8289, -37.8291,
        -37.8293, -37.8294, -37.8294, -37.8295, -37.8295, -37.8295, -37.8296,
        -37.8296, -37.8296, -37.8296, -37.8296], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6829e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9501, -74.9920, -75.0134, -75.0263, -75.0353, -75.0417, -75.0463,
        -75.0496, -75.0520, -75.0537, -75.0550, -75.0558, -75.0564, -75.0568,
        -75.0571, -75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0578,
        -75.0578, -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2257e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3067, -188.3058, -188.3051, -188.3047, -188.3043, -188.3041,
        -188.3039, -188.3038, -188.3037, -188.3037], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8294, -37.8294, -37.8295, -37.8295, -37.8295, -37.8296, -37.8296,
        -37.8296, -37.8296, -37.8296], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0578, -75.0578,
        -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 4 	 CO2 	 CO2 	 0.016262448708032708

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-77.7385, -72.6741, -74.9073, -75.7600, -76.2441, -76.5571, -76.7689,
        -76.9148, -77.0162, -77.0869, -77.1366, -77.1714, -77.1957, -77.2128,
        -77.2248, -77.2332, -77.2391, -77.2432, -77.2461, -77.2482, -77.2496,
        -77.2506, -77.2513, -77.2518, -77.2522], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.9868e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7379, -37.7770, -37.7946, -37.8050, -37.8121, -37.8171, -37.8207,
        -37.8233, -37.8251, -37.8264, -37.8274, -37.8280, -37.8285, -37.8288,
        -37.8290, -37.8292, -37.8293, -37.8294, -37.8294, -37.8294, -37.8295,
        -37.8295, -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7772e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2392, -0.4359, -0.4629, -0.4756, -0.4833, -0.4884, -0.4918, -0.4942,
        -0.4958, -0.4970, -0.4978, -0.4984, -0.4988, -0.4990, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7316e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.4935e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2332, -77.2391, -77.2432, -77.2461, -77.2482, -77.2496, -77.2506,
        -77.2513, -77.2518, -77.2522], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8292, -37.8293, -37.8294, -37.8294, -37.8294, -37.8295, -37.8295,
        -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 7 	 C2H2 	 C2H2 	 0.0006472791325841569

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4081, -54.4763, -54.5098, -54.5299, -54.5437, -54.5535, -54.5606,
        -54.5656, -54.5692, -54.5717, -54.5735, -54.5748, -54.5756, -54.5763,
        -54.5767, -54.5770, -54.5772, -54.5774, -54.5775, -54.5775, -54.5776,
        -54.5776, -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7455e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7455e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9519, -74.9952, -75.0159, -75.0282, -75.0367, -75.0427, -75.0471,
        -75.0502, -75.0525, -75.0541, -75.0552, -75.0560, -75.0566, -75.0570,
        -75.0573, -75.0575, -75.0576, -75.0577, -75.0578, -75.0578, -75.0579,
        -75.0579, -75.0579, -75.0579, -75.0579], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1712e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9166e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0523, -129.7637, -129.7002, -129.6763, -129.6646, -129.6571,
        -129.6524, -129.6493, -129.6473, -129.6459, -129.6451, -129.6445,
        -129.6441, -129.6439, -129.6437, -129.6436, -129.6435, -129.6435,
        -129.6434, -129.6434, -129.6434, -129.6434, -129.6434, -129.6434,
        -129.6434], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5454e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5770, -54.5772, -54.5774, -54.5775, -54.5775, -54.5776, -54.5776,
        -54.5777, -54.5777, -54.5777], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0575, -75.0576, -75.0577, -75.0578, -75.0578, -75.0579, -75.0579,
        -75.0579, -75.0579, -75.0579], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6436, -129.6435, -129.6435, -129.6434, -129.6434, -129.6434,
        -129.6434, -129.6434, -129.6434, -129.6434], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 12 	 NO 	 NO 	 9.716773092187064e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2677, -0.4444, -0.4676, -0.4786, -0.4853, -0.4898, -0.4928, -0.4949,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7328e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9537e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4656e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9702, -75.0137, -75.0294, -75.0381, -75.0439, -75.0480, -75.0509,
        -75.0530, -75.0545, -75.0555, -75.0563, -75.0568, -75.0571, -75.0574,
        -75.0576, -75.0577, -75.0578, -75.0579, -75.0579, -75.0579, -75.0580,
        -75.0580, -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1031e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4866e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4254], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.4866e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0577, -75.0578, -75.0579, -75.0579, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4254], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 19 	 H2O 	 OH2 	 1.0930288153137287e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6700, -99.6916, -99.7031, -99.7100, -99.7149, -99.7184, -99.7210,
        -99.7229, -99.7243, -99.7252, -99.7259, -99.7264, -99.7267, -99.7270,
        -99.7272, -99.7273, -99.7274, -99.7274, -99.7275, -99.7275, -99.7275,
        -99.7275, -99.7276, -99.7276, -99.7276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9618e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9618e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7273, -99.7274, -99.7274, -99.7275, -99.7275, -99.7275, -99.7275,
        -99.7276, -99.7276, -99.7276], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 24 	 F 	 F 	 9.378415753781361e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3062, -0.4553, -0.4737, -0.4826, -0.4880, -0.4916, -0.4940, -0.4957,
        -0.4969, -0.4978, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7352e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1707e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4704e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 25 	 H 	 H 	 2.7667379640943568e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7708, -460.8090, -460.8199, -460.8255, -460.8290, -460.8314,
        -460.8331, -460.8343, -460.8351, -460.8356, -460.8360, -460.8363,
        -460.8365, -460.8367, -460.8368, -460.8368, -460.8369, -460.8369,
        -460.8369, -460.8369, -460.8370, -460.8370, -460.8370, -460.8370,
        -460.8370], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5110e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1102, -460.1373, -460.1460, -460.1509, -460.1541, -460.1565,
        -460.1581, -460.1593, -460.1601, -460.1607, -460.1611, -460.1614,
        -460.1617, -460.1618, -460.1619, -460.1620, -460.1620, -460.1621,
        -460.1621, -460.1621, -460.1621, -460.1621, -460.1621, -460.1621,
        -460.1621], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4041e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2301, -0.4330, -0.4613, -0.4746, -0.4826, -0.4879, -0.4915, -0.4940,
        -0.4957, -0.4969, -0.4977, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7367e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0099e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8368, -460.8369, -460.8369, -460.8369, -460.8369, -460.8370,
        -460.8370, -460.8370, -460.8370, -460.8370], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1620, -460.1620, -460.1621, -460.1621, -460.1621, -460.1621,
        -460.1621, -460.1621, -460.1621, -460.1621], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 9 	 HCl 	 ClH 	 3.631952044050692e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4626, -7.4693, -7.4714, -7.4726, -7.4735, -7.4744, -7.4749, -7.4747,
        -7.4745, -7.4743, -7.4743, -7.4743, -7.4743, -7.4743, -7.4744, -7.4744,
        -7.4744, -7.4744, -7.4744, -7.4744, -7.4744, -7.4745, -7.4745, -7.4745,
        -7.4745], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1295e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.2895e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2598e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4744, -7.4744, -7.4744, -7.4744, -7.4744, -7.4744, -7.4745, -7.4745,
        -7.4745, -7.4745], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 26 	 Li 	 Li 	 3.0352057327248868e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7396, -37.7792, -37.7963, -37.8062, -37.8130, -37.8178, -37.8212,
        -37.8236, -37.8254, -37.8266, -37.8275, -37.8281, -37.8285, -37.8288,
        -37.8290, -37.8292, -37.8293, -37.8294, -37.8294, -37.8295, -37.8295,
        -37.8295, -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7636e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7636e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8292, -37.8293, -37.8294, -37.8294, -37.8295, -37.8295, -37.8295,
        -37.8295, -37.8295, -37.8295], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 22 	 C 	 C 	 2.8174270661029882e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4118, -54.4817, -54.5140, -54.5331, -54.5462, -54.5555, -54.5621,
        -54.5668, -54.5702, -54.5726, -54.5742, -54.5754, -54.5762, -54.5768,
        -54.5772, -54.5775, -54.5777, -54.5779, -54.5780, -54.5780, -54.5781,
        -54.5781, -54.5781, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4348e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.4348e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9555, -74.9999, -75.0196, -75.0312, -75.0391, -75.0447, -75.0488,
        -75.0517, -75.0538, -75.0553, -75.0563, -75.0570, -75.0576, -75.0579,
        -75.0582, -75.0584, -75.0585, -75.0586, -75.0587, -75.0587, -75.0587,
        -75.0588, -75.0588, -75.0588, -75.0588], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7939e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2287e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6626], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.2287e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5775, -54.5777, -54.5779, -54.5780, -54.5780, -54.5781, -54.5781,
        -54.5781, -54.5782, -54.5782], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0584, -75.0585, -75.0586, -75.0587, -75.0587, -75.0587, -75.0588,
        -75.0588, -75.0588, -75.0588], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6626], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 16 	 N2O 	 N2O 	 0.0002463043356715157

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.5897, -113.3677, -113.3156, -113.2876, -113.2707, -113.2590,
        -113.2509, -113.2453, -113.2414, -113.2387, -113.2367, -113.2354,
        -113.2345, -113.2338, -113.2334, -113.2331, -113.2329, -113.2327,
        -113.2326, -113.2325, -113.2325, -113.2324, -113.2324, -113.2324,
        -113.2324], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5464e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7381, -37.7771, -37.7948, -37.8051, -37.8122, -37.8172, -37.8209,
        -37.8234, -37.8253, -37.8266, -37.8275, -37.8282, -37.8286, -37.8289,
        -37.8292, -37.8293, -37.8294, -37.8295, -37.8296, -37.8296, -37.8296,
        -37.8296, -37.8297, -37.8297, -37.8297], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6729e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9532, -74.9965, -75.0171, -75.0294, -75.0378, -75.0438, -75.0482,
        -75.0513, -75.0536, -75.0552, -75.0563, -75.0571, -75.0576, -75.0580,
        -75.0583, -75.0585, -75.0587, -75.0588, -75.0588, -75.0589, -75.0589,
        -75.0589, -75.0589, -75.0590, -75.0590], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7311e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2331, -113.2329, -113.2327, -113.2326, -113.2325, -113.2325,
        -113.2324, -113.2324, -113.2324, -113.2324], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8293, -37.8294, -37.8295, -37.8296, -37.8296, -37.8296, -37.8296,
        -37.8297, -37.8297, -37.8297], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0585, -75.0587, -75.0588, -75.0588, -75.0589, -75.0589, -75.0589,
        -75.0589, -75.0590, -75.0590], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 8 	 CO 	 OC 	 0.001159719721977856

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4055, -54.4683, -54.5038, -54.5256, -54.5407, -54.5515, -54.5593,
        -54.5649, -54.5689, -54.5717, -54.5737, -54.5751, -54.5761, -54.5768,
        -54.5773, -54.5776, -54.5779, -54.5780, -54.5781, -54.5782, -54.5783,
        -54.5783, -54.5783, -54.5784, -54.5784], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3546e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3546e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5776, -54.5779, -54.5780, -54.5781, -54.5782, -54.5783, -54.5783,
        -54.5783, -54.5784, -54.5784], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 27 	 N 	 N 	 2.7475394339472843e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6166, -324.5673, -324.5544, -324.5478, -324.5436, -324.5408,
        -324.5388, -324.5374, -324.5364, -324.5357, -324.5352, -324.5349,
        -324.5347, -324.5345, -324.5344, -324.5343, -324.5343, -324.5342,
        -324.5342, -324.5342, -324.5342, -324.5341, -324.5341, -324.5341,
        -324.5341], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5296e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0592e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2316, -162.2437, -162.2481, -162.2504, -162.2519, -162.2529,
        -162.2537, -162.2543, -162.2547, -162.2548, -162.2549, -162.2550,
        -162.2550, -162.2550, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6963e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0592e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5343, -324.5343, -324.5342, -324.5342, -324.5342, -324.5342,
        -324.5341, -324.5341, -324.5341, -324.5341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 11 	 Na2 	 Na2 	 2.752195760233767e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2638, -0.4433, -0.4670, -0.4782, -0.4851, -0.4896, -0.4927, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7507e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9778e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5014e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9653, -75.0100, -75.0272, -75.0370, -75.0436, -75.0482, -75.0515,
        -75.0539, -75.0555, -75.0567, -75.0576, -75.0582, -75.0586, -75.0589,
        -75.0591, -75.0593, -75.0594, -75.0594, -75.0595, -75.0595, -75.0595,
        -75.0596, -75.0596, -75.0596, -75.0596], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.4673e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5161e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6670, -75.7002, -75.7123, -75.7190, -75.7234, -75.7265, -75.7287,
        -75.7303, -75.7314, -75.7322, -75.7328, -75.7332, -75.7335, -75.7337,
        -75.7338, -75.7339, -75.7340, -75.7340, -75.7341, -75.7341, -75.7341,
        -75.7341, -75.7341, -75.7341, -75.7341], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0593, -75.0594, -75.0594, -75.0595, -75.0595, -75.0595, -75.0596,
        -75.0596, -75.0596, -75.0596], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7339, -75.7340, -75.7340, -75.7341, -75.7341, -75.7341, -75.7341,
        -75.7341, -75.7341, -75.7341], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 21 	 HO 	 OH 	 3.995631644417058e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.1321, -93.5798, -93.4296, -93.3683, -93.3221, -93.2925, -93.2710,
        -93.2559, -93.2450, -93.2371, -93.2314, -93.2273, -93.2242, -93.2220,
        -93.2204, -93.2192, -93.2183, -93.2177, -93.2172, -93.2168, -93.2165,
        -93.2163, -93.2162, -93.2161, -93.2160], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1272e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7371, -37.7750, -37.7932, -37.8041, -37.8115, -37.8168, -37.8206,
        -37.8234, -37.8253, -37.8267, -37.8277, -37.8284, -37.8289, -37.8292,
        -37.8294, -37.8296, -37.8297, -37.8298, -37.8299, -37.8299, -37.8299,
        -37.8300, -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4775e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2161, -0.4286, -0.4588, -0.4730, -0.4816, -0.4872, -0.4910, -0.4936,
        -0.4955, -0.4967, -0.4976, -0.4982, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997, -0.4997,
        -0.4997], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7516e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0811e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4330, -54.5031, -54.5297, -54.5448, -54.5548, -54.5619, -54.5669,
        -54.5704, -54.5729, -54.5747, -54.5759, -54.5768, -54.5774, -54.5778,
        -54.5781, -54.5783, -54.5785, -54.5786, -54.5787, -54.5787, -54.5787,
        -54.5788, -54.5788, -54.5788, -54.5788], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0050e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2192, -93.2183, -93.2177, -93.2172, -93.2168, -93.2165, -93.2163,
        -93.2162, -93.2161, -93.2160], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8296, -37.8297, -37.8298, -37.8299, -37.8299, -37.8299, -37.8300,
        -37.8300, -37.8300, -37.8300], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4997,
        -0.4997, -0.4997], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5783, -54.5785, -54.5786, -54.5787, -54.5787, -54.5787, -54.5788,
        -54.5788, -54.5788, -54.5788], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 3 	 CHN 	 CNH 	 0.008584058619845162

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4423, -54.5102, -54.5346, -54.5482, -54.5573, -54.5636, -54.5681,
        -54.5712, -54.5735, -54.5750, -54.5761, -54.5769, -54.5775, -54.5778,
        -54.5781, -54.5783, -54.5784, -54.5785, -54.5786, -54.5786, -54.5787,
        -54.5787, -54.5787, -54.5787, -54.5787], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0387e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0387e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9506, -74.9866, -75.0092, -75.0236, -75.0337, -75.0409, -75.0462,
        -75.0501, -75.0528, -75.0548, -75.0562, -75.0572, -75.0579, -75.0584,
        -75.0588, -75.0590, -75.0592, -75.0593, -75.0594, -75.0595, -75.0595,
        -75.0595, -75.0596, -75.0596, -75.0596], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5173e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5560e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0870], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(4.5560e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5783, -54.5784, -54.5785, -54.5786, -54.5786, -54.5787, -54.5787,
        -54.5787, -54.5787, -54.5787], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0590, -75.0592, -75.0593, -75.0594, -75.0595, -75.0595, -75.0595,
        -75.0596, -75.0596, -75.0596], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0870], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 13 	 NO2 	 NO2 	 0.0006635235712566111

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1236, -460.1471, -460.1543, -460.1582, -460.1608, -460.1627,
        -460.1640, -460.1649, -460.1655, -460.1660, -460.1663, -460.1666,
        -460.1667, -460.1668, -460.1669, -460.1670, -460.1670, -460.1670,
        -460.1671, -460.1671, -460.1671, -460.1671, -460.1671, -460.1671,
        -460.1671], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5713e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5713e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1670, -460.1670, -460.1670, -460.1671, -460.1671, -460.1671,
        -460.1671, -460.1671, -460.1671, -460.1671], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 23 	 Cl 	 Cl 	 8.527029880413138e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7390, -37.7784, -37.7956, -37.8057, -37.8125, -37.8174, -37.8209,
        -37.8233, -37.8251, -37.8264, -37.8273, -37.8279, -37.8283, -37.8286,
        -37.8289, -37.8290, -37.8291, -37.8292, -37.8292, -37.8293, -37.8293,
        -37.8293, -37.8293, -37.8293, -37.8293], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8892e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8892e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2672, -0.4443, -0.4675, -0.4786, -0.4853, -0.4897, -0.4927, -0.4948,
        -0.4963, -0.4973, -0.4980, -0.4985, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7334e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.1602e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.5057e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1440], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.5057e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8290, -37.8291, -37.8292, -37.8292, -37.8293, -37.8293, -37.8293,
        -37.8293, -37.8293, -37.8293], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1440], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 18 	 CH2 	 CH2 	 0.00013700024833913324

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2646, -0.4435, -0.4671, -0.4783, -0.4851, -0.4896, -0.4926, -0.4948,
        -0.4962, -0.4973, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4994,
        -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7206e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5479e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4412e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4152, -54.4862, -54.5170, -54.5351, -54.5474, -54.5561, -54.5623,
        -54.5667, -54.5698, -54.5720, -54.5736, -54.5747, -54.5754, -54.5760,
        -54.5763, -54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771,
        -54.5772, -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0222e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4814e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2134], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.4814e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771, -54.5772,
        -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2134], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 14 	 HN 	 NH 	 1.941202247372142e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2284, -162.2400, -162.2438, -162.2459, -162.2471, -162.2480,
        -162.2488, -162.2493, -162.2496, -162.2497, -162.2498, -162.2498,
        -162.2499, -162.2499, -162.2499, -162.2499, -162.2499, -162.2500,
        -162.2500, -162.2500, -162.2500, -162.2500, -162.2500, -162.2500,
        -162.2500], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2884e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2884e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2499, -162.2499, -162.2500, -162.2500, -162.2500, -162.2500,
        -162.2500, -162.2500, -162.2500, -162.2500], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 28 	 Na 	 Na 	 4.997464066974315e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9429, -8.0128, -8.0312, -8.0408, -8.0470, -8.0513, -8.0543, -8.0564,
        -8.0579, -8.0590, -8.0597, -8.0602, -8.0606, -8.0609, -8.0610, -8.0612,
        -8.0613, -8.0613, -8.0614, -8.0614, -8.0614, -8.0614, -8.0615, -8.0615,
        -8.0615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6806e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3613e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2996, -0.4535, -0.4727, -0.4819, -0.4875, -0.4912, -0.4938, -0.4955,
        -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7001e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.2710e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.3013e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4592, -7.4666, -7.4695, -7.4711, -7.4721, -7.4730, -7.4739, -7.4744,
        -7.4742, -7.4740, -7.4738, -7.4738, -7.4738, -7.4738, -7.4738, -7.4739,
        -7.4739, -7.4739, -7.4739, -7.4739, -7.4739, -7.4740, -7.4740, -7.4740,
        -7.4740], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0987e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2037e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4998e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0612, -8.0613, -8.0613, -8.0614, -8.0614, -8.0614, -8.0614, -8.0615,
        -8.0615, -8.0615], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4739, -7.4739, -7.4739, -7.4739, -7.4739, -7.4739, -7.4740, -7.4740,
        -7.4740, -7.4740], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 10 	 HLi 	 LiH 	 4.4938305322085694e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7434, -37.7835, -37.7989, -37.8077, -37.8135, -37.8177, -37.8207,
        -37.8228, -37.8243, -37.8253, -37.8261, -37.8266, -37.8270, -37.8272,
        -37.8274, -37.8275, -37.8276, -37.8277, -37.8277, -37.8278, -37.8278,
        -37.8278, -37.8278, -37.8278, -37.8278], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9928e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.9928e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3372, -0.4634, -0.4783, -0.4855, -0.4900, -0.4929, -0.4950, -0.4964,
        -0.4973, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6918e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(5.9470e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4336e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8261], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.4336e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8275, -37.8276, -37.8277, -37.8277, -37.8278, -37.8278, -37.8278,
        -37.8278, -37.8278, -37.8278], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8261], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 17 	 CH3 	 CH3 	 8.456009356499722e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2274, -107.2663, -107.2320, -107.2272, -107.2233, -107.2212,
        -107.2205, -107.2206, -107.2212, -107.2217, -107.2221, -107.2225,
        -107.2228, -107.2232, -107.2235, -107.2238, -107.2241, -107.2244,
        -107.2246, -107.2248, -107.2249, -107.2251, -107.2252, -107.2253,
        -107.2253], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3649e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6703, -99.6941, -99.7040, -99.7098, -99.7138, -99.7167, -99.7187,
        -99.7202, -99.7213, -99.7221, -99.7226, -99.7230, -99.7232, -99.7234,
        -99.7236, -99.7237, -99.7237, -99.7238, -99.7238, -99.7238, -99.7239,
        -99.7239, -99.7239, -99.7239, -99.7239], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2472e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4577, -7.4643, -7.4678, -7.4699, -7.4711, -7.4721, -7.4730, -7.4739,
        -7.4742, -7.4740, -7.4738, -7.4736, -7.4736, -7.4736, -7.4737, -7.4737,
        -7.4737, -7.4737, -7.4738, -7.4738, -7.4738, -7.4738, -7.4738, -7.4738,
        -7.4738], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0876e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2995e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2238, -107.2241, -107.2244, -107.2246, -107.2248, -107.2249,
        -107.2251, -107.2252, -107.2253, -107.2253], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7237, -99.7237, -99.7238, -99.7238, -99.7238, -99.7239, -99.7239,
        -99.7239, -99.7239, -99.7239], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4737, -7.4737, -7.4737, -7.4738, -7.4738, -7.4738, -7.4738, -7.4738,
        -7.4738, -7.4738], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 2 	 FLi 	 LiF 	 0.00887517878868253

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0219, -1.1106, -1.1335, -1.1453, -1.1527, -1.1577, -1.1612, -1.1636,
        -1.1653, -1.1665, -1.1673, -1.1679, -1.1683, -1.1685, -1.1687, -1.1689,
        -1.1690, -1.1691, -1.1691, -1.1691, -1.1692, -1.1692, -1.1692, -1.1692,
        -1.1692], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5804e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1608e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2942, -0.4519, -0.4718, -0.4813, -0.4871, -0.4909, -0.4936, -0.4954,
        -0.4967, -0.4975, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6776e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.9995e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0963e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1689, -1.1690, -1.1691, -1.1691, -1.1691, -1.1692, -1.1692, -1.1692,
        -1.1692, -1.1692], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 0 	 H2 	 H2 	 4.3374502957130715e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9622, -75.0064, -75.0232, -75.0326, -75.0389, -75.0434, -75.0466,
        -75.0489, -75.0505, -75.0516, -75.0525, -75.0530, -75.0534, -75.0537,
        -75.0539, -75.0541, -75.0542, -75.0542, -75.0543, -75.0543, -75.0543,
        -75.0543, -75.0544, -75.0544, -75.0544], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0383e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0383e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4118], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(4.0383e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0541, -75.0542, -75.0542, -75.0543, -75.0543, -75.0543, -75.0543,
        -75.0544, -75.0544, -75.0544], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4118], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 15 	 O3 	 O3 	 0.00019979392461277624

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6035, -199.5473, -199.5328, -199.5253, -199.5206, -199.5174,
        -199.5152, -199.5136, -199.5125, -199.5117, -199.5112, -199.5108,
        -199.5105, -199.5103, -199.5102, -199.5101, -199.5100, -199.5100,
        -199.5100, -199.5099, -199.5099, -199.5099, -199.5099, -199.5099,
        -199.5099], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0529e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1057e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6741, -99.6977, -99.7062, -99.7110, -99.7143, -99.7167, -99.7183,
        -99.7195, -99.7204, -99.7210, -99.7214, -99.7217, -99.7220, -99.7221,
        -99.7222, -99.7223, -99.7223, -99.7224, -99.7224, -99.7224, -99.7224,
        -99.7225, -99.7225, -99.7225, -99.7225], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3770e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1151e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5101, -199.5100, -199.5100, -199.5100, -199.5099, -199.5099,
        -199.5099, -199.5099, -199.5099, -199.5099], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7223, -99.7223, -99.7224, -99.7224, -99.7224, -99.7224, -99.7225,
        -99.7225, -99.7225, -99.7225], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 6 	 6 	 F2 	 F2 	 2.298306937770028e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2917, -0.4512, -0.4714, -0.4810, -0.4869, -0.4908, -0.4935, -0.4953,
        -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6609e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.4882e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3219e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4037, -54.4703, -54.5044, -54.5249, -54.5391, -54.5493, -54.5565,
        -54.5617, -54.5654, -54.5680, -54.5699, -54.5712, -54.5721, -54.5727,
        -54.5732, -54.5735, -54.5737, -54.5739, -54.5740, -54.5741, -54.5741,
        -54.5742, -54.5742, -54.5742, -54.5742], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2543e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3844e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5450], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3844e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5735, -54.5737, -54.5739, -54.5740, -54.5741, -54.5741, -54.5742,
        -54.5742, -54.5742, -54.5742], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5450], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 6 	 20 	 H3N 	 NH3 	 5.985354375313312e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e06)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e06/2022-11-29_10:09:21.572573_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e06/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 6 || ,[' rho : 4.665213', ' ae : 49.355307', ' E : 2.203693'] ,|| total loss 40.382446 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8979, -109.5325, -109.5648, -109.5452, -109.5286, -109.5170,
        -109.5091, -109.5038, -109.5002, -109.4978, -109.4962, -109.4951,
        -109.4944, -109.4938, -109.4935, -109.4933, -109.4931, -109.4930,
        -109.4929, -109.4928, -109.4928, -109.4928, -109.4928, -109.4927,
        -109.4927], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3154e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4012, -54.4633, -54.4989, -54.5208, -54.5360, -54.5469, -54.5548,
        -54.5604, -54.5644, -54.5673, -54.5693, -54.5707, -54.5717, -54.5724,
        -54.5729, -54.5732, -54.5735, -54.5736, -54.5738, -54.5738, -54.5739,
        -54.5739, -54.5740, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4620e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4933, -109.4931, -109.4930, -109.4929, -109.4928, -109.4928,
        -109.4928, -109.4928, -109.4927, -109.4927], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5732, -54.5735, -54.5736, -54.5738, -54.5738, -54.5739, -54.5739,
        -54.5740, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 1 	 N2 	 N2 	 8.674699211206108e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2708, -0.4453, -0.4680, -0.4788, -0.4854, -0.4898, -0.4928, -0.4948,
        -0.4963, -0.4973, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6517e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7529e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3035e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9619, -75.0060, -75.0225, -75.0318, -75.0380, -75.0424, -75.0456,
        -75.0478, -75.0494, -75.0505, -75.0513, -75.0519, -75.0523, -75.0526,
        -75.0528, -75.0529, -75.0530, -75.0531, -75.0531, -75.0531, -75.0532,
        -75.0532, -75.0532, -75.0532, -75.0532], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7903e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3514e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6635, -75.6956, -75.7069, -75.7131, -75.7173, -75.7202, -75.7222,
        -75.7237, -75.7247, -75.7255, -75.7260, -75.7264, -75.7266, -75.7268,
        -75.7269, -75.7270, -75.7271, -75.7271, -75.7272, -75.7272, -75.7272,
        -75.7272, -75.7272, -75.7272, -75.7272], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0529, -75.0530, -75.0531, -75.0531, -75.0531, -75.0532, -75.0532,
        -75.0532, -75.0532, -75.0532], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7270, -75.7271, -75.7271, -75.7272, -75.7272, -75.7272, -75.7272,
        -75.7272, -75.7272, -75.7272], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 21 	 HO 	 OH 	 3.245490719533284e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.5798, -324.5370, -324.5258, -324.5201, -324.5164, -324.5140,
        -324.5122, -324.5110, -324.5102, -324.5096, -324.5092, -324.5089,
        -324.5087, -324.5085, -324.5084, -324.5083, -324.5083, -324.5082,
        -324.5082, -324.5082, -324.5082, -324.5082, -324.5082, -324.5082,
        -324.5082], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.0872e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1744e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2160, -162.2286, -162.2336, -162.2364, -162.2382, -162.2394,
        -162.2402, -162.2410, -162.2415, -162.2418, -162.2419, -162.2420,
        -162.2420, -162.2420, -162.2421, -162.2421, -162.2421, -162.2421,
        -162.2421, -162.2421, -162.2421, -162.2421, -162.2421, -162.2421,
        -162.2421], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6574e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.1910e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5083, -324.5083, -324.5082, -324.5082, -324.5082, -324.5082,
        -324.5082, -324.5082, -324.5082, -324.5082], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2421, -162.2421, -162.2421, -162.2421, -162.2421, -162.2421,
        -162.2421, -162.2421, -162.2421, -162.2421], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 11 	 Na2 	 Na2 	 2.747290635107042e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4375, -54.5052, -54.5295, -54.5431, -54.5520, -54.5583, -54.5628,
        -54.5659, -54.5681, -54.5697, -54.5708, -54.5716, -54.5721, -54.5725,
        -54.5728, -54.5730, -54.5731, -54.5732, -54.5732, -54.5733, -54.5733,
        -54.5733, -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8265e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8265e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9609, -75.0051, -75.0217, -75.0311, -75.0373, -75.0417, -75.0449,
        -75.0472, -75.0488, -75.0499, -75.0507, -75.0513, -75.0517, -75.0520,
        -75.0522, -75.0523, -75.0524, -75.0525, -75.0525, -75.0526, -75.0526,
        -75.0526, -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1886e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2015e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0681], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.2015e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5730, -54.5731, -54.5732, -54.5732, -54.5733, -54.5733, -54.5733,
        -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0523, -75.0524, -75.0525, -75.0525, -75.0526, -75.0526, -75.0526,
        -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0681], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 13 	 NO2 	 NO2 	 0.0006800135794429833

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2655, -0.4437, -0.4672, -0.4783, -0.4850, -0.4895, -0.4926, -0.4947,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6378e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0368e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2756e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4115, -54.4823, -54.5131, -54.5312, -54.5434, -54.5521, -54.5583,
        -54.5627, -54.5658, -54.5680, -54.5695, -54.5706, -54.5714, -54.5719,
        -54.5723, -54.5726, -54.5728, -54.5729, -54.5730, -54.5730, -54.5731,
        -54.5731, -54.5731, -54.5732, -54.5732], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0813e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3464e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2092], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.3464e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5726, -54.5728, -54.5729, -54.5730, -54.5730, -54.5731, -54.5731,
        -54.5731, -54.5732, -54.5732], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2092], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 14 	 HN 	 NH 	 1.869824568588575e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9455, -74.9875, -75.0085, -75.0212, -75.0300, -75.0363, -75.0408,
        -75.0441, -75.0464, -75.0481, -75.0493, -75.0501, -75.0507, -75.0512,
        -75.0515, -75.0517, -75.0518, -75.0519, -75.0520, -75.0520, -75.0521,
        -75.0521, -75.0521, -75.0521, -75.0521], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5979e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5979e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0517, -75.0518, -75.0519, -75.0520, -75.0520, -75.0521, -75.0521,
        -75.0521, -75.0521, -75.0521], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 29 	 O 	 O 	 5.389113728194757e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4028, -54.4696, -54.5036, -54.5240, -54.5381, -54.5482, -54.5554,
        -54.5606, -54.5643, -54.5669, -54.5687, -54.5700, -54.5709, -54.5715,
        -54.5720, -54.5723, -54.5725, -54.5727, -54.5728, -54.5728, -54.5729,
        -54.5729, -54.5730, -54.5730, -54.5730], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2867e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.2867e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9461, -74.9887, -75.0094, -75.0219, -75.0305, -75.0366, -75.0411,
        -75.0443, -75.0466, -75.0482, -75.0494, -75.0502, -75.0508, -75.0512,
        -75.0515, -75.0517, -75.0518, -75.0519, -75.0520, -75.0520, -75.0521,
        -75.0521, -75.0521, -75.0521, -75.0521], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5888e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2875e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6467], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.2875e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5723, -54.5725, -54.5727, -54.5728, -54.5728, -54.5729, -54.5729,
        -54.5730, -54.5730, -54.5730], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0517, -75.0518, -75.0519, -75.0520, -75.0520, -75.0521, -75.0521,
        -75.0521, -75.0521, -75.0521], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6467], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 16 	 N2O 	 N2O 	 0.00028020821707751324

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7345, -37.7732, -37.7909, -37.8013, -37.8084, -37.8134, -37.8170,
        -37.8196, -37.8215, -37.8228, -37.8237, -37.8244, -37.8248, -37.8251,
        -37.8254, -37.8255, -37.8256, -37.8257, -37.8258, -37.8258, -37.8258,
        -37.8259, -37.8259, -37.8259, -37.8259], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6296e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.6296e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2709, -0.4453, -0.4680, -0.4788, -0.4854, -0.4898, -0.4928, -0.4948,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6327e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0191e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3317e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1400], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3317e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8255, -37.8256, -37.8257, -37.8258, -37.8258, -37.8258, -37.8259,
        -37.8259, -37.8259, -37.8259], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1400], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 18 	 CH2 	 CH2 	 0.00012929030079415353

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2225, -162.2326, -162.2357, -162.2373, -162.2383, -162.2391,
        -162.2397, -162.2400, -162.2402, -162.2403, -162.2403, -162.2403,
        -162.2404, -162.2404, -162.2404, -162.2404, -162.2404, -162.2404,
        -162.2404, -162.2404, -162.2404, -162.2404, -162.2404, -162.2404,
        -162.2404], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1324e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1324e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2404, -162.2404, -162.2404, -162.2404, -162.2404, -162.2404,
        -162.2404, -162.2404, -162.2404, -162.2404], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 28 	 Na 	 Na 	 4.6810788442890844e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8719, -93.4666, -93.3651, -93.3179, -93.2855, -93.2639, -93.2485,
        -93.2375, -93.2297, -93.2240, -93.2198, -93.2168, -93.2146, -93.2130,
        -93.2118, -93.2109, -93.2103, -93.2098, -93.2094, -93.2092, -93.2089,
        -93.2088, -93.2087, -93.2086, -93.2085], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0481e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7428, -37.7827, -37.7979, -37.8064, -37.8122, -37.8162, -37.8191,
        -37.8212, -37.8226, -37.8237, -37.8244, -37.8249, -37.8253, -37.8255,
        -37.8257, -37.8258, -37.8259, -37.8260, -37.8260, -37.8261, -37.8261,
        -37.8261, -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3990e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2152, -0.4282, -0.4586, -0.4728, -0.4814, -0.4870, -0.4908, -0.4935,
        -0.4953, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6363e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3530e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4079, -54.4778, -54.5098, -54.5288, -54.5417, -54.5509, -54.5574,
        -54.5621, -54.5654, -54.5678, -54.5694, -54.5706, -54.5714, -54.5720,
        -54.5724, -54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732,
        -54.5732, -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9949e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2109, -93.2103, -93.2098, -93.2094, -93.2092, -93.2089, -93.2088,
        -93.2087, -93.2086, -93.2085], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8258, -37.8259, -37.8260, -37.8260, -37.8261, -37.8261, -37.8261,
        -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732, -54.5732,
        -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 3 	 CHN 	 CNH 	 0.008401447969513056

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2510, -0.4394, -0.4647, -0.4767, -0.4840, -0.4888, -0.4921, -0.4944,
        -0.4959, -0.4970, -0.4978, -0.4983, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6375e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1192e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2752e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4026, -54.4685, -54.5028, -54.5236, -54.5379, -54.5481, -54.5555,
        -54.5608, -54.5645, -54.5671, -54.5690, -54.5703, -54.5712, -54.5719,
        -54.5723, -54.5727, -54.5729, -54.5730, -54.5732, -54.5732, -54.5733,
        -54.5733, -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9530e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3447e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5441], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3447e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5727, -54.5729, -54.5730, -54.5732, -54.5732, -54.5733, -54.5733,
        -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5441], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 20 	 H3N 	 NH3 	 5.970857834104142e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4155, -920.3908, -920.3852, -920.3823, -920.3804, -920.3792,
        -920.3783, -920.3777, -920.3772, -920.3769, -920.3767, -920.3765,
        -920.3764, -920.3764, -920.3763, -920.3763, -920.3762, -920.3762,
        -920.3762, -920.3762, -920.3762, -920.3762, -920.3762, -920.3762,
        -920.3762], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7093e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4186e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0916, -460.1158, -460.1232, -460.1274, -460.1301, -460.1320,
        -460.1334, -460.1343, -460.1350, -460.1355, -460.1359, -460.1361,
        -460.1363, -460.1364, -460.1365, -460.1366, -460.1366, -460.1366,
        -460.1366, -460.1367, -460.1367, -460.1367, -460.1367, -460.1367,
        -460.1367], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1620e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4277e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3763, -920.3762, -920.3762, -920.3762, -920.3762, -920.3762,
        -920.3762, -920.3762, -920.3762, -920.3762], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1366, -460.1366, -460.1366, -460.1366, -460.1367, -460.1367,
        -460.1367, -460.1367, -460.1367, -460.1367], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 5 	 Cl2 	 Cl2 	 1.6019966382489714e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.6361, -188.7927, -188.6129, -188.5080, -188.4433, -188.3992,
        -188.3684, -188.3467, -188.3314, -188.3206, -188.3129, -188.3075,
        -188.3036, -188.3008, -188.2989, -188.2974, -188.2964, -188.2957,
        -188.2952, -188.2949, -188.2946, -188.2944, -188.2943, -188.2942,
        -188.2941], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8681e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7577, -37.7938, -37.8056, -37.8120, -37.8163, -37.8192, -37.8213,
        -37.8228, -37.8239, -37.8246, -37.8251, -37.8255, -37.8258, -37.8260,
        -37.8261, -37.8262, -37.8262, -37.8263, -37.8263, -37.8263, -37.8263,
        -37.8264, -37.8264, -37.8264, -37.8264], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1447e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9442, -74.9810, -75.0033, -75.0175, -75.0274, -75.0345, -75.0398,
        -75.0435, -75.0462, -75.0482, -75.0496, -75.0505, -75.0512, -75.0517,
        -75.0521, -75.0523, -75.0525, -75.0526, -75.0527, -75.0527, -75.0528,
        -75.0528, -75.0528, -75.0529, -75.0529], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1064e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.2974, -188.2964, -188.2957, -188.2952, -188.2949, -188.2946,
        -188.2944, -188.2943, -188.2942, -188.2941], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8262, -37.8262, -37.8263, -37.8263, -37.8263, -37.8263, -37.8264,
        -37.8264, -37.8264, -37.8264], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0523, -75.0525, -75.0526, -75.0527, -75.0527, -75.0528, -75.0528,
        -75.0528, -75.0529, -75.0529], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 4 	 CO2 	 CO2 	 0.01582017977631996

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4583, -7.4657, -7.4687, -7.4704, -7.4714, -7.4723, -7.4733, -7.4738,
        -7.4738, -7.4735, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4734,
        -7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4735, -7.4735,
        -7.4735], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0603e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5165e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1220e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4735,
        -7.4735, -7.4735], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 26 	 Li 	 Li 	 4.954540906654039e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.2602, -73.2248, -75.1279, -75.8767, -76.3136, -76.6007, -76.7968,
        -76.9325, -77.0270, -77.0930, -77.1392, -77.1716, -77.1942, -77.2101,
        -77.2212, -77.2290, -77.2345, -77.2384, -77.2411, -77.2429, -77.2443,
        -77.2452, -77.2458, -77.2463, -77.2466], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8957e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7565, -37.7929, -37.8048, -37.8114, -37.8157, -37.8188, -37.8209,
        -37.8224, -37.8235, -37.8243, -37.8248, -37.8252, -37.8254, -37.8256,
        -37.8257, -37.8258, -37.8259, -37.8259, -37.8260, -37.8260, -37.8260,
        -37.8260, -37.8260, -37.8260, -37.8260], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4409e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3255, -0.4603, -0.4765, -0.4843, -0.4891, -0.4923, -0.4945, -0.4960,
        -0.4971, -0.4978, -0.4983, -0.4987, -0.4990, -0.4991, -0.4993, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6345e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.7234e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2290, -77.2345, -77.2384, -77.2411, -77.2429, -77.2443, -77.2452,
        -77.2458, -77.2463, -77.2466], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8258, -37.8259, -37.8259, -37.8260, -37.8260, -37.8260, -37.8260,
        -37.8260, -37.8260, -37.8260], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 7 	 C2H2 	 C2H2 	 0.0006058237110372944

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7436, -37.7834, -37.7983, -37.8067, -37.8123, -37.8163, -37.8191,
        -37.8211, -37.8225, -37.8235, -37.8242, -37.8247, -37.8251, -37.8253,
        -37.8255, -37.8256, -37.8257, -37.8258, -37.8258, -37.8259, -37.8259,
        -37.8259, -37.8259, -37.8259, -37.8259], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5784e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5784e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8256, -37.8257, -37.8258, -37.8258, -37.8259, -37.8259, -37.8259,
        -37.8259, -37.8259, -37.8259], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 22 	 C 	 C 	 4.980722615846235e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7142, -460.7700, -460.7856, -460.7936, -460.7987, -460.8021,
        -460.8045, -460.8061, -460.8073, -460.8081, -460.8087, -460.8091,
        -460.8094, -460.8096, -460.8097, -460.8098, -460.8098, -460.8099,
        -460.8099, -460.8099, -460.8100, -460.8100, -460.8100, -460.8100,
        -460.8100], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.9929e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9858e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0815, -460.1095, -460.1187, -460.1239, -460.1274, -460.1299,
        -460.1316, -460.1329, -460.1338, -460.1344, -460.1349, -460.1352,
        -460.1355, -460.1356, -460.1357, -460.1358, -460.1359, -460.1359,
        -460.1359, -460.1359, -460.1360, -460.1360, -460.1360, -460.1360,
        -460.1360], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0364e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.9962e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3164, -0.4580, -0.4752, -0.4834, -0.4885, -0.4919, -0.4942, -0.4958,
        -0.4969, -0.4977, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6324e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.2224e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8098, -460.8098, -460.8099, -460.8099, -460.8099, -460.8100,
        -460.8100, -460.8100, -460.8100, -460.8100], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1358, -460.1359, -460.1359, -460.1359, -460.1359, -460.1360,
        -460.1360, -460.1360, -460.1360, -460.1360], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 9 	 HCl 	 ClH 	 2.4670443567948106e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6734, -99.6966, -99.7048, -99.7094, -99.7126, -99.7148, -99.7164,
        -99.7175, -99.7183, -99.7189, -99.7193, -99.7196, -99.7198, -99.7200,
        -99.7201, -99.7201, -99.7202, -99.7202, -99.7203, -99.7203, -99.7203,
        -99.7203, -99.7203, -99.7203, -99.7203], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3216e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3216e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7201, -99.7202, -99.7202, -99.7203, -99.7203, -99.7203, -99.7203,
        -99.7203, -99.7203, -99.7203], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 24 	 F 	 F 	 4.313857720816388e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7571, -37.7932, -37.8051, -37.8115, -37.8158, -37.8188, -37.8209,
        -37.8224, -37.8235, -37.8242, -37.8247, -37.8251, -37.8254, -37.8255,
        -37.8257, -37.8258, -37.8258, -37.8259, -37.8259, -37.8259, -37.8259,
        -37.8259, -37.8259, -37.8260, -37.8260], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5070e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5070e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3082, -0.4557, -0.4739, -0.4826, -0.4880, -0.4915, -0.4940, -0.4956,
        -0.4968, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6351e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.5638e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3354e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8239], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3354e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8258, -37.8258, -37.8259, -37.8259, -37.8259, -37.8259, -37.8259,
        -37.8259, -37.8260, -37.8260], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8239], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 17 	 CH3 	 CH3 	 8.34024518320938e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2635, -0.4431, -0.4668, -0.4781, -0.4849, -0.4894, -0.4925, -0.4946,
        -0.4961, -0.4971, -0.4979, -0.4984, -0.4987, -0.4990, -0.4991, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6376e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0747e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2754e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 25 	 H 	 H 	 5.5075873466500364e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.6058, -113.3689, -113.3131, -113.2832, -113.2651, -113.2526,
        -113.2439, -113.2379, -113.2337, -113.2308, -113.2287, -113.2273,
        -113.2263, -113.2256, -113.2251, -113.2247, -113.2245, -113.2243,
        -113.2242, -113.2241, -113.2241, -113.2240, -113.2240, -113.2240,
        -113.2240], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5096e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7323, -37.7681, -37.7871, -37.7985, -37.8064, -37.8121, -37.8161,
        -37.8190, -37.8211, -37.8226, -37.8236, -37.8244, -37.8249, -37.8253,
        -37.8255, -37.8257, -37.8258, -37.8259, -37.8260, -37.8260, -37.8261,
        -37.8261, -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4428e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9566, -75.0012, -75.0190, -75.0292, -75.0361, -75.0410, -75.0444,
        -75.0469, -75.0487, -75.0500, -75.0509, -75.0515, -75.0520, -75.0523,
        -75.0525, -75.0527, -75.0528, -75.0528, -75.0529, -75.0529, -75.0530,
        -75.0530, -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9369e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2247, -113.2245, -113.2243, -113.2242, -113.2241, -113.2241,
        -113.2240, -113.2240, -113.2240, -113.2240], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8257, -37.8258, -37.8259, -37.8260, -37.8260, -37.8261, -37.8261,
        -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0527, -75.0528, -75.0528, -75.0529, -75.0529, -75.0530, -75.0530,
        -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 8 	 CO 	 OC 	 0.0011240207960421006

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0232, -1.1111, -1.1338, -1.1454, -1.1528, -1.1577, -1.1612, -1.1636,
        -1.1653, -1.1664, -1.1672, -1.1678, -1.1682, -1.1685, -1.1687, -1.1688,
        -1.1689, -1.1690, -1.1691, -1.1691, -1.1691, -1.1691, -1.1691, -1.1691,
        -1.1691], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5655e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1310e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2447, -0.4375, -0.4637, -0.4761, -0.4835, -0.4885, -0.4919, -0.4942,
        -0.4958, -0.4969, -0.4977, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6418e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1779e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0593e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1688, -1.1689, -1.1690, -1.1691, -1.1691, -1.1691, -1.1691, -1.1691,
        -1.1691, -1.1691], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 0 	 H2 	 H2 	 4.185076233529814e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4852, -54.5154, -54.5330, -54.5449, -54.5533, -54.5592,
        -54.5635, -54.5665, -54.5687, -54.5702, -54.5712, -54.5720, -54.5725,
        -54.5728, -54.5731, -54.5733, -54.5734, -54.5735, -54.5736, -54.5736,
        -54.5736, -54.5737, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6383e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.6383e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5731, -54.5733, -54.5734, -54.5735, -54.5736, -54.5736, -54.5736,
        -54.5737, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 27 	 N 	 N 	 5.642211409330002e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6454, -199.5645, -199.5433, -199.5323, -199.5254, -199.5207,
        -199.5174, -199.5151, -199.5134, -199.5123, -199.5115, -199.5109,
        -199.5105, -199.5102, -199.5100, -199.5099, -199.5098, -199.5097,
        -199.5097, -199.5097, -199.5096, -199.5096, -199.5096, -199.5096,
        -199.5096], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.0383e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0766e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6701, -99.6938, -99.7033, -99.7088, -99.7126, -99.7153, -99.7172,
        -99.7186, -99.7196, -99.7203, -99.7208, -99.7212, -99.7214, -99.7216,
        -99.7218, -99.7218, -99.7219, -99.7220, -99.7220, -99.7220, -99.7220,
        -99.7220, -99.7220, -99.7221, -99.7221], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0103e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0867e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5099, -199.5098, -199.5097, -199.5097, -199.5097, -199.5096,
        -199.5096, -199.5096, -199.5096, -199.5096], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7218, -99.7219, -99.7220, -99.7220, -99.7220, -99.7220, -99.7220,
        -99.7220, -99.7221, -99.7221], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 6 	 F2 	 F2 	 3.1657008713589627e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4091, -54.4787, -54.5107, -54.5296, -54.5425, -54.5517, -54.5582,
        -54.5629, -54.5662, -54.5685, -54.5702, -54.5714, -54.5722, -54.5728,
        -54.5732, -54.5734, -54.5736, -54.5738, -54.5739, -54.5739, -54.5740,
        -54.5740, -54.5740, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3392e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3392e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9456, -74.9833, -75.0054, -75.0193, -75.0290, -75.0360, -75.0411,
        -75.0448, -75.0474, -75.0493, -75.0506, -75.0516, -75.0523, -75.0527,
        -75.0531, -75.0533, -75.0535, -75.0536, -75.0537, -75.0537, -75.0538,
        -75.0538, -75.0538, -75.0538, -75.0538], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4417e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0781e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9874, -129.7442, -129.6907, -129.6692, -129.6581, -129.6509,
        -129.6463, -129.6432, -129.6412, -129.6398, -129.6389, -129.6383,
        -129.6379, -129.6377, -129.6375, -129.6374, -129.6373, -129.6372,
        -129.6372, -129.6372, -129.6372, -129.6372, -129.6371, -129.6371,
        -129.6371], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.4018e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5734, -54.5736, -54.5738, -54.5739, -54.5739, -54.5740, -54.5740,
        -54.5740, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0533, -75.0535, -75.0536, -75.0537, -75.0537, -75.0538, -75.0538,
        -75.0538, -75.0538, -75.0538], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6374, -129.6373, -129.6372, -129.6372, -129.6372, -129.6372,
        -129.6372, -129.6371, -129.6371, -129.6371], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 12 	 NO 	 NO 	 1.5049638556934963e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9451, -8.0133, -8.0313, -8.0407, -8.0467, -8.0509, -8.0539, -8.0560,
        -8.0574, -8.0585, -8.0592, -8.0597, -8.0601, -8.0603, -8.0605, -8.0606,
        -8.0607, -8.0608, -8.0608, -8.0609, -8.0609, -8.0609, -8.0609, -8.0609,
        -8.0609], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5700e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1400e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2845, -0.4492, -0.4702, -0.4803, -0.4864, -0.4904, -0.4932, -0.4951,
        -0.4965, -0.4974, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6523e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.3726e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0705e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4598, -7.4671, -7.4696, -7.4710, -7.4719, -7.4728, -7.4736, -7.4738,
        -7.4735, -7.4733, -7.4732, -7.4732, -7.4732, -7.4732, -7.4733, -7.4733,
        -7.4733, -7.4733, -7.4733, -7.4734, -7.4734, -7.4734, -7.4734, -7.4734,
        -7.4734], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0655e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5685e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2030e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0606, -8.0607, -8.0608, -8.0608, -8.0609, -8.0609, -8.0609, -8.0609,
        -8.0609, -8.0609], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4733, -7.4733, -7.4733, -7.4733, -7.4734, -7.4734, -7.4734, -7.4734,
        -7.4734, -7.4734], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 10 	 HLi 	 LiH 	 4.259155291025281e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1026, -460.1250, -460.1318, -460.1355, -460.1380, -460.1397,
        -460.1409, -460.1418, -460.1424, -460.1428, -460.1431, -460.1433,
        -460.1435, -460.1436, -460.1437, -460.1437, -460.1438, -460.1438,
        -460.1438, -460.1438, -460.1438, -460.1438, -460.1438, -460.1439,
        -460.1439], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2526e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2526e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1437, -460.1438, -460.1438, -460.1438, -460.1438, -460.1438,
        -460.1438, -460.1438, -460.1439, -460.1439], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 7 	 23 	 Cl 	 Cl 	 4.0258358704019285e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2715, -0.4455, -0.4681, -0.4789, -0.4855, -0.4898, -0.4928, -0.4948,
        -0.4963, -0.4973, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6587e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9034e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3176e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9494, -74.9923, -75.0127, -75.0250, -75.0334, -75.0394, -75.0438,
        -75.0469, -75.0492, -75.0508, -75.0519, -75.0527, -75.0533, -75.0537,
        -75.0540, -75.0542, -75.0543, -75.0544, -75.0545, -75.0545, -75.0545,
        -75.0546, -75.0546, -75.0546, -75.0546], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9396e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3570e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4221], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3570e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0542, -75.0543, -75.0544, -75.0545, -75.0545, -75.0545, -75.0546,
        -75.0546, -75.0546, -75.0546], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4221], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 19 	 H2O 	 OH2 	 8.797872655728209e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3149, -107.2921, -107.2569, -107.2440, -107.2361, -107.2314,
        -107.2288, -107.2272, -107.2261, -107.2255, -107.2251, -107.2249,
        -107.2249, -107.2249, -107.2251, -107.2252, -107.2254, -107.2256,
        -107.2257, -107.2259, -107.2260, -107.2261, -107.2261, -107.2262,
        -107.2262], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3781e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6777, -99.7006, -99.7087, -99.7132, -99.7163, -99.7185, -99.7200,
        -99.7211, -99.7219, -99.7225, -99.7229, -99.7232, -99.7234, -99.7235,
        -99.7236, -99.7237, -99.7237, -99.7238, -99.7238, -99.7238, -99.7238,
        -99.7238, -99.7238, -99.7238, -99.7238], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.2852e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4575, -7.4643, -7.4677, -7.4697, -7.4709, -7.4719, -7.4728, -7.4736,
        -7.4739, -7.4736, -7.4734, -7.4733, -7.4733, -7.4733, -7.4733, -7.4734,
        -7.4734, -7.4734, -7.4734, -7.4734, -7.4735, -7.4735, -7.4735, -7.4735,
        -7.4735], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0736e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5058e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2252, -107.2254, -107.2256, -107.2257, -107.2259, -107.2260,
        -107.2261, -107.2261, -107.2262, -107.2262], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7237, -99.7237, -99.7238, -99.7238, -99.7238, -99.7238, -99.7238,
        -99.7238, -99.7238, -99.7238], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4734, -7.4734, -7.4734, -7.4734, -7.4734, -7.4735, -7.4735, -7.4735,
        -7.4735, -7.4735], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 2 	 FLi 	 LiF 	 0.008756018671148265

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9586, -75.0032, -75.0211, -75.0313, -75.0383, -75.0432, -75.0467,
        -75.0492, -75.0510, -75.0523, -75.0532, -75.0538, -75.0542, -75.0546,
        -75.0548, -75.0549, -75.0551, -75.0551, -75.0552, -75.0552, -75.0552,
        -75.0553, -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5015e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5015e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4160], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(3.5015e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0549, -75.0551, -75.0551, -75.0552, -75.0552, -75.0552, -75.0553,
        -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4160], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 7 	 15 	 O3 	 O3 	 0.00024413670650787948

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e07)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e07/2022-11-29_10:09:21.572573_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e07/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 7 || ,[' rho : 4.647917', ' ae : 48.868596', ' E : 2.809558'] ,|| total loss 40.028464 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2256, -162.2373, -162.2413, -162.2434, -162.2447, -162.2456,
        -162.2464, -162.2469, -162.2472, -162.2474, -162.2474, -162.2475,
        -162.2475, -162.2475, -162.2475, -162.2476, -162.2476, -162.2476,
        -162.2476, -162.2476, -162.2476, -162.2476, -162.2476, -162.2476,
        -162.2476], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2235e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2235e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2476, -162.2476, -162.2476, -162.2476, -162.2476, -162.2476,
        -162.2476, -162.2476, -162.2476, -162.2476], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 28 	 Na 	 Na 	 1.1432690080511265e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0913, -460.1212, -460.1315, -460.1373, -460.1413, -460.1441,
        -460.1461, -460.1476, -460.1486, -460.1494, -460.1499, -460.1503,
        -460.1506, -460.1507, -460.1509, -460.1510, -460.1510, -460.1511,
        -460.1511, -460.1511, -460.1512, -460.1512, -460.1512, -460.1512,
        -460.1512], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8532e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.8532e-09, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1510, -460.1510, -460.1511, -460.1511, -460.1511, -460.1512,
        -460.1512, -460.1512, -460.1512, -460.1512], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 23 	 Cl 	 Cl 	 2.354765957710868e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4598, -7.4672, -7.4698, -7.4711, -7.4721, -7.4730, -7.4739, -7.4741,
        -7.4738, -7.4736, -7.4735, -7.4735, -7.4735, -7.4735, -7.4735, -7.4736,
        -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736,
        -7.4736], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0864e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3927e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1742e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736,
        -7.4736, -7.4736], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 26 	 Li 	 Li 	 4.5527125872992894e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4611, -920.4293, -920.4217, -920.4178, -920.4152, -920.4134,
        -920.4122, -920.4113, -920.4107, -920.4102, -920.4099, -920.4097,
        -920.4096, -920.4094, -920.4094, -920.4093, -920.4093, -920.4092,
        -920.4092, -920.4092, -920.4092, -920.4092, -920.4092, -920.4092,
        -920.4092], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7379e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4757e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0976, -460.1260, -460.1354, -460.1407, -460.1443, -460.1468,
        -460.1486, -460.1499, -460.1509, -460.1515, -460.1520, -460.1523,
        -460.1526, -460.1527, -460.1529, -460.1529, -460.1530, -460.1530,
        -460.1531, -460.1531, -460.1531, -460.1531, -460.1531, -460.1531,
        -460.1531], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8115e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4776e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4093, -920.4093, -920.4092, -920.4092, -920.4092, -920.4092,
        -920.4092, -920.4092, -920.4092, -920.4092], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1529, -460.1530, -460.1530, -460.1531, -460.1531, -460.1531,
        -460.1531, -460.1531, -460.1531, -460.1531], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 5 	 Cl2 	 Cl2 	 1.6538945929082442e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7323, -460.7882, -460.8038, -460.8118, -460.8169, -460.8203,
        -460.8227, -460.8244, -460.8255, -460.8263, -460.8269, -460.8273,
        -460.8276, -460.8278, -460.8279, -460.8280, -460.8281, -460.8281,
        -460.8281, -460.8282, -460.8282, -460.8282, -460.8282, -460.8282,
        -460.8282], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.0040e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0991, -460.1272, -460.1365, -460.1417, -460.1452, -460.1477,
        -460.1495, -460.1508, -460.1517, -460.1524, -460.1528, -460.1532,
        -460.1534, -460.1535, -460.1537, -460.1537, -460.1538, -460.1538,
        -460.1539, -460.1539, -460.1539, -460.1539, -460.1539, -460.1539,
        -460.1539], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4265e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2501, -0.4391, -0.4646, -0.4767, -0.4840, -0.4888, -0.4921, -0.4944,
        -0.4959, -0.4970, -0.4978, -0.4983, -0.4987, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6839e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0526e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8280, -460.8281, -460.8281, -460.8281, -460.8282, -460.8282,
        -460.8282, -460.8282, -460.8282, -460.8282], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1537, -460.1538, -460.1538, -460.1539, -460.1539, -460.1539,
        -460.1539, -460.1539, -460.1539, -460.1539], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 9 	 HCl 	 ClH 	 2.843748554106378e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2906, -0.4509, -0.4712, -0.4809, -0.4868, -0.4908, -0.4934, -0.4953,
        -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6861e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.3346e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3722e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 25 	 H 	 H 	 4.3591442091170125e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.7124, -113.4146, -113.3438, -113.3060, -113.2831, -113.2672,
        -113.2563, -113.2486, -113.2432, -113.2394, -113.2368, -113.2350,
        -113.2337, -113.2328, -113.2322, -113.2317, -113.2314, -113.2312,
        -113.2311, -113.2310, -113.2309, -113.2308, -113.2308, -113.2308,
        -113.2308], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5087e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7460, -37.7857, -37.8006, -37.8090, -37.8146, -37.8186, -37.8214,
        -37.8234, -37.8248, -37.8258, -37.8265, -37.8270, -37.8274, -37.8276,
        -37.8278, -37.8279, -37.8280, -37.8281, -37.8281, -37.8282, -37.8282,
        -37.8282, -37.8282, -37.8282, -37.8282], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6766e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9559, -75.0001, -75.0193, -75.0306, -75.0382, -75.0436, -75.0475,
        -75.0504, -75.0524, -75.0538, -75.0548, -75.0555, -75.0560, -75.0564,
        -75.0566, -75.0568, -75.0569, -75.0570, -75.0571, -75.0571, -75.0571,
        -75.0572, -75.0572, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5097e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2317, -113.2314, -113.2312, -113.2311, -113.2310, -113.2309,
        -113.2308, -113.2308, -113.2308, -113.2308], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8279, -37.8280, -37.8281, -37.8281, -37.8282, -37.8282, -37.8282,
        -37.8282, -37.8282, -37.8282], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0568, -75.0569, -75.0570, -75.0571, -75.0571, -75.0571, -75.0572,
        -75.0572, -75.0572, -75.0572], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 8 	 CO 	 OC 	 0.0011073832738175233

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.1081, -73.0316, -75.0449, -75.8305, -76.2858, -76.5840, -76.7872,
        -76.9276, -77.0255, -77.0939, -77.1417, -77.1753, -77.1987, -77.2152,
        -77.2267, -77.2348, -77.2405, -77.2445, -77.2473, -77.2492, -77.2506,
        -77.2516, -77.2522, -77.2527, -77.2530], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8779e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7442, -37.7841, -37.7995, -37.8082, -37.8141, -37.8182, -37.8211,
        -37.8232, -37.8247, -37.8258, -37.8265, -37.8271, -37.8274, -37.8277,
        -37.8279, -37.8280, -37.8281, -37.8281, -37.8282, -37.8282, -37.8282,
        -37.8283, -37.8283, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6324e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2791, -0.4477, -0.4694, -0.4797, -0.4860, -0.4902, -0.4931, -0.4950,
        -0.4964, -0.4974, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6892e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8182e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2348, -77.2405, -77.2445, -77.2473, -77.2492, -77.2506, -77.2516,
        -77.2522, -77.2527, -77.2530], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8280, -37.8281, -37.8281, -37.8282, -37.8282, -37.8282, -37.8283,
        -37.8283, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 7 	 C2H2 	 C2H2 	 0.0005634455182636943

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7508, -37.7896, -37.8034, -37.8110, -37.8161, -37.8197, -37.8222,
        -37.8241, -37.8253, -37.8262, -37.8269, -37.8273, -37.8276, -37.8279,
        -37.8280, -37.8281, -37.8282, -37.8283, -37.8283, -37.8283, -37.8283,
        -37.8284, -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5529e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5529e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3345, -0.4627, -0.4779, -0.4852, -0.4898, -0.4928, -0.4949, -0.4963,
        -0.4973, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6908e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.3974e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4273e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1433], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.4273e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8281, -37.8282, -37.8283, -37.8283, -37.8283, -37.8283, -37.8284,
        -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1433], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 18 	 CH2 	 CH2 	 0.00014619410804057493

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0160, -1.1084, -1.1323, -1.1445, -1.1522, -1.1574, -1.1610, -1.1636,
        -1.1653, -1.1666, -1.1674, -1.1680, -1.1685, -1.1687, -1.1690, -1.1691,
        -1.1692, -1.1693, -1.1693, -1.1694, -1.1694, -1.1694, -1.1694, -1.1694,
        -1.1694], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6020e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2041e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2804, -0.4480, -0.4696, -0.4799, -0.4861, -0.4903, -0.4931, -0.4951,
        -0.4964, -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6920e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.6989e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1425e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1691, -1.1692, -1.1693, -1.1693, -1.1694, -1.1694, -1.1694, -1.1694,
        -1.1694, -1.1694], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 0 	 H2 	 H2 	 3.881403822664954e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9586, -75.0030, -75.0216, -75.0324, -75.0397, -75.0449, -75.0486,
        -75.0513, -75.0532, -75.0546, -75.0555, -75.0562, -75.0567, -75.0570,
        -75.0573, -75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0577,
        -75.0578, -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2153e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2153e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0574, -75.0575, -75.0576, -75.0577, -75.0577, -75.0577, -75.0578,
        -75.0578, -75.0578, -75.0578], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 29 	 O 	 O 	 2.1141322712964963e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.3116, -188.6777, -188.5443, -188.4667, -188.4190, -188.3866,
        -188.3639, -188.3480, -188.3367, -188.3287, -188.3230, -188.3190,
        -188.3161, -188.3141, -188.3126, -188.3116, -188.3108, -188.3103,
        -188.3099, -188.3096, -188.3094, -188.3093, -188.3092, -188.3091,
        -188.3091], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8537e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7363, -37.7739, -37.7921, -37.8029, -37.8103, -37.8155, -37.8193,
        -37.8221, -37.8240, -37.8254, -37.8263, -37.8270, -37.8275, -37.8279,
        -37.8281, -37.8283, -37.8284, -37.8285, -37.8285, -37.8286, -37.8286,
        -37.8286, -37.8286, -37.8286, -37.8286], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4044e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9679, -75.0116, -75.0279, -75.0370, -75.0431, -75.0475, -75.0506,
        -75.0528, -75.0543, -75.0554, -75.0562, -75.0568, -75.0572, -75.0574,
        -75.0576, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0813e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3116, -188.3108, -188.3103, -188.3099, -188.3096, -188.3094,
        -188.3093, -188.3092, -188.3091, -188.3091], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8283, -37.8284, -37.8285, -37.8285, -37.8286, -37.8286, -37.8286,
        -37.8286, -37.8286, -37.8286], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0578, -75.0579, -75.0579, -75.0580, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 4 	 CO2 	 CO2 	 0.015545022771925302

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2245, -107.2692, -107.2351, -107.2313, -107.2279, -107.2263,
        -107.2259, -107.2261, -107.2267, -107.2273, -107.2278, -107.2283,
        -107.2286, -107.2290, -107.2294, -107.2297, -107.2300, -107.2303,
        -107.2306, -107.2308, -107.2309, -107.2311, -107.2312, -107.2313,
        -107.2314], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4333e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6706, -99.6905, -99.7022, -99.7094, -99.7145, -99.7183, -99.7210,
        -99.7230, -99.7244, -99.7255, -99.7262, -99.7267, -99.7271, -99.7273,
        -99.7275, -99.7276, -99.7277, -99.7278, -99.7279, -99.7279, -99.7279,
        -99.7279, -99.7279, -99.7279, -99.7280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6339e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4592, -7.4666, -7.4694, -7.4709, -7.4720, -7.4729, -7.4738, -7.4742,
        -7.4740, -7.4737, -7.4736, -7.4736, -7.4736, -7.4736, -7.4736, -7.4737,
        -7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737,
        -7.4738], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0975e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3304e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2297, -107.2300, -107.2303, -107.2306, -107.2308, -107.2309,
        -107.2311, -107.2312, -107.2313, -107.2314], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7276, -99.7277, -99.7278, -99.7279, -99.7279, -99.7279, -99.7279,
        -99.7279, -99.7279, -99.7280], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737, -7.4737,
        -7.4737, -7.4738], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 2 	 FLi 	 LiF 	 0.008692576219649004

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4052, -54.4674, -54.5028, -54.5244, -54.5395, -54.5503, -54.5581,
        -54.5636, -54.5676, -54.5704, -54.5724, -54.5738, -54.5748, -54.5755,
        -54.5759, -54.5763, -54.5765, -54.5767, -54.5768, -54.5769, -54.5769,
        -54.5770, -54.5770, -54.5770, -54.5771], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1886e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1886e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5763, -54.5765, -54.5767, -54.5768, -54.5769, -54.5769, -54.5770,
        -54.5770, -54.5770, -54.5771], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 27 	 N 	 N 	 3.462627622220772e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6264, -324.5686, -324.5535, -324.5458, -324.5408, -324.5375,
        -324.5352, -324.5336, -324.5324, -324.5316, -324.5311, -324.5307,
        -324.5304, -324.5302, -324.5301, -324.5300, -324.5299, -324.5298,
        -324.5298, -324.5298, -324.5298, -324.5298, -324.5298, -324.5297,
        -324.5297], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.3192e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6385e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2290, -162.2412, -162.2457, -162.2481, -162.2496, -162.2506,
        -162.2514, -162.2521, -162.2525, -162.2526, -162.2527, -162.2527,
        -162.2528, -162.2528, -162.2528, -162.2529, -162.2529, -162.2529,
        -162.2529, -162.2529, -162.2529, -162.2529, -162.2529, -162.2529,
        -162.2529], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1261e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.6388e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5300, -324.5299, -324.5298, -324.5298, -324.5298, -324.5298,
        -324.5298, -324.5298, -324.5297, -324.5297], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2529, -162.2529, -162.2529, -162.2529, -162.2529, -162.2529,
        -162.2529, -162.2529, -162.2529, -162.2529], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 11 	 Na2 	 Na2 	 2.7014308079513333e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2213, -0.4302, -0.4597, -0.4735, -0.4819, -0.4874, -0.4911, -0.4937,
        -0.4955, -0.4967, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6963e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2188e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3927e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9539, -74.9971, -75.0172, -75.0293, -75.0375, -75.0434, -75.0477,
        -75.0507, -75.0529, -75.0545, -75.0556, -75.0564, -75.0569, -75.0573,
        -75.0576, -75.0578, -75.0579, -75.0580, -75.0581, -75.0581, -75.0582,
        -75.0582, -75.0582, -75.0582, -75.0582], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0465e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4131e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4266], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.4131e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0578, -75.0579, -75.0580, -75.0581, -75.0581, -75.0582, -75.0582,
        -75.0582, -75.0582, -75.0582], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4266], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 19 	 H2O 	 OH2 	 4.382592230576886e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9716, -75.0145, -75.0299, -75.0386, -75.0443, -75.0484, -75.0513,
        -75.0533, -75.0548, -75.0558, -75.0566, -75.0571, -75.0575, -75.0577,
        -75.0579, -75.0580, -75.0581, -75.0582, -75.0582, -75.0582, -75.0583,
        -75.0583, -75.0583, -75.0583, -75.0583], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9704e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9704e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4260], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.9704e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0580, -75.0581, -75.0582, -75.0582, -75.0582, -75.0583, -75.0583,
        -75.0583, -75.0583, -75.0583], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4260], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 15 	 O3 	 O3 	 0.0002753925441848402

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6908, -199.5917, -199.5653, -199.5517, -199.5430, -199.5371,
        -199.5330, -199.5301, -199.5281, -199.5267, -199.5257, -199.5250,
        -199.5245, -199.5241, -199.5239, -199.5237, -199.5236, -199.5235,
        -199.5234, -199.5234, -199.5233, -199.5233, -199.5233, -199.5233,
        -199.5233], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2358e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4716e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6787, -99.7022, -99.7112, -99.7164, -99.7199, -99.7224, -99.7242,
        -99.7255, -99.7265, -99.7271, -99.7276, -99.7279, -99.7281, -99.7283,
        -99.7284, -99.7285, -99.7286, -99.7286, -99.7286, -99.7287, -99.7287,
        -99.7287, -99.7287, -99.7287, -99.7287], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9863e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.4736e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5237, -199.5236, -199.5235, -199.5234, -199.5234, -199.5233,
        -199.5233, -199.5233, -199.5233, -199.5233], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7285, -99.7286, -99.7286, -99.7286, -99.7287, -99.7287, -99.7287,
        -99.7287, -99.7287, -99.7287], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 6 	 F2 	 F2 	 3.906027075124777e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4078, -54.4740, -54.5079, -54.5284, -54.5424, -54.5525, -54.5597,
        -54.5649, -54.5685, -54.5711, -54.5730, -54.5743, -54.5752, -54.5758,
        -54.5762, -54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5772,
        -54.5772, -54.5772, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0232e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0232e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9620, -75.0064, -75.0242, -75.0345, -75.0414, -75.0463, -75.0498,
        -75.0523, -75.0541, -75.0554, -75.0563, -75.0569, -75.0574, -75.0577,
        -75.0579, -75.0581, -75.0582, -75.0583, -75.0583, -75.0584, -75.0584,
        -75.0584, -75.0584, -75.0584, -75.0584], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9298e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9530e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9842, -129.7500, -129.6984, -129.6774, -129.6665, -129.6595,
        -129.6549, -129.6519, -129.6499, -129.6485, -129.6476, -129.6470,
        -129.6466, -129.6463, -129.6462, -129.6460, -129.6460, -129.6459,
        -129.6459, -129.6459, -129.6458, -129.6458, -129.6458, -129.6458,
        -129.6458], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5350e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5766, -54.5768, -54.5769, -54.5770, -54.5771, -54.5772, -54.5772,
        -54.5772, -54.5773, -54.5773], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0581, -75.0582, -75.0583, -75.0583, -75.0584, -75.0584, -75.0584,
        -75.0584, -75.0584, -75.0584], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6460, -129.6460, -129.6459, -129.6459, -129.6459, -129.6458,
        -129.6458, -129.6458, -129.6458, -129.6458], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 12 	 NO 	 NO 	 6.739575474241019e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3410, -0.4644, -0.4789, -0.4859, -0.4902, -0.4931, -0.4951, -0.4964,
        -0.4974, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993, -0.4994,
        -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6984e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(6.1999e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3968e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9513, -74.9912, -75.0126, -75.0259, -75.0351, -75.0417, -75.0465,
        -75.0499, -75.0524, -75.0542, -75.0555, -75.0564, -75.0570, -75.0574,
        -75.0577, -75.0580, -75.0581, -75.0582, -75.0583, -75.0584, -75.0584,
        -75.0584, -75.0584, -75.0585, -75.0585], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9521e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4163e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6692, -75.7012, -75.7127, -75.7190, -75.7232, -75.7261, -75.7282,
        -75.7297, -75.7308, -75.7315, -75.7320, -75.7324, -75.7327, -75.7328,
        -75.7330, -75.7331, -75.7331, -75.7332, -75.7332, -75.7332, -75.7332,
        -75.7333, -75.7333, -75.7333, -75.7333], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0580, -75.0581, -75.0582, -75.0583, -75.0584, -75.0584, -75.0584,
        -75.0584, -75.0585, -75.0585], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7331, -75.7331, -75.7332, -75.7332, -75.7332, -75.7332, -75.7333,
        -75.7333, -75.7333, -75.7333], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 21 	 HO 	 OH 	 4.706159475209745e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4052, -54.4663, -54.5019, -54.5238, -54.5391, -54.5501, -54.5580,
        -54.5636, -54.5676, -54.5705, -54.5725, -54.5739, -54.5749, -54.5756,
        -54.5761, -54.5765, -54.5767, -54.5769, -54.5770, -54.5771, -54.5771,
        -54.5772, -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0720e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0720e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9590, -75.0033, -75.0220, -75.0328, -75.0402, -75.0454, -75.0492,
        -75.0519, -75.0538, -75.0552, -75.0561, -75.0568, -75.0573, -75.0577,
        -75.0579, -75.0581, -75.0582, -75.0583, -75.0583, -75.0584, -75.0584,
        -75.0584, -75.0584, -75.0584, -75.0584], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9343e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.0063e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0865], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.0063e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5765, -54.5767, -54.5769, -54.5770, -54.5771, -54.5771, -54.5772,
        -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0581, -75.0582, -75.0583, -75.0583, -75.0584, -75.0584, -75.0584,
        -75.0584, -75.0584, -75.0584], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0865], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 13 	 NO2 	 NO2 	 0.0008418629571672105

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0976, -93.5649, -93.4207, -93.3617, -93.3173, -93.2889, -93.2685,
        -93.2540, -93.2436, -93.2362, -93.2308, -93.2269, -93.2241, -93.2220,
        -93.2205, -93.2194, -93.2186, -93.2180, -93.2175, -93.2172, -93.2170,
        -93.2168, -93.2166, -93.2165, -93.2165], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.9778e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7373, -37.7756, -37.7933, -37.8037, -37.8107, -37.8158, -37.8194,
        -37.8220, -37.8239, -37.8252, -37.8261, -37.8268, -37.8272, -37.8275,
        -37.8278, -37.8279, -37.8280, -37.8281, -37.8282, -37.8282, -37.8282,
        -37.8283, -37.8283, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.6506e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2120, -0.4271, -0.4580, -0.4724, -0.4811, -0.4869, -0.4908, -0.4934,
        -0.4953, -0.4966, -0.4975, -0.4981, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6964e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2936e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4105, -54.4791, -54.5117, -54.5312, -54.5445, -54.5540, -54.5608,
        -54.5656, -54.5690, -54.5715, -54.5732, -54.5744, -54.5752, -54.5758,
        -54.5763, -54.5765, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771,
        -54.5772, -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0436e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2194, -93.2186, -93.2180, -93.2175, -93.2172, -93.2170, -93.2168,
        -93.2166, -93.2165, -93.2165], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8279, -37.8280, -37.8281, -37.8282, -37.8282, -37.8282, -37.8283,
        -37.8283, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5765, -54.5768, -54.5769, -54.5770, -54.5771, -54.5771, -54.5772,
        -54.5772, -54.5772, -54.5772], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 3 	 CHN 	 CNH 	 0.008240557467356975

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9878, -8.0306, -8.0421, -8.0481, -8.0520, -8.0546, -8.0565, -8.0578,
        -8.0587, -8.0594, -8.0598, -8.0602, -8.0604, -8.0606, -8.0607, -8.0608,
        -8.0608, -8.0608, -8.0609, -8.0609, -8.0609, -8.0609, -8.0609, -8.0609,
        -8.0609], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5463e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0926e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2811, -0.4482, -0.4697, -0.4799, -0.4862, -0.4903, -0.4931, -0.4951,
        -0.4964, -0.4974, -0.4980, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6931e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.8916e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0312e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4585, -7.4659, -7.4688, -7.4704, -7.4714, -7.4724, -7.4733, -7.4737,
        -7.4735, -7.4733, -7.4731, -7.4731, -7.4731, -7.4732, -7.4732, -7.4732,
        -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733,
        -7.4733], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0846e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6047e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2019e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0608, -8.0608, -8.0608, -8.0609, -8.0609, -8.0609, -8.0609, -8.0609,
        -8.0609, -8.0609], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4732, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733, -7.4733,
        -7.4733, -7.4733], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 10 	 HLi 	 LiH 	 4.1918877104319895e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7505, -37.7892, -37.8030, -37.8107, -37.8158, -37.8194, -37.8219,
        -37.8237, -37.8250, -37.8259, -37.8265, -37.8270, -37.8273, -37.8275,
        -37.8277, -37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8033e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8033e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8278, -37.8279, -37.8279, -37.8280, -37.8280, -37.8280, -37.8280,
        -37.8280, -37.8280, -37.8280], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 22 	 C 	 C 	 3.633592396590117e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2997, -0.4534, -0.4726, -0.4818, -0.4874, -0.4912, -0.4937, -0.4955,
        -0.4967, -0.4976, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6879e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.1661e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3758e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4049, -54.4664, -54.5019, -54.5237, -54.5389, -54.5498, -54.5576,
        -54.5632, -54.5672, -54.5701, -54.5721, -54.5735, -54.5745, -54.5752,
        -54.5757, -54.5760, -54.5762, -54.5764, -54.5765, -54.5766, -54.5767,
        -54.5767, -54.5767, -54.5768, -54.5768], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3826e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4196e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5493], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.4196e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5760, -54.5762, -54.5764, -54.5765, -54.5766, -54.5767, -54.5767,
        -54.5767, -54.5768, -54.5768], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5493], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 20 	 H3N 	 NH3 	 6.000147048764796e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2670, -0.4442, -0.4674, -0.4785, -0.4852, -0.4896, -0.4927, -0.4947,
        -0.4962, -0.4972, -0.4979, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6861e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.8411e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3722e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4156, -54.4859, -54.5167, -54.5347, -54.5470, -54.5556, -54.5618,
        -54.5662, -54.5693, -54.5715, -54.5731, -54.5742, -54.5749, -54.5755,
        -54.5758, -54.5761, -54.5763, -54.5764, -54.5765, -54.5766, -54.5766,
        -54.5767, -54.5767, -54.5767, -54.5767], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3556e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4158e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2133], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.4158e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5761, -54.5763, -54.5764, -54.5765, -54.5766, -54.5766, -54.5767,
        -54.5767, -54.5767, -54.5767], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2133], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 14 	 HN 	 NH 	 2.3313600012921962e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6709, -99.6907, -99.7023, -99.7095, -99.7146, -99.7183, -99.7210,
        -99.7230, -99.7244, -99.7255, -99.7262, -99.7267, -99.7271, -99.7273,
        -99.7275, -99.7276, -99.7277, -99.7278, -99.7278, -99.7279, -99.7279,
        -99.7279, -99.7279, -99.7279, -99.7279], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6402e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6402e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7276, -99.7277, -99.7278, -99.7278, -99.7279, -99.7279, -99.7279,
        -99.7279, -99.7279, -99.7279], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 24 	 F 	 F 	 8.314530295933256e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4055, -54.4688, -54.5038, -54.5251, -54.5399, -54.5505, -54.5581,
        -54.5635, -54.5674, -54.5702, -54.5721, -54.5735, -54.5744, -54.5751,
        -54.5756, -54.5759, -54.5761, -54.5763, -54.5764, -54.5765, -54.5766,
        -54.5766, -54.5766, -54.5766, -54.5767], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.4502e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.4502e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9499, -74.9859, -75.0081, -75.0222, -75.0322, -75.0394, -75.0446,
        -75.0484, -75.0511, -75.0531, -75.0544, -75.0554, -75.0561, -75.0566,
        -75.0570, -75.0572, -75.0574, -75.0575, -75.0576, -75.0576, -75.0577,
        -75.0577, -75.0577, -75.0577, -75.0578], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.2825e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7327e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6632], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(6.7327e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5759, -54.5761, -54.5763, -54.5764, -54.5765, -54.5766, -54.5766,
        -54.5766, -54.5766, -54.5767], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0572, -75.0574, -75.0575, -75.0576, -75.0576, -75.0577, -75.0577,
        -75.0577, -75.0577, -75.0578], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6632], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 16 	 N2O 	 N2O 	 0.00041498474598936736

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7566, -37.7935, -37.8059, -37.8127, -37.8172, -37.8203, -37.8226,
        -37.8242, -37.8253, -37.8261, -37.8266, -37.8270, -37.8273, -37.8275,
        -37.8276, -37.8277, -37.8278, -37.8278, -37.8279, -37.8279, -37.8279,
        -37.8279, -37.8279, -37.8279, -37.8279], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8825e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8825e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2355, -0.4346, -0.4621, -0.4751, -0.4829, -0.4881, -0.4916, -0.4940,
        -0.4957, -0.4968, -0.4977, -0.4982, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6845e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1768e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4179e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8272], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.4179e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8277, -37.8278, -37.8278, -37.8279, -37.8279, -37.8279, -37.8279,
        -37.8279, -37.8279, -37.8279], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8272], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 8 	 17 	 CH3 	 CH3 	 0.00010728501637566745

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5602, -109.9035, -109.7517, -109.6708, -109.6187, -109.5832,
        -109.5584, -109.5411, -109.5289, -109.5204, -109.5145, -109.5103,
        -109.5074, -109.5053, -109.5039, -109.5029, -109.5022, -109.5017,
        -109.5013, -109.5011, -109.5009, -109.5008, -109.5007, -109.5007,
        -109.5006], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2958e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4126, -54.4821, -54.5139, -54.5326, -54.5454, -54.5545, -54.5610,
        -54.5656, -54.5689, -54.5712, -54.5729, -54.5740, -54.5748, -54.5754,
        -54.5758, -54.5761, -54.5763, -54.5764, -54.5765, -54.5766, -54.5766,
        -54.5766, -54.5767, -54.5767, -54.5767], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3716e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5029, -109.5022, -109.5017, -109.5013, -109.5011, -109.5009,
        -109.5008, -109.5007, -109.5007, -109.5006], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5761, -54.5763, -54.5764, -54.5765, -54.5766, -54.5766, -54.5766,
        -54.5767, -54.5767, -54.5767], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 8 	 1 	 N2 	 N2 	 6.523724000115812e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e08)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e08/2022-11-29_10:09:21.572573_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e08/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 8 || ,[' rho : 4.650737', ' ae : 48.503296', ' E : 1.893606'] ,|| total loss 39.736337 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6830, -99.7056, -99.7134, -99.7178, -99.7208, -99.7229, -99.7244,
        -99.7255, -99.7263, -99.7268, -99.7272, -99.7275, -99.7277, -99.7278,
        -99.7279, -99.7279, -99.7280, -99.7280, -99.7281, -99.7281, -99.7281,
        -99.7281, -99.7281, -99.7281, -99.7281], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4368e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4368e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7279, -99.7280, -99.7280, -99.7281, -99.7281, -99.7281, -99.7281,
        -99.7281, -99.7281, -99.7281], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 24 	 F 	 F 	 7.846820516473776e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9543, -74.9974, -75.0174, -75.0293, -75.0375, -75.0433, -75.0475,
        -75.0506, -75.0527, -75.0543, -75.0554, -75.0561, -75.0567, -75.0571,
        -75.0573, -75.0575, -75.0577, -75.0578, -75.0578, -75.0579, -75.0579,
        -75.0579, -75.0579, -75.0579, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1576e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1576e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0575, -75.0577, -75.0578, -75.0578, -75.0579, -75.0579, -75.0579,
        -75.0579, -75.0579, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 29 	 O 	 O 	 2.045592701681847e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7389, -37.7780, -37.7950, -37.8049, -37.8116, -37.8164, -37.8198,
        -37.8222, -37.8240, -37.8252, -37.8261, -37.8267, -37.8271, -37.8274,
        -37.8276, -37.8278, -37.8279, -37.8280, -37.8280, -37.8281, -37.8281,
        -37.8281, -37.8281, -37.8281, -37.8281], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7642e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.7642e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2395, -0.4359, -0.4628, -0.4755, -0.4832, -0.4883, -0.4917, -0.4941,
        -0.4957, -0.4969, -0.4977, -0.4983, -0.4987, -0.4989, -0.4991, -0.4993,
        -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6884e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1456e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4245e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8275], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.4245e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8278, -37.8279, -37.8280, -37.8280, -37.8281, -37.8281, -37.8281,
        -37.8281, -37.8281, -37.8281], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4993, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8275], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 17 	 CH3 	 CH3 	 0.00010935925141544203

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6187, -199.5619, -199.5472, -199.5396, -199.5348, -199.5315,
        -199.5293, -199.5277, -199.5265, -199.5258, -199.5252, -199.5248,
        -199.5245, -199.5244, -199.5242, -199.5241, -199.5241, -199.5240,
        -199.5240, -199.5239, -199.5239, -199.5239, -199.5239, -199.5239,
        -199.5239], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2507e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5014e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6809, -99.7041, -99.7125, -99.7174, -99.7207, -99.7230, -99.7247,
        -99.7259, -99.7268, -99.7274, -99.7278, -99.7281, -99.7283, -99.7285,
        -99.7286, -99.7287, -99.7287, -99.7288, -99.7288, -99.7288, -99.7288,
        -99.7288, -99.7288, -99.7288, -99.7289], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8667e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5033e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5241, -199.5241, -199.5240, -199.5240, -199.5239, -199.5239,
        -199.5239, -199.5239, -199.5239, -199.5239], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7287, -99.7287, -99.7288, -99.7288, -99.7288, -99.7288, -99.7288,
        -99.7288, -99.7288, -99.7289], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 6 	 F2 	 F2 	 4.507194777433965e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7524, -37.7907, -37.8041, -37.8115, -37.8165, -37.8200, -37.8224,
        -37.8242, -37.8254, -37.8263, -37.8269, -37.8273, -37.8277, -37.8279,
        -37.8280, -37.8281, -37.8282, -37.8283, -37.8283, -37.8283, -37.8283,
        -37.8283, -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5560e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5560e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8281, -37.8282, -37.8283, -37.8283, -37.8283, -37.8283, -37.8283,
        -37.8284, -37.8284, -37.8284], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 22 	 C 	 C 	 3.447019398063608e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4111, -54.4796, -54.5121, -54.5315, -54.5448, -54.5543, -54.5611,
        -54.5659, -54.5693, -54.5717, -54.5735, -54.5747, -54.5755, -54.5761,
        -54.5765, -54.5768, -54.5770, -54.5772, -54.5773, -54.5773, -54.5774,
        -54.5774, -54.5774, -54.5775, -54.5775], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.8752e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.8752e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9567, -75.0004, -75.0199, -75.0314, -75.0392, -75.0448, -75.0489,
        -75.0518, -75.0538, -75.0553, -75.0564, -75.0571, -75.0576, -75.0580,
        -75.0583, -75.0584, -75.0586, -75.0587, -75.0587, -75.0588, -75.0588,
        -75.0588, -75.0588, -75.0588, -75.0588], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7710e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6462e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0078, -129.7565, -129.7009, -129.6789, -129.6677, -129.6605,
        -129.6559, -129.6528, -129.6508, -129.6494, -129.6485, -129.6479,
        -129.6475, -129.6473, -129.6471, -129.6470, -129.6469, -129.6468,
        -129.6468, -129.6468, -129.6468, -129.6468, -129.6468, -129.6468,
        -129.6468], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5525e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5768, -54.5770, -54.5772, -54.5773, -54.5773, -54.5774, -54.5774,
        -54.5774, -54.5775, -54.5775], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0584, -75.0586, -75.0587, -75.0587, -75.0588, -75.0588, -75.0588,
        -75.0588, -75.0588, -75.0588], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6470, -129.6469, -129.6468, -129.6468, -129.6468, -129.6468,
        -129.6468, -129.6468, -129.6468, -129.6468], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 12 	 NO 	 NO 	 9.548178604406455e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9590, -75.0031, -75.0220, -75.0330, -75.0405, -75.0458, -75.0496,
        -75.0524, -75.0543, -75.0557, -75.0567, -75.0574, -75.0579, -75.0583,
        -75.0585, -75.0587, -75.0588, -75.0589, -75.0589, -75.0590, -75.0590,
        -75.0590, -75.0591, -75.0591, -75.0591], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6771e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6771e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4292], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.6771e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0587, -75.0588, -75.0589, -75.0589, -75.0590, -75.0590, -75.0590,
        -75.0591, -75.0591, -75.0591], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4292], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 15 	 O3 	 O3 	 0.00030334482951337285

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.4073, -188.7167, -188.5713, -188.4865, -188.4344, -188.3988,
        -188.3740, -188.3566, -188.3443, -188.3355, -188.3293, -188.3249,
        -188.3218, -188.3196, -188.3180, -188.3168, -188.3160, -188.3154,
        -188.3150, -188.3147, -188.3145, -188.3143, -188.3142, -188.3142,
        -188.3141], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8374e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7373, -37.7752, -37.7931, -37.8036, -37.8108, -37.8160, -37.8197,
        -37.8223, -37.8242, -37.8256, -37.8265, -37.8272, -37.8277, -37.8280,
        -37.8282, -37.8284, -37.8285, -37.8286, -37.8286, -37.8287, -37.8287,
        -37.8287, -37.8287, -37.8287, -37.8288], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.3165e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9516, -74.9890, -75.0109, -75.0247, -75.0344, -75.0414, -75.0465,
        -75.0502, -75.0528, -75.0547, -75.0561, -75.0570, -75.0577, -75.0582,
        -75.0585, -75.0587, -75.0589, -75.0590, -75.0591, -75.0591, -75.0592,
        -75.0592, -75.0592, -75.0593, -75.0593], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6347e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3168, -188.3160, -188.3154, -188.3150, -188.3147, -188.3145,
        -188.3143, -188.3142, -188.3142, -188.3141], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8284, -37.8285, -37.8286, -37.8286, -37.8287, -37.8287, -37.8287,
        -37.8287, -37.8287, -37.8288], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0587, -75.0589, -75.0590, -75.0591, -75.0591, -75.0592, -75.0592,
        -75.0592, -75.0593, -75.0593], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 4 	 CO2 	 CO2 	 0.015242263427959316

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4078, -54.4730, -54.5072, -54.5279, -54.5422, -54.5524, -54.5598,
        -54.5650, -54.5688, -54.5714, -54.5733, -54.5746, -54.5755, -54.5762,
        -54.5766, -54.5769, -54.5772, -54.5773, -54.5774, -54.5775, -54.5776,
        -54.5776, -54.5776, -54.5776, -54.5777], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.7798e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.7798e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9730, -75.0156, -75.0310, -75.0396, -75.0453, -75.0493, -75.0522,
        -75.0542, -75.0557, -75.0567, -75.0574, -75.0579, -75.0583, -75.0586,
        -75.0587, -75.0589, -75.0590, -75.0590, -75.0591, -75.0591, -75.0591,
        -75.0591, -75.0591, -75.0591, -75.0591], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6244e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4042e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6670], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.4042e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5769, -54.5772, -54.5773, -54.5774, -54.5775, -54.5776, -54.5776,
        -54.5776, -54.5776, -54.5777], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0589, -75.0590, -75.0590, -75.0591, -75.0591, -75.0591, -75.0591,
        -75.0591, -75.0591, -75.0591], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6670], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 16 	 N2O 	 N2O 	 0.0004300019647272663

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2332, -162.2449, -162.2489, -162.2510, -162.2523, -162.2532,
        -162.2540, -162.2545, -162.2548, -162.2549, -162.2550, -162.2550,
        -162.2551, -162.2551, -162.2551, -162.2551, -162.2552, -162.2552,
        -162.2552, -162.2552, -162.2552, -162.2552, -162.2552, -162.2552,
        -162.2552], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5507e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.5507e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2551, -162.2552, -162.2552, -162.2552, -162.2552, -162.2552,
        -162.2552, -162.2552, -162.2552, -162.2552], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 28 	 Na 	 Na 	 8.09063251132545e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6373, -324.5755, -324.5594, -324.5511, -324.5459, -324.5423,
        -324.5399, -324.5381, -324.5369, -324.5361, -324.5355, -324.5351,
        -324.5348, -324.5346, -324.5344, -324.5343, -324.5342, -324.5342,
        -324.5342, -324.5341, -324.5341, -324.5341, -324.5341, -324.5341,
        -324.5341], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.4111e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8222e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2354, -162.2463, -162.2497, -162.2515, -162.2526, -162.2535,
        -162.2542, -162.2546, -162.2548, -162.2549, -162.2549, -162.2550,
        -162.2550, -162.2550, -162.2550, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.4745e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8222e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5343, -324.5342, -324.5342, -324.5342, -324.5341, -324.5341,
        -324.5341, -324.5341, -324.5341, -324.5341], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 11 	 Na2 	 Na2 	 2.7479775582406326e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.3960, -73.2879, -75.1454, -75.8872, -76.3225, -76.6093, -76.8053,
        -76.9411, -77.0356, -77.1016, -77.1478, -77.1801, -77.2028, -77.2187,
        -77.2298, -77.2377, -77.2431, -77.2470, -77.2497, -77.2515, -77.2529,
        -77.2538, -77.2544, -77.2549, -77.2552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8338e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7349, -37.7701, -37.7890, -37.8005, -37.8084, -37.8141, -37.8182,
        -37.8211, -37.8232, -37.8247, -37.8258, -37.8265, -37.8270, -37.8274,
        -37.8277, -37.8278, -37.8280, -37.8281, -37.8281, -37.8282, -37.8282,
        -37.8282, -37.8282, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.7004e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2876, -0.4501, -0.4707, -0.4806, -0.4866, -0.4906, -0.4933, -0.4952,
        -0.4965, -0.4974, -0.4981, -0.4985, -0.4988, -0.4991, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6963e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(8.7719e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2377, -77.2431, -77.2470, -77.2497, -77.2515, -77.2529, -77.2538,
        -77.2544, -77.2549, -77.2552], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8278, -37.8280, -37.8281, -37.8281, -37.8282, -37.8282, -37.8282,
        -37.8282, -37.8283, -37.8283], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 7 	 C2H2 	 C2H2 	 0.0005123004602418116

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9362, -8.0098, -8.0291, -8.0391, -8.0456, -8.0501, -8.0533, -8.0555,
        -8.0571, -8.0582, -8.0590, -8.0595, -8.0599, -8.0602, -8.0604, -8.0605,
        -8.0606, -8.0607, -8.0607, -8.0608, -8.0608, -8.0608, -8.0608, -8.0608,
        -8.0608], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5125e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0250e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2730, -0.4459, -0.4684, -0.4791, -0.4856, -0.4899, -0.4929, -0.4949,
        -0.4963, -0.4973, -0.4980, -0.4984, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6953e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.5588e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9641e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4571, -7.4638, -7.4673, -7.4693, -7.4706, -7.4715, -7.4725, -7.4733,
        -7.4736, -7.4733, -7.4731, -7.4730, -7.4730, -7.4730, -7.4730, -7.4731,
        -7.4731, -7.4731, -7.4731, -7.4731, -7.4732, -7.4732, -7.4732, -7.4732,
        -7.4732], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0805e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7081e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.1267e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0605, -8.0606, -8.0607, -8.0607, -8.0608, -8.0608, -8.0608, -8.0608,
        -8.0608, -8.0608], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4731, -7.4731, -7.4731, -7.4731, -7.4731, -7.4732, -7.4732, -7.4732,
        -7.4732, -7.4732], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 10 	 HLi 	 LiH 	 4.068506747106641e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3291, -0.4613, -0.4771, -0.4847, -0.4894, -0.4925, -0.4947, -0.4961,
        -0.4972, -0.4979, -0.4984, -0.4987, -0.4990, -0.4992, -0.4993, -0.4994,
        -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4996,
        -0.4996], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6943e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(7.0771e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3887e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9511, -74.9869, -75.0091, -75.0232, -75.0331, -75.0403, -75.0455,
        -75.0493, -75.0520, -75.0539, -75.0553, -75.0563, -75.0570, -75.0575,
        -75.0578, -75.0581, -75.0583, -75.0584, -75.0585, -75.0585, -75.0586,
        -75.0586, -75.0586, -75.0586, -75.0586], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8935e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4076e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6503, -75.6863, -75.7025, -75.7118, -75.7180, -75.7225, -75.7257,
        -75.7280, -75.7296, -75.7308, -75.7316, -75.7322, -75.7326, -75.7329,
        -75.7331, -75.7332, -75.7333, -75.7334, -75.7334, -75.7335, -75.7335,
        -75.7335, -75.7335, -75.7335, -75.7336], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4996, -0.4996], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0581, -75.0583, -75.0584, -75.0585, -75.0585, -75.0586, -75.0586,
        -75.0586, -75.0586, -75.0586], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7332, -75.7333, -75.7334, -75.7334, -75.7335, -75.7335, -75.7335,
        -75.7335, -75.7335, -75.7336], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 21 	 HO 	 OH 	 5.005010413728797e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3106, -107.2965, -107.2610, -107.2493, -107.2419, -107.2376,
        -107.2351, -107.2337, -107.2329, -107.2323, -107.2320, -107.2319,
        -107.2319, -107.2320, -107.2322, -107.2324, -107.2326, -107.2328,
        -107.2329, -107.2331, -107.2332, -107.2333, -107.2334, -107.2335,
        -107.2335], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4947e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6793, -99.7027, -99.7116, -99.7168, -99.7204, -99.7229, -99.7247,
        -99.7260, -99.7270, -99.7276, -99.7281, -99.7284, -99.7286, -99.7288,
        -99.7289, -99.7290, -99.7291, -99.7291, -99.7291, -99.7292, -99.7292,
        -99.7292, -99.7292, -99.7292, -99.7292], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6252e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4597, -7.4670, -7.4694, -7.4707, -7.4717, -7.4727, -7.4734, -7.4734,
        -7.4731, -7.4729, -7.4729, -7.4729, -7.4729, -7.4729, -7.4730, -7.4730,
        -7.4730, -7.4730, -7.4730, -7.4730, -7.4731, -7.4731, -7.4731, -7.4731,
        -7.4731], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0736e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7797e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2324, -107.2326, -107.2328, -107.2329, -107.2331, -107.2332,
        -107.2333, -107.2334, -107.2335, -107.2335], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7290, -99.7291, -99.7291, -99.7291, -99.7292, -99.7292, -99.7292,
        -99.7292, -99.7292, -99.7292], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4731, -7.4731, -7.4731,
        -7.4731, -7.4731], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 2 	 FLi 	 LiF 	 0.008548375340614946

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4604, -7.4674, -7.4697, -7.4709, -7.4719, -7.4728, -7.4734, -7.4733,
        -7.4730, -7.4729, -7.4728, -7.4728, -7.4729, -7.4729, -7.4729, -7.4729,
        -7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730,
        -7.4730], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0713e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8141e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.1445e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4729, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730, -7.4730,
        -7.4730, -7.4730], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 26 	 Li 	 Li 	 5.938152229154326e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.9183, -109.4902, -109.5487, -109.5379, -109.5262, -109.5180,
        -109.5124, -109.5087, -109.5064, -109.5048, -109.5037, -109.5031,
        -109.5026, -109.5023, -109.5021, -109.5020, -109.5019, -109.5018,
        -109.5018, -109.5018, -109.5017, -109.5017, -109.5017, -109.5017,
        -109.5017], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2907e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4058, -54.4681, -54.5032, -54.5247, -54.5397, -54.5504, -54.5581,
        -54.5636, -54.5675, -54.5703, -54.5723, -54.5737, -54.5747, -54.5753,
        -54.5758, -54.5762, -54.5764, -54.5766, -54.5767, -54.5768, -54.5768,
        -54.5769, -54.5769, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2746e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5020, -109.5019, -109.5018, -109.5018, -109.5018, -109.5017,
        -109.5017, -109.5017, -109.5017, -109.5017], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5762, -54.5764, -54.5766, -54.5767, -54.5768, -54.5768, -54.5769,
        -54.5769, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 1 	 N2 	 N2 	 6.079660369343225e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0997, -460.1310, -460.1423, -460.1487, -460.1531, -460.1563,
        -460.1586, -460.1602, -460.1614, -460.1623, -460.1629, -460.1633,
        -460.1636, -460.1638, -460.1639, -460.1640, -460.1641, -460.1642,
        -460.1642, -460.1642, -460.1643, -460.1643, -460.1643, -460.1643,
        -460.1643], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8570e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.8570e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1640, -460.1641, -460.1642, -460.1642, -460.1642, -460.1643,
        -460.1643, -460.1643, -460.1643, -460.1643], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 23 	 Cl 	 Cl 	 6.194564783382412e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4775, -920.4457, -920.4381, -920.4340, -920.4314, -920.4296,
        -920.4283, -920.4275, -920.4268, -920.4264, -920.4261, -920.4258,
        -920.4257, -920.4256, -920.4255, -920.4255, -920.4254, -920.4254,
        -920.4254, -920.4254, -920.4254, -920.4253, -920.4253, -920.4253,
        -920.4253], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7692e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5384e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1196, -460.1422, -460.1490, -460.1527, -460.1552, -460.1569,
        -460.1581, -460.1590, -460.1596, -460.1601, -460.1604, -460.1606,
        -460.1607, -460.1609, -460.1609, -460.1610, -460.1610, -460.1610,
        -460.1611, -460.1611, -460.1611, -460.1611, -460.1611, -460.1611,
        -460.1611], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2073e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5505e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4255, -920.4254, -920.4254, -920.4254, -920.4254, -920.4254,
        -920.4253, -920.4253, -920.4253, -920.4253], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1610, -460.1610, -460.1610, -460.1611, -460.1611, -460.1611,
        -460.1611, -460.1611, -460.1611, -460.1611], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 5 	 Cl2 	 Cl2 	 1.726153913693104e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4230, -54.4935, -54.5219, -54.5382, -54.5492, -54.5570, -54.5625,
        -54.5664, -54.5691, -54.5711, -54.5725, -54.5734, -54.5741, -54.5746,
        -54.5749, -54.5751, -54.5753, -54.5754, -54.5755, -54.5756, -54.5756,
        -54.5756, -54.5757, -54.5757, -54.5757], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0516e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0516e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5751, -54.5753, -54.5754, -54.5755, -54.5756, -54.5756, -54.5756,
        -54.5757, -54.5757, -54.5757], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 27 	 N 	 N 	 4.28555002968334e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2224, -0.4305, -0.4598, -0.4736, -0.4819, -0.4873, -0.4911, -0.4936,
        -0.4954, -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6577e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3728e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3154e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4207, -54.4913, -54.5202, -54.5369, -54.5481, -54.5561, -54.5617,
        -54.5657, -54.5686, -54.5706, -54.5720, -54.5730, -54.5737, -54.5741,
        -54.5745, -54.5747, -54.5749, -54.5750, -54.5751, -54.5752, -54.5752,
        -54.5752, -54.5752, -54.5753, -54.5753], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3575e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3690e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2119], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.3690e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5747, -54.5749, -54.5750, -54.5751, -54.5752, -54.5752, -54.5752,
        -54.5752, -54.5753, -54.5753], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2119], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 14 	 HN 	 NH 	 2.4073197170062698e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4258, -54.4959, -54.5234, -54.5391, -54.5496, -54.5570, -54.5623,
        -54.5660, -54.5687, -54.5705, -54.5718, -54.5728, -54.5734, -54.5739,
        -54.5742, -54.5744, -54.5746, -54.5747, -54.5747, -54.5748, -54.5748,
        -54.5749, -54.5749, -54.5749, -54.5749], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6181e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.6181e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9485, -74.9859, -75.0078, -75.0215, -75.0311, -75.0381, -75.0431,
        -75.0468, -75.0494, -75.0513, -75.0526, -75.0536, -75.0543, -75.0547,
        -75.0551, -75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557,
        -75.0558, -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2569e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.8751e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0807], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(8.8751e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5744, -54.5746, -54.5747, -54.5747, -54.5748, -54.5748, -54.5749,
        -54.5749, -54.5749, -54.5749], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0553, -75.0555, -75.0556, -75.0557, -75.0557, -75.0557, -75.0558,
        -75.0558, -75.0558, -75.0558], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0807], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 13 	 NO2 	 NO2 	 0.000944727433664678

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7553, -37.7920, -37.8042, -37.8110, -37.8155, -37.8186, -37.8208,
        -37.8224, -37.8235, -37.8243, -37.8248, -37.8252, -37.8255, -37.8257,
        -37.8258, -37.8259, -37.8260, -37.8260, -37.8260, -37.8261, -37.8261,
        -37.8261, -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3765e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3765e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2826, -0.4486, -0.4699, -0.4800, -0.4862, -0.4903, -0.4931, -0.4950,
        -0.4964, -0.4973, -0.4980, -0.4984, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6444e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0505e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3526e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1411], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3526e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8259, -37.8260, -37.8260, -37.8260, -37.8261, -37.8261, -37.8261,
        -37.8261, -37.8261, -37.8261], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1411], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 18 	 CH2 	 CH2 	 0.00015403472673308394

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2181, -0.4290, -0.4590, -0.4730, -0.4815, -0.4871, -0.4909, -0.4935,
        -0.4953, -0.4966, -0.4974, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6383e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4597e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2768e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9495, -74.9909, -75.0116, -75.0242, -75.0329, -75.0392, -75.0437,
        -75.0470, -75.0493, -75.0510, -75.0522, -75.0530, -75.0536, -75.0540,
        -75.0543, -75.0545, -75.0547, -75.0548, -75.0549, -75.0549, -75.0549,
        -75.0550, -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6999e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3138e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4234], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3138e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0545, -75.0547, -75.0548, -75.0549, -75.0549, -75.0549, -75.0550,
        -75.0550, -75.0550, -75.0550], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4234], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 19 	 H2O 	 OH2 	 3.5867642330733783e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9307, -93.4927, -93.3801, -93.3301, -93.2946, -93.2714, -93.2548,
        -93.2431, -93.2346, -93.2286, -93.2242, -93.2211, -93.2188, -93.2171,
        -93.2159, -93.2150, -93.2143, -93.2138, -93.2135, -93.2132, -93.2130,
        -93.2128, -93.2127, -93.2126, -93.2126], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8996e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7325, -37.7673, -37.7863, -37.7978, -37.8057, -37.8114, -37.8155,
        -37.8185, -37.8206, -37.8221, -37.8232, -37.8239, -37.8244, -37.8248,
        -37.8251, -37.8253, -37.8254, -37.8255, -37.8255, -37.8256, -37.8256,
        -37.8256, -37.8257, -37.8257, -37.8257], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8485e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3050, -0.4548, -0.4734, -0.4823, -0.4877, -0.4913, -0.4938, -0.4955,
        -0.4967, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6334e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7221e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4025, -54.4629, -54.4985, -54.5204, -54.5357, -54.5467, -54.5547,
        -54.5603, -54.5644, -54.5672, -54.5692, -54.5707, -54.5717, -54.5724,
        -54.5729, -54.5732, -54.5735, -54.5736, -54.5738, -54.5738, -54.5739,
        -54.5739, -54.5740, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4686e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2150, -93.2143, -93.2138, -93.2135, -93.2132, -93.2130, -93.2128,
        -93.2127, -93.2126, -93.2126], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8253, -37.8254, -37.8255, -37.8255, -37.8256, -37.8256, -37.8256,
        -37.8257, -37.8257, -37.8257], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5732, -54.5735, -54.5736, -54.5738, -54.5738, -54.5739, -54.5739,
        -54.5740, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 3 	 CHN 	 CNH 	 0.00806388313608138

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.7540, -113.4285, -113.3507, -113.3093, -113.2843, -113.2670,
        -113.2550, -113.2465, -113.2406, -113.2365, -113.2336, -113.2316,
        -113.2301, -113.2291, -113.2285, -113.2280, -113.2276, -113.2274,
        -113.2272, -113.2271, -113.2270, -113.2270, -113.2269, -113.2269,
        -113.2269], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4677e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7514, -37.7891, -37.8021, -37.8093, -37.8140, -37.8174, -37.8197,
        -37.8214, -37.8226, -37.8234, -37.8240, -37.8244, -37.8247, -37.8249,
        -37.8251, -37.8252, -37.8253, -37.8253, -37.8253, -37.8254, -37.8254,
        -37.8254, -37.8254, -37.8254, -37.8254], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.0053e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9551, -74.9991, -75.0177, -75.0285, -75.0359, -75.0411, -75.0449,
        -75.0476, -75.0495, -75.0509, -75.0519, -75.0526, -75.0530, -75.0534,
        -75.0536, -75.0538, -75.0539, -75.0540, -75.0540, -75.0541, -75.0541,
        -75.0541, -75.0541, -75.0542, -75.0542], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1888e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2280, -113.2276, -113.2274, -113.2272, -113.2271, -113.2270,
        -113.2270, -113.2269, -113.2269, -113.2269], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8252, -37.8253, -37.8253, -37.8253, -37.8254, -37.8254, -37.8254,
        -37.8254, -37.8254, -37.8254], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0538, -75.0539, -75.0540, -75.0540, -75.0541, -75.0541, -75.0541,
        -75.0541, -75.0542, -75.0542], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 9 	 8 	 CO 	 OC 	 0.0010456414292548373

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2195, -0.4295, -0.4592, -0.4732, -0.4816, -0.4871, -0.4909, -0.4935,
        -0.4953, -0.4966, -0.4974, -0.4980, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6187e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5132e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2376e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4237, -54.4938, -54.5214, -54.5372, -54.5478, -54.5553, -54.5606,
        -54.5643, -54.5670, -54.5688, -54.5702, -54.5711, -54.5717, -54.5722,
        -54.5725, -54.5727, -54.5729, -54.5730, -54.5731, -54.5731, -54.5732,
        -54.5732, -54.5732, -54.5732, -54.5733], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9671e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3073e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5453], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3073e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5727, -54.5729, -54.5730, -54.5731, -54.5731, -54.5732, -54.5732,
        -54.5732, -54.5732, -54.5733], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5453], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 20 	 H3N 	 NH3 	 7.079947271678256e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2340, -0.4341, -0.4618, -0.4748, -0.4827, -0.4879, -0.4914, -0.4939,
        -0.4955, -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6125e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4342e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2251e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 25 	 H 	 H 	 7.509401519122245e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0301, -1.1135, -1.1351, -1.1462, -1.1531, -1.1579, -1.1611, -1.1634,
        -1.1650, -1.1661, -1.1669, -1.1675, -1.1679, -1.1681, -1.1683, -1.1684,
        -1.1685, -1.1686, -1.1686, -1.1687, -1.1687, -1.1687, -1.1687, -1.1687,
        -1.1687], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5322e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0644e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3236, -0.4598, -0.4762, -0.4841, -0.4889, -0.4922, -0.4944, -0.4959,
        -0.4970, -0.4977, -0.4982, -0.4986, -0.4989, -0.4990, -0.4992, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6070e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.7246e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9858e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1684, -1.1685, -1.1686, -1.1686, -1.1687, -1.1687, -1.1687, -1.1687,
        -1.1687, -1.1687], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 0 	 H2 	 H2 	 4.692480219889062e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7431, -460.7843, -460.7959, -460.8019, -460.8057, -460.8082,
        -460.8100, -460.8113, -460.8121, -460.8128, -460.8132, -460.8135,
        -460.8137, -460.8138, -460.8139, -460.8140, -460.8141, -460.8141,
        -460.8141, -460.8141, -460.8142, -460.8142, -460.8142, -460.8142,
        -460.8142], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8570e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7141e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0769, -460.1078, -460.1189, -460.1252, -460.1295, -460.1326,
        -460.1349, -460.1365, -460.1376, -460.1385, -460.1390, -460.1395,
        -460.1398, -460.1400, -460.1401, -460.1402, -460.1403, -460.1403,
        -460.1404, -460.1404, -460.1404, -460.1404, -460.1404, -460.1404,
        -460.1404], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1712e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7183e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2961, -0.4524, -0.4720, -0.4813, -0.4871, -0.4909, -0.4935, -0.4953,
        -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6016e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1145e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8140, -460.8141, -460.8141, -460.8141, -460.8141, -460.8142,
        -460.8142, -460.8142, -460.8142, -460.8142], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1402, -460.1403, -460.1403, -460.1404, -460.1404, -460.1404,
        -460.1404, -460.1404, -460.1404, -460.1404], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 9 	 9 	 HCl 	 ClH 	 2.217269220905446e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e09)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e09/2022-11-29_10:09:21.572573_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e09/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 9 || ,[' rho : 4.644432', ' ae : 48.085445', ' E : 2.221899'] ,|| total loss 39.434339 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2179, -107.2624, -107.2279, -107.2242, -107.2210, -107.2193,
        -107.2190, -107.2192, -107.2197, -107.2203, -107.2208, -107.2212,
        -107.2216, -107.2220, -107.2223, -107.2227, -107.2230, -107.2233,
        -107.2235, -107.2237, -107.2239, -107.2241, -107.2242, -107.2243,
        -107.2244], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.3896e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6660, -99.6879, -99.6986, -99.7050, -99.7095, -99.7127, -99.7151,
        -99.7168, -99.7180, -99.7189, -99.7195, -99.7200, -99.7203, -99.7205,
        -99.7207, -99.7208, -99.7208, -99.7209, -99.7209, -99.7210, -99.7210,
        -99.7210, -99.7210, -99.7210, -99.7210], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1969e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4595, -7.4664, -7.4687, -7.4699, -7.4708, -7.4718, -7.4723, -7.4721,
        -7.4719, -7.4717, -7.4717, -7.4717, -7.4717, -7.4718, -7.4718, -7.4718,
        -7.4718, -7.4719, -7.4719, -7.4719, -7.4719, -7.4719, -7.4719, -7.4719,
        -7.4719], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.9386e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7115e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2227, -107.2230, -107.2233, -107.2235, -107.2237, -107.2239,
        -107.2241, -107.2242, -107.2243, -107.2244], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7208, -99.7208, -99.7209, -99.7209, -99.7210, -99.7210, -99.7210,
        -99.7210, -99.7210, -99.7210], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4718, -7.4718, -7.4719, -7.4719, -7.4719, -7.4719, -7.4719, -7.4719,
        -7.4719, -7.4719], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 2 	 FLi 	 LiF 	 0.008531254784210384

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4067, -54.4753, -54.5075, -54.5267, -54.5398, -54.5491, -54.5558,
        -54.5605, -54.5639, -54.5663, -54.5680, -54.5691, -54.5700, -54.5706,
        -54.5710, -54.5713, -54.5715, -54.5716, -54.5717, -54.5718, -54.5718,
        -54.5719, -54.5719, -54.5719, -54.5719], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2372e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2372e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9648, -75.0076, -75.0232, -75.0319, -75.0378, -75.0419, -75.0448,
        -75.0469, -75.0484, -75.0495, -75.0502, -75.0508, -75.0511, -75.0514,
        -75.0516, -75.0517, -75.0518, -75.0519, -75.0519, -75.0519, -75.0519,
        -75.0520, -75.0520, -75.0520, -75.0520], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.6356e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3873e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6499], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.3873e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5713, -54.5715, -54.5716, -54.5717, -54.5718, -54.5718, -54.5719,
        -54.5719, -54.5719, -54.5719], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0517, -75.0518, -75.0519, -75.0519, -75.0519, -75.0519, -75.0520,
        -75.0520, -75.0520, -75.0520], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6499], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 16 	 N2O 	 N2O 	 0.000496586608610889

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9669, -8.0208, -8.0354, -8.0429, -8.0478, -8.0512, -8.0536, -8.0552,
        -8.0564, -8.0572, -8.0578, -8.0583, -8.0585, -8.0588, -8.0589, -8.0590,
        -8.0591, -8.0591, -8.0592, -8.0592, -8.0592, -8.0592, -8.0592, -8.0592,
        -8.0592], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.3440e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.6879e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3029, -0.4542, -0.4730, -0.4820, -0.4875, -0.4912, -0.4937, -0.4954,
        -0.4966, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5888e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1226e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.6057e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4597, -7.4665, -7.4687, -7.4699, -7.4708, -7.4718, -7.4722, -7.4720,
        -7.4718, -7.4716, -7.4716, -7.4716, -7.4717, -7.4717, -7.4717, -7.4717,
        -7.4718, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718,
        -7.4718], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.8903e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.7773e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.5866e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0590, -8.0591, -8.0591, -8.0592, -8.0592, -8.0592, -8.0592, -8.0592,
        -8.0592, -8.0592], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4717, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718, -7.4718,
        -7.4718, -7.4718], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 10 	 HLi 	 LiH 	 4.275712305734676e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-94.0995, -93.5607, -93.4141, -93.3551, -93.3102, -93.2818, -93.2612,
        -93.2468, -93.2364, -93.2290, -93.2236, -93.2198, -93.2170, -93.2149,
        -93.2134, -93.2123, -93.2116, -93.2110, -93.2105, -93.2102, -93.2100,
        -93.2098, -93.2097, -93.2096, -93.2095], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.8721e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7491, -37.7870, -37.8002, -37.8075, -37.8123, -37.8157, -37.8182,
        -37.8199, -37.8211, -37.8219, -37.8225, -37.8230, -37.8233, -37.8235,
        -37.8236, -37.8237, -37.8238, -37.8238, -37.8239, -37.8239, -37.8239,
        -37.8239, -37.8239, -37.8239, -37.8240], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4215e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2573, -0.4412, -0.4657, -0.4773, -0.4843, -0.4890, -0.4922, -0.4944,
        -0.4959, -0.4970, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5850e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3796e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4411, -54.5069, -54.5301, -54.5430, -54.5515, -54.5574, -54.5616,
        -54.5646, -54.5667, -54.5681, -54.5692, -54.5699, -54.5704, -54.5708,
        -54.5710, -54.5712, -54.5713, -54.5714, -54.5715, -54.5715, -54.5716,
        -54.5716, -54.5716, -54.5716, -54.5716], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4033e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2123, -93.2116, -93.2110, -93.2105, -93.2102, -93.2100, -93.2098,
        -93.2097, -93.2096, -93.2095], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8237, -37.8238, -37.8238, -37.8239, -37.8239, -37.8239, -37.8239,
        -37.8239, -37.8239, -37.8240], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5712, -54.5713, -54.5714, -54.5715, -54.5715, -54.5716, -54.5716,
        -54.5716, -54.5716, -54.5716], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 3 	 CHN 	 CNH 	 0.007966212089969836

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2516, -0.4395, -0.4647, -0.4767, -0.4839, -0.4887, -0.4920, -0.4942,
        -0.4958, -0.4969, -0.4976, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5790e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4364e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1582e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4251, -54.4947, -54.5215, -54.5367, -54.5469, -54.5541, -54.5592,
        -54.5628, -54.5653, -54.5671, -54.5684, -54.5692, -54.5699, -54.5703,
        -54.5706, -54.5708, -54.5710, -54.5711, -54.5712, -54.5712, -54.5712,
        -54.5713, -54.5713, -54.5713, -54.5713], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7242e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2454e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2077], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.2454e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5708, -54.5710, -54.5711, -54.5712, -54.5712, -54.5712, -54.5713,
        -54.5713, -54.5713, -54.5713], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2077], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 14 	 HN 	 NH 	 2.3505411568338207e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2482, -0.4384, -0.4642, -0.4763, -0.4837, -0.4885, -0.4919, -0.4941,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5736e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4782e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1474e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9603, -75.0037, -75.0201, -75.0294, -75.0356, -75.0400, -75.0432,
        -75.0454, -75.0470, -75.0482, -75.0490, -75.0496, -75.0500, -75.0502,
        -75.0504, -75.0506, -75.0507, -75.0507, -75.0508, -75.0508, -75.0508,
        -75.0509, -75.0509, -75.0509, -75.0509], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.4794e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2121e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4187], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2121e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0506, -75.0507, -75.0507, -75.0508, -75.0508, -75.0508, -75.0509,
        -75.0509, -75.0509, -75.0509], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4187], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 19 	 H2O 	 OH2 	 5.339331205634377e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-78.2857, -73.2276, -75.1224, -75.8710, -76.3087, -76.5969, -76.7937,
        -76.9299, -77.0249, -77.0913, -77.1377, -77.1702, -77.1930, -77.2089,
        -77.2201, -77.2280, -77.2335, -77.2374, -77.2401, -77.2420, -77.2433,
        -77.2442, -77.2449, -77.2453, -77.2456], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7654e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7349, -37.7739, -37.7907, -37.8004, -37.8071, -37.8118, -37.8152,
        -37.8176, -37.8193, -37.8205, -37.8214, -37.8220, -37.8224, -37.8227,
        -37.8229, -37.8231, -37.8232, -37.8232, -37.8233, -37.8233, -37.8234,
        -37.8234, -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0371e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3475, -0.4659, -0.4796, -0.4863, -0.4904, -0.4932, -0.4951, -0.4964,
        -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5690e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0020e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2280, -77.2335, -77.2374, -77.2401, -77.2420, -77.2433, -77.2442,
        -77.2449, -77.2453, -77.2456], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8231, -37.8232, -37.8232, -37.8233, -37.8233, -37.8234, -37.8234,
        -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 7 	 C2H2 	 C2H2 	 0.0005020009441719282

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7436, -37.7826, -37.7969, -37.8050, -37.8103, -37.8141, -37.8168,
        -37.8187, -37.8201, -37.8210, -37.8217, -37.8222, -37.8225, -37.8227,
        -37.8229, -37.8230, -37.8231, -37.8232, -37.8232, -37.8232, -37.8232,
        -37.8233, -37.8233, -37.8233, -37.8233], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1301e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1301e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2675, -0.4442, -0.4673, -0.4783, -0.4850, -0.4895, -0.4925, -0.4946,
        -0.4960, -0.4970, -0.4977, -0.4982, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5645e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3968e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2205e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8216], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2205e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8230, -37.8231, -37.8232, -37.8232, -37.8232, -37.8232, -37.8233,
        -37.8233, -37.8233, -37.8233], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8216], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 17 	 CH3 	 CH3 	 9.893006222322781e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.5771, -324.5314, -324.5195, -324.5134, -324.5095, -324.5069,
        -324.5050, -324.5037, -324.5028, -324.5022, -324.5018, -324.5015,
        -324.5012, -324.5011, -324.5010, -324.5009, -324.5008, -324.5008,
        -324.5008, -324.5008, -324.5008, -324.5007, -324.5007, -324.5007,
        -324.5007], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.9593e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9186e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2195, -162.2301, -162.2334, -162.2351, -162.2361, -162.2369,
        -162.2376, -162.2380, -162.2381, -162.2382, -162.2383, -162.2383,
        -162.2383, -162.2384, -162.2384, -162.2384, -162.2384, -162.2384,
        -162.2384, -162.2384, -162.2384, -162.2384, -162.2384, -162.2384,
        -162.2384], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.7832e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.9464e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5009, -324.5008, -324.5008, -324.5008, -324.5008, -324.5008,
        -324.5007, -324.5007, -324.5007, -324.5007], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2384, -162.2384, -162.2384, -162.2384, -162.2384, -162.2384,
        -162.2384, -162.2384, -162.2384, -162.2384], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 11 	 Na2 	 Na2 	 2.807611711384054e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9431, -74.9808, -75.0024, -75.0160, -75.0255, -75.0324, -75.0374,
        -75.0410, -75.0436, -75.0455, -75.0468, -75.0477, -75.0484, -75.0489,
        -75.0492, -75.0494, -75.0496, -75.0497, -75.0498, -75.0498, -75.0499,
        -75.0499, -75.0499, -75.0499, -75.0499], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3293e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.3293e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4036], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(7.3293e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0494, -75.0496, -75.0497, -75.0498, -75.0498, -75.0499, -75.0499,
        -75.0499, -75.0499, -75.0499], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4036], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 15 	 O3 	 O3 	 0.00037297152615091737

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7054, -460.7614, -460.7771, -460.7851, -460.7902, -460.7937,
        -460.7960, -460.7977, -460.7989, -460.7997, -460.8003, -460.8007,
        -460.8009, -460.8011, -460.8013, -460.8014, -460.8014, -460.8015,
        -460.8015, -460.8015, -460.8016, -460.8016, -460.8016, -460.8016,
        -460.8016], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7245e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4491e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0667, -460.0970, -460.1076, -460.1136, -460.1177, -460.1207,
        -460.1228, -460.1243, -460.1254, -460.1262, -460.1267, -460.1271,
        -460.1274, -460.1276, -460.1277, -460.1278, -460.1279, -460.1279,
        -460.1280, -460.1280, -460.1280, -460.1280, -460.1280, -460.1280,
        -460.1280], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.8529e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4776e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2342, -0.4341, -0.4617, -0.4748, -0.4826, -0.4878, -0.4913, -0.4938,
        -0.4955, -0.4966, -0.4975, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5534e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6501e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8014, -460.8014, -460.8015, -460.8015, -460.8015, -460.8016,
        -460.8016, -460.8016, -460.8016, -460.8016], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1278, -460.1279, -460.1279, -460.1280, -460.1280, -460.1280,
        -460.1280, -460.1280, -460.1280, -460.1280], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 9 	 HCl 	 ClH 	 2.0511827408680923e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0852, -460.1079, -460.1149, -460.1187, -460.1212, -460.1229,
        -460.1242, -460.1251, -460.1257, -460.1262, -460.1265, -460.1267,
        -460.1269, -460.1270, -460.1270, -460.1271, -460.1271, -460.1272,
        -460.1272, -460.1272, -460.1272, -460.1272, -460.1272, -460.1272,
        -460.1272], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0748e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0748e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1271, -460.1271, -460.1272, -460.1272, -460.1272, -460.1272,
        -460.1272, -460.1272, -460.1272, -460.1272], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 23 	 Cl 	 Cl 	 0.00010092079039870356

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4253, -54.4947, -54.5213, -54.5364, -54.5465, -54.5536, -54.5586,
        -54.5622, -54.5647, -54.5665, -54.5677, -54.5686, -54.5692, -54.5697,
        -54.5700, -54.5702, -54.5703, -54.5704, -54.5705, -54.5706, -54.5706,
        -54.5706, -54.5706, -54.5707, -54.5707], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3560e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3560e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9445, -74.9847, -75.0057, -75.0186, -75.0276, -75.0340, -75.0387,
        -75.0421, -75.0445, -75.0463, -75.0475, -75.0484, -75.0490, -75.0494,
        -75.0497, -75.0499, -75.0501, -75.0502, -75.0503, -75.0503, -75.0503,
        -75.0504, -75.0504, -75.0504, -75.0504], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9245e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.6281e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.8541, -129.7061, -129.6733, -129.6581, -129.6496, -129.6440,
        -129.6403, -129.6378, -129.6360, -129.6349, -129.6341, -129.6335,
        -129.6331, -129.6329, -129.6327, -129.6326, -129.6325, -129.6325,
        -129.6324, -129.6324, -129.6324, -129.6324, -129.6324, -129.6324,
        -129.6324], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.3532e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5702, -54.5703, -54.5704, -54.5705, -54.5706, -54.5706, -54.5706,
        -54.5706, -54.5707, -54.5707], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0499, -75.0501, -75.0502, -75.0503, -75.0503, -75.0503, -75.0504,
        -75.0504, -75.0504, -75.0504], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6326, -129.6325, -129.6325, -129.6324, -129.6324, -129.6324,
        -129.6324, -129.6324, -129.6324, -129.6324], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 12 	 NO 	 NO 	 1.9050025025795494e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.7034, -113.4061, -113.3354, -113.2977, -113.2749, -113.2591,
        -113.2482, -113.2405, -113.2351, -113.2314, -113.2287, -113.2269,
        -113.2256, -113.2247, -113.2241, -113.2236, -113.2233, -113.2231,
        -113.2229, -113.2228, -113.2228, -113.2227, -113.2227, -113.2226,
        -113.2226], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4485e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7310, -37.7665, -37.7852, -37.7965, -37.8042, -37.8098, -37.8138,
        -37.8167, -37.8188, -37.8202, -37.8213, -37.8220, -37.8225, -37.8229,
        -37.8231, -37.8233, -37.8234, -37.8235, -37.8236, -37.8236, -37.8237,
        -37.8237, -37.8237, -37.8237, -37.8237], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.7562e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9599, -75.0034, -75.0200, -75.0294, -75.0357, -75.0401, -75.0433,
        -75.0456, -75.0473, -75.0484, -75.0492, -75.0498, -75.0502, -75.0505,
        -75.0507, -75.0508, -75.0509, -75.0510, -75.0510, -75.0511, -75.0511,
        -75.0511, -75.0511, -75.0511, -75.0511], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2781e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2236, -113.2233, -113.2231, -113.2229, -113.2228, -113.2228,
        -113.2227, -113.2227, -113.2226, -113.2226], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8233, -37.8234, -37.8235, -37.8236, -37.8236, -37.8237, -37.8237,
        -37.8237, -37.8237, -37.8237], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0508, -75.0509, -75.0510, -75.0510, -75.0511, -75.0511, -75.0511,
        -75.0511, -75.0511, -75.0511], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 8 	 CO 	 OC 	 0.0010309149741793606

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2301, -0.4328, -0.4611, -0.4743, -0.4823, -0.4876, -0.4912, -0.4937,
        -0.4954, -0.4966, -0.4975, -0.4980, -0.4985, -0.4987, -0.4989, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5784e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5959e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1570e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4040, -54.4707, -54.5040, -54.5240, -54.5377, -54.5476, -54.5546,
        -54.5596, -54.5632, -54.5657, -54.5675, -54.5688, -54.5696, -54.5703,
        -54.5707, -54.5710, -54.5712, -54.5714, -54.5715, -54.5715, -54.5716,
        -54.5716, -54.5717, -54.5717, -54.5717], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4670e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2416e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5437], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2416e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5710, -54.5712, -54.5714, -54.5715, -54.5715, -54.5716, -54.5716,
        -54.5717, -54.5717, -54.5717], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5437], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 20 	 H3N 	 NH3 	 5.440037007758171e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8362, -109.7313, -109.6639, -109.6100, -109.5738, -109.5490,
        -109.5318, -109.5200, -109.5118, -109.5061, -109.5021, -109.4994,
        -109.4974, -109.4961, -109.4952, -109.4945, -109.4941, -109.4938,
        -109.4935, -109.4934, -109.4933, -109.4932, -109.4932, -109.4931,
        -109.4931], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2672e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4236, -54.4935, -54.5209, -54.5365, -54.5470, -54.5544, -54.5596,
        -54.5633, -54.5659, -54.5678, -54.5691, -54.5700, -54.5706, -54.5711,
        -54.5714, -54.5716, -54.5718, -54.5719, -54.5720, -54.5720, -54.5721,
        -54.5721, -54.5721, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.9627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4945, -109.4941, -109.4938, -109.4935, -109.4934, -109.4933,
        -109.4932, -109.4932, -109.4931, -109.4931], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5716, -54.5718, -54.5719, -54.5720, -54.5720, -54.5721, -54.5721,
        -54.5721, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 1 	 N2 	 N2 	 5.362770670461446e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2947, -0.4520, -0.4717, -0.4812, -0.4870, -0.4908, -0.4934, -0.4952,
        -0.4965, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5922e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1720e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1846e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 25 	 H 	 H 	 8.344477855235102e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7396, -37.7791, -37.7948, -37.8039, -37.8100, -37.8143, -37.8174,
        -37.8196, -37.8211, -37.8223, -37.8230, -37.8236, -37.8240, -37.8242,
        -37.8244, -37.8246, -37.8247, -37.8247, -37.8248, -37.8248, -37.8248,
        -37.8249, -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5483e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5483e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8246, -37.8247, -37.8247, -37.8248, -37.8248, -37.8248, -37.8249,
        -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 22 	 C 	 C 	 5.7123782989963016e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4572, -7.4645, -7.4675, -7.4692, -7.4703, -7.4712, -7.4721, -7.4726,
        -7.4725, -7.4722, -7.4720, -7.4720, -7.4720, -7.4721, -7.4721, -7.4721,
        -7.4722, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722,
        -7.4722], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0084e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4277e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0193e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4721, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722, -7.4722,
        -7.4722, -7.4722], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 26 	 Li 	 Li 	 7.941207779910987e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4457, -920.4144, -920.4068, -920.4029, -920.4003, -920.3985,
        -920.3972, -920.3963, -920.3957, -920.3953, -920.3950, -920.3948,
        -920.3946, -920.3945, -920.3944, -920.3944, -920.3943, -920.3943,
        -920.3943, -920.3943, -920.3943, -920.3943, -920.3943, -920.3943,
        -920.3943], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6345e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2690e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1007, -460.1248, -460.1322, -460.1363, -460.1391, -460.1410,
        -460.1423, -460.1433, -460.1440, -460.1445, -460.1448, -460.1451,
        -460.1452, -460.1454, -460.1454, -460.1455, -460.1455, -460.1456,
        -460.1456, -460.1456, -460.1456, -460.1456, -460.1456, -460.1456,
        -460.1456], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1829e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2694e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3944, -920.3943, -920.3943, -920.3943, -920.3943, -920.3943,
        -920.3943, -920.3943, -920.3943, -920.3943], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1455, -460.1455, -460.1456, -460.1456, -460.1456, -460.1456,
        -460.1456, -460.1456, -460.1456, -460.1456], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 5 	 Cl2 	 Cl2 	 1.66637710397623e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4354, -54.5033, -54.5284, -54.5424, -54.5518, -54.5583, -54.5629,
        -54.5662, -54.5685, -54.5701, -54.5713, -54.5721, -54.5727, -54.5731,
        -54.5733, -54.5735, -54.5737, -54.5738, -54.5738, -54.5739, -54.5739,
        -54.5739, -54.5739, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3376e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3376e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5735, -54.5737, -54.5738, -54.5738, -54.5739, -54.5739, -54.5739,
        -54.5739, -54.5740, -54.5740], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 27 	 N 	 N 	 5.431408336697873e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-0.9612, -1.0866, -1.1189, -1.1354, -1.1459, -1.1530, -1.1579, -1.1614,
        -1.1638, -1.1654, -1.1666, -1.1674, -1.1680, -1.1684, -1.1687, -1.1689,
        -1.1690, -1.1691, -1.1692, -1.1692, -1.1692, -1.1693, -1.1693, -1.1693,
        -1.1693], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5930e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1859e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2113, -0.4266, -0.4577, -0.4722, -0.4809, -0.4867, -0.4906, -0.4933,
        -0.4951, -0.4964, -0.4974, -0.4980, -0.4984, -0.4987, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6227e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5920e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1105e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1689, -1.1690, -1.1691, -1.1692, -1.1692, -1.1692, -1.1693, -1.1693,
        -1.1693, -1.1693], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 0 	 H2 	 H2 	 3.5832068168252947e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2285, -162.2398, -162.2434, -162.2454, -162.2465, -162.2474,
        -162.2481, -162.2486, -162.2488, -162.2489, -162.2490, -162.2490,
        -162.2491, -162.2491, -162.2491, -162.2491, -162.2491, -162.2491,
        -162.2492, -162.2492, -162.2492, -162.2492, -162.2492, -162.2492,
        -162.2492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1591e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.1591e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2491, -162.2491, -162.2491, -162.2492, -162.2492, -162.2492,
        -162.2492, -162.2492, -162.2492, -162.2492], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 28 	 Na 	 Na 	 6.907487891980767e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6701, -99.6895, -99.7010, -99.7082, -99.7132, -99.7169, -99.7196,
        -99.7216, -99.7230, -99.7240, -99.7248, -99.7253, -99.7256, -99.7259,
        -99.7261, -99.7262, -99.7263, -99.7264, -99.7264, -99.7264, -99.7265,
        -99.7265, -99.7265, -99.7265, -99.7265], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0245e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.0245e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7262, -99.7263, -99.7264, -99.7264, -99.7264, -99.7265, -99.7265,
        -99.7265, -99.7265, -99.7265], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 24 	 F 	 F 	 1.2805366025731643e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2540, -0.4402, -0.4652, -0.4770, -0.4842, -0.4889, -0.4921, -0.4944,
        -0.4959, -0.4970, -0.4977, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6443e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2370e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2887e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9517, -74.9927, -75.0134, -75.0260, -75.0348, -75.0411, -75.0457,
        -75.0490, -75.0513, -75.0530, -75.0542, -75.0550, -75.0556, -75.0561,
        -75.0564, -75.0566, -75.0567, -75.0568, -75.0569, -75.0569, -75.0570,
        -75.0570, -75.0570, -75.0570, -75.0570], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.6014e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3147e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6484, -75.6842, -75.7005, -75.7099, -75.7162, -75.7208, -75.7240,
        -75.7263, -75.7280, -75.7292, -75.7300, -75.7306, -75.7310, -75.7313,
        -75.7315, -75.7317, -75.7318, -75.7318, -75.7319, -75.7319, -75.7319,
        -75.7320, -75.7320, -75.7320, -75.7320], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0566, -75.0567, -75.0568, -75.0569, -75.0569, -75.0570, -75.0570,
        -75.0570, -75.0570, -75.0570], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7317, -75.7318, -75.7318, -75.7319, -75.7319, -75.7319, -75.7320,
        -75.7320, -75.7320, -75.7320], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 21 	 HO 	 OH 	 5.261222963006006e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4053, -54.4664, -54.5017, -54.5234, -54.5385, -54.5493, -54.5571,
        -54.5627, -54.5666, -54.5694, -54.5714, -54.5728, -54.5738, -54.5745,
        -54.5750, -54.5753, -54.5756, -54.5757, -54.5759, -54.5759, -54.5760,
        -54.5760, -54.5761, -54.5761, -54.5761], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8386e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.8386e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9593, -75.0032, -75.0216, -75.0323, -75.0395, -75.0447, -75.0484,
        -75.0511, -75.0530, -75.0543, -75.0553, -75.0560, -75.0565, -75.0568,
        -75.0570, -75.0572, -75.0573, -75.0574, -75.0574, -75.0575, -75.0575,
        -75.0575, -75.0575, -75.0576, -75.0576], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3234e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.1620e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0861], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(7.1620e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5753, -54.5756, -54.5757, -54.5759, -54.5759, -54.5760, -54.5760,
        -54.5761, -54.5761, -54.5761], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0572, -75.0573, -75.0574, -75.0574, -75.0575, -75.0575, -75.0575,
        -75.0575, -75.0576, -75.0576], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0861], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 13 	 NO2 	 NO2 	 0.0009930125550521043

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.5314, -188.7632, -188.6016, -188.5069, -188.4486, -188.4089,
        -188.3811, -188.3615, -188.3477, -188.3379, -188.3310, -188.3261,
        -188.3225, -188.3200, -188.3183, -188.3170, -188.3161, -188.3154,
        -188.3149, -188.3146, -188.3144, -188.3142, -188.3141, -188.3140,
        -188.3139], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8155e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7564, -37.7932, -37.8055, -37.8123, -37.8168, -37.8200, -37.8222,
        -37.8238, -37.8249, -37.8257, -37.8262, -37.8266, -37.8269, -37.8271,
        -37.8272, -37.8273, -37.8274, -37.8275, -37.8275, -37.8275, -37.8275,
        -37.8275, -37.8275, -37.8275, -37.8276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1681e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9608, -75.0047, -75.0228, -75.0333, -75.0404, -75.0455, -75.0491,
        -75.0517, -75.0536, -75.0549, -75.0558, -75.0565, -75.0570, -75.0573,
        -75.0575, -75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.1064e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3170, -188.3161, -188.3154, -188.3149, -188.3146, -188.3144,
        -188.3142, -188.3141, -188.3140, -188.3139], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8273, -37.8274, -37.8275, -37.8275, -37.8275, -37.8275, -37.8275,
        -37.8275, -37.8275, -37.8276], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0577, -75.0578, -75.0579, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0580], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 4 	 CO2 	 CO2 	 0.014829986476458007

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6146, -199.5608, -199.5468, -199.5396, -199.5351, -199.5320,
        -199.5298, -199.5283, -199.5273, -199.5265, -199.5260, -199.5256,
        -199.5254, -199.5252, -199.5250, -199.5250, -199.5249, -199.5248,
        -199.5248, -199.5248, -199.5248, -199.5248, -199.5248, -199.5248,
        -199.5247], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2669e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5338e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6728, -99.6934, -99.7046, -99.7114, -99.7162, -99.7198, -99.7223,
        -99.7242, -99.7255, -99.7265, -99.7272, -99.7276, -99.7280, -99.7282,
        -99.7284, -99.7285, -99.7286, -99.7287, -99.7287, -99.7287, -99.7288,
        -99.7288, -99.7288, -99.7288, -99.7288], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.9498e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5358e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5250, -199.5249, -199.5248, -199.5248, -199.5248, -199.5248,
        -199.5248, -199.5248, -199.5248, -199.5247], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7285, -99.7286, -99.7287, -99.7287, -99.7287, -99.7288, -99.7288,
        -99.7288, -99.7288, -99.7288], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 6 	 F2 	 F2 	 6.724370406031427e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9636, -75.0074, -75.0248, -75.0348, -75.0416, -75.0464, -75.0498,
        -75.0523, -75.0540, -75.0553, -75.0561, -75.0568, -75.0572, -75.0575,
        -75.0577, -75.0579, -75.0580, -75.0580, -75.0581, -75.0581, -75.0582,
        -75.0582, -75.0582, -75.0582, -75.0582], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0250e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.0250e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0579, -75.0580, -75.0580, -75.0581, -75.0581, -75.0582, -75.0582,
        -75.0582, -75.0582, -75.0582], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 10 	 29 	 O 	 O 	 1.9359547597729906e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7433, -37.7827, -37.7982, -37.8071, -37.8131, -37.8173, -37.8203,
        -37.8224, -37.8239, -37.8250, -37.8258, -37.8263, -37.8267, -37.8270,
        -37.8272, -37.8273, -37.8274, -37.8274, -37.8275, -37.8275, -37.8275,
        -37.8276, -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1808e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.1808e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2256, -0.4315, -0.4603, -0.4739, -0.4821, -0.4875, -0.4912, -0.4937,
        -0.4954, -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6627e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3765e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3773e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1432], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3773e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8273, -37.8274, -37.8274, -37.8275, -37.8275, -37.8275, -37.8276,
        -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1432], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 10 	 18 	 CH2 	 CH2 	 0.00016976330895751522

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e10)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e10/2022-11-29_10:09:21.572573_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e10/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 10 || ,[' rho : 4.629852', ' ae : 47.824578', ' E : 3.022053'] ,|| total loss 39.201356 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2905, -0.4508, -0.4711, -0.4808, -0.4867, -0.4907, -0.4934, -0.4952,
        -0.4965, -0.4974, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6655e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.9438e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3310e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9626, -75.0065, -75.0243, -75.0345, -75.0415, -75.0464, -75.0499,
        -75.0524, -75.0542, -75.0555, -75.0564, -75.0571, -75.0575, -75.0578,
        -75.0580, -75.0582, -75.0583, -75.0584, -75.0584, -75.0585, -75.0585,
        -75.0585, -75.0585, -75.0586, -75.0586], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.8777e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3498e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6471, -75.6831, -75.7003, -75.7101, -75.7169, -75.7217, -75.7251,
        -75.7276, -75.7294, -75.7307, -75.7316, -75.7322, -75.7326, -75.7330,
        -75.7332, -75.7333, -75.7334, -75.7335, -75.7336, -75.7336, -75.7336,
        -75.7337, -75.7337, -75.7337, -75.7337], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0582, -75.0583, -75.0584, -75.0584, -75.0585, -75.0585, -75.0585,
        -75.0585, -75.0586, -75.0586], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7333, -75.7334, -75.7335, -75.7336, -75.7336, -75.7336, -75.7337,
        -75.7337, -75.7337, -75.7337], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 21 	 HO 	 OH 	 5.578914134793454e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7585, -37.7946, -37.8065, -37.8130, -37.8174, -37.8204, -37.8225,
        -37.8240, -37.8251, -37.8259, -37.8264, -37.8268, -37.8270, -37.8272,
        -37.8273, -37.8274, -37.8275, -37.8275, -37.8276, -37.8276, -37.8276,
        -37.8276, -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0937e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0937e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3010, -0.4537, -0.4728, -0.4819, -0.4875, -0.4912, -0.4937, -0.4955,
        -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4992, -0.4993,
        -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6669e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.4282e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3849e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8277], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3849e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8274, -37.8275, -37.8275, -37.8276, -37.8276, -37.8276, -37.8276,
        -37.8276, -37.8276, -37.8276], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4993, -0.4993, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8277], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 17 	 CH3 	 CH3 	 0.00012701885717821468

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4326, -54.5018, -54.5281, -54.5431, -54.5531, -54.5600, -54.5650,
        -54.5685, -54.5710, -54.5728, -54.5740, -54.5749, -54.5755, -54.5759,
        -54.5762, -54.5764, -54.5765, -54.5766, -54.5767, -54.5768, -54.5768,
        -54.5768, -54.5768, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1968e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1968e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9695, -75.0126, -75.0287, -75.0378, -75.0439, -75.0482, -75.0512,
        -75.0534, -75.0550, -75.0561, -75.0569, -75.0574, -75.0578, -75.0581,
        -75.0583, -75.0584, -75.0585, -75.0586, -75.0586, -75.0587, -75.0587,
        -75.0587, -75.0587, -75.0587, -75.0587], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7948e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.9916e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6679], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.9916e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5764, -54.5765, -54.5766, -54.5767, -54.5768, -54.5768, -54.5768,
        -54.5768, -54.5769, -54.5769], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0584, -75.0585, -75.0586, -75.0586, -75.0587, -75.0587, -75.0587,
        -75.0587, -75.0587, -75.0587], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6679], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 16 	 N2O 	 N2O 	 0.0005594070449958055

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6762, -99.6987, -99.7089, -99.7149, -99.7191, -99.7222, -99.7244,
        -99.7260, -99.7271, -99.7279, -99.7285, -99.7289, -99.7292, -99.7294,
        -99.7295, -99.7296, -99.7297, -99.7297, -99.7298, -99.7298, -99.7298,
        -99.7298, -99.7298, -99.7298, -99.7298], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.2324e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2324e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7296, -99.7297, -99.7297, -99.7298, -99.7298, -99.7298, -99.7298,
        -99.7298, -99.7298, -99.7298], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 24 	 F 	 F 	 3.848822827609534e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2113, -0.4266, -0.4577, -0.4722, -0.4810, -0.4867, -0.4906, -0.4933,
        -0.4952, -0.4965, -0.4974, -0.4980, -0.4985, -0.4988, -0.4990, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995, -0.4995,
        -0.4995], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6709e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4699e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3419e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9738, -75.0159, -75.0311, -75.0396, -75.0452, -75.0492, -75.0520,
        -75.0541, -75.0555, -75.0565, -75.0572, -75.0578, -75.0581, -75.0584,
        -75.0585, -75.0587, -75.0587, -75.0588, -75.0589, -75.0589, -75.0589,
        -75.0589, -75.0589, -75.0589, -75.0589], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7052e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3589e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4284], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.3589e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4995, -0.4995,
        -0.4995, -0.4995], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0587, -75.0587, -75.0588, -75.0589, -75.0589, -75.0589, -75.0589,
        -75.0589, -75.0589, -75.0589], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4284], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 19 	 H2O 	 OH2 	 8.076050838545849e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7443, -37.7837, -37.7990, -37.8077, -37.8135, -37.8177, -37.8206,
        -37.8227, -37.8242, -37.8253, -37.8260, -37.8265, -37.8269, -37.8272,
        -37.8273, -37.8275, -37.8276, -37.8276, -37.8277, -37.8277, -37.8277,
        -37.8277, -37.8277, -37.8277, -37.8278], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0388e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0388e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8275, -37.8276, -37.8276, -37.8277, -37.8277, -37.8277, -37.8277,
        -37.8277, -37.8277, -37.8278], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 22 	 C 	 C 	 3.80169551944161e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1034, -460.1342, -460.1452, -460.1514, -460.1557, -460.1588,
        -460.1610, -460.1626, -460.1637, -460.1645, -460.1651, -460.1655,
        -460.1658, -460.1660, -460.1661, -460.1662, -460.1663, -460.1663,
        -460.1664, -460.1664, -460.1664, -460.1664, -460.1664, -460.1664,
        -460.1665], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.3878e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3878e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1662, -460.1663, -460.1663, -460.1664, -460.1664, -460.1664,
        -460.1664, -460.1664, -460.1664, -460.1665], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 23 	 Cl 	 Cl 	 7.951943928269486e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2307, -162.2431, -162.2476, -162.2501, -162.2517, -162.2527,
        -162.2536, -162.2543, -162.2547, -162.2548, -162.2549, -162.2550,
        -162.2550, -162.2550, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.9585e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.9585e-10, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2551, -162.2551, -162.2551, -162.2551, -162.2551, -162.2551,
        -162.2551, -162.2551, -162.2551, -162.2551], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 28 	 Na 	 Na 	 6.75823654135823e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.9314, -188.9177, -188.7022, -188.5754, -188.4967, -188.4430,
        -188.4055, -188.3791, -188.3605, -188.3473, -188.3379, -188.3313,
        -188.3265, -188.3232, -188.3208, -188.3191, -188.3179, -188.3170,
        -188.3164, -188.3159, -188.3156, -188.3154, -188.3152, -188.3151,
        -188.3150], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.8081e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7427, -37.7820, -37.7976, -37.8065, -37.8125, -37.8168, -37.8198,
        -37.8220, -37.8235, -37.8246, -37.8254, -37.8259, -37.8263, -37.8266,
        -37.8267, -37.8269, -37.8270, -37.8270, -37.8271, -37.8271, -37.8271,
        -37.8272, -37.8272, -37.8272, -37.8272], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.5027e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9675, -75.0108, -75.0272, -75.0365, -75.0428, -75.0472, -75.0504,
        -75.0526, -75.0542, -75.0554, -75.0562, -75.0567, -75.0571, -75.0574,
        -75.0576, -75.0577, -75.0578, -75.0579, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.0827e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3191, -188.3179, -188.3170, -188.3164, -188.3159, -188.3156,
        -188.3154, -188.3152, -188.3151, -188.3150], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8269, -37.8270, -37.8270, -37.8271, -37.8271, -37.8271, -37.8272,
        -37.8272, -37.8272, -37.8272], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0577, -75.0578, -75.0579, -75.0580, -75.0580, -75.0580, -75.0580,
        -75.0580, -75.0581, -75.0581], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 4 	 CO2 	 CO2 	 0.014659995054095279

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4758, -920.4425, -920.4345, -920.4302, -920.4274, -920.4255,
        -920.4242, -920.4232, -920.4225, -920.4221, -920.4217, -920.4215,
        -920.4213, -920.4212, -920.4211, -920.4211, -920.4210, -920.4210,
        -920.4210, -920.4210, -920.4210, -920.4210, -920.4210, -920.4210,
        -920.4210], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6942e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3885e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1032, -460.1316, -460.1411, -460.1465, -460.1501, -460.1527,
        -460.1545, -460.1558, -460.1568, -460.1574, -460.1579, -460.1583,
        -460.1585, -460.1587, -460.1588, -460.1589, -460.1589, -460.1590,
        -460.1590, -460.1590, -460.1590, -460.1590, -460.1590, -460.1590,
        -460.1591], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.5314e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3970e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4211, -920.4210, -920.4210, -920.4210, -920.4210, -920.4210,
        -920.4210, -920.4210, -920.4210, -920.4210], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1589, -460.1589, -460.1590, -460.1590, -460.1590, -460.1590,
        -460.1590, -460.1590, -460.1590, -460.1591], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 5 	 Cl2 	 Cl2 	 1.6187540548387185e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.3243, -107.2993, -107.2639, -107.2510, -107.2430, -107.2381,
        -107.2352, -107.2335, -107.2323, -107.2316, -107.2311, -107.2309,
        -107.2309, -107.2310, -107.2311, -107.2313, -107.2315, -107.2316,
        -107.2318, -107.2319, -107.2320, -107.2321, -107.2322, -107.2323,
        -107.2323], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4992e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6803, -99.7030, -99.7112, -99.7159, -99.7191, -99.7214, -99.7230,
        -99.7242, -99.7250, -99.7256, -99.7260, -99.7263, -99.7265, -99.7266,
        -99.7267, -99.7268, -99.7269, -99.7269, -99.7269, -99.7269, -99.7269,
        -99.7270, -99.7270, -99.7270, -99.7270], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4758e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4565, -7.4634, -7.4668, -7.4686, -7.4698, -7.4707, -7.4717, -7.4725,
        -7.4725, -7.4722, -7.4720, -7.4719, -7.4719, -7.4720, -7.4720, -7.4721,
        -7.4721, -7.4721, -7.4721, -7.4721, -7.4721, -7.4722, -7.4722, -7.4722,
        -7.4722], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.0159e-06, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(2.4867e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2313, -107.2315, -107.2316, -107.2318, -107.2319, -107.2320,
        -107.2321, -107.2322, -107.2323, -107.2323], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7268, -99.7269, -99.7269, -99.7269, -99.7269, -99.7269, -99.7270,
        -99.7270, -99.7270, -99.7270], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4721, -7.4721, -7.4721, -7.4721, -7.4721, -7.4721, -7.4722, -7.4722,
        -7.4722, -7.4722], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 2 	 FLi 	 LiF 	 0.008373820085116578

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2668, -0.4440, -0.4673, -0.4783, -0.4851, -0.4895, -0.4925, -0.4946,
        -0.4961, -0.4971, -0.4978, -0.4983, -0.4986, -0.4989, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6320e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2429e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2641e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4157, -54.4856, -54.5158, -54.5335, -54.5455, -54.5539, -54.5600,
        -54.5643, -54.5673, -54.5695, -54.5710, -54.5720, -54.5728, -54.5733,
        -54.5737, -54.5739, -54.5741, -54.5742, -54.5743, -54.5744, -54.5744,
        -54.5745, -54.5745, -54.5745, -54.5745], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.9557e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3237e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2113], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.3237e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5739, -54.5741, -54.5742, -54.5743, -54.5744, -54.5744, -54.5745,
        -54.5745, -54.5745, -54.5745], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2113], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 14 	 HN 	 NH 	 2.701215862129261e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3297, -0.4614, -0.4771, -0.4847, -0.4893, -0.4924, -0.4946, -0.4960,
        -0.4971, -0.4978, -0.4983, -0.4986, -0.4989, -0.4990, -0.4992, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6249e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(9.6404e-09, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2500e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4385, -54.5056, -54.5300, -54.5436, -54.5526, -54.5589, -54.5634,
        -54.5666, -54.5688, -54.5704, -54.5715, -54.5723, -54.5728, -54.5732,
        -54.5735, -54.5736, -54.5738, -54.5739, -54.5739, -54.5740, -54.5740,
        -54.5740, -54.5740, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2492e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.3125e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5470], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.3125e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5736, -54.5738, -54.5739, -54.5739, -54.5740, -54.5740, -54.5740,
        -54.5740, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5470], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 20 	 H3N 	 NH3 	 1.2194120328392429e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3074, -0.4554, -0.4737, -0.4825, -0.4878, -0.4914, -0.4938, -0.4955,
        -0.4967, -0.4975, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6182e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0845e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2366e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 25 	 H 	 H 	 8.007878033561214e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4200, -54.4901, -54.5187, -54.5353, -54.5464, -54.5543, -54.5599,
        -54.5638, -54.5666, -54.5686, -54.5700, -54.5710, -54.5717, -54.5722,
        -54.5725, -54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732,
        -54.5732, -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9605e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9605e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9572, -75.0009, -75.0191, -75.0296, -75.0367, -75.0418, -75.0454,
        -75.0480, -75.0499, -75.0512, -75.0521, -75.0528, -75.0533, -75.0536,
        -75.0538, -75.0540, -75.0541, -75.0542, -75.0542, -75.0543, -75.0543,
        -75.0543, -75.0543, -75.0544, -75.0544], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.0619e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1022e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-129.9226, -129.7305, -129.6880, -129.6696, -129.6596, -129.6531,
        -129.6489, -129.6460, -129.6441, -129.6428, -129.6419, -129.6413,
        -129.6409, -129.6406, -129.6405, -129.6403, -129.6403, -129.6402,
        -129.6402, -129.6401, -129.6401, -129.6401, -129.6401, -129.6401,
        -129.6401], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5339e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732, -54.5732,
        -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0540, -75.0541, -75.0542, -75.0542, -75.0543, -75.0543, -75.0543,
        -75.0543, -75.0544, -75.0544], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6403, -129.6403, -129.6402, -129.6402, -129.6401, -129.6401,
        -129.6401, -129.6401, -129.6401, -129.6401], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 12 	 NO 	 NO 	 3.7990206987740194e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6227, -324.5599, -324.5435, -324.5351, -324.5298, -324.5262,
        -324.5237, -324.5220, -324.5207, -324.5199, -324.5193, -324.5188,
        -324.5185, -324.5183, -324.5182, -324.5181, -324.5180, -324.5180,
        -324.5179, -324.5179, -324.5179, -324.5179, -324.5179, -324.5179,
        -324.5179], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.2076e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4152e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2226, -162.2350, -162.2395, -162.2420, -162.2436, -162.2446,
        -162.2455, -162.2462, -162.2465, -162.2467, -162.2468, -162.2468,
        -162.2469, -162.2469, -162.2469, -162.2470, -162.2470, -162.2470,
        -162.2470, -162.2470, -162.2470, -162.2470, -162.2470, -162.2470,
        -162.2470], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.1402e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4213e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5181, -324.5180, -324.5180, -324.5179, -324.5179, -324.5179,
        -324.5179, -324.5179, -324.5179, -324.5179], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2470, -162.2470, -162.2470, -162.2470, -162.2470, -162.2470,
        -162.2470, -162.2470, -162.2470, -162.2470], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 11 	 Na2 	 Na2 	 2.889902559438481e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4556, -7.4625, -7.4658, -7.4677, -7.4689, -7.4699, -7.4709, -7.4716,
        -7.4717, -7.4714, -7.4712, -7.4711, -7.4711, -7.4712, -7.4712, -7.4713,
        -7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4714, -7.4714, -7.4714,
        -7.4714], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.7505e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2059e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9533e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4714, -7.4714,
        -7.4714, -7.4714], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 26 	 Li 	 Li 	 1.0489441364877113e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4039, -54.4690, -54.5028, -54.5233, -54.5374, -54.5475, -54.5547,
        -54.5599, -54.5636, -54.5662, -54.5680, -54.5693, -54.5702, -54.5708,
        -54.5713, -54.5716, -54.5718, -54.5720, -54.5721, -54.5722, -54.5722,
        -54.5723, -54.5723, -54.5723, -54.5723], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8922e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.8922e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9470, -74.9852, -75.0066, -75.0199, -75.0293, -75.0360, -75.0409,
        -75.0444, -75.0470, -75.0488, -75.0501, -75.0510, -75.0517, -75.0521,
        -75.0524, -75.0527, -75.0528, -75.0529, -75.0530, -75.0531, -75.0531,
        -75.0531, -75.0532, -75.0532, -75.0532], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.8715e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.2764e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0756], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.2764e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5716, -54.5718, -54.5720, -54.5721, -54.5722, -54.5722, -54.5723,
        -54.5723, -54.5723, -54.5723], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0527, -75.0528, -75.0529, -75.0530, -75.0531, -75.0531, -75.0531,
        -75.0532, -75.0532, -75.0532], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0756], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 13 	 NO2 	 NO2 	 0.0011232249590111532

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8503, -109.6994, -109.6484, -109.6001, -109.5672, -109.5447,
        -109.5292, -109.5184, -109.5110, -109.5059, -109.5023, -109.4999,
        -109.4982, -109.4970, -109.4961, -109.4956, -109.4952, -109.4949,
        -109.4947, -109.4946, -109.4945, -109.4944, -109.4943, -109.4943,
        -109.4943], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2576e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4144, -54.4844, -54.5143, -54.5317, -54.5435, -54.5518, -54.5578,
        -54.5620, -54.5650, -54.5671, -54.5686, -54.5696, -54.5704, -54.5709,
        -54.5712, -54.5715, -54.5717, -54.5718, -54.5719, -54.5720, -54.5720,
        -54.5720, -54.5720, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.0520e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4956, -109.4952, -109.4949, -109.4947, -109.4946, -109.4945,
        -109.4944, -109.4943, -109.4943, -109.4943], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5715, -54.5717, -54.5718, -54.5719, -54.5720, -54.5720, -54.5720,
        -54.5720, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 1 	 N2 	 N2 	 4.4751988136238624e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9636, -75.0065, -75.0226, -75.0317, -75.0377, -75.0420, -75.0451,
        -75.0473, -75.0489, -75.0500, -75.0507, -75.0513, -75.0517, -75.0520,
        -75.0521, -75.0523, -75.0524, -75.0524, -75.0525, -75.0525, -75.0525,
        -75.0526, -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2111e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2111e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0523, -75.0524, -75.0524, -75.0525, -75.0525, -75.0525, -75.0526,
        -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 29 	 O 	 O 	 5.064701778822752e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0568, -1.1239, -1.1414, -1.1503, -1.1559, -1.1597, -1.1624, -1.1642,
        -1.1655, -1.1664, -1.1670, -1.1675, -1.1678, -1.1680, -1.1682, -1.1683,
        -1.1683, -1.1684, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685, -1.1685,
        -1.1685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5375e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0750e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3259, -0.4603, -0.4765, -0.4842, -0.4890, -0.4922, -0.4944, -0.4959,
        -0.4969, -0.4977, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5875e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1145e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9925e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1683, -1.1683, -1.1684, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685,
        -1.1685, -1.1685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 0 	 H2 	 H2 	 4.92420089175417e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-77.9403, -72.8634, -74.9778, -75.7929, -76.2610, -76.5659, -76.7732,
        -76.9164, -77.0160, -77.0857, -77.1345, -77.1687, -77.1926, -77.2094,
        -77.2212, -77.2295, -77.2353, -77.2394, -77.2422, -77.2443, -77.2457,
        -77.2466, -77.2473, -77.2478, -77.2482], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7280e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7365, -37.7755, -37.7919, -37.8013, -37.8077, -37.8123, -37.8155,
        -37.8179, -37.8195, -37.8207, -37.8215, -37.8221, -37.8225, -37.8228,
        -37.8230, -37.8232, -37.8233, -37.8233, -37.8234, -37.8234, -37.8234,
        -37.8235, -37.8235, -37.8235, -37.8235], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9498e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3259, -0.4604, -0.4765, -0.4842, -0.4890, -0.4922, -0.4944, -0.4959,
        -0.4969, -0.4977, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5863e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1191e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2295, -77.2353, -77.2394, -77.2422, -77.2443, -77.2457, -77.2466,
        -77.2473, -77.2478, -77.2482], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8232, -37.8233, -37.8233, -37.8234, -37.8234, -37.8234, -37.8235,
        -37.8235, -37.8235, -37.8235], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 7 	 C2H2 	 C2H2 	 0.0004520983213084852

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7185, -460.7758, -460.7918, -460.8000, -460.8052, -460.8087,
        -460.8112, -460.8129, -460.8140, -460.8149, -460.8155, -460.8159,
        -460.8161, -460.8163, -460.8165, -460.8166, -460.8166, -460.8167,
        -460.8167, -460.8168, -460.8168, -460.8168, -460.8168, -460.8168,
        -460.8168], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.8794e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7588e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0933, -460.1194, -460.1279, -460.1325, -460.1357, -460.1379,
        -460.1394, -460.1406, -460.1414, -460.1419, -460.1423, -460.1426,
        -460.1428, -460.1430, -460.1431, -460.1431, -460.1432, -460.1432,
        -460.1433, -460.1433, -460.1433, -460.1433, -460.1433, -460.1433,
        -460.1433], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.6156e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.7604e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3424, -0.4646, -0.4789, -0.4858, -0.4901, -0.4929, -0.4949, -0.4962,
        -0.4972, -0.4978, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5854e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0564e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8166, -460.8166, -460.8167, -460.8167, -460.8168, -460.8168,
        -460.8168, -460.8168, -460.8168, -460.8168], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1431, -460.1432, -460.1432, -460.1433, -460.1433, -460.1433,
        -460.1433, -460.1433, -460.1433, -460.1433], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 9 	 HCl 	 ClH 	 1.9528438211342914e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9707, -8.0218, -8.0356, -8.0428, -8.0475, -8.0507, -8.0530, -8.0545,
        -8.0557, -8.0565, -8.0570, -8.0574, -8.0577, -8.0579, -8.0580, -8.0581,
        -8.0582, -8.0583, -8.0583, -8.0583, -8.0583, -8.0583, -8.0584, -8.0584,
        -8.0584], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2376e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4752e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2547, -0.4404, -0.4652, -0.4770, -0.4841, -0.4888, -0.4921, -0.4943,
        -0.4958, -0.4969, -0.4976, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5842e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4975e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3920e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4569, -7.4642, -7.4670, -7.4684, -7.4694, -7.4704, -7.4712, -7.4714,
        -7.4711, -7.4709, -7.4708, -7.4708, -7.4708, -7.4709, -7.4709, -7.4709,
        -7.4709, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710,
        -7.4710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5624e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5432e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3081e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0581, -8.0582, -8.0583, -8.0583, -8.0583, -8.0583, -8.0583, -8.0584,
        -8.0584, -8.0584], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4709, -7.4709, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710,
        -7.4710, -7.4710], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 10 	 HLi 	 LiH 	 4.300254768895111e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7342, -37.7726, -37.7897, -37.7997, -37.8065, -37.8114, -37.8149,
        -37.8174, -37.8191, -37.8204, -37.8213, -37.8219, -37.8224, -37.8227,
        -37.8229, -37.8230, -37.8231, -37.8232, -37.8233, -37.8233, -37.8233,
        -37.8234, -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0627e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3443, -0.4651, -0.4792, -0.4860, -0.4902, -0.4930, -0.4949, -0.4963,
        -0.4972, -0.4979, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5834e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0569e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2575e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1385], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2575e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8230, -37.8231, -37.8232, -37.8233, -37.8233, -37.8233, -37.8234,
        -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1385], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 18 	 CH2 	 CH2 	 0.0001621232367497168

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9372, -93.4936, -93.3791, -93.3289, -93.2930, -93.2697, -93.2530,
        -93.2412, -93.2328, -93.2268, -93.2225, -93.2193, -93.2171, -93.2154,
        -93.2142, -93.2133, -93.2127, -93.2122, -93.2119, -93.2116, -93.2114,
        -93.2113, -93.2112, -93.2111, -93.2111], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7923e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7316, -37.7679, -37.7862, -37.7971, -37.8046, -37.8100, -37.8138,
        -37.8166, -37.8186, -37.8200, -37.8210, -37.8217, -37.8222, -37.8225,
        -37.8228, -37.8230, -37.8231, -37.8232, -37.8232, -37.8233, -37.8233,
        -37.8233, -37.8233, -37.8233, -37.8234], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.1188e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2189, -0.4292, -0.4591, -0.4730, -0.4815, -0.4870, -0.4908, -0.4934,
        -0.4952, -0.4965, -0.4973, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5819e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7481e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4324, -54.5004, -54.5256, -54.5397, -54.5492, -54.5558, -54.5604,
        -54.5637, -54.5661, -54.5677, -54.5689, -54.5697, -54.5703, -54.5707,
        -54.5709, -54.5711, -54.5713, -54.5714, -54.5714, -54.5715, -54.5715,
        -54.5716, -54.5716, -54.5716, -54.5716], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4424e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2133, -93.2127, -93.2122, -93.2119, -93.2116, -93.2114, -93.2113,
        -93.2112, -93.2111, -93.2111], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8230, -37.8231, -37.8232, -37.8232, -37.8233, -37.8233, -37.8233,
        -37.8233, -37.8233, -37.8234], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5711, -54.5713, -54.5714, -54.5714, -54.5715, -54.5715, -54.5716,
        -54.5716, -54.5716, -54.5716], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 3 	 CHN 	 CNH 	 0.007778541880741794

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6676, -199.5752, -199.5505, -199.5378, -199.5297, -199.5242,
        -199.5203, -199.5176, -199.5157, -199.5144, -199.5134, -199.5128,
        -199.5123, -199.5120, -199.5117, -199.5116, -199.5115, -199.5114,
        -199.5113, -199.5113, -199.5113, -199.5112, -199.5112, -199.5112,
        -199.5112], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1643e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3285e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6660, -99.6863, -99.6974, -99.7042, -99.7090, -99.7125, -99.7151,
        -99.7169, -99.7183, -99.7192, -99.7199, -99.7204, -99.7207, -99.7210,
        -99.7211, -99.7213, -99.7213, -99.7214, -99.7215, -99.7215, -99.7215,
        -99.7215, -99.7215, -99.7215, -99.7215], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.1044e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3396e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5116, -199.5115, -199.5114, -199.5113, -199.5113, -199.5113,
        -199.5112, -199.5112, -199.5112, -199.5112], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7213, -99.7213, -99.7214, -99.7215, -99.7215, -99.7215, -99.7215,
        -99.7215, -99.7215, -99.7215], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 6 	 F2 	 F2 	 9.343541759434235e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.6335, -113.3797, -113.3199, -113.2880, -113.2686, -113.2553,
        -113.2460, -113.2395, -113.2350, -113.2318, -113.2296, -113.2280,
        -113.2269, -113.2262, -113.2256, -113.2253, -113.2250, -113.2248,
        -113.2247, -113.2246, -113.2245, -113.2245, -113.2245, -113.2244,
        -113.2244], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4278e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7561, -37.7913, -37.8028, -37.8091, -37.8133, -37.8162, -37.8182,
        -37.8197, -37.8207, -37.8214, -37.8219, -37.8223, -37.8226, -37.8227,
        -37.8229, -37.8229, -37.8230, -37.8230, -37.8231, -37.8231, -37.8231,
        -37.8231, -37.8231, -37.8231, -37.8231], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.2442e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9584, -75.0019, -75.0191, -75.0289, -75.0356, -75.0403, -75.0437,
        -75.0461, -75.0478, -75.0490, -75.0499, -75.0505, -75.0509, -75.0512,
        -75.0514, -75.0516, -75.0517, -75.0518, -75.0518, -75.0518, -75.0519,
        -75.0519, -75.0519, -75.0519, -75.0519], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7050e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2253, -113.2250, -113.2248, -113.2247, -113.2246, -113.2245,
        -113.2245, -113.2245, -113.2244, -113.2244], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8229, -37.8230, -37.8230, -37.8231, -37.8231, -37.8231, -37.8231,
        -37.8231, -37.8231, -37.8231], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0516, -75.0517, -75.0518, -75.0518, -75.0518, -75.0519, -75.0519,
        -75.0519, -75.0519, -75.0519], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 8 	 CO 	 OC 	 0.0009823495052996832

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4006, -54.4605, -54.4959, -54.5177, -54.5330, -54.5439, -54.5518,
        -54.5575, -54.5615, -54.5643, -54.5664, -54.5678, -54.5688, -54.5695,
        -54.5700, -54.5703, -54.5706, -54.5707, -54.5708, -54.5709, -54.5710,
        -54.5710, -54.5711, -54.5711, -54.5711], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0890e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0890e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5703, -54.5706, -54.5707, -54.5708, -54.5709, -54.5710, -54.5710,
        -54.5711, -54.5711, -54.5711], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 11 	 27 	 N 	 N 	 7.680315647635728e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9527, -74.9962, -75.0148, -75.0257, -75.0332, -75.0385, -75.0423,
        -75.0451, -75.0470, -75.0484, -75.0494, -75.0501, -75.0506, -75.0509,
        -75.0512, -75.0513, -75.0515, -75.0515, -75.0516, -75.0516, -75.0517,
        -75.0517, -75.0517, -75.0517, -75.0517], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.8650e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.8650e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4117], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.8650e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0513, -75.0515, -75.0515, -75.0516, -75.0516, -75.0517, -75.0517,
        -75.0517, -75.0517, -75.0517], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4117], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 11 	 15 	 O3 	 O3 	 0.0004823232429720614

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e11)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e11/2022-11-29_10:09:21.572573_2.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e11/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 11 || ,[' rho : 4.629885', ' ae : 47.506757', ' E : 2.628997'] ,|| total loss 38.939439 || CHKPT: _2.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0140, -1.1070, -1.1310, -1.1433, -1.1511, -1.1564, -1.1600, -1.1626,
        -1.1644, -1.1656, -1.1665, -1.1671, -1.1675, -1.1678, -1.1680, -1.1682,
        -1.1683, -1.1684, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685, -1.1685,
        -1.1685], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.5419e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0838e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2473, -0.4381, -0.4640, -0.4762, -0.4836, -0.4885, -0.4918, -0.4941,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4987, -0.4989, -0.4991,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5715e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6027e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9982e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1682, -1.1683, -1.1684, -1.1684, -1.1684, -1.1685, -1.1685, -1.1685,
        -1.1685, -1.1685], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 0 	 H2 	 H2 	 4.755766856735169e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4250, -54.4943, -54.5211, -54.5364, -54.5466, -54.5538, -54.5589,
        -54.5625, -54.5651, -54.5669, -54.5681, -54.5690, -54.5697, -54.5701,
        -54.5704, -54.5706, -54.5708, -54.5709, -54.5710, -54.5710, -54.5710,
        -54.5711, -54.5711, -54.5711, -54.5711], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.9202e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.9202e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5706, -54.5708, -54.5709, -54.5710, -54.5710, -54.5710, -54.5711,
        -54.5711, -54.5711, -54.5711], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 27 	 N 	 N 	 7.659457392079121e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-77.6032, -72.7418, -74.9679, -75.8036, -76.2742, -76.5768, -76.7812,
        -76.9219, -77.0197, -77.0880, -77.1359, -77.1695, -77.1931, -77.2097,
        -77.2213, -77.2294, -77.2352, -77.2392, -77.2420, -77.2440, -77.2454,
        -77.2464, -77.2471, -77.2476, -77.2479], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7137e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7307, -37.7654, -37.7842, -37.7956, -37.8034, -37.8090, -37.8131,
        -37.8160, -37.8181, -37.8196, -37.8207, -37.8214, -37.8219, -37.8223,
        -37.8226, -37.8227, -37.8229, -37.8230, -37.8230, -37.8231, -37.8231,
        -37.8231, -37.8231, -37.8231, -37.8231], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.3481e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2641, -0.4432, -0.4668, -0.4780, -0.4848, -0.4893, -0.4924, -0.4945,
        -0.4959, -0.4970, -0.4977, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5728e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4959e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2294, -77.2352, -77.2392, -77.2420, -77.2440, -77.2454, -77.2464,
        -77.2471, -77.2476, -77.2479], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8227, -37.8229, -37.8230, -37.8230, -37.8231, -37.8231, -37.8231,
        -37.8231, -37.8231, -37.8231], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 7 	 C2H2 	 C2H2 	 0.0004422763706209857

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9953, -8.0322, -8.0421, -8.0473, -8.0507, -8.0530, -8.0546, -8.0558,
        -8.0566, -8.0571, -8.0575, -8.0578, -8.0580, -8.0582, -8.0583, -8.0583,
        -8.0584, -8.0584, -8.0584, -8.0585, -8.0585, -8.0585, -8.0585, -8.0585,
        -8.0585], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2168e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.4336e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2748, -0.4463, -0.4685, -0.4791, -0.4855, -0.4898, -0.4927, -0.4947,
        -0.4961, -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5746e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4294e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3486e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4591, -7.4658, -7.4680, -7.4691, -7.4701, -7.4710, -7.4714, -7.4712,
        -7.4709, -7.4708, -7.4708, -7.4708, -7.4708, -7.4709, -7.4709, -7.4709,
        -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710,
        -7.4710], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.4846e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.5451e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2490e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0583, -8.0584, -8.0584, -8.0584, -8.0585, -8.0585, -8.0585, -8.0585,
        -8.0585, -8.0585], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4709, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710, -7.4710,
        -7.4710, -7.4710], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 10 	 HLi 	 LiH 	 3.984275602466157e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7338, -37.7718, -37.7891, -37.7993, -37.8062, -37.8111, -37.8147,
        -37.8172, -37.8190, -37.8203, -37.8212, -37.8219, -37.8223, -37.8226,
        -37.8229, -37.8230, -37.8231, -37.8232, -37.8233, -37.8233, -37.8233,
        -37.8233, -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0868e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.0868e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2502, -0.4390, -0.4645, -0.4765, -0.4838, -0.4886, -0.4919, -0.4942,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4989, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5757e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5730e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2425e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1386], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2425e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8230, -37.8231, -37.8232, -37.8233, -37.8233, -37.8233, -37.8233,
        -37.8234, -37.8234, -37.8234], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1386], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 18 	 CH2 	 CH2 	 0.00016531215644828004

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9466, -74.9851, -75.0063, -75.0195, -75.0288, -75.0354, -75.0403,
        -75.0438, -75.0463, -75.0481, -75.0494, -75.0503, -75.0509, -75.0514,
        -75.0517, -75.0519, -75.0521, -75.0522, -75.0523, -75.0523, -75.0524,
        -75.0524, -75.0524, -75.0524, -75.0524], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.3873e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3873e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4140], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(5.3873e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0519, -75.0521, -75.0522, -75.0523, -75.0523, -75.0524, -75.0524,
        -75.0524, -75.0524, -75.0524], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4140], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 15 	 O3 	 O3 	 0.00048814879665440454

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4179, -54.4878, -54.5167, -54.5334, -54.5446, -54.5525, -54.5582,
        -54.5622, -54.5650, -54.5670, -54.5684, -54.5694, -54.5701, -54.5706,
        -54.5710, -54.5712, -54.5714, -54.5715, -54.5716, -54.5716, -54.5717,
        -54.5717, -54.5717, -54.5717, -54.5718], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3321e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.3321e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9556, -74.9992, -75.0173, -75.0278, -75.0349, -75.0400, -75.0436,
        -75.0462, -75.0481, -75.0494, -75.0504, -75.0510, -75.0515, -75.0518,
        -75.0521, -75.0522, -75.0523, -75.0524, -75.0525, -75.0525, -75.0525,
        -75.0526, -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.2364e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3569e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0745], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.3569e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5712, -54.5714, -54.5715, -54.5716, -54.5716, -54.5717, -54.5717,
        -54.5717, -54.5717, -54.5718], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0522, -75.0523, -75.0524, -75.0525, -75.0525, -75.0525, -75.0526,
        -75.0526, -75.0526, -75.0526], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0745], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 13 	 NO2 	 NO2 	 0.0011677056451346102

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2772, -0.4470, -0.4689, -0.4793, -0.4857, -0.4899, -0.4928, -0.4948,
        -0.4962, -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5789e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4045e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1579e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4069, -54.4746, -54.5069, -54.5262, -54.5394, -54.5488, -54.5555,
        -54.5603, -54.5637, -54.5662, -54.5679, -54.5691, -54.5699, -54.5705,
        -54.5709, -54.5712, -54.5714, -54.5715, -54.5716, -54.5717, -54.5718,
        -54.5718, -54.5718, -54.5718, -54.5718], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3041e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2409e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5447], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2409e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5712, -54.5714, -54.5715, -54.5716, -54.5717, -54.5718, -54.5718,
        -54.5718, -54.5718, -54.5718], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5447], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 20 	 H3N 	 NH3 	 3.826930292403564e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4286, -920.4042, -920.3985, -920.3955, -920.3936, -920.3923,
        -920.3914, -920.3908, -920.3904, -920.3900, -920.3898, -920.3897,
        -920.3896, -920.3895, -920.3894, -920.3894, -920.3894, -920.3894,
        -920.3894, -920.3894, -920.3893, -920.3893, -920.3893, -920.3893,
        -920.3893], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6832e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3664e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0890, -460.1168, -460.1260, -460.1311, -460.1346, -460.1371,
        -460.1388, -460.1401, -460.1410, -460.1416, -460.1421, -460.1424,
        -460.1426, -460.1428, -460.1429, -460.1430, -460.1430, -460.1431,
        -460.1431, -460.1431, -460.1431, -460.1431, -460.1432, -460.1432,
        -460.1432], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.7184e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.3681e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.3894, -920.3894, -920.3894, -920.3894, -920.3894, -920.3893,
        -920.3893, -920.3893, -920.3893, -920.3893], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1430, -460.1430, -460.1431, -460.1431, -460.1431, -460.1431,
        -460.1431, -460.1432, -460.1432, -460.1432], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 5 	 Cl2 	 Cl2 	 1.6811965183121386e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4156, -54.4855, -54.5151, -54.5323, -54.5439, -54.5521, -54.5579,
        -54.5621, -54.5650, -54.5671, -54.5686, -54.5696, -54.5703, -54.5708,
        -54.5712, -54.5715, -54.5716, -54.5718, -54.5718, -54.5719, -54.5719,
        -54.5720, -54.5720, -54.5720, -54.5720], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.0983e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.0983e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9471, -74.9855, -75.0067, -75.0199, -75.0292, -75.0359, -75.0407,
        -75.0443, -75.0468, -75.0486, -75.0499, -75.0508, -75.0514, -75.0519,
        -75.0522, -75.0524, -75.0526, -75.0527, -75.0528, -75.0528, -75.0529,
        -75.0529, -75.0529, -75.0529, -75.0529], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.0518e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3150e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6547], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.3150e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5715, -54.5716, -54.5718, -54.5718, -54.5719, -54.5719, -54.5720,
        -54.5720, -54.5720, -54.5720], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0524, -75.0526, -75.0527, -75.0528, -75.0528, -75.0529, -75.0529,
        -75.0529, -75.0529, -75.0529], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6547], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 16 	 N2O 	 N2O 	 0.0006734947390570267

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2589, -0.4416, -0.4659, -0.4774, -0.4844, -0.4890, -0.4922, -0.4944,
        -0.4959, -0.4969, -0.4977, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5812e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5034e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1626e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9662, -75.0085, -75.0241, -75.0329, -75.0387, -75.0429, -75.0458,
        -75.0479, -75.0494, -75.0505, -75.0513, -75.0518, -75.0522, -75.0524,
        -75.0526, -75.0527, -75.0528, -75.0529, -75.0529, -75.0530, -75.0530,
        -75.0530, -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9045e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2116e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6461, -75.6815, -75.6974, -75.7064, -75.7126, -75.7170, -75.7201,
        -75.7224, -75.7240, -75.7251, -75.7259, -75.7265, -75.7269, -75.7272,
        -75.7274, -75.7275, -75.7276, -75.7277, -75.7277, -75.7278, -75.7278,
        -75.7278, -75.7278, -75.7278, -75.7278], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0092, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0527, -75.0528, -75.0529, -75.0529, -75.0530, -75.0530, -75.0530,
        -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7275, -75.7276, -75.7277, -75.7277, -75.7278, -75.7278, -75.7278,
        -75.7278, -75.7278, -75.7278], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 21 	 HO 	 OH 	 5.222818855676392e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4072, -54.4749, -54.5072, -54.5265, -54.5397, -54.5491, -54.5558,
        -54.5606, -54.5640, -54.5664, -54.5681, -54.5693, -54.5702, -54.5708,
        -54.5712, -54.5715, -54.5717, -54.5718, -54.5719, -54.5720, -54.5720,
        -54.5721, -54.5721, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.0559e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.0559e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9475, -74.9865, -75.0076, -75.0206, -75.0297, -75.0363, -75.0411,
        -75.0445, -75.0470, -75.0488, -75.0501, -75.0509, -75.0516, -75.0520,
        -75.0523, -75.0525, -75.0527, -75.0528, -75.0529, -75.0529, -75.0530,
        -75.0530, -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.9627e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3019e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0850, -129.7679, -129.6963, -129.6708, -129.6588, -129.6514,
        -129.6467, -129.6437, -129.6417, -129.6404, -129.6396, -129.6390,
        -129.6387, -129.6385, -129.6383, -129.6382, -129.6382, -129.6381,
        -129.6381, -129.6381, -129.6381, -129.6381, -129.6381, -129.6381,
        -129.6381], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5255e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5715, -54.5717, -54.5718, -54.5719, -54.5720, -54.5720, -54.5721,
        -54.5721, -54.5721, -54.5721], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0525, -75.0527, -75.0528, -75.0529, -75.0529, -75.0530, -75.0530,
        -75.0530, -75.0530, -75.0530], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6382, -129.6382, -129.6381, -129.6381, -129.6381, -129.6381,
        -129.6381, -129.6381, -129.6381, -129.6381], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 12 	 NO 	 NO 	 4.75735858963031e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2186, -107.2658, -107.2305, -107.2272, -107.2241, -107.2227,
        -107.2224, -107.2226, -107.2230, -107.2235, -107.2240, -107.2245,
        -107.2249, -107.2253, -107.2257, -107.2261, -107.2264, -107.2268,
        -107.2270, -107.2272, -107.2274, -107.2276, -107.2277, -107.2278,
        -107.2279], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.4650e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6685, -99.6902, -99.7007, -99.7070, -99.7114, -99.7146, -99.7169,
        -99.7186, -99.7198, -99.7206, -99.7212, -99.7217, -99.7220, -99.7222,
        -99.7224, -99.7225, -99.7225, -99.7226, -99.7226, -99.7227, -99.7227,
        -99.7227, -99.7227, -99.7227, -99.7227], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(9.0511e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4577, -7.4649, -7.4675, -7.4688, -7.4698, -7.4708, -7.4715, -7.4715,
        -7.4712, -7.4710, -7.4710, -7.4710, -7.4710, -7.4711, -7.4711, -7.4711,
        -7.4711, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712,
        -7.4712], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5240e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3455e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2261, -107.2264, -107.2268, -107.2270, -107.2272, -107.2274,
        -107.2276, -107.2277, -107.2278, -107.2279], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7225, -99.7225, -99.7226, -99.7226, -99.7227, -99.7227, -99.7227,
        -99.7227, -99.7227, -99.7227], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4711, -7.4711, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712,
        -7.4712, -7.4712], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 2 	 FLi 	 LiF 	 0.008307289804051009

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0870, -460.1157, -460.1254, -460.1309, -460.1345, -460.1372,
        -460.1391, -460.1404, -460.1414, -460.1421, -460.1426, -460.1429,
        -460.1431, -460.1433, -460.1434, -460.1435, -460.1436, -460.1436,
        -460.1437, -460.1437, -460.1437, -460.1437, -460.1437, -460.1437,
        -460.1437], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.3614e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.3614e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1435, -460.1436, -460.1436, -460.1437, -460.1437, -460.1437,
        -460.1437, -460.1437, -460.1437, -460.1437], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 23 	 Cl 	 Cl 	 4.306988323985586e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6056, -199.5511, -199.5369, -199.5296, -199.5250, -199.5218,
        -199.5196, -199.5181, -199.5170, -199.5163, -199.5157, -199.5154,
        -199.5151, -199.5149, -199.5148, -199.5147, -199.5146, -199.5146,
        -199.5146, -199.5145, -199.5145, -199.5145, -199.5145, -199.5145,
        -199.5145], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.1825e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3650e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6720, -99.6948, -99.7042, -99.7097, -99.7135, -99.7163, -99.7182,
        -99.7196, -99.7207, -99.7214, -99.7219, -99.7223, -99.7225, -99.7227,
        -99.7228, -99.7229, -99.7230, -99.7230, -99.7230, -99.7231, -99.7231,
        -99.7231, -99.7231, -99.7231, -99.7231], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.3913e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3734e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5147, -199.5146, -199.5146, -199.5146, -199.5145, -199.5145,
        -199.5145, -199.5145, -199.5145, -199.5145], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7229, -99.7230, -99.7230, -99.7230, -99.7231, -99.7231, -99.7231,
        -99.7231, -99.7231, -99.7231], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 6 	 F2 	 F2 	 9.742946917940386e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.8115, -109.7898, -109.6951, -109.6316, -109.5897, -109.5611,
        -109.5413, -109.5275, -109.5179, -109.5112, -109.5066, -109.5034,
        -109.5011, -109.4995, -109.4984, -109.4977, -109.4971, -109.4967,
        -109.4965, -109.4963, -109.4962, -109.4961, -109.4960, -109.4960,
        -109.4959], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2524e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4137, -54.4833, -54.5136, -54.5313, -54.5433, -54.5518, -54.5579,
        -54.5622, -54.5653, -54.5674, -54.5690, -54.5700, -54.5708, -54.5713,
        -54.5717, -54.5719, -54.5721, -54.5723, -54.5723, -54.5724, -54.5724,
        -54.5725, -54.5725, -54.5725, -54.5725], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6430e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.4977, -109.4971, -109.4967, -109.4965, -109.4963, -109.4962,
        -109.4961, -109.4960, -109.4960, -109.4959], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5719, -54.5721, -54.5723, -54.5723, -54.5724, -54.5724, -54.5725,
        -54.5725, -54.5725, -54.5725], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 1 	 N2 	 N2 	 3.9956755782783865e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7516, -460.7909, -460.8020, -460.8077, -460.8113, -460.8138,
        -460.8155, -460.8167, -460.8175, -460.8181, -460.8185, -460.8188,
        -460.8190, -460.8192, -460.8193, -460.8193, -460.8194, -460.8194,
        -460.8194, -460.8195, -460.8195, -460.8195, -460.8195, -460.8195,
        -460.8195], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7356e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4713e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0856, -460.1155, -460.1259, -460.1319, -460.1359, -460.1387,
        -460.1408, -460.1423, -460.1434, -460.1441, -460.1447, -460.1450,
        -460.1453, -460.1455, -460.1456, -460.1457, -460.1458, -460.1458,
        -460.1459, -460.1459, -460.1459, -460.1459, -460.1459, -460.1459,
        -460.1459], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3741e-07, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4716e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2176, -0.4288, -0.4588, -0.4729, -0.4814, -0.4870, -0.4908, -0.4934,
        -0.4952, -0.4964, -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5860e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7604e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8193, -460.8194, -460.8194, -460.8194, -460.8195, -460.8195,
        -460.8195, -460.8195, -460.8195, -460.8195], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1457, -460.1458, -460.1458, -460.1459, -460.1459, -460.1459,
        -460.1459, -460.1459, -460.1459, -460.1459], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 9 	 HCl 	 ClH 	 2.048823903530831e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2267, -162.2377, -162.2412, -162.2430, -162.2442, -162.2451,
        -162.2458, -162.2462, -162.2464, -162.2464, -162.2465, -162.2465,
        -162.2466, -162.2466, -162.2466, -162.2466, -162.2467, -162.2467,
        -162.2467, -162.2467, -162.2467, -162.2467, -162.2467, -162.2467,
        -162.2467], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6961e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.6961e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2466, -162.2467, -162.2467, -162.2467, -162.2467, -162.2467,
        -162.2467, -162.2467, -162.2467, -162.2467], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 28 	 Na 	 Na 	 1.4669588194083251e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9583, -75.0018, -75.0196, -75.0299, -75.0369, -75.0419, -75.0455,
        -75.0481, -75.0499, -75.0512, -75.0521, -75.0527, -75.0532, -75.0535,
        -75.0537, -75.0539, -75.0540, -75.0541, -75.0541, -75.0542, -75.0542,
        -75.0542, -75.0542, -75.0543, -75.0543], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1224e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1224e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0539, -75.0540, -75.0541, -75.0541, -75.0542, -75.0542, -75.0542,
        -75.0542, -75.0543, -75.0543], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 29 	 O 	 O 	 3.98107905584956e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3025, -0.4541, -0.4729, -0.4819, -0.4875, -0.4911, -0.4936, -0.4954,
        -0.4966, -0.4974, -0.4980, -0.4984, -0.4987, -0.4989, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5969e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2061e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1939e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4140, -54.4835, -54.5140, -54.5319, -54.5440, -54.5525, -54.5587,
        -54.5630, -54.5661, -54.5683, -54.5698, -54.5709, -54.5716, -54.5722,
        -54.5726, -54.5728, -54.5730, -54.5731, -54.5732, -54.5733, -54.5733,
        -54.5734, -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.8722e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2627e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2103], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.2627e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5728, -54.5730, -54.5731, -54.5732, -54.5733, -54.5733, -54.5734,
        -54.5734, -54.5734, -54.5734], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2103], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 14 	 HN 	 NH 	 2.8993771798250755e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.7349, -188.8381, -188.6490, -188.5378, -188.4690, -188.4221,
        -188.3894, -188.3663, -188.3500, -188.3384, -188.3302, -188.3244,
        -188.3203, -188.3173, -188.3152, -188.3137, -188.3126, -188.3119,
        -188.3113, -188.3109, -188.3107, -188.3105, -188.3103, -188.3102,
        -188.3101], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7898e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7509, -37.7884, -37.8015, -37.8087, -37.8135, -37.8169, -37.8192,
        -37.8209, -37.8221, -37.8230, -37.8236, -37.8240, -37.8243, -37.8245,
        -37.8247, -37.8248, -37.8248, -37.8249, -37.8249, -37.8250, -37.8250,
        -37.8250, -37.8250, -37.8250, -37.8250], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3962e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9593, -75.0029, -75.0206, -75.0309, -75.0379, -75.0429, -75.0464,
        -75.0490, -75.0508, -75.0521, -75.0530, -75.0536, -75.0541, -75.0544,
        -75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5812e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3137, -188.3126, -188.3119, -188.3113, -188.3109, -188.3107,
        -188.3105, -188.3103, -188.3102, -188.3101], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8248, -37.8248, -37.8249, -37.8249, -37.8250, -37.8250, -37.8250,
        -37.8250, -37.8250, -37.8250], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551, -75.0551,
        -75.0551, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 4 	 CO2 	 CO2 	 0.01429957723948622

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6184, -324.5608, -324.5458, -324.5381, -324.5332, -324.5299,
        -324.5276, -324.5260, -324.5249, -324.5241, -324.5235, -324.5231,
        -324.5229, -324.5227, -324.5225, -324.5225, -324.5224, -324.5223,
        -324.5223, -324.5223, -324.5223, -324.5223, -324.5223, -324.5222,
        -324.5222], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.1473e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2945e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2240, -162.2366, -162.2413, -162.2439, -162.2456, -162.2467,
        -162.2475, -162.2482, -162.2487, -162.2488, -162.2489, -162.2490,
        -162.2490, -162.2491, -162.2491, -162.2491, -162.2491, -162.2491,
        -162.2491, -162.2492, -162.2492, -162.2492, -162.2492, -162.2492,
        -162.2492], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1656e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2977e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5225, -324.5224, -324.5223, -324.5223, -324.5223, -324.5223,
        -324.5223, -324.5223, -324.5222, -324.5222], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2491, -162.2491, -162.2491, -162.2491, -162.2492, -162.2492,
        -162.2492, -162.2492, -162.2492, -162.2492], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 11 	 Na2 	 Na2 	 2.736033810559552e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.7278, -113.4200, -113.3468, -113.3078, -113.2842, -113.2679,
        -113.2566, -113.2487, -113.2431, -113.2392, -113.2365, -113.2345,
        -113.2332, -113.2323, -113.2316, -113.2311, -113.2308, -113.2306,
        -113.2304, -113.2303, -113.2302, -113.2302, -113.2301, -113.2301,
        -113.2301], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4254e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7406, -37.7797, -37.7953, -37.8042, -37.8103, -37.8145, -37.8175,
        -37.8197, -37.8212, -37.8223, -37.8231, -37.8236, -37.8240, -37.8243,
        -37.8245, -37.8246, -37.8247, -37.8248, -37.8248, -37.8249, -37.8249,
        -37.8249, -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5060e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9530, -74.9953, -75.0149, -75.0267, -75.0348, -75.0406, -75.0448,
        -75.0479, -75.0500, -75.0516, -75.0527, -75.0534, -75.0540, -75.0544,
        -75.0546, -75.0548, -75.0549, -75.0550, -75.0551, -75.0551, -75.0552,
        -75.0552, -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5558e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2311, -113.2308, -113.2306, -113.2304, -113.2303, -113.2302,
        -113.2302, -113.2301, -113.2301, -113.2301], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8246, -37.8247, -37.8248, -37.8248, -37.8249, -37.8249, -37.8249,
        -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0548, -75.0549, -75.0550, -75.0551, -75.0551, -75.0552, -75.0552,
        -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 8 	 CO 	 OC 	 0.0009648887551715937

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7350, -37.7727, -37.7901, -37.8004, -37.8074, -37.8125, -37.8160,
        -37.8186, -37.8205, -37.8218, -37.8227, -37.8233, -37.8238, -37.8241,
        -37.8243, -37.8245, -37.8246, -37.8247, -37.8247, -37.8248, -37.8248,
        -37.8248, -37.8248, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5902e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5902e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8245, -37.8246, -37.8247, -37.8247, -37.8248, -37.8248, -37.8248,
        -37.8248, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 22 	 C 	 C 	 5.7253638875312085e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7448, -37.7836, -37.7981, -37.8062, -37.8117, -37.8155, -37.8183,
        -37.8202, -37.8216, -37.8226, -37.8233, -37.8237, -37.8241, -37.8243,
        -37.8245, -37.8246, -37.8247, -37.8248, -37.8248, -37.8248, -37.8249,
        -37.8249, -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5206e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.5206e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3135, -0.4571, -0.4746, -0.4830, -0.4882, -0.4916, -0.4940, -0.4956,
        -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6058e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1412e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2870e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8247], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2870e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8246, -37.8247, -37.8248, -37.8248, -37.8248, -37.8249, -37.8249,
        -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8247], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 17 	 CH3 	 CH3 	 0.00013043841865660691

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.9767, -93.5129, -93.3914, -93.3395, -93.3016, -93.2773, -93.2598,
        -93.2475, -93.2387, -93.2324, -93.2279, -93.2246, -93.2223, -93.2206,
        -93.2193, -93.2184, -93.2178, -93.2173, -93.2169, -93.2167, -93.2165,
        -93.2163, -93.2162, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7614e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7507, -37.7882, -37.8013, -37.8085, -37.8134, -37.8167, -37.8191,
        -37.8208, -37.8220, -37.8229, -37.8235, -37.8239, -37.8242, -37.8244,
        -37.8246, -37.8247, -37.8247, -37.8248, -37.8248, -37.8249, -37.8249,
        -37.8249, -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.4834e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2824, -0.4485, -0.4698, -0.4799, -0.4861, -0.4902, -0.4930, -0.4949,
        -0.4963, -0.4972, -0.4979, -0.4983, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6073e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.2934e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4048, -54.4676, -54.5021, -54.5231, -54.5377, -54.5481, -54.5556,
        -54.5609, -54.5648, -54.5675, -54.5694, -54.5707, -54.5717, -54.5723,
        -54.5728, -54.5731, -54.5733, -54.5735, -54.5736, -54.5737, -54.5738,
        -54.5738, -54.5738, -54.5738, -54.5738], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5713e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2184, -93.2178, -93.2173, -93.2169, -93.2167, -93.2165, -93.2163,
        -93.2162, -93.2162, -93.2161], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8247, -37.8247, -37.8248, -37.8248, -37.8249, -37.8249, -37.8249,
        -37.8249, -37.8249, -37.8249], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5731, -54.5733, -54.5735, -54.5736, -54.5737, -54.5738, -54.5738,
        -54.5738, -54.5738, -54.5738], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 3 	 CHN 	 CNH 	 0.007676350497344315

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6733, -99.6957, -99.7056, -99.7115, -99.7156, -99.7185, -99.7207,
        -99.7222, -99.7233, -99.7241, -99.7246, -99.7250, -99.7253, -99.7255,
        -99.7257, -99.7258, -99.7258, -99.7259, -99.7259, -99.7259, -99.7259,
        -99.7260, -99.7260, -99.7260, -99.7260], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.5646e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.5646e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7258, -99.7258, -99.7259, -99.7259, -99.7259, -99.7259, -99.7260,
        -99.7260, -99.7260, -99.7260], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 12 	 24 	 F 	 F 	 1.4684322103627906e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4562, -7.4635, -7.4665, -7.4682, -7.4693, -7.4702, -7.4712, -7.4717,
        -7.4715, -7.4712, -7.4711, -7.4711, -7.4711, -7.4711, -7.4712, -7.4712,
        -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.6364e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2647e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9305e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4712, -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713, -7.4713], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 26 	 Li 	 Li 	 1.068748768735832e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3374, -0.4633, -0.4782, -0.4853, -0.4898, -0.4927, -0.4947, -0.4962,
        -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6083e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0478e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2166e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 25 	 H 	 H 	 9.011873018582656e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2126, -0.4272, -0.4579, -0.4723, -0.4810, -0.4867, -0.4906, -0.4933,
        -0.4951, -0.4964, -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6086e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7521e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2174e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9539, -74.9963, -75.0158, -75.0275, -75.0355, -75.0412, -75.0454,
        -75.0483, -75.0505, -75.0520, -75.0531, -75.0538, -75.0544, -75.0548,
        -75.0550, -75.0552, -75.0553, -75.0554, -75.0555, -75.0555, -75.0556,
        -75.0556, -75.0556, -75.0556, -75.0556], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.3322e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2507e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4252], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2507e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0552, -75.0553, -75.0554, -75.0555, -75.0555, -75.0556, -75.0556,
        -75.0556, -75.0556, -75.0556], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4252], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 12 	 19 	 H2O 	 OH2 	 2.657373814728673e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e12)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e12/2022-11-29_10:09:21.572573_0.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e12/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 12 || ,[' rho : 4.622968', ' ae : 47.144436', ' E : 2.610722'] ,|| total loss 38.665309 || CHKPT: _0.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------27----------------
TRAINING ON MOLECULE:  ,N
SUBMOLECULES: ['N']
SUBMOLECULE INDICES: [17]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4278, -54.4969, -54.5238, -54.5392, -54.5494, -54.5566, -54.5617,
        -54.5653, -54.5679, -54.5697, -54.5710, -54.5718, -54.5725, -54.5729,
        -54.5732, -54.5734, -54.5736, -54.5737, -54.5738, -54.5738, -54.5739,
        -54.5739, -54.5739, -54.5739, -54.5739], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.3909e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.3909e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5734, -54.5736, -54.5737, -54.5738, -54.5738, -54.5739, -54.5739,
        -54.5739, -54.5739, -54.5739], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 27 	 N 	 N 	 5.4605605306893974e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------13----------------
TRAINING ON MOLECULE:  , 21NOO
SUBMOLECULES: ['NO2', 'N', 'O', 'O']
SUBMOLECULE INDICES: [21, 17, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4340, -54.5020, -54.5275, -54.5418, -54.5514, -54.5580, -54.5628,
        -54.5661, -54.5685, -54.5702, -54.5713, -54.5722, -54.5727, -54.5731,
        -54.5734, -54.5736, -54.5738, -54.5739, -54.5739, -54.5740, -54.5740,
        -54.5740, -54.5741, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.2497e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.2497e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9505, -74.9889, -75.0100, -75.0232, -75.0323, -75.0390, -75.0438,
        -75.0473, -75.0498, -75.0516, -75.0529, -75.0538, -75.0544, -75.0549,
        -75.0552, -75.0554, -75.0555, -75.0557, -75.0557, -75.0558, -75.0558,
        -75.0559, -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.2094e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4591e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3634], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3634], dtype=torch.float64)
E_PRED: tensor([-205.0846], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130194])
ao_eval   ---   torch.Size([1, 10, 130194, 117])
grid_weights   ---   torch.Size([1, 130194])
-204.87297985889327
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(9.4591e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NOO': tensor([-0.3634], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5736, -54.5738, -54.5739, -54.5739, -54.5740, -54.5740, -54.5740,
        -54.5741, -54.5741, -54.5741], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0554, -75.0555, -75.0557, -75.0557, -75.0558, -75.0558, -75.0559,
        -75.0559, -75.0559, -75.0559], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NOO': tensor([-205.0846], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 13 	 NO2 	 NO2 	 0.0012478742289747323

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9712, -75.0130, -75.0282, -75.0366, -75.0423, -75.0463, -75.0492,
        -75.0512, -75.0526, -75.0537, -75.0544, -75.0549, -75.0553, -75.0555,
        -75.0557, -75.0558, -75.0559, -75.0560, -75.0560, -75.0560, -75.0561,
        -75.0561, -75.0561, -75.0561, -75.0561], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.0384e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.0384e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4259], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(3.0384e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0558, -75.0559, -75.0560, -75.0560, -75.0560, -75.0561, -75.0561,
        -75.0561, -75.0561, -75.0561], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4259], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 15 	 O3 	 O3 	 0.0005348529655922322

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------23----------------
TRAINING ON MOLECULE:  ,Cl
SUBMOLECULES: ['Cl']
SUBMOLECULE INDICES: [13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1112, -460.1356, -460.1433, -460.1475, -460.1503, -460.1522,
        -460.1536, -460.1546, -460.1554, -460.1559, -460.1562, -460.1565,
        -460.1566, -460.1568, -460.1569, -460.1569, -460.1570, -460.1570,
        -460.1570, -460.1570, -460.1570, -460.1570, -460.1570, -460.1571,
        -460.1571], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.7365e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.7365e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'Cl': tensor([-460.1569, -460.1570, -460.1570, -460.1570, -460.1570, -460.1570,
        -460.1570, -460.1570, -460.1571, -460.1571], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 23 	 Cl 	 Cl 	 1.914761540647909e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------8----------------
TRAINING ON MOLECULE:  ,  8OC
SUBMOLECULES: ['CO', 'O', 'C']
SUBMOLECULE INDICES: [8, 19, 12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OC', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4142], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4142], dtype=torch.float64)
E_PRED: tensor([-113.5844, -113.3648, -113.3136, -113.2861, -113.2695, -113.2580,
        -113.2501, -113.2445, -113.2406, -113.2379, -113.2360, -113.2346,
        -113.2337, -113.2330, -113.2326, -113.2323, -113.2320, -113.2319,
        -113.2318, -113.2317, -113.2316, -113.2316, -113.2316, -113.2315,
        -113.2315], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 3279])
ao_eval   ---   torch.Size([1, 10, 3279, 78])
grid_weights   ---   torch.Size([1, 3279])
-113.20173021651497
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.4196e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7493, -37.7873, -37.8007, -37.8081, -37.8131, -37.8166, -37.8191,
        -37.8209, -37.8221, -37.8230, -37.8236, -37.8241, -37.8244, -37.8246,
        -37.8247, -37.8248, -37.8249, -37.8250, -37.8250, -37.8250, -37.8250,
        -37.8251, -37.8251, -37.8251, -37.8251], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.3294e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9501, -74.9845, -75.0063, -75.0203, -75.0302, -75.0374, -75.0427,
        -75.0465, -75.0493, -75.0513, -75.0527, -75.0536, -75.0544, -75.0548,
        -75.0552, -75.0554, -75.0556, -75.0557, -75.0558, -75.0559, -75.0559,
        -75.0559, -75.0560, -75.0560, -75.0560], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.1689e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'OC': tensor([-0.4142], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'OC': tensor([-113.2323, -113.2320, -113.2319, -113.2318, -113.2317, -113.2316,
        -113.2316, -113.2316, -113.2315, -113.2315], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8248, -37.8249, -37.8250, -37.8250, -37.8250, -37.8250, -37.8251,
        -37.8251, -37.8251, -37.8251], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0554, -75.0556, -75.0557, -75.0558, -75.0559, -75.0559, -75.0559,
        -75.0560, -75.0560, -75.0560], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 8 	 CO 	 OC 	 0.0009489510555696499

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------11----------------
TRAINING ON MOLECULE:  , 11NaNa
SUBMOLECULES: ['Na2', 'Na', 'Na']
SUBMOLECULE INDICES: [11, 18, 18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0273], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0273], dtype=torch.float64)
E_PRED: tensor([-324.6323, -324.5682, -324.5515, -324.5430, -324.5376, -324.5339,
        -324.5314, -324.5296, -324.5284, -324.5275, -324.5269, -324.5265,
        -324.5262, -324.5259, -324.5258, -324.5257, -324.5256, -324.5256,
        -324.5255, -324.5255, -324.5255, -324.5255, -324.5255, -324.5255,
        -324.5255], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 1992])
ao_eval   ---   torch.Size([1, 10, 1992, 94])
grid_weights   ---   torch.Size([1, 1992])
-324.03216786711033
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.2276e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4552e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2245, -162.2372, -162.2422, -162.2450, -162.2469, -162.2480,
        -162.2490, -162.2497, -162.2502, -162.2504, -162.2505, -162.2506,
        -162.2506, -162.2507, -162.2507, -162.2507, -162.2507, -162.2507,
        -162.2508, -162.2508, -162.2508, -162.2508, -162.2508, -162.2508,
        -162.2508], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.5746e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4568e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NaNa': tensor([-0.0273], dtype=torch.float64), 'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'NaNa': tensor([-324.5257, -324.5256, -324.5256, -324.5255, -324.5255, -324.5255,
        -324.5255, -324.5255, -324.5255, -324.5255], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Na': tensor([-162.2507, -162.2507, -162.2507, -162.2508, -162.2508, -162.2508,
        -162.2508, -162.2508, -162.2508, -162.2508], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 11 	 Na2 	 Na2 	 2.7378212260255596e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------22----------------
TRAINING ON MOLECULE:  ,C
SUBMOLECULES: ['C']
SUBMOLECULE INDICES: [12]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7460, -37.7846, -37.7987, -37.8067, -37.8120, -37.8157, -37.8184,
        -37.8203, -37.8216, -37.8225, -37.8232, -37.8237, -37.8240, -37.8242,
        -37.8244, -37.8245, -37.8246, -37.8247, -37.8247, -37.8247, -37.8248,
        -37.8248, -37.8248, -37.8248, -37.8248], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6120e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6120e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8245, -37.8246, -37.8247, -37.8247, -37.8247, -37.8248, -37.8248,
        -37.8248, -37.8248, -37.8248], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 22 	 C 	 C 	 5.775788605462007e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------26----------------
TRAINING ON MOLECULE:  ,Li
SUBMOLECULES: ['Li']
SUBMOLECULE INDICES: [16]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4580, -7.4651, -7.4676, -7.4690, -7.4699, -7.4709, -7.4716, -7.4716,
        -7.4713, -7.4711, -7.4710, -7.4710, -7.4711, -7.4711, -7.4711, -7.4712,
        -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4713, -7.4713,
        -7.4713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.5497e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.3045e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.9132e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'Li': tensor([-7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4712, -7.4713,
        -7.4713, -7.4713], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 26 	 Li 	 Li 	 1.083012805171009e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------12----------------
TRAINING ON MOLECULE:  , 20NO
SUBMOLECULES: ['NO', 'N', 'O']
SUBMOLECULE INDICES: [20, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4089, -54.4763, -54.5086, -54.5279, -54.5411, -54.5506, -54.5573,
        -54.5621, -54.5655, -54.5679, -54.5696, -54.5708, -54.5717, -54.5722,
        -54.5727, -54.5730, -54.5732, -54.5733, -54.5734, -54.5735, -54.5735,
        -54.5736, -54.5736, -54.5736, -54.5736], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7356e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.7356e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9652, -75.0081, -75.0245, -75.0338, -75.0400, -75.0444, -75.0476,
        -75.0499, -75.0515, -75.0526, -75.0534, -75.0540, -75.0544, -75.0547,
        -75.0549, -75.0550, -75.0551, -75.0552, -75.0552, -75.0553, -75.0553,
        -75.0553, -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.4640e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0200e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='NO', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0085], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0085], dtype=torch.float64)
E_PRED: tensor([-130.0705, -129.7683, -129.7001, -129.6753, -129.6635, -129.6560,
        -129.6514, -129.6483, -129.6463, -129.6450, -129.6442, -129.6436,
        -129.6432, -129.6430, -129.6428, -129.6428, -129.6427, -129.6426,
        -129.6426, -129.6426, -129.6426, -129.6426, -129.6426, -129.6426,
        -129.6426], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1685])
ao_eval   ---   torch.Size([1, 10, 1685, 78])
grid_weights   ---   torch.Size([1, 1685])
-129.5325870384829
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.6303e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NO': tensor([-0.0085], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5730, -54.5732, -54.5733, -54.5734, -54.5735, -54.5735, -54.5736,
        -54.5736, -54.5736, -54.5736], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0550, -75.0551, -75.0552, -75.0552, -75.0553, -75.0553, -75.0553,
        -75.0553, -75.0553, -75.0553], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NO': tensor([-129.6428, -129.6427, -129.6426, -129.6426, -129.6426, -129.6426,
        -129.6426, -129.6426, -129.6426, -129.6426], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 12 	 NO 	 NO 	 6.375792013191248e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------28----------------
TRAINING ON MOLECULE:  ,Na
SUBMOLECULES: ['Na']
SUBMOLECULE INDICES: [18]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Na', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-162.2546], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-162.2546], dtype=torch.float64)
E_PRED: tensor([-162.2299, -162.2408, -162.2443, -162.2462, -162.2473, -162.2481,
        -162.2488, -162.2492, -162.2494, -162.2495, -162.2496, -162.2496,
        -162.2496, -162.2497, -162.2497, -162.2497, -162.2497, -162.2497,
        -162.2497, -162.2497, -162.2497, -162.2497, -162.2497, -162.2497,
        -162.2497], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 37432])
ao_eval   ---   torch.Size([1, 10, 37432, 47])
grid_weights   ---   torch.Size([1, 37432])
-162.2546
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(2.5288e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.5288e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'Na': tensor([-162.2546], dtype=torch.float64)}
PRED_DICT:  ,{'Na': tensor([-162.2497, -162.2497, -162.2497, -162.2497, -162.2497, -162.2497,
        -162.2497, -162.2497, -162.2497, -162.2497], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 28 	 Na 	 Na 	 5.526822393269987e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------0----------------
TRAINING ON MOLECULE:  ,  0HH
SUBMOLECULES: ['H2', 'H', 'H']
SUBMOLECULE INDICES: [0, 15, 15]
================================
Calculating sub-atoms in molecule --  ,Atoms(symbols='H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1743], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1743], dtype=torch.float64)
E_PRED: tensor([-1.0164, -1.1082, -1.1319, -1.1441, -1.1518, -1.1570, -1.1606, -1.1631,
        -1.1649, -1.1661, -1.1670, -1.1676, -1.1680, -1.1683, -1.1685, -1.1686,
        -1.1687, -1.1688, -1.1689, -1.1689, -1.1689, -1.1689, -1.1690, -1.1690,
        -1.1690], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 30, 30])
mo_energy   ---   torch.Size([2, 30])
dm_ref   ---   torch.Size([1, 2, 30, 30])
rho   ---   torch.Size([1, 2, 614])
ao_eval   ---   torch.Size([1, 10, 614, 30])
grid_weights   ---   torch.Size([1, 614])
-1.1723488865668206
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 30])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 30])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6126e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2251e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2798, -0.4477, -0.4693, -0.4796, -0.4859, -0.4900, -0.4929, -0.4949,
        -0.4962, -0.4972, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6014e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3620e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1454e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'HH': tensor([-0.1743], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'HH': tensor([-1.1686, -1.1687, -1.1688, -1.1689, -1.1689, -1.1689, -1.1689, -1.1690,
        -1.1690, -1.1690], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 0 	 H2 	 H2 	 3.915073777241858e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------18----------------
TRAINING ON MOLECULE:  , 26CHH
SUBMOLECULES: ['CH2', 'C', 'H', 'H']
SUBMOLECULE INDICES: [26, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7344, -37.7716, -37.7892, -37.7997, -37.8069, -37.8120, -37.8157,
        -37.8183, -37.8202, -37.8215, -37.8225, -37.8231, -37.8236, -37.8239,
        -37.8242, -37.8243, -37.8245, -37.8245, -37.8246, -37.8246, -37.8247,
        -37.8247, -37.8247, -37.8247, -37.8247], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.7440e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.7440e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2509, -0.4392, -0.4646, -0.4766, -0.4838, -0.4886, -0.4919, -0.4942,
        -0.4957, -0.4968, -0.4976, -0.4981, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6014e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.5316e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2803e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3036], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3036], dtype=torch.float64)
E_PRED: tensor([-39.1405], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 90154])
ao_eval   ---   torch.Size([1, 10, 90154, 69])
grid_weights   ---   torch.Size([1, 90154])
-39.099742304510045
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2803e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHH': tensor([-0.3036], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8243, -37.8245, -37.8245, -37.8246, -37.8246, -37.8247, -37.8247,
        -37.8247, -37.8247, -37.8247], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHH': tensor([-39.1405], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 18 	 CH2 	 CH2 	 0.00018027781606855925

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------25----------------
TRAINING ON MOLECULE:  ,H
SUBMOLECULES: ['H']
SUBMOLECULE INDICES: [15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2192, -0.4293, -0.4591, -0.4731, -0.4815, -0.4870, -0.4908, -0.4934,
        -0.4952, -0.4965, -0.4973, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6012e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7480e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2026e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 25 	 H 	 H 	 9.831342489410939e-08

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------20----------------
TRAINING ON MOLECULE:  , 28NHHH
SUBMOLECULES: ['H3N', 'N', 'H', 'H', 'H']
SUBMOLECULE INDICES: [28, 17, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2818, -0.4483, -0.4696, -0.4798, -0.4860, -0.4901, -0.4930, -0.4949,
        -0.4962, -0.4972, -0.4978, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6014e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3514e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2030e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4175, -54.4871, -54.5167, -54.5339, -54.5455, -54.5537, -54.5596,
        -54.5637, -54.5667, -54.5687, -54.5702, -54.5712, -54.5720, -54.5725,
        -54.5728, -54.5731, -54.5733, -54.5734, -54.5735, -54.5735, -54.5736,
        -54.5736, -54.5736, -54.5736, -54.5737], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.6545e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2695e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4746], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4746], dtype=torch.float64)
E_PRED: tensor([-56.5474], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 114462])
ao_eval   ---   torch.Size([1, 10, 114462, 84])
grid_weights   ---   torch.Size([1, 114462])
-56.49996876041747
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2695e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NHHH': tensor([-0.4746], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5731, -54.5733, -54.5734, -54.5735, -54.5735, -54.5736, -54.5736,
        -54.5736, -54.5736, -54.5737], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NHHH': tensor([-56.5474], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 20 	 H3N 	 NH3 	 1.2567631112524947e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------14----------------
TRAINING ON MOLECULE:  , 22NH
SUBMOLECULES: ['HN', 'N', 'H']
SUBMOLECULE INDICES: [22, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2118, -0.4269, -0.4578, -0.4722, -0.4809, -0.4867, -0.4905, -0.4932,
        -0.4951, -0.4964, -0.4973, -0.4979, -0.4983, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6011e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.8044e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2025e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4441, -54.5093, -54.5324, -54.5452, -54.5537, -54.5596, -54.5637,
        -54.5667, -54.5688, -54.5702, -54.5713, -54.5720, -54.5725, -54.5729,
        -54.5731, -54.5733, -54.5734, -54.5735, -54.5736, -54.5736, -54.5736,
        -54.5736, -54.5737, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.5581e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2680e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='NH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1322], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1322], dtype=torch.float64)
E_PRED: tensor([-55.2108], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 66926])
ao_eval   ---   torch.Size([1, 10, 66926, 54])
grid_weights   ---   torch.Size([1, 66926])
-55.16304810830722
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
LOSSES_EVAL:  ,{}
tensor(9.2680e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64), 'NH': tensor([-0.1322], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5733, -54.5734, -54.5735, -54.5736, -54.5736, -54.5736, -54.5736,
        -54.5737, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NH': tensor([-55.2108], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 14 	 HN 	 NH 	 3.081156946038825e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------3----------------
TRAINING ON MOLECULE:  ,  3CNH
SUBMOLECULES: ['CHN', 'C', 'N', 'H']
SUBMOLECULE INDICES: [3, 12, 17, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CNH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4993], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4993], dtype=torch.float64)
E_PRED: tensor([-93.8226, -93.4462, -93.3562, -93.3129, -93.2841, -93.2648, -93.2512,
        -93.2416, -93.2347, -93.2298, -93.2263, -93.2237, -93.2219, -93.2206,
        -93.2196, -93.2189, -93.2184, -93.2180, -93.2177, -93.2175, -93.2174,
        -93.2172, -93.2172, -93.2171, -93.2171], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 93, 93])
mo_energy   ---   torch.Size([2, 93])
dm_ref   ---   torch.Size([1, 2, 93, 93])
rho   ---   torch.Size([1, 2, 1013])
ao_eval   ---   torch.Size([1, 10, 1013, 93])
grid_weights   ---   torch.Size([1, 1013])
-93.32175404633888
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 93])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 93])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.7311e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7398, -37.7788, -37.7946, -37.8037, -37.8098, -37.8141, -37.8172,
        -37.8194, -37.8210, -37.8221, -37.8229, -37.8235, -37.8239, -37.8241,
        -37.8243, -37.8245, -37.8246, -37.8246, -37.8247, -37.8247, -37.8247,
        -37.8248, -37.8248, -37.8248, -37.8248], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6420e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0005, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3379, -0.4634, -0.4782, -0.4854, -0.4898, -0.4927, -0.4947, -0.4961,
        -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.6016e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.0880e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4044, -54.4656, -54.5005, -54.5218, -54.5367, -54.5473, -54.5550,
        -54.5605, -54.5644, -54.5671, -54.5691, -54.5705, -54.5714, -54.5721,
        -54.5726, -54.5729, -54.5732, -54.5733, -54.5734, -54.5735, -54.5736,
        -54.5736, -54.5736, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.7218e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0006, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CNH': tensor([-0.4993], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'CNH': tensor([-93.2189, -93.2184, -93.2180, -93.2177, -93.2175, -93.2174, -93.2172,
        -93.2172, -93.2171, -93.2171], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8245, -37.8246, -37.8246, -37.8247, -37.8247, -37.8247, -37.8248,
        -37.8248, -37.8248, -37.8248], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994, -0.4994,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'N': tensor([-54.5729, -54.5732, -54.5733, -54.5734, -54.5735, -54.5736, -54.5736,
        -54.5736, -54.5737, -54.5737], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 3 	 CHN 	 CNH 	 0.0075708899676127

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------9----------------
TRAINING ON MOLECULE:  ,  9ClH
SUBMOLECULES: ['HCl', 'Cl', 'H']
SUBMOLECULE INDICES: [9, 13, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='ClH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1712], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1712], dtype=torch.float64)
E_PRED: tensor([-460.7400, -460.7897, -460.8037, -460.8109, -460.8154, -460.8185,
        -460.8207, -460.8221, -460.8232, -460.8239, -460.8244, -460.8248,
        -460.8250, -460.8252, -460.8253, -460.8254, -460.8255, -460.8255,
        -460.8255, -460.8256, -460.8256, -460.8256, -460.8256, -460.8256,
        -460.8256], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 62, 62])
mo_energy   ---   torch.Size([2, 62])
dm_ref   ---   torch.Size([1, 2, 62, 62])
rho   ---   torch.Size([1, 2, 1068])
ao_eval   ---   torch.Size([1, 10, 1068, 62])
grid_weights   ---   torch.Size([1, 1068])
-460.4234538667479
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 62])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 62])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.7413e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4827e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.0933, -460.1227, -460.1327, -460.1385, -460.1423, -460.1451,
        -460.1471, -460.1485, -460.1495, -460.1502, -460.1507, -460.1511,
        -460.1514, -460.1515, -460.1517, -460.1518, -460.1518, -460.1519,
        -460.1519, -460.1519, -460.1519, -460.1519, -460.1519, -460.1520,
        -460.1520], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(1.0688e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.4837e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2174, -0.4287, -0.4588, -0.4729, -0.4814, -0.4869, -0.4907, -0.4934,
        -0.4952, -0.4964, -0.4973, -0.4979, -0.4984, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4994,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5988e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.7727e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0001, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClH': tensor([-0.1712], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'ClH': tensor([-460.8254, -460.8255, -460.8255, -460.8255, -460.8256, -460.8256,
        -460.8256, -460.8256, -460.8256, -460.8256], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1518, -460.1518, -460.1519, -460.1519, -460.1519, -460.1519,
        -460.1519, -460.1519, -460.1520, -460.1520], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 9 	 HCl 	 ClH 	 2.1941609038660097e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4041, -54.4651, -54.5000, -54.5214, -54.5363, -54.5470, -54.5547,
        -54.5602, -54.5641, -54.5669, -54.5688, -54.5702, -54.5712, -54.5719,
        -54.5724, -54.5727, -54.5729, -54.5731, -54.5732, -54.5733, -54.5734,
        -54.5734, -54.5734, -54.5734, -54.5735], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9135e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.9135e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9580, -75.0013, -75.0194, -75.0300, -75.0372, -75.0424, -75.0461,
        -75.0487, -75.0506, -75.0519, -75.0529, -75.0536, -75.0540, -75.0544,
        -75.0546, -75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5920e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.0505e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6615], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.0505e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5727, -54.5729, -54.5731, -54.5732, -54.5733, -54.5734, -54.5734,
        -54.5734, -54.5734, -54.5735], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6615], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 16 	 N2O 	 N2O 	 0.0007629936653897865

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------2----------------
TRAINING ON MOLECULE:  ,  2LiF
SUBMOLECULES: ['FLi', 'Li', 'F']
SUBMOLECULE INDICES: [2, 16, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiF', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2224], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2224], dtype=torch.float64)
E_PRED: tensor([-107.2937, -107.2946, -107.2568, -107.2461, -107.2391, -107.2350,
        -107.2325, -107.2311, -107.2304, -107.2301, -107.2299, -107.2299,
        -107.2300, -107.2302, -107.2305, -107.2307, -107.2310, -107.2312,
        -107.2314, -107.2316, -107.2317, -107.2318, -107.2319, -107.2320,
        -107.2321], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1932])
ao_eval   ---   torch.Size([1, 10, 1932, 78])
grid_weights   ---   torch.Size([1, 1932])
-107.30594220504797
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(5.5234e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6751, -99.6977, -99.7070, -99.7124, -99.7161, -99.7188, -99.7207,
        -99.7221, -99.7231, -99.7238, -99.7243, -99.7246, -99.7249, -99.7251,
        -99.7252, -99.7253, -99.7253, -99.7254, -99.7254, -99.7254, -99.7254,
        -99.7254, -99.7255, -99.7255, -99.7255], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1537e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4559, -7.4628, -7.4661, -7.4679, -7.4691, -7.4700, -7.4710, -7.4716,
        -7.4716, -7.4713, -7.4711, -7.4711, -7.4711, -7.4711, -7.4712, -7.4712,
        -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.4811e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2670e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0011, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiF': tensor([-0.2224], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiF': tensor([-107.2307, -107.2310, -107.2312, -107.2314, -107.2316, -107.2317,
        -107.2318, -107.2319, -107.2320, -107.2321], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7253, -99.7253, -99.7254, -99.7254, -99.7254, -99.7254, -99.7254,
        -99.7255, -99.7255, -99.7255], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Li': tensor([-7.4712, -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713, -7.4713], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 2 	 FLi 	 LiF 	 0.008189445866650446

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9805, -8.0264, -8.0388, -8.0453, -8.0495, -8.0524, -8.0544, -8.0559,
        -8.0569, -8.0576, -8.0581, -8.0585, -8.0587, -8.0589, -8.0590, -8.0591,
        -8.0592, -8.0592, -8.0593, -8.0593, -8.0593, -8.0593, -8.0593, -8.0593,
        -8.0593], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1922e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.3844e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3222, -0.4593, -0.4759, -0.4839, -0.4887, -0.4920, -0.4942, -0.4958,
        -0.4969, -0.4976, -0.4981, -0.4985, -0.4988, -0.4989, -0.4991, -0.4992,
        -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4994], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5934e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.1882e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.3031e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4554, -7.4619, -7.4654, -7.4674, -7.4687, -7.4697, -7.4707, -7.4715,
        -7.4717, -7.4714, -7.4712, -7.4711, -7.4711, -7.4711, -7.4711, -7.4712,
        -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.4755e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.2684e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2015e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0591, -8.0592, -8.0592, -8.0593, -8.0593, -8.0593, -8.0593, -8.0593,
        -8.0593, -8.0593], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4994], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4712, -7.4712, -7.4712, -7.4713, -7.4713, -7.4713, -7.4713, -7.4713,
        -7.4713, -7.4713], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 10 	 HLi 	 LiH 	 3.0431248332824236e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------24----------------
TRAINING ON MOLECULE:  ,F
SUBMOLECULES: ['F']
SUBMOLECULE INDICES: [14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6705, -99.6910, -99.7019, -99.7085, -99.7132, -99.7166, -99.7190,
        -99.7208, -99.7221, -99.7230, -99.7237, -99.7242, -99.7245, -99.7247,
        -99.7249, -99.7250, -99.7251, -99.7251, -99.7252, -99.7252, -99.7252,
        -99.7252, -99.7253, -99.7253, -99.7253], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.4295e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.4295e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'F': tensor([-99.7250, -99.7251, -99.7251, -99.7252, -99.7252, -99.7252, -99.7252,
        -99.7253, -99.7253, -99.7253], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 24 	 F 	 F 	 1.742891509613341e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------1----------------
TRAINING ON MOLECULE:  ,  1NN
SUBMOLECULES: ['N2', 'N', 'N']
SUBMOLECULE INDICES: [1, 17, 17]
================================
Irrelevant index 0. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3641], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3641], dtype=torch.float64)
E_PRED: tensor([-110.5759, -109.9035, -109.7514, -109.6700, -109.6176, -109.5818,
        -109.5569, -109.5394, -109.5272, -109.5186, -109.5126, -109.5084,
        -109.5055, -109.5035, -109.5020, -109.5010, -109.5003, -109.4998,
        -109.4995, -109.4992, -109.4990, -109.4989, -109.4988, -109.4988,
        -109.4987], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 1916])
ao_eval   ---   torch.Size([1, 10, 1916, 78])
grid_weights   ---   torch.Size([1, 1916])
-109.41916243018873
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.2489e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4098, -54.4776, -54.5095, -54.5285, -54.5415, -54.5507, -54.5573,
        -54.5620, -54.5654, -54.5677, -54.5694, -54.5706, -54.5714, -54.5720,
        -54.5724, -54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732,
        -54.5733, -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(6.9787e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0002, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'NN': tensor([-0.3641], dtype=torch.float64), 'N': tensor([-54.5892], dtype=torch.float64)}
PRED_DICT:  ,{'NN': tensor([-109.5010, -109.5003, -109.4998, -109.4995, -109.4992, -109.4990,
        -109.4989, -109.4988, -109.4988, -109.4987], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'N': tensor([-54.5727, -54.5729, -54.5730, -54.5731, -54.5732, -54.5732, -54.5733,
        -54.5733, -54.5733, -54.5733], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 1 	 N2 	 N2 	 3.271716963355969e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------6----------------
TRAINING ON MOLECULE:  ,  6FF
SUBMOLECULES: ['F2', 'F', 'F']
SUBMOLECULE INDICES: [6, 14, 14]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0618], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0618], dtype=torch.float64)
E_PRED: tensor([-199.6636, -199.5785, -199.5558, -199.5442, -199.5367, -199.5316,
        -199.5281, -199.5256, -199.5239, -199.5226, -199.5218, -199.5212,
        -199.5207, -199.5204, -199.5202, -199.5201, -199.5200, -199.5199,
        -199.5198, -199.5198, -199.5198, -199.5198, -199.5197, -199.5197,
        -199.5197], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 78, 78])
mo_energy   ---   torch.Size([2, 78])
dm_ref   ---   torch.Size([1, 2, 78, 78])
rho   ---   torch.Size([1, 2, 4698])
ao_eval   ---   torch.Size([1, 10, 4698, 78])
grid_weights   ---   torch.Size([1, 4698])
-199.33646597476576
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 78])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 78])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(3.2842e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5684e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='F', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-99.7339], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-99.7339], dtype=torch.float64)
E_PRED: tensor([-99.6752, -99.6978, -99.7071, -99.7125, -99.7162, -99.7188, -99.7207,
        -99.7221, -99.7231, -99.7238, -99.7243, -99.7246, -99.7249, -99.7250,
        -99.7252, -99.7253, -99.7253, -99.7254, -99.7254, -99.7254, -99.7254,
        -99.7254, -99.7254, -99.7254, -99.7255], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 13328])
ao_eval   ---   torch.Size([1, 10, 13328, 39])
grid_weights   ---   torch.Size([1, 13328])
-99.7339
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(5.1684e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(6.5735e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'FF': tensor([-0.0618], dtype=torch.float64), 'F': tensor([-99.7339], dtype=torch.float64)}
PRED_DICT:  ,{'FF': tensor([-199.5201, -199.5200, -199.5199, -199.5198, -199.5198, -199.5198,
        -199.5198, -199.5197, -199.5197, -199.5197], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'F': tensor([-99.7253, -99.7253, -99.7254, -99.7254, -99.7254, -99.7254, -99.7254,
        -99.7254, -99.7254, -99.7255], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 6 	 F2 	 F2 	 1.1540029909809899e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------7----------------
TRAINING ON MOLECULE:  ,  7CCHH
SUBMOLECULES: ['C2H2', 'C', 'C', 'H', 'H']
SUBMOLECULE INDICES: [7, 12, 12, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C2H2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6459], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6459], dtype=torch.float64)
E_PRED: tensor([-77.8544, -72.8591, -74.9954, -75.8108, -76.2762, -76.5783, -76.7834,
        -76.9250, -77.0235, -77.0923, -77.1406, -77.1745, -77.1982, -77.2148,
        -77.2265, -77.2347, -77.2405, -77.2445, -77.2474, -77.2493, -77.2507,
        -77.2517, -77.2524, -77.2529, -77.2532], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 108, 108])
mo_energy   ---   torch.Size([2, 108])
dm_ref   ---   torch.Size([1, 2, 108, 108])
rho   ---   torch.Size([1, 2, 1924])
ao_eval   ---   torch.Size([1, 10, 1924, 108])
grid_weights   ---   torch.Size([1, 1924])
-77.23364709931926
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 108])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 108])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.6800e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7335, -37.7695, -37.7876, -37.7985, -37.8060, -37.8113, -37.8152,
        -37.8179, -37.8199, -37.8213, -37.8223, -37.8230, -37.8235, -37.8238,
        -37.8241, -37.8242, -37.8244, -37.8244, -37.8245, -37.8245, -37.8246,
        -37.8246, -37.8246, -37.8246, -37.8246], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.8277e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2913, -0.4510, -0.4711, -0.4808, -0.4867, -0.4906, -0.4933, -0.4951,
        -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5915e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3452e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0003, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'CCHH': tensor([-0.6459], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64)}
PRED_DICT:  ,{'CCHH': tensor([-77.2347, -77.2405, -77.2445, -77.2474, -77.2493, -77.2507, -77.2517,
        -77.2524, -77.2529, -77.2532], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8242, -37.8244, -37.8244, -37.8245, -37.8245, -37.8246, -37.8246,
        -37.8246, -37.8246, -37.8246], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 7 	 C2H2 	 C2H2 	 0.00039562775617947083

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------19----------------
TRAINING ON MOLECULE:  , 27OHH
SUBMOLECULES: ['H2O', 'O', 'H', 'H']
SUBMOLECULE INDICES: [27, 19, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2910, -0.4509, -0.4711, -0.4807, -0.4866, -0.4906, -0.4932, -0.4951,
        -0.4964, -0.4973, -0.4979, -0.4983, -0.4986, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5914e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3485e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1829e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9724, -75.0136, -75.0282, -75.0364, -75.0419, -75.0458, -75.0485,
        -75.0504, -75.0518, -75.0528, -75.0535, -75.0540, -75.0543, -75.0546,
        -75.0548, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5642e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2185e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.3713], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.3713], dtype=torch.float64)
E_PRED: tensor([-76.4247], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 69, 69])
mo_energy   ---   torch.Size([2, 69])
dm_ref   ---   torch.Size([1, 2, 69, 69])
rho   ---   torch.Size([1, 2, 91054])
ao_eval   ---   torch.Size([1, 10, 91054, 69])
grid_weights   ---   torch.Size([1, 91054])
-76.36040173563967
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 69])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 69])
================================
LOSSES_EVAL:  ,{}
tensor(9.2185e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OHH': tensor([-0.3713], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0549, -75.0550, -75.0550, -75.0551, -75.0551, -75.0551, -75.0551,
        -75.0551, -75.0551, -75.0551], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OHH': tensor([-76.4247], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 19 	 H2O 	 OH2 	 1.957913804540433e-07

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------21----------------
TRAINING ON MOLECULE:  , 29OH
SUBMOLECULES: ['HO', 'O', 'H']
SUBMOLECULE INDICES: [29, 19, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2655, -0.4435, -0.4670, -0.4781, -0.4849, -0.4893, -0.4924, -0.4945,
        -0.4960, -0.4970, -0.4977, -0.4982, -0.4985, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5911e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4913e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.1824e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9602, -75.0035, -75.0211, -75.0312, -75.0381, -75.0430, -75.0466,
        -75.0491, -75.0509, -75.0522, -75.0531, -75.0537, -75.0542, -75.0545,
        -75.0547, -75.0548, -75.0550, -75.0550, -75.0551, -75.0551, -75.0552,
        -75.0552, -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.5553e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2180e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='OH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.1707], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.1707], dtype=torch.float64)
E_PRED: tensor([-75.6543, -75.6887, -75.7031, -75.7113, -75.7168, -75.7207, -75.7235,
        -75.7255, -75.7270, -75.7280, -75.7287, -75.7292, -75.7296, -75.7298,
        -75.7300, -75.7301, -75.7302, -75.7302, -75.7303, -75.7303, -75.7303,
        -75.7304, -75.7304, -75.7304, -75.7304], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 67286])
ao_eval   ---   torch.Size([1, 10, 67286, 54])
grid_weights   ---   torch.Size([1, 67286])
-75.66221512476179
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(0.0005, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0093, dtype=torch.float64, grad_fn=<AddBackward0>)
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'H': tensor([-0.5000], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'OH': tensor([-0.1707], dtype=torch.float64)}
PRED_DICT:  ,{'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'O': tensor([-75.0548, -75.0550, -75.0550, -75.0551, -75.0551, -75.0552, -75.0552,
        -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OH': tensor([-75.7301, -75.7302, -75.7302, -75.7303, -75.7303, -75.7303, -75.7304,
        -75.7304, -75.7304, -75.7304], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 21 	 HO 	 OH 	 6.070058048003595e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------4----------------
TRAINING ON MOLECULE:  ,  4COO
SUBMOLECULES: ['CO2', 'C', 'O', 'O']
SUBMOLECULE INDICES: [4, 12, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CO2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.6223], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.6223], dtype=torch.float64)
E_PRED: tensor([-189.6963, -188.8242, -188.6409, -188.5331, -188.4665, -188.4210,
        -188.3892, -188.3668, -188.3510, -188.3398, -188.3319, -188.3262,
        -188.3222, -188.3193, -188.3173, -188.3158, -188.3148, -188.3141,
        -188.3135, -188.3131, -188.3129, -188.3127, -188.3125, -188.3124,
        -188.3124], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 3826])
ao_eval   ---   torch.Size([1, 10, 3826, 117])
grid_weights   ---   torch.Size([1, 3826])
-188.40175875056607
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.7753e-05, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7515, -37.7887, -37.8015, -37.8087, -37.8134, -37.8167, -37.8191,
        -37.8207, -37.8219, -37.8227, -37.8233, -37.8237, -37.8240, -37.8242,
        -37.8244, -37.8245, -37.8246, -37.8246, -37.8246, -37.8247, -37.8247,
        -37.8247, -37.8247, -37.8247, -37.8247], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6733e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9508, -74.9906, -75.0112, -75.0239, -75.0327, -75.0390, -75.0437,
        -75.0470, -75.0494, -75.0511, -75.0523, -75.0532, -75.0538, -75.0542,
        -75.0545, -75.0547, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551,
        -75.0551, -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.6006e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(0.0004, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'COO': tensor([-0.6223], dtype=torch.float64), 'C': tensor([-37.8405], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'COO': tensor([-188.3158, -188.3148, -188.3141, -188.3135, -188.3131, -188.3129,
        -188.3127, -188.3125, -188.3124, -188.3124], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'C': tensor([-37.8245, -37.8246, -37.8246, -37.8246, -37.8247, -37.8247, -37.8247,
        -37.8247, -37.8247, -37.8247], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0547, -75.0549, -75.0550, -75.0550, -75.0551, -75.0551, -75.0551,
        -75.0552, -75.0552, -75.0552], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 4 	 CO2 	 CO2 	 0.014017460462570241

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------5----------------
TRAINING ON MOLECULE:  ,  5ClCl
SUBMOLECULES: ['Cl2', 'Cl', 'Cl']
SUBMOLECULE INDICES: [5, 13, 13]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl2', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0945], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0945], dtype=torch.float64)
E_PRED: tensor([-920.4605, -920.4249, -920.4161, -920.4114, -920.4084, -920.4062,
        -920.4047, -920.4037, -920.4029, -920.4024, -920.4020, -920.4018,
        -920.4016, -920.4015, -920.4014, -920.4013, -920.4013, -920.4012,
        -920.4012, -920.4012, -920.4012, -920.4012, -920.4012, -920.4012,
        -920.4012], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 94, 94])
mo_energy   ---   torch.Size([2, 94])
dm_ref   ---   torch.Size([1, 2, 94, 94])
rho   ---   torch.Size([1, 2, 2736])
ao_eval   ---   torch.Size([1, 10, 2736, 94])
grid_weights   ---   torch.Size([1, 2736])
-919.5958911885641
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 94])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 94])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(2.6477e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2953e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='Cl', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-460.1480], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-460.1480], dtype=torch.float64)
E_PRED: tensor([-460.1064, -460.1294, -460.1365, -460.1403, -460.1429, -460.1447,
        -460.1460, -460.1469, -460.1475, -460.1480, -460.1483, -460.1485,
        -460.1487, -460.1488, -460.1489, -460.1489, -460.1490, -460.1490,
        -460.1490, -460.1490, -460.1490, -460.1491, -460.1491, -460.1491,
        -460.1491], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 47, 47])
mo_energy   ---   torch.Size([2, 47])
dm_ref   ---   torch.Size([1, 2, 47, 47])
rho   ---   torch.Size([1, 2, 18106])
ao_eval   ---   torch.Size([1, 10, 18106, 47])
grid_weights   ---   torch.Size([1, 18106])
-460.148
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 47])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 47])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.5785e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.2954e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'ClCl': tensor([-0.0945], dtype=torch.float64), 'Cl': tensor([-460.1480], dtype=torch.float64)}
PRED_DICT:  ,{'ClCl': tensor([-920.4013, -920.4013, -920.4012, -920.4012, -920.4012, -920.4012,
        -920.4012, -920.4012, -920.4012, -920.4012], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'Cl': tensor([-460.1489, -460.1490, -460.1490, -460.1490, -460.1490, -460.1490,
        -460.1491, -460.1491, -460.1491, -460.1491], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 5 	 Cl2 	 Cl2 	 1.6979413057555263e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------29----------------
TRAINING ON MOLECULE:  ,O
SUBMOLECULES: ['O']
SUBMOLECULE INDICES: [19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9509, -74.9916, -75.0118, -75.0242, -75.0328, -75.0389, -75.0434,
        -75.0466, -75.0490, -75.0506, -75.0518, -75.0526, -75.0532, -75.0536,
        -75.0539, -75.0541, -75.0542, -75.0543, -75.0544, -75.0545, -75.0545,
        -75.0545, -75.0545, -75.0545, -75.0545], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(3.9763e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.9763e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0541, -75.0542, -75.0543, -75.0544, -75.0545, -75.0545, -75.0545,
        -75.0545, -75.0545, -75.0545], dtype=torch.float64,
       grad_fn=<SliceBackward0>)}
AE loss	 13 	 29 	 O 	 O 	 3.808336449120853e-05

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7501, -37.7875, -37.8005, -37.8078, -37.8126, -37.8160, -37.8183,
        -37.8201, -37.8213, -37.8221, -37.8227, -37.8231, -37.8234, -37.8236,
        -37.8238, -37.8239, -37.8240, -37.8240, -37.8240, -37.8241, -37.8241,
        -37.8241, -37.8241, -37.8241, -37.8241], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.2551e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.2551e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.3107, -0.4563, -0.4741, -0.4827, -0.4880, -0.4915, -0.4939, -0.4955,
        -0.4967, -0.4975, -0.4980, -0.4984, -0.4987, -0.4989, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5812e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.3059e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2451e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8242], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2451e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8239, -37.8240, -37.8240, -37.8240, -37.8241, -37.8241, -37.8241,
        -37.8241, -37.8241, -37.8241], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8242], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 13 	 17 	 CH3 	 CH3 	 0.00013865253732758362

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
++++++++++++++++++++++++++++++++++
FAILS:
++++++++++++++++++++++++++++++++++
os.mkdir(/gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e13)
torch saving pt:
os.symlink: /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e13/2022-11-29_10:09:21.572573_1.pt -> /gpfs/scratch/awills/swxcd/eval/test_subset_ps2/13/MODEL_MGGA_e13/xc
============================================================
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Epoch 13 || ,[' rho : 4.624426', ' ae : 46.814790', ' E : 2.416642'] ,|| total loss 38.415854 || CHKPT: _1.pt
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
============================================================
================================
--------------17----------------
TRAINING ON MOLECULE:  , 25CHHH
SUBMOLECULES: ['CH3', 'C', 'H', 'H', 'H']
SUBMOLECULE INDICES: [25, 12, 15, 15, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='C', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-37.8405], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-37.8405], dtype=torch.float64)
E_PRED: tensor([-37.7337, -37.7705, -37.7883, -37.7988, -37.8061, -37.8112, -37.8149,
        -37.8176, -37.8195, -37.8208, -37.8218, -37.8224, -37.8229, -37.8232,
        -37.8235, -37.8236, -37.8238, -37.8238, -37.8239, -37.8239, -37.8240,
        -37.8240, -37.8240, -37.8240, -37.8240], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 42618])
ao_eval   ---   torch.Size([1, 10, 42618, 39])
grid_weights   ---   torch.Size([1, 42618])
-37.8405
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(8.4252e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(8.4252e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2792, -0.4475, -0.4692, -0.4795, -0.4858, -0.4900, -0.4928, -0.4948,
        -0.4962, -0.4971, -0.4978, -0.4983, -0.4986, -0.4988, -0.4990, -0.4991,
        -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5800e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.4768e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(9.2443e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='CH3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4903], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4903], dtype=torch.float64)
E_PRED: tensor([-39.8240], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 84, 84])
mo_energy   ---   torch.Size([2, 84])
dm_ref   ---   torch.Size([1, 2, 84, 84])
rho   ---   torch.Size([1, 2, 113922])
ao_eval   ---   torch.Size([1, 10, 113922, 84])
grid_weights   ---   torch.Size([1, 113922])
-39.78388688523686
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 84])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 84])
================================
LOSSES_EVAL:  ,{}
tensor(9.2443e-06, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'C': tensor([-37.8405], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'CHHH': tensor([-0.4903], dtype=torch.float64)}
PRED_DICT:  ,{'C': tensor([-37.8236, -37.8238, -37.8238, -37.8239, -37.8239, -37.8240, -37.8240,
        -37.8240, -37.8240, -37.8240], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'H': tensor([-0.4991, -0.4992, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'CHHH': tensor([-39.8240], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 17 	 CH3 	 CH3 	 0.0001388794496533553

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------15----------------
TRAINING ON MOLECULE:  , 23OOO
SUBMOLECULES: ['O3', 'O', 'O', 'O']
SUBMOLECULE INDICES: [23, 19, 19, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9575, -75.0007, -75.0188, -75.0293, -75.0365, -75.0416, -75.0453,
        -75.0479, -75.0498, -75.0511, -75.0520, -75.0527, -75.0532, -75.0535,
        -75.0537, -75.0539, -75.0540, -75.0541, -75.0542, -75.0542, -75.0542,
        -75.0542, -75.0543, -75.0543, -75.0543], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.1149e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(4.1149e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O3', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.2345], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.2345], dtype=torch.float64)
E_PRED: tensor([-225.4215], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 130554])
ao_eval   ---   torch.Size([1, 10, 130554, 117])
grid_weights   ---   torch.Size([1, 130554])
-225.20206708569827
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(4.1149e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'O': tensor([-75.0673], dtype=torch.float64), 'OOO': tensor([-0.2345], dtype=torch.float64)}
PRED_DICT:  ,{'O': tensor([-75.0539, -75.0540, -75.0541, -75.0542, -75.0542, -75.0542, -75.0542,
        -75.0543, -75.0543, -75.0543], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'OOO': tensor([-225.4215], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 15 	 O3 	 O3 	 0.0005805398640159718

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------10----------------
TRAINING ON MOLECULE:  , 10LiH
SUBMOLECULES: ['HLi', 'Li', 'H']
SUBMOLECULE INDICES: [10, 16, 15]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='LiH', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.0923], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.0923], dtype=torch.float64)
E_PRED: tensor([-7.9772, -8.0248, -8.0377, -8.0444, -8.0488, -8.0518, -8.0539, -8.0554,
        -8.0565, -8.0572, -8.0577, -8.0581, -8.0584, -8.0586, -8.0587, -8.0588,
        -8.0589, -8.0589, -8.0589, -8.0590, -8.0590, -8.0590, -8.0590, -8.0590,
        -8.0590], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 54, 54])
mo_energy   ---   torch.Size([2, 54])
dm_ref   ---   torch.Size([1, 2, 54, 54])
rho   ---   torch.Size([1, 2, 1271])
ao_eval   ---   torch.Size([1, 10, 1271, 54])
grid_weights   ---   torch.Size([1, 1271])
-8.038079906478378
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 54])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 54])
================================
MOL_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(1.1472e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(2.2943e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='H', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.5000], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.5000], dtype=torch.float64)
E_PRED: tensor([-0.2566, -0.4409, -0.4655, -0.4771, -0.4842, -0.4889, -0.4921, -0.4943,
        -0.4958, -0.4969, -0.4976, -0.4981, -0.4985, -0.4987, -0.4989, -0.4990,
        -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 15, 15])
mo_energy   ---   torch.Size([2, 15])
dm_ref   ---   torch.Size([1, 2, 15, 15])
rho   ---   torch.Size([1, 2, 23768])
ao_eval   ---   torch.Size([1, 10, 23768, 15])
grid_weights   ---   torch.Size([1, 23768])
-0.5
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 15])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1, 1])
mo_occ   ---   torch.Size([1, 2, 15])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(4.5780e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(1.6251e-08, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(3.2099e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Calculating sub-atoms in molecule --  ,Atoms(symbols='Li', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-7.4781], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-7.4781], dtype=torch.float64)
E_PRED: tensor([-7.4553, -7.4619, -7.4653, -7.4673, -7.4685, -7.4695, -7.4705, -7.4712,
        -7.4713, -7.4710, -7.4708, -7.4707, -7.4707, -7.4708, -7.4708, -7.4708,
        -7.4709, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709,
        -7.4709], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 36462])
ao_eval   ---   torch.Size([1, 10, 36462, 39])
grid_weights   ---   torch.Size([1, 36462])
-7.47806
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
H_LOSSES
LOSSES_EVAL:  ,{'rho': tensor(9.2105e-07, dtype=torch.float64, grad_fn=<DivBackward0>), 'E': tensor(3.6161e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(5.0557e-05, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 17. Skipping to next.
Irrelevant index 18. Skipping to next.
Irrelevant index 19. Skipping to next.
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Irrelevant index 24. Skipping to next.
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'LiH': tensor([-0.0923], dtype=torch.float64), 'H': tensor([-0.5000], dtype=torch.float64), 'Li': tensor([-7.4781], dtype=torch.float64)}
PRED_DICT:  ,{'LiH': tensor([-8.0588, -8.0589, -8.0589, -8.0589, -8.0590, -8.0590, -8.0590, -8.0590,
        -8.0590, -8.0590], dtype=torch.float64, grad_fn=<SliceBackward0>), 'H': tensor([-0.4990, -0.4991, -0.4992, -0.4992, -0.4993, -0.4993, -0.4993, -0.4993,
        -0.4993, -0.4993], dtype=torch.float64, grad_fn=<SliceBackward0>), 'Li': tensor([-7.4708, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709, -7.4709,
        -7.4709, -7.4709], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 10 	 HLi 	 LiH 	 2.924091151148885e-06

Backward Propagation
Step Optimizer
Zeroing Optimizer Grad
================================
--------------16----------------
TRAINING ON MOLECULE:  , 24NNO
SUBMOLECULES: ['N2O', 'N', 'N', 'O']
SUBMOLECULE INDICES: [24, 17, 17, 19]
================================
Irrelevant index 0. Skipping to next.
Irrelevant index 1. Skipping to next.
Irrelevant index 2. Skipping to next.
Irrelevant index 3. Skipping to next.
Irrelevant index 4. Skipping to next.
Irrelevant index 5. Skipping to next.
Irrelevant index 6. Skipping to next.
Irrelevant index 7. Skipping to next.
Irrelevant index 8. Skipping to next.
Irrelevant index 9. Skipping to next.
Irrelevant index 10. Skipping to next.
Irrelevant index 11. Skipping to next.
Irrelevant index 12. Skipping to next.
Irrelevant index 13. Skipping to next.
Irrelevant index 14. Skipping to next.
Irrelevant index 15. Skipping to next.
Irrelevant index 16. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-54.5892], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-54.5892], dtype=torch.float64)
E_PRED: tensor([-54.4107, -54.4790, -54.5104, -54.5289, -54.5416, -54.5506, -54.5570,
        -54.5615, -54.5648, -54.5671, -54.5687, -54.5698, -54.5706, -54.5712,
        -54.5716, -54.5719, -54.5721, -54.5722, -54.5723, -54.5724, -54.5724,
        -54.5724, -54.5725, -54.5725, -54.5725], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43158])
ao_eval   ---   torch.Size([1, 10, 43158, 39])
grid_weights   ---   torch.Size([1, 43158])
-54.5892
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(7.6969e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(7.6969e-08, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 18. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-75.0673], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-75.0673], dtype=torch.float64)
E_PRED: tensor([-74.9495, -74.9887, -75.0094, -75.0223, -75.0312, -75.0377, -75.0424,
        -75.0458, -75.0482, -75.0499, -75.0512, -75.0521, -75.0527, -75.0531,
        -75.0534, -75.0536, -75.0538, -75.0539, -75.0540, -75.0540, -75.0541,
        -75.0541, -75.0541, -75.0541, -75.0541], dtype=torch.float64,
       grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([25])
dm   ---   torch.Size([2, 39, 39])
mo_energy   ---   torch.Size([2, 39])
dm_ref   ---   torch.Size([1, 2, 39, 39])
rho   ---   torch.Size([1, 2, 43518])
ao_eval   ---   torch.Size([1, 10, 43518, 39])
grid_weights   ---   torch.Size([1, 43518])
-75.0673
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 39])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 39])
================================
ATM_LOSSES
LOSSES_EVAL:  ,{'E': tensor(4.2537e-06, dtype=torch.float64, grad_fn=<DivBackward0>)}
tensor(1.1951e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 20. Skipping to next.
Irrelevant index 21. Skipping to next.
Irrelevant index 22. Skipping to next.
Irrelevant index 23. Skipping to next.
Calculating sub-atoms in molecule --  ,Atoms(symbols='N2O', pbc=False, calculator=SinglePointCalculator(...))
REFERENCE ENERGY: tensor([-0.4318], dtype=torch.float64)
SCF CALCULATION
E_REF: tensor([-0.4318], dtype=torch.float64)
E_PRED: tensor([-184.6595], dtype=torch.float64, grad_fn=<CatBackward0>)
Adding reference matrices to results.
RESULTS MATRICES EXTRACTED
================================
RESULTS MATRICES SHAPES
E   ---   torch.Size([1])
dm   ---   torch.Size([2, 117, 117])
mo_energy   ---   torch.Size([2, 117])
dm_ref   ---   torch.Size([1, 2, 117, 117])
rho   ---   torch.Size([1, 2, 129834])
ao_eval   ---   torch.Size([1, 10, 129834, 117])
grid_weights   ---   torch.Size([1, 129834])
-184.47901445769764
E_ref   ---   torch.Size([1])
mo_energy_ref   ---   torch.Size([1, 2, 117])
n_elec   ---   torch.Size([1])
e_ip_ref   ---   torch.Size([1])
mo_occ   ---   torch.Size([1, 2, 117])
================================
LOSSES_EVAL:  ,{}
tensor(1.1951e-07, dtype=torch.float64, grad_fn=<AddBackward0>)
Irrelevant index 25. Skipping to next.
Irrelevant index 26. Skipping to next.
Irrelevant index 27. Skipping to next.
Irrelevant index 28. Skipping to next.
Irrelevant index 29. Skipping to next.
LOOP OVER SUBMOLECULES COMPLETED
REF_DICT:  ,{'N': tensor([-54.5892], dtype=torch.float64), 'O': tensor([-75.0673], dtype=torch.float64), 'NNO': tensor([-0.4318], dtype=torch.float64)}
PRED_DICT:  ,{'N': tensor([-54.5719, -54.5721, -54.5722, -54.5723, -54.5724, -54.5724, -54.5724,
        -54.5725, -54.5725, -54.5725], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'O': tensor([-75.0536, -75.0538, -75.0539, -75.0540, -75.0540, -75.0541, -75.0541,
        -75.0541, -75.0541, -75.0541], dtype=torch.float64,
       grad_fn=<SliceBackward0>), 'NNO': tensor([-184.6595], dtype=torch.float64, grad_fn=<SliceBackward0>)}
AE loss	 14 	 16 	 N2O 	 N2O 	 0.0008163249898208374

Backward Propagation
